diff --git a/src/ReactVersion.js b/src/ReactVersion.js
index 54befdc07..4972f9494 100644
--- a/src/ReactVersion.js
+++ b/src/ReactVersion.js
@@ -13,2 +13,2 @@
 
-module.exports = '15.5.0';
+module.exports = '15.6.0';
diff --git a/src/isomorphic/classic/element/ReactDOMFactories.js b/src/addons/ReactDOMFactories.js
similarity index 98%
rename from src/isomorphic/classic/element/ReactDOMFactories.js
rename to src/addons/ReactDOMFactories.js
index 4890fa676..f1f82c3a0 100644
--- a/src/isomorphic/classic/element/ReactDOMFactories.js
+++ b/src/addons/ReactDOMFactories.js
@@ -28,3 +28,2 @@ if (__DEV__) {
  * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
- * This is also accessible via `React.DOM`.
  *
@@ -143,3 +142,3 @@ var ReactDOMFactories = {
   ul: createDOMFactory('ul'),
-  'var': createDOMFactory('var'),
+  var: createDOMFactory('var'),
   video: createDOMFactory('video'),
diff --git a/src/addons/ReactFragment.js b/src/addons/ReactFragment.js
index 5d83e8453..0ed35d4ae 100644
--- a/src/addons/ReactFragment.js
+++ b/src/addons/ReactFragment.js
@@ -43,3 +43,3 @@ var ReactFragment = {
         'React.addons.createFragment only accepts a single object. Got: %s',
-        object
+        object,
       );
@@ -51,3 +51,3 @@ var ReactFragment = {
         'React.addons.createFragment does not accept a ReactElement ' +
-        'without a wrapper object.'
+          'without a wrapper object.',
       );
@@ -59,3 +59,3 @@ var ReactFragment = {
       'React.addons.createFragment(...): Encountered an invalid child; DOM ' +
-      'elements are not valid children of React components.'
+        'elements are not valid children of React components.',
     );
@@ -70,3 +70,3 @@ var ReactFragment = {
             'React.addons.createFragment(...): Child objects should have ' +
-            'non-numeric keys so ordering is preserved.'
+              'non-numeric keys so ordering is preserved.',
           );
@@ -79,3 +79,3 @@ var ReactFragment = {
         key,
-        emptyFunction.thatReturnsArgument
+        emptyFunction.thatReturnsArgument,
       );
diff --git a/src/addons/ReactWithAddons.js b/src/addons/ReactWithAddons.js
index 4d556e922..8cf081c98 100644
--- a/src/addons/ReactWithAddons.js
+++ b/src/addons/ReactWithAddons.js
@@ -16,4 +16,3 @@ var React = require('React');
 var ReactAddonsDOMDependencies = require('ReactAddonsDOMDependencies');
-var ReactComponentWithPureRenderMixin =
-  require('ReactComponentWithPureRenderMixin');
+var ReactComponentWithPureRenderMixin = require('ReactComponentWithPureRenderMixin');
 var ReactCSSTransitionGroup = require('ReactCSSTransitionGroup');
diff --git a/src/addons/__tests__/ReactDOMFactories-test.js b/src/addons/__tests__/ReactDOMFactories-test.js
new file mode 100644
index 000000000..641faa3f0
--- /dev/null
+++ b/src/addons/__tests__/ReactDOMFactories-test.js
@@ -0,0 +1,41 @@
+/**
+ * Copyright 2013-present, Facebook, Inc.
+ * All rights reserved.
+ *
+ * This source code is licensed under the BSD-style license found in the
+ * LICENSE file in the root directory of this source tree. An additional grant
+ * of patent rights can be found in the PATENTS file in the same directory.
+ *
+ * @emails react-core
+ */
+
+'use strict';
+
+var React = require('React');
+var {div} = require('ReactDOMFactories');
+
+describe('ReactDOMFactories', () => {
+  it('allow factories to be called without warnings', () => {
+    spyOn(console, 'error');
+    spyOn(console, 'warn');
+    var element = div();
+    expect(element.type).toBe('div');
+    expect(console.error).not.toHaveBeenCalled();
+    expect(console.warn).not.toHaveBeenCalled();
+  });
+
+  it('warns once when accessing React.DOM methods', () => {
+    spyOn(console, 'warn');
+
+    var a = React.DOM.a();
+    var p = React.DOM.p();
+
+    expect(a.type).toBe('a');
+    expect(p.type).toBe('p');
+
+    expect(console.warn).toHaveBeenCalledTimes(1);
+    expect(console.warn.calls.first().args[0]).toContain(
+      'Warning: Accessing factories like React.DOM.a has been deprecated',
+    );
+  });
+});
diff --git a/src/addons/__tests__/ReactFragment-test.js b/src/addons/__tests__/ReactFragment-test.js
index 0f278686a..1fc6f03d2 100644
--- a/src/addons/__tests__/ReactFragment-test.js
+++ b/src/addons/__tests__/ReactFragment-test.js
@@ -18,3 +18,2 @@ var ReactFragment;
 describe('ReactFragment', () => {
-
   beforeEach(() => {
@@ -35,5 +34,5 @@ describe('ReactFragment', () => {
       'Objects are not valid as a React child (found: object with keys ' +
-      '{x, y, z}). If you meant to render a collection of children, use an ' +
-      'array instead or wrap the object using createFragment(object) from ' +
-      'the React add-ons.'
+        '{x, y, z}). If you meant to render a collection of children, use an ' +
+        'array instead or wrap the object using createFragment(object) from ' +
+        'the React add-ons.',
     );
@@ -55,5 +54,5 @@ describe('ReactFragment', () => {
       'Objects are not valid as a React child (found: object with keys ' +
-      '{a, b, c}). If you meant to render a collection of children, use an ' +
-      'array instead or wrap the object using createFragment(object) from ' +
-      'the React add-ons. Check the render method of `Foo`.'
+        '{a, b, c}). If you meant to render a collection of children, use an ' +
+        'array instead or wrap the object using createFragment(object) from ' +
+        'the React add-ons. Check the render method of `Foo`.',
     );
@@ -66,5 +65,5 @@ describe('ReactFragment', () => {
       'Objects are not valid as a React child (found: object with keys ' +
-      '{_isReactElement, type, props}). It looks like you\'re using an ' +
-      'element created by a different version of React. Make sure to use ' +
-      'only one copy of React.'
+        "{_isReactElement, type, props}). It looks like you're using an " +
+        'element created by a different version of React. Make sure to use ' +
+        'only one copy of React.',
     );
@@ -79,3 +78,3 @@ describe('ReactFragment', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Child objects should have non-numeric keys so ordering is preserved.'
+      'Child objects should have non-numeric keys so ordering is preserved.',
     );
@@ -88,3 +87,3 @@ describe('ReactFragment', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'React.addons.createFragment only accepts a single object.'
+      'React.addons.createFragment only accepts a single object.',
     );
@@ -97,3 +96,3 @@ describe('ReactFragment', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'React.addons.createFragment only accepts a single object.'
+      'React.addons.createFragment only accepts a single object.',
     );
@@ -107,6 +106,5 @@ describe('ReactFragment', () => {
       'React.addons.createFragment does not accept a ReactElement without a ' +
-      'wrapper object.'
+        'wrapper object.',
     );
   });
-
 });
diff --git a/src/addons/__tests__/renderSubtreeIntoContainer-test.js b/src/addons/__tests__/renderSubtreeIntoContainer-test.js
index 1ee3bd6a9..0af5d7962 100644
--- a/src/addons/__tests__/renderSubtreeIntoContainer-test.js
+++ b/src/addons/__tests__/renderSubtreeIntoContainer-test.js
@@ -13,2 +13,3 @@
 
+var PropTypes = require('prop-types');
 var React = require('React');
@@ -19,3 +20,2 @@ var renderSubtreeIntoContainer = require('renderSubtreeIntoContainer');
 describe('renderSubtreeIntoContainer', () => {
-
   it('should pass context when rendering subtree elsewhere', () => {
@@ -25,3 +25,3 @@ describe('renderSubtreeIntoContainer', () => {
       static contextTypes = {
-        foo: React.PropTypes.string.isRequired,
+        foo: PropTypes.string.isRequired,
       };
@@ -35,3 +35,3 @@ describe('renderSubtreeIntoContainer', () => {
       static childContextTypes = {
-        foo: React.PropTypes.string.isRequired,
+        foo: PropTypes.string.isRequired,
       };
@@ -49,5 +49,7 @@ describe('renderSubtreeIntoContainer', () => {
       componentDidMount() {
-        expect(function() {
-          renderSubtreeIntoContainer(this, <Component />, portal);
-        }.bind(this)).not.toThrow();
+        expect(
+          function() {
+            renderSubtreeIntoContainer(this, <Component />, portal);
+          }.bind(this),
+        ).not.toThrow();
       }
@@ -64,3 +66,3 @@ describe('renderSubtreeIntoContainer', () => {
       static contextTypes = {
-        foo: React.PropTypes.string.isRequired,
+        foo: PropTypes.string.isRequired,
       };
@@ -77,3 +79,3 @@ describe('renderSubtreeIntoContainer', () => {
       static childContextTypes = {
-        foo: React.PropTypes.string.isRequired,
+        foo: PropTypes.string.isRequired,
       };
@@ -105,4 +107,4 @@ describe('renderSubtreeIntoContainer', () => {
       static contextTypes = {
-        foo: React.PropTypes.string.isRequired,
-        getFoo: React.PropTypes.func.isRequired,
+        foo: PropTypes.string.isRequired,
+        getFoo: PropTypes.func.isRequired,
       };
@@ -116,4 +118,4 @@ describe('renderSubtreeIntoContainer', () => {
       static childContextTypes = {
-        foo: React.PropTypes.string.isRequired,
-        getFoo: React.PropTypes.func.isRequired,
+        foo: PropTypes.string.isRequired,
+        getFoo: PropTypes.func.isRequired,
       };
@@ -157,4 +159,4 @@ describe('renderSubtreeIntoContainer', () => {
       static contextTypes = {
-        foo: React.PropTypes.string.isRequired,
-        getFoo: React.PropTypes.func.isRequired,
+        foo: PropTypes.string.isRequired,
+        getFoo: PropTypes.func.isRequired,
       };
@@ -168,4 +170,4 @@ describe('renderSubtreeIntoContainer', () => {
       static childContextTypes = {
-        foo: React.PropTypes.string.isRequired,
-        getFoo: React.PropTypes.func.isRequired,
+        foo: PropTypes.string.isRequired,
+        getFoo: PropTypes.func.isRequired,
       };
@@ -197,3 +199,2 @@ describe('renderSubtreeIntoContainer', () => {
   });
-
 });
diff --git a/src/addons/__tests__/update-test.js b/src/addons/__tests__/update-test.js
index fe557da38..15cf7ff75 100644
--- a/src/addons/__tests__/update-test.js
+++ b/src/addons/__tests__/update-test.js
@@ -16,3 +16,2 @@ var update = require('update');
 describe('update', () => {
-
   describe('$push', () => {
@@ -29,3 +28,3 @@ describe('update', () => {
         'update(): expected spec of $push to be an array; got 7. Did you ' +
-        'forget to wrap your parameter in an array?'
+          'forget to wrap your parameter in an array?',
       );
@@ -34,3 +33,3 @@ describe('update', () => {
       expect(update.bind(null, 1, {$push: 7})).toThrowError(
-        'update(): expected target of $push to be an array; got 1.'
+        'update(): expected target of $push to be an array; got 1.',
       );
@@ -51,3 +50,3 @@ describe('update', () => {
         'update(): expected spec of $unshift to be an array; got 7. Did you ' +
-        'forget to wrap your parameter in an array?'
+          'forget to wrap your parameter in an array?',
       );
@@ -56,3 +55,3 @@ describe('update', () => {
       expect(update.bind(null, 1, {$unshift: 7})).toThrowError(
-        'update(): expected target of $unshift to be an array; got 1.'
+        'update(): expected target of $unshift to be an array; got 1.',
       );
@@ -73,3 +72,3 @@ describe('update', () => {
         'update(): expected spec of $splice to be an array of arrays; got 1. ' +
-        'Did you forget to wrap your parameters in an array?'
+          'Did you forget to wrap your parameters in an array?',
       );
@@ -77,3 +76,3 @@ describe('update', () => {
         'update(): expected spec of $splice to be an array of arrays; got 1. ' +
-        'Did you forget to wrap your parameters in an array?'
+          'Did you forget to wrap your parameters in an array?',
       );
@@ -82,3 +81,3 @@ describe('update', () => {
       expect(update.bind(null, 1, {$splice: 7})).toThrowError(
-        'Expected $splice target to be an array; got 1'
+        'Expected $splice target to be an array; got 1',
       );
@@ -98,3 +97,3 @@ describe('update', () => {
       expect(update.bind(null, {}, {$merge: 7})).toThrowError(
-        'update(): $merge expects a spec of type \'object\'; got 7'
+        "update(): $merge expects a spec of type 'object'; got 7",
       );
@@ -103,3 +102,3 @@ describe('update', () => {
       expect(update.bind(null, 7, {$merge: {a: 'b'}})).toThrowError(
-        'update(): $merge expects a target of type \'object\'; got 7'
+        "update(): $merge expects a target of type 'object'; got 7",
       );
@@ -133,3 +132,3 @@ describe('update', () => {
       expect(update.bind(null, 2, {$apply: 123})).toThrowError(
-        'update(): expected spec of $apply to be a function; got 123.'
+        'update(): expected spec of $apply to be a function; got 123.',
       );
@@ -139,22 +138,27 @@ describe('update', () => {
   it('should support deep updates', () => {
-    expect(update({
-      a: 'b',
-      c: {
-        d: 'e',
-        f: [1],
-        g: [2],
-        h: [3],
-        i: {j: 'k'},
-        l: 4,
-      },
-    }, {
-      c: {
-        d: {$set: 'm'},
-        f: {$push: [5]},
-        g: {$unshift: [6]},
-        h: {$splice: [[0, 1, 7]]},
-        i: {$merge: {n: 'o'}},
-        l: {$apply: (x) => x * 2},
-      },
-    })).toEqual({
+    expect(
+      update(
+        {
+          a: 'b',
+          c: {
+            d: 'e',
+            f: [1],
+            g: [2],
+            h: [3],
+            i: {j: 'k'},
+            l: 4,
+          },
+        },
+        {
+          c: {
+            d: {$set: 'm'},
+            f: {$push: [5]},
+            g: {$unshift: [6]},
+            h: {$splice: [[0, 1, 7]]},
+            i: {$merge: {n: 'o'}},
+            l: {$apply: x => x * 2},
+          },
+        },
+      ),
+    ).toEqual({
       a: 'b',
@@ -174,4 +178,4 @@ describe('update', () => {
       'update(): You provided a key path to update() that did not contain ' +
-      'one of $push, $unshift, $splice, $set, $merge, $apply. Did you ' +
-      'forget to include {$set: ...}?'
+        'one of $push, $unshift, $splice, $set, $merge, $apply. Did you ' +
+        'forget to include {$set: ...}?',
     );
@@ -180,4 +184,4 @@ describe('update', () => {
   it('should perform safe hasOwnProperty check', () => {
-    expect(update({}, {'hasOwnProperty': {$set: 'a'}})).toEqual({
-      'hasOwnProperty': 'a',
+    expect(update({}, {hasOwnProperty: {$set: 'a'}})).toEqual({
+      hasOwnProperty: 'a',
     });
diff --git a/src/addons/link/LinkedStateMixin.js b/src/addons/link/LinkedStateMixin.js
index 9e446f483..4a646095d 100644
--- a/src/addons/link/LinkedStateMixin.js
+++ b/src/addons/link/LinkedStateMixin.js
@@ -32,3 +32,3 @@ var LinkedStateMixin = {
       this.state[key],
-      ReactStateSetters.createStateKeySetter(this, key)
+      ReactStateSetters.createStateKeySetter(this, key),
     );
diff --git a/src/addons/link/ReactLink.js b/src/addons/link/ReactLink.js
index d327b4f8e..273c4fdcc 100644
--- a/src/addons/link/ReactLink.js
+++ b/src/addons/link/ReactLink.js
@@ -50,24 +50,2 @@ function ReactLink(value, requestChange) {
 
-/**
- * Creates a PropType that enforces the ReactLink API and optionally checks the
- * type of the value being passed inside the link. Example:
- *
- * MyComponent.propTypes = {
- *   tabIndexLink: ReactLink.PropTypes.link(React.PropTypes.number)
- * }
- */
-function createLinkTypeChecker(linkType) {
-  var shapes = {
-    value: linkType === undefined ?
-      React.PropTypes.any.isRequired :
-      linkType.isRequired,
-    requestChange: React.PropTypes.func.isRequired,
-  };
-  return React.PropTypes.shape(shapes);
-}
-
-ReactLink.PropTypes = {
-  link: createLinkTypeChecker,
-};
-
 module.exports = ReactLink;
diff --git a/src/addons/transitions/ReactCSSTransitionGroup.js b/src/addons/transitions/ReactCSSTransitionGroup.js
index 517c4faee..4c1fb3b6e 100644
--- a/src/addons/transitions/ReactCSSTransitionGroup.js
+++ b/src/addons/transitions/ReactCSSTransitionGroup.js
@@ -30,12 +30,15 @@ function createTransitionTimeoutPropValidator(transitionType) {
         return new Error(
-          timeoutPropName + ' wasn\'t supplied to ReactCSSTransitionGroup: ' +
-          'this can cause unreliable animations and won\'t be supported in ' +
-          'a future version of React. See ' +
-          'https://fb.me/react-animation-transition-group-timeout for more ' +
-          'information.'
+          timeoutPropName +
+            " wasn't supplied to ReactCSSTransitionGroup: " +
+            "this can cause unreliable animations and won't be supported in " +
+            'a future version of React. See ' +
+            'https://fb.me/react-animation-transition-group-timeout for more ' +
+            'information.',
         );
 
-      // If the duration isn't a number
+        // If the duration isn't a number
       } else if (typeof props[timeoutPropName] !== 'number') {
-        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
+        return new Error(
+          timeoutPropName + ' must be a number (in milliseconds)',
+        );
       }
@@ -70,3 +73,3 @@ class ReactCSSTransitionGroup extends React.Component {
 
-  _wrapChild = (child) => {
+  _wrapChild = child => {
     // We need to provide this childFactory so that
@@ -85,3 +88,3 @@ class ReactCSSTransitionGroup extends React.Component {
       },
-      child
+      child,
     );
@@ -92,3 +95,3 @@ class ReactCSSTransitionGroup extends React.Component {
       ReactTransitionGroup,
-      Object.assign({}, this.props, {childFactory: this._wrapChild})
+      Object.assign({}, this.props, {childFactory: this._wrapChild}),
     );
diff --git a/src/addons/transitions/ReactCSSTransitionGroupChild.js b/src/addons/transitions/ReactCSSTransitionGroupChild.js
index 536d0a254..94bf1fd6f 100644
--- a/src/addons/transitions/ReactCSSTransitionGroupChild.js
+++ b/src/addons/transitions/ReactCSSTransitionGroupChild.js
@@ -19,3 +19,2 @@ var PropTypes = propTypesFactory(React.isValidElement);
 
-
 var CSSCore = require('CSSCore');
@@ -69,4 +68,6 @@ class ReactCSSTransitionGroupChild extends React.Component {
 
-    var className = this.props.name[animationType] || this.props.name + '-' + animationType;
-    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';
+    var className =
+      this.props.name[animationType] || this.props.name + '-' + animationType;
+    var activeClassName =
+      this.props.name[animationType + 'Active'] || className + '-active';
     var timeout = null;
@@ -151,3 +152,3 @@ class ReactCSSTransitionGroupChild extends React.Component {
 
-  componentWillAppear = (done) => {
+  componentWillAppear = done => {
     if (this.props.appear) {
@@ -157,5 +158,5 @@ class ReactCSSTransitionGroupChild extends React.Component {
     }
-  }
+  };
 
-  componentWillEnter = (done) => {
+  componentWillEnter = done => {
     if (this.props.enter) {
@@ -165,5 +166,5 @@ class ReactCSSTransitionGroupChild extends React.Component {
     }
-  }
+  };
 
-  componentWillLeave = (done) => {
+  componentWillLeave = done => {
     if (this.props.leave) {
@@ -173,3 +174,3 @@ class ReactCSSTransitionGroupChild extends React.Component {
     }
-  }
+  };
 
diff --git a/src/addons/transitions/ReactTransitionChildMapping.js b/src/addons/transitions/ReactTransitionChildMapping.js
index a01bd4252..4ba6795df 100644
--- a/src/addons/transitions/ReactTransitionChildMapping.js
+++ b/src/addons/transitions/ReactTransitionChildMapping.js
@@ -88,3 +88,3 @@ var ReactTransitionChildMapping = {
           childMapping[nextKeysPending[nextKey][i]] = getValueForKey(
-            pendingNextKey
+            pendingNextKey,
           );
diff --git a/src/addons/transitions/ReactTransitionGroup.js b/src/addons/transitions/ReactTransitionGroup.js
index f067a7efb..cd576aa85 100644
--- a/src/addons/transitions/ReactTransitionGroup.js
+++ b/src/addons/transitions/ReactTransitionGroup.js
@@ -61,3 +61,3 @@ class ReactTransitionGroup extends React.Component {
     var nextChildMapping = ReactTransitionChildMapping.getChildMapping(
-      nextProps.children
+      nextProps.children,
     );
@@ -68,3 +68,3 @@ class ReactTransitionGroup extends React.Component {
         prevChildMapping,
-        nextChildMapping
+        nextChildMapping,
       ),
@@ -76,4 +76,7 @@ class ReactTransitionGroup extends React.Component {
       var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
-      if (nextChildMapping[key] && !hasPrev &&
-          !this.currentlyTransitioningKeys[key]) {
+      if (
+        nextChildMapping[key] &&
+        !hasPrev &&
+        !this.currentlyTransitioningKeys[key]
+      ) {
         this.keysToEnter.push(key);
@@ -84,4 +87,7 @@ class ReactTransitionGroup extends React.Component {
       var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);
-      if (prevChildMapping[key] && !hasNext &&
-          !this.currentlyTransitioningKeys[key]) {
+      if (
+        prevChildMapping[key] &&
+        !hasNext &&
+        !this.currentlyTransitioningKeys[key]
+      ) {
         this.keysToLeave.push(key);
@@ -103,3 +109,3 @@ class ReactTransitionGroup extends React.Component {
 
-  performAppear = (key) => {
+  performAppear = key => {
     this.currentlyTransitioningKeys[key] = true;
@@ -109,5 +115,3 @@ class ReactTransitionGroup extends React.Component {
     if (component.componentWillAppear) {
-      component.componentWillAppear(
-        this._handleDoneAppearing.bind(this, key)
-      );
+      component.componentWillAppear(this._handleDoneAppearing.bind(this, key));
     } else {
@@ -117,3 +121,3 @@ class ReactTransitionGroup extends React.Component {
 
-  _handleDoneAppearing = (key) => {
+  _handleDoneAppearing = key => {
     var component = this.refs[key];
@@ -126,3 +130,3 @@ class ReactTransitionGroup extends React.Component {
     var currentChildMapping = ReactTransitionChildMapping.getChildMapping(
-      this.props.children
+      this.props.children,
     );
@@ -135,3 +139,3 @@ class ReactTransitionGroup extends React.Component {
 
-  performEnter = (key) => {
+  performEnter = key => {
     this.currentlyTransitioningKeys[key] = true;
@@ -141,5 +145,3 @@ class ReactTransitionGroup extends React.Component {
     if (component.componentWillEnter) {
-      component.componentWillEnter(
-        this._handleDoneEntering.bind(this, key)
-      );
+      component.componentWillEnter(this._handleDoneEntering.bind(this, key));
     } else {
@@ -149,3 +151,3 @@ class ReactTransitionGroup extends React.Component {
 
-  _handleDoneEntering = (key) => {
+  _handleDoneEntering = key => {
     var component = this.refs[key];
@@ -158,3 +160,3 @@ class ReactTransitionGroup extends React.Component {
     var currentChildMapping = ReactTransitionChildMapping.getChildMapping(
-      this.props.children
+      this.props.children,
     );
@@ -167,3 +169,3 @@ class ReactTransitionGroup extends React.Component {
 
-  performLeave = (key) => {
+  performLeave = key => {
     this.currentlyTransitioningKeys[key] = true;
@@ -181,3 +183,3 @@ class ReactTransitionGroup extends React.Component {
 
-  _handleDoneLeaving = (key) => {
+  _handleDoneLeaving = key => {
     var component = this.refs[key];
@@ -191,3 +193,3 @@ class ReactTransitionGroup extends React.Component {
     var currentChildMapping = ReactTransitionChildMapping.getChildMapping(
-      this.props.children
+      this.props.children,
     );
@@ -218,6 +220,8 @@ class ReactTransitionGroup extends React.Component {
         // leaving.
-        childrenToRender.push(React.cloneElement(
-          this.props.childFactory(child),
-          {ref: key, key: key}
-        ));
+        childrenToRender.push(
+          React.cloneElement(this.props.childFactory(child), {
+            ref: key,
+            key: key,
+          }),
+        );
       }
@@ -237,7 +241,3 @@ class ReactTransitionGroup extends React.Component {
 
-    return React.createElement(
-      this.props.component,
-      props,
-      childrenToRender
-    );
+    return React.createElement(this.props.component, props, childrenToRender);
   }
diff --git a/src/addons/transitions/__tests__/ReactTransitionChildMapping-test.js b/src/addons/transitions/__tests__/ReactTransitionChildMapping-test.js
index 621549691..b6c705898 100644
--- a/src/addons/transitions/__tests__/ReactTransitionChildMapping-test.js
+++ b/src/addons/transitions/__tests__/ReactTransitionChildMapping-test.js
@@ -29,3 +29,3 @@ describe('ReactTransitionChildMapping', () => {
     expect(
-      ReactTransitionChildMapping.getChildMapping(component.props.children)
+      ReactTransitionChildMapping.getChildMapping(component.props.children),
     ).toEqual({
diff --git a/src/addons/update.js b/src/addons/update.js
index 6e3c41785..ce5fa018d 100644
--- a/src/addons/update.js
+++ b/src/addons/update.js
@@ -11,3 +11,3 @@
 
- /* global hasOwnProperty:true */
+/* global hasOwnProperty:true */
 
@@ -55,3 +55,3 @@ function invariantArrayCase(value, spec, command) {
     command,
-    value
+    value,
   );
@@ -61,5 +61,5 @@ function invariantArrayCase(value, spec, command) {
     'update(): expected spec of %s to be an array; got %s. ' +
-    'Did you forget to wrap your parameter in an array?',
+      'Did you forget to wrap your parameter in an array?',
     command,
-    specValue
+    specValue,
   );
@@ -75,5 +75,5 @@ function update(value, spec) {
     'update(): You provided a key path to update() that did not contain one ' +
-    'of %s. Did you forget to include {%s: ...}?',
+      'of %s. Did you forget to include {%s: ...}?',
     ALL_COMMANDS_LIST.join(', '),
-    COMMAND_SET
+    COMMAND_SET,
   );
@@ -84,3 +84,3 @@ function update(value, spec) {
       'Cannot have more than one key in an object with %s',
-      COMMAND_SET
+      COMMAND_SET,
     );
@@ -96,5 +96,5 @@ function update(value, spec) {
       mergeObj && typeof mergeObj === 'object',
-      'update(): %s expects a spec of type \'object\'; got %s',
+      "update(): %s expects a spec of type 'object'; got %s",
       COMMAND_MERGE,
-      mergeObj
+      mergeObj,
     );
@@ -102,5 +102,5 @@ function update(value, spec) {
       nextValue && typeof nextValue === 'object',
-      'update(): %s expects a target of type \'object\'; got %s',
+      "update(): %s expects a target of type 'object'; got %s",
       COMMAND_MERGE,
-      nextValue
+      nextValue,
     );
@@ -128,3 +128,3 @@ function update(value, spec) {
       COMMAND_SPLICE,
-      value
+      value,
     );
@@ -133,5 +133,5 @@ function update(value, spec) {
       'update(): expected spec of %s to be an array of arrays; got %s. ' +
-      'Did you forget to wrap your parameters in an array?',
+        'Did you forget to wrap your parameters in an array?',
       COMMAND_SPLICE,
-      spec[COMMAND_SPLICE]
+      spec[COMMAND_SPLICE],
     );
@@ -141,5 +141,5 @@ function update(value, spec) {
         'update(): expected spec of %s to be an array of arrays; got %s. ' +
-        'Did you forget to wrap your parameters in an array?',
+          'Did you forget to wrap your parameters in an array?',
         COMMAND_SPLICE,
-        spec[COMMAND_SPLICE]
+        spec[COMMAND_SPLICE],
       );
@@ -154,3 +154,3 @@ function update(value, spec) {
       COMMAND_APPLY,
-      spec[COMMAND_APPLY]
+      spec[COMMAND_APPLY],
     );
diff --git a/src/isomorphic/React.js b/src/isomorphic/React.js
index 39b6aa31c..29cfea6da 100644
--- a/src/isomorphic/React.js
+++ b/src/isomorphic/React.js
@@ -13,6 +13,4 @@
 
+var ReactBaseClasses = require('ReactBaseClasses');
 var ReactChildren = require('ReactChildren');
-var ReactComponent = require('ReactComponent');
-var ReactPureComponent = require('ReactPureComponent');
-var ReactClass = require('ReactClass');
 var ReactDOMFactories = require('ReactDOMFactories');
@@ -22,4 +20,4 @@ var ReactVersion = require('ReactVersion');
 
+var createReactClass = require('createClass');
 var onlyChild = require('onlyChild');
-var warning = require('warning');
 
@@ -30,2 +28,3 @@ var cloneElement = ReactElement.cloneElement;
 if (__DEV__) {
+  var lowPriorityWarning = require('lowPriorityWarning');
   var canDefineProperty = require('canDefineProperty');
@@ -39,16 +38,32 @@ if (__DEV__) {
 var __spread = Object.assign;
+var createMixin = function(mixin) {
+  return mixin;
+};
 
 if (__DEV__) {
-  var warned = false;
+  var warnedForSpread = false;
+  var warnedForCreateMixin = false;
   __spread = function() {
-    warning(
-      warned,
+    lowPriorityWarning(
+      warnedForSpread,
       'React.__spread is deprecated and should not be used. Use ' +
-      'Object.assign directly or another helper function with similar ' +
-      'semantics. You may be seeing this warning due to your compiler. ' +
-      'See https://fb.me/react-spread-deprecation for more details.'
+        'Object.assign directly or another helper function with similar ' +
+        'semantics. You may be seeing this warning due to your compiler. ' +
+        'See https://fb.me/react-spread-deprecation for more details.',
     );
-    warned = true;
+    warnedForSpread = true;
     return Object.assign.apply(null, arguments);
   };
+
+  createMixin = function(mixin) {
+    lowPriorityWarning(
+      warnedForCreateMixin,
+      'React.createMixin is deprecated and should not be used. ' +
+        'In React v16.0, it will be removed. ' +
+        'You can use this mixin directly instead. ' +
+        'See https://fb.me/createmixin-was-never-implemented for more info.',
+    );
+    warnedForCreateMixin = true;
+    return mixin;
+  };
 }
@@ -56,3 +71,2 @@ if (__DEV__) {
 var React = {
-
   // Modern
@@ -67,4 +81,4 @@ var React = {
 
-  Component: ReactComponent,
-  PureComponent: ReactPureComponent,
+  Component: ReactBaseClasses.Component,
+  PureComponent: ReactBaseClasses.PureComponent,
 
@@ -77,8 +91,5 @@ var React = {
   PropTypes: ReactPropTypes,
-  createClass: ReactClass.createClass,
+  createClass: createReactClass,
   createFactory: createFactory,
-  createMixin: function(mixin) {
-    // Currently a noop. Will be used to validate and trace mixins.
-    return mixin;
-  },
+  createMixin: createMixin,
 
@@ -94,4 +105,4 @@ var React = {
 
-// TODO: Fix tests so that this deprecation warning doesn't cause failures.
 if (__DEV__) {
+  let warnedForCreateClass = false;
   if (canDefineProperty) {
@@ -99,6 +110,9 @@ if (__DEV__) {
       get() {
-        warning(
+        lowPriorityWarning(
           didWarnPropTypesDeprecated,
-          'Accessing PropTypes via the main React package is deprecated. Use ' +
-          'the prop-types package from npm instead.'
+          'Accessing PropTypes via the main React package is deprecated,' +
+            ' and will be removed in  React v16.0.' +
+            ' Use the latest available v15.* prop-types package from npm instead.' +
+            ' For info on usage, compatibility, migration and more, see ' +
+            'https://fb.me/prop-types-docs',
         );
@@ -108,3 +122,42 @@ if (__DEV__) {
     });
+
+    Object.defineProperty(React, 'createClass', {
+      get: function() {
+        lowPriorityWarning(
+          warnedForCreateClass,
+          'Accessing createClass via the main React package is deprecated,' +
+            ' and will be removed in React v16.0.' +
+            " Use a plain JavaScript class instead. If you're not yet " +
+            'ready to migrate, create-react-class v15.* is available ' +
+            'on npm as a temporary, drop-in replacement. ' +
+            'For more info see https://fb.me/react-create-class',
+        );
+        warnedForCreateClass = true;
+        return createReactClass;
+      },
+    });
   }
+
+  // React.DOM factories are deprecated. Wrap these methods so that
+  // invocations of the React.DOM namespace and alert users to switch
+  // to the `react-dom-factories` package.
+  React.DOM = {};
+  var warnedForFactories = false;
+  Object.keys(ReactDOMFactories).forEach(function(factory) {
+    React.DOM[factory] = function(...args) {
+      if (!warnedForFactories) {
+        lowPriorityWarning(
+          false,
+          'Accessing factories like React.DOM.%s has been deprecated ' +
+            'and will be removed in v16.0+. Use the ' +
+            'react-dom-factories package instead. ' +
+            ' Version 1.0 provides a drop-in replacement.' +
+            ' For more info, see https://fb.me/react-dom-factories',
+          factory,
+        );
+        warnedForFactories = true;
+      }
+      return ReactDOMFactories[factory](...args);
+    };
+  });
 }
diff --git a/src/isomorphic/__tests__/React-test.js b/src/isomorphic/__tests__/React-test.js
new file mode 100644
index 000000000..7a2d0c9ac
--- /dev/null
+++ b/src/isomorphic/__tests__/React-test.js
@@ -0,0 +1,71 @@
+/**
+ * Copyright 2013-present, Facebook, Inc.
+ * All rights reserved.
+ *
+ * This source code is licensed under the BSD-style license found in the
+ * LICENSE file in the root directory of this source tree. An additional grant
+ * of patent rights can be found in the PATENTS file in the same directory.
+ *
+ * @emails react-core
+ */
+
+'use strict';
+
+describe('React', () => {
+  var React;
+
+  beforeEach(() => {
+    React = require('React');
+  });
+
+  it('should log a deprecation warning once when using React.__spread', () => {
+    spyOn(console, 'warn');
+    React.__spread({});
+    React.__spread({});
+    expect(console.warn.calls.count()).toBe(1);
+    expect(console.warn.calls.argsFor(0)[0]).toContain(
+      'React.__spread is deprecated and should not be used',
+    );
+  });
+
+  it('should log a deprecation warning once when using React.createMixin', () => {
+    spyOn(console, 'warn');
+    React.createMixin();
+    React.createMixin();
+    expect(console.warn.calls.count()).toBe(1);
+    expect(console.warn.calls.argsFor(0)[0]).toContain(
+      'React.createMixin is deprecated and should not be used',
+    );
+  });
+
+  it('should warn once when attempting to access React.createClass', () => {
+    spyOn(console, 'warn');
+    let createClass = React.createClass;
+    createClass = React.createClass;
+    expect(createClass).not.toBe(undefined);
+    expect(console.warn.calls.count()).toBe(1);
+    expect(console.warn.calls.argsFor(0)[0]).toContain(
+      'Warning: Accessing createClass via the main React package is ' +
+        'deprecated, and will be removed in React v16.0. ' +
+        "Use a plain JavaScript class instead. If you're not yet ready " +
+        'to migrate, create-react-class v15.* is available on npm as ' +
+        'a temporary, drop-in replacement. ' +
+        'For more info see https://fb.me/react-create-class',
+    );
+  });
+
+  it('should warn once when attempting to access React.PropTypes', () => {
+    spyOn(console, 'warn');
+    let PropTypes = React.PropTypes;
+    PropTypes = React.PropTypes;
+    expect(PropTypes).not.toBe(undefined);
+    expect(console.warn.calls.count()).toBe(1);
+    expect(console.warn.calls.argsFor(0)[0]).toContain(
+      'Warning: Accessing PropTypes via the main React package is ' +
+        'deprecated, and will be removed in  React v16.0. ' +
+        'Use the latest available v15.* prop-types package from ' +
+        'npm instead. For info on usage, compatibility, migration ' +
+        'and more, see https://fb.me/prop-types-docs',
+    );
+  });
+});
diff --git a/src/isomorphic/children/ReactChildren.js b/src/isomorphic/children/ReactChildren.js
index 75670dbe3..645c361ff 100644
--- a/src/isomorphic/children/ReactChildren.js
+++ b/src/isomorphic/children/ReactChildren.js
@@ -22,3 +22,2 @@ var fourArgumentPooler = PooledClass.fourArgumentPooler;
 
-
 var userProvidedKeyEscapeRegex = /\/+/g;
@@ -28,3 +27,2 @@ function escapeUserProvidedKey(text) {
 
-
 /**
@@ -70,4 +68,6 @@ function forEachChildren(children, forEachFunc, forEachContext) {
   }
-  var traverseContext =
-    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
+  var traverseContext = ForEachBookKeeping.getPooled(
+    forEachFunc,
+    forEachContext,
+  );
   traverseAllChildren(children, forEachSingleChild, traverseContext);
@@ -76,3 +76,2 @@ function forEachChildren(children, forEachFunc, forEachContext) {
 
-
 /**
@@ -111,3 +110,3 @@ function mapSingleChildIntoContext(bookKeeping, child, childKey) {
       childKey,
-      emptyFunction.thatReturnsArgument
+      emptyFunction.thatReturnsArgument,
     );
@@ -120,8 +119,6 @@ function mapSingleChildIntoContext(bookKeeping, child, childKey) {
         keyPrefix +
-        (
-          (mappedChild.key && (!child || (child.key !== mappedChild.key))) ?
-          escapeUserProvidedKey(mappedChild.key) + '/' :
-          ''
-        ) +
-        childKey
+          (mappedChild.key && (!child || child.key !== mappedChild.key)
+            ? escapeUserProvidedKey(mappedChild.key) + '/'
+            : '') +
+          childKey,
       );
@@ -141,3 +138,3 @@ function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
     func,
-    context
+    context,
   );
@@ -169,4 +166,2 @@ function mapChildren(children, func, context) {
 
-
-
 function forEachSingleChildDummy(traverseContext, child, name) {
@@ -188,3 +183,2 @@ function countChildren(children, context) {
 
-
 /**
@@ -201,3 +195,3 @@ function toArray(children) {
     null,
-    emptyFunction.thatReturnsArgument
+    emptyFunction.thatReturnsArgument,
   );
@@ -206,3 +200,2 @@ function toArray(children) {
 
-
 var ReactChildren = {
diff --git a/src/isomorphic/children/__tests__/ReactChildren-test.js b/src/isomorphic/children/__tests__/ReactChildren-test.js
index 6eb4c89e2..d6e6a8bfc 100644
--- a/src/isomorphic/children/__tests__/ReactChildren-test.js
+++ b/src/isomorphic/children/__tests__/ReactChildren-test.js
@@ -71,3 +71,2 @@ describe('ReactChildren', () => {
     expect(mappedChildren[0]).toEqual(<span key=".$simple" />);
-
   });
@@ -105,4 +104,7 @@ describe('ReactChildren', () => {
 
-    var mappedChildren =
-      ReactChildren.map(instance.props.children, callback, scopeTester);
+    var mappedChildren = ReactChildren.map(
+      instance.props.children,
+      callback,
+      scopeTester,
+    );
 
@@ -120,5 +122,5 @@ describe('ReactChildren', () => {
     var mapped = [
-      <div key="giraffe" />,  // Key should be joined to obj key
-      null,  // Key should be added even if we don't supply it!
-      <div />,  // Key should be added even if not supplied!
+      <div key="giraffe" />, // Key should be joined to obj key
+      null, // Key should be added even if we don't supply it!
+      <div />, // Key should be added even if not supplied!
       <span />, // Map from null to something.
@@ -148,4 +150,3 @@ describe('ReactChildren', () => {
 
-    var mappedChildren =
-      ReactChildren.map(instance.props.children, callback);
+    var mappedChildren = ReactChildren.map(instance.props.children, callback);
     expect(callback.calls.count()).toBe(5);
@@ -158,5 +159,3 @@ describe('ReactChildren', () => {
       mappedChildren[3].key,
-    ]).toEqual(
-      ['giraffe/.$keyZero', '.$keyTwo', '.3', '.$keyFour']
-    );
+    ]).toEqual(['giraffe/.$keyZero', '.$keyTwo', '.3', '.$keyFour']);
 
@@ -187,4 +186,4 @@ describe('ReactChildren', () => {
 
-    var zeroMapped = <div key="giraffe" />;  // Key should be overridden
-    var twoMapped = <div />;  // Key should be added even if not supplied!
+    var zeroMapped = <div key="giraffe" />; // Key should be overridden
+    var twoMapped = <div />; // Key should be added even if not supplied!
     var fourMapped = <div key="keyFour" />;
@@ -193,5 +192,5 @@ describe('ReactChildren', () => {
     var callback = jasmine.createSpy().and.callFake(function(kid, index) {
-      return index === 0 ? zeroMapped :
-        index === 1 ? twoMapped :
-        index === 2 ? fourMapped : fiveMapped;
+      return index === 0
+        ? zeroMapped
+        : index === 1 ? twoMapped : index === 2 ? fourMapped : fiveMapped;
     });
@@ -205,8 +204,3 @@ describe('ReactChildren', () => {
 
-    expect([
-      frag[0].key,
-      frag[1].key,
-      frag[2].key,
-      frag[3].key,
-    ]).toEqual([
+    expect([frag[0].key, frag[1].key, frag[2].key, frag[3].key]).toEqual([
       'firstHalfKey/.$keyZero',
@@ -246,5 +240,9 @@ describe('ReactChildren', () => {
 
-    expect(mappedChildren[0]).toEqual(<div key="giraffe/.0:$firstHalfKey/.$keyZero" />);
+    expect(mappedChildren[0]).toEqual(
+      <div key="giraffe/.0:$firstHalfKey/.$keyZero" />,
+    );
     expect(mappedChildren[1]).toEqual(<div key=".0:$firstHalfKey/.$keyTwo" />);
-    expect(mappedChildren[2]).toEqual(<div key="keyFour/.0:$secondHalfKey/.$keyFour" />);
+    expect(mappedChildren[2]).toEqual(
+      <div key="keyFour/.0:$secondHalfKey/.$keyFour" />,
+    );
     expect(mappedChildren[3]).toEqual(<div key=".0:$keyFive/.$keyFiveInner" />);
@@ -273,5 +271,7 @@ describe('ReactChildren', () => {
     var expectedForcedKeys = ['giraffe/.$keyZero', '.$keyOne'];
-    var mappedChildrenForcedKeys =
-      ReactChildren.map(forcedKeys.props.children, mapFn);
-    var mappedForcedKeys = mappedChildrenForcedKeys.map((c) => c.key);
+    var mappedChildrenForcedKeys = ReactChildren.map(
+      forcedKeys.props.children,
+      mapFn,
+    );
+    var mappedForcedKeys = mappedChildrenForcedKeys.map(c => c.key);
     expect(mappedForcedKeys).toEqual(expectedForcedKeys);
@@ -282,8 +282,9 @@ describe('ReactChildren', () => {
     ];
-    var remappedChildrenForcedKeys =
-      ReactChildren.map(mappedChildrenForcedKeys, mapFn);
-    expect(
-      remappedChildrenForcedKeys.map((c) => c.key)
-    ).toEqual(expectedRemappedForcedKeys);
-
+    var remappedChildrenForcedKeys = ReactChildren.map(
+      mappedChildrenForcedKeys,
+      mapFn,
+    );
+    expect(remappedChildrenForcedKeys.map(c => c.key)).toEqual(
+      expectedRemappedForcedKeys,
+    );
   });
@@ -317,10 +318,6 @@ describe('ReactChildren', () => {
 
-    var mapped = ReactChildren.map(
-      instance.props.children,
-      element => element,
-    );
+    var mapped = ReactChildren.map(instance.props.children, element => element);
 
-    var mappedWithClone = ReactChildren.map(
-      instance.props.children,
-      element => React.cloneElement(element),
+    var mappedWithClone = ReactChildren.map(instance.props.children, element =>
+      React.cloneElement(element),
     );
@@ -337,10 +334,6 @@ describe('ReactChildren', () => {
 
-    var mapped = ReactChildren.map(
-      instance.props.children,
-      element => element,
-    );
+    var mapped = ReactChildren.map(instance.props.children, element => element);
 
-    var mappedWithClone = ReactChildren.map(
-      instance.props.children,
-      element => React.cloneElement(element, {key: 'unique'}),
+    var mappedWithClone = ReactChildren.map(instance.props.children, element =>
+      React.cloneElement(element, {key: 'unique'}),
     );
@@ -401,10 +394,12 @@ describe('ReactChildren', () => {
     var instance = (
-      <div>{[
-        ReactFragment.create({
-          firstHalfKey: [zero, one, two],
-          secondHalfKey: [three, four],
-          keyFive: five,
-        }),
-        null,
-      ]}</div>
+      <div>
+        {[
+          ReactFragment.create({
+            firstHalfKey: [zero, one, two],
+            secondHalfKey: [three, four],
+            keyFive: five,
+          }),
+          null,
+        ]}
+      </div>
     );
@@ -420,6 +415,4 @@ describe('ReactChildren', () => {
     expect(ReactChildren.toArray([<div />]).length).toBe(1);
-    expect(
-      ReactChildren.toArray(<div />)[0].key
-    ).toBe(
-      ReactChildren.toArray([<div />])[0].key
+    expect(ReactChildren.toArray(<div />)[0].key).toBe(
+      ReactChildren.toArray([<div />])[0].key,
     );
@@ -447,7 +440,7 @@ describe('ReactChildren', () => {
     // null/undefined/bool are all omitted
-    expect(ReactChildren.toArray([1, 'two', null, undefined, true])).toEqual(
-      [1, 'two']
-    );
+    expect(ReactChildren.toArray([1, 'two', null, undefined, true])).toEqual([
+      1,
+      'two',
+    ]);
   });
-
 });
diff --git a/src/isomorphic/children/__tests__/onlyChild-test.js b/src/isomorphic/children/__tests__/onlyChild-test.js
index 8de1c9b80..0c8870c6d 100644
--- a/src/isomorphic/children/__tests__/onlyChild-test.js
+++ b/src/isomorphic/children/__tests__/onlyChild-test.js
@@ -14,3 +14,2 @@
 describe('onlyChild', () => {
-
   var React;
@@ -37,3 +36,3 @@ describe('onlyChild', () => {
     expect(function() {
-      var instance =
+      var instance = (
         <WrapComponent>
@@ -41,3 +40,4 @@ describe('onlyChild', () => {
           <span />
-        </WrapComponent>;
+        </WrapComponent>
+      );
       onlyChild(instance.props.children);
@@ -48,6 +48,7 @@ describe('onlyChild', () => {
     expect(function() {
-      var instance =
+      var instance = (
         <WrapComponent>
           {null}
-        </WrapComponent>;
+        </WrapComponent>
+      );
       onlyChild(instance.props.children);
@@ -56,6 +57,7 @@ describe('onlyChild', () => {
     expect(function() {
-      var instance =
+      var instance = (
         <WrapComponent>
           {undefined}
-        </WrapComponent>;
+        </WrapComponent>
+      );
       onlyChild(instance.props.children);
@@ -66,6 +68,7 @@ describe('onlyChild', () => {
     expect(function() {
-      var instance =
+      var instance = (
         <WrapComponent>
           {ReactFragment.create({oneThing: <span />})}
-        </WrapComponent>;
+        </WrapComponent>
+      );
       onlyChild(instance.props.children);
@@ -74,9 +77,9 @@ describe('onlyChild', () => {
 
-
   it('should not fail when passed interpolated single child', () => {
     expect(function() {
-      var instance =
+      var instance = (
         <WrapComponent>
           {<span />}
-        </WrapComponent>;
+        </WrapComponent>
+      );
       onlyChild(instance.props.children);
@@ -85,9 +88,9 @@ describe('onlyChild', () => {
 
-
   it('should return the only child', () => {
     expect(function() {
-      var instance =
+      var instance = (
         <WrapComponent>
           <span />
-        </WrapComponent>;
+        </WrapComponent>
+      );
       onlyChild(instance.props.children);
@@ -95,3 +98,2 @@ describe('onlyChild', () => {
   });
-
 });
diff --git a/src/isomorphic/children/__tests__/sliceChildren-test.js b/src/isomorphic/children/__tests__/sliceChildren-test.js
index 5b41e1f24..d255324a7 100644
--- a/src/isomorphic/children/__tests__/sliceChildren-test.js
+++ b/src/isomorphic/children/__tests__/sliceChildren-test.js
@@ -14,3 +14,2 @@
 describe('sliceChildren', () => {
-
   var React;
@@ -26,7 +25,3 @@ describe('sliceChildren', () => {
   it('should render the whole set if start zero is supplied', () => {
-    var fullSet = [
-      <div key="A" />,
-      <div key="B" />,
-      <div key="C" />,
-    ];
+    var fullSet = [<div key="A" />, <div key="B" />, <div key="C" />];
     var children = sliceChildren(fullSet, 0);
@@ -40,12 +35,5 @@ describe('sliceChildren', () => {
   it('should render the remaining set if no end index is supplied', () => {
-    var fullSet = [
-      <div key="A" />,
-      <div key="B" />,
-      <div key="C" />,
-    ];
+    var fullSet = [<div key="A" />, <div key="B" />, <div key="C" />];
     var children = sliceChildren(fullSet, 1);
-    expect(children).toEqual([
-      <div key=".$B" />,
-      <div key=".$C" />,
-    ]);
+    expect(children).toEqual([<div key=".$B" />, <div key=".$C" />]);
   });
@@ -60,5 +48,3 @@ describe('sliceChildren', () => {
     var children = sliceChildren(fullSet, 1, 2);
-    expect(children).toEqual([
-      <div key=".$B" />,
-    ]);
+    expect(children).toEqual([<div key=".$B" />]);
   });
@@ -72,5 +58,3 @@ describe('sliceChildren', () => {
     var children = sliceChildren(el.props.children, 1, 2);
-    expect(children).toEqual([
-      <b key=".1" />,
-    ]);
+    expect(children).toEqual([<b key=".1" />]);
   });
@@ -80,6 +64,3 @@ describe('sliceChildren', () => {
       <div key="A" />,
-      [
-        <div key="B" />,
-        <div key="C" />,
-      ],
+      [<div key="B" />, <div key="C" />],
       <div key="D" />,
@@ -87,7 +68,4 @@ describe('sliceChildren', () => {
     var children = sliceChildren(fullSet, 1, 2);
-    expect(children).toEqual([
-      <div key=".1:$B" />,
-    ]);
+    expect(children).toEqual([<div key=".1:$B" />]);
   });
-
 });
diff --git a/src/isomorphic/children/onlyChild.js b/src/isomorphic/children/onlyChild.js
index 43ec44f29..8801fd6dc 100644
--- a/src/isomorphic/children/onlyChild.js
+++ b/src/isomorphic/children/onlyChild.js
@@ -33,3 +33,3 @@ function onlyChild(children) {
     ReactElement.isValidElement(children),
-    'React.Children.only expected to receive a single React element child.'
+    'React.Children.only expected to receive a single React element child.',
   );
diff --git a/src/isomorphic/classic/__tests__/ReactContextValidator-test.js b/src/isomorphic/classic/__tests__/ReactContextValidator-test.js
index f6efecc9b..29a9ac891 100644
--- a/src/isomorphic/classic/__tests__/ReactContextValidator-test.js
+++ b/src/isomorphic/classic/__tests__/ReactContextValidator-test.js
@@ -19,2 +19,3 @@
 
+var PropTypes;
 var React;
@@ -36,2 +37,3 @@ describe('ReactContextValidator', () => {
     ReactTestUtils = require('ReactTestUtils');
+    PropTypes = require('prop-types');
     reactComponentExpect = require('reactComponentExpect');
@@ -49,3 +51,3 @@ describe('ReactContextValidator', () => {
     Component.contextTypes = {
-      foo: React.PropTypes.string,
+      foo: PropTypes.string,
     };
@@ -65,8 +67,12 @@ describe('ReactContextValidator', () => {
     ComponentInFooBarContext.childContextTypes = {
-      foo: React.PropTypes.string,
-      bar: React.PropTypes.number,
+      foo: PropTypes.string,
+      bar: PropTypes.number,
     };
 
-    var instance = ReactTestUtils.renderIntoDocument(<ComponentInFooBarContext />);
-    reactComponentExpect(instance).expectRenderedChild().scalarContextEqual({foo: 'abc'});
+    var instance = ReactTestUtils.renderIntoDocument(
+      <ComponentInFooBarContext />,
+    );
+    reactComponentExpect(instance)
+      .expectRenderedChild()
+      .scalarContextEqual({foo: 'abc'});
   });
@@ -92,4 +98,4 @@ describe('ReactContextValidator', () => {
     Parent.childContextTypes = {
-      foo: React.PropTypes.string.isRequired,
-      bar: React.PropTypes.string.isRequired,
+      foo: PropTypes.string.isRequired,
+      bar: PropTypes.string.isRequired,
     };
@@ -120,6 +126,5 @@ describe('ReactContextValidator', () => {
     Component.contextTypes = {
-      foo: React.PropTypes.string,
+      foo: PropTypes.string,
     };
 
-
     var container = document.createElement('div');
@@ -142,3 +147,3 @@ describe('ReactContextValidator', () => {
     Component.contextTypes = {
-      foo: React.PropTypes.string.isRequired,
+      foo: PropTypes.string.isRequired,
     };
@@ -150,5 +155,5 @@ describe('ReactContextValidator', () => {
       'Warning: Failed context type: ' +
-      'The context `foo` is marked as required in `Component`, but its value ' +
-      'is `undefined`.\n' +
-      '    in Component (at **)'
+        'The context `foo` is marked as required in `Component`, but its value ' +
+        'is `undefined`.\n' +
+        '    in Component (at **)',
     );
@@ -167,3 +172,3 @@ describe('ReactContextValidator', () => {
     ComponentInFooStringContext.childContextTypes = {
-      foo: React.PropTypes.string,
+      foo: PropTypes.string,
     };
@@ -171,3 +176,3 @@ describe('ReactContextValidator', () => {
     ReactTestUtils.renderIntoDocument(
-      <ComponentInFooStringContext fooValue={'bar'} />
+      <ComponentInFooStringContext fooValue={'bar'} />,
     );
@@ -189,6 +194,8 @@ describe('ReactContextValidator', () => {
     ComponentInFooNumberContext.childContextTypes = {
-      foo: React.PropTypes.number,
+      foo: PropTypes.number,
     };
 
-    ReactTestUtils.renderIntoDocument(<ComponentInFooNumberContext fooValue={123} />);
+    ReactTestUtils.renderIntoDocument(
+      <ComponentInFooNumberContext fooValue={123} />,
+    );
 
@@ -197,6 +204,6 @@ describe('ReactContextValidator', () => {
       'Warning: Failed context type: ' +
-      'Invalid context `foo` of type `number` supplied ' +
-      'to `Component`, expected `string`.\n' +
-      '    in Component (at **)\n' +
-      '    in ComponentInFooNumberContext (at **)'
+        'Invalid context `foo` of type `number` supplied ' +
+        'to `Component`, expected `string`.\n' +
+        '    in Component (at **)\n' +
+        '    in ComponentInFooNumberContext (at **)',
     );
@@ -217,4 +224,4 @@ describe('ReactContextValidator', () => {
     Component.childContextTypes = {
-      foo: React.PropTypes.string.isRequired,
-      bar: React.PropTypes.number,
+      foo: PropTypes.string.isRequired,
+      bar: PropTypes.number,
     };
@@ -225,5 +232,5 @@ describe('ReactContextValidator', () => {
       'Warning: Failed child context type: ' +
-      'The child context `foo` is marked as required in `Component`, but its ' +
-      'value is `undefined`.\n' +
-      '    in Component (at **)'
+        'The child context `foo` is marked as required in `Component`, but its ' +
+        'value is `undefined`.\n' +
+        '    in Component (at **)',
     );
@@ -235,5 +242,5 @@ describe('ReactContextValidator', () => {
       'Warning: Failed child context type: ' +
-      'Invalid child context `foo` of type `number` ' +
-      'supplied to `Component`, expected `string`.\n' +
-      '    in Component (at **)'
+        'Invalid child context `foo` of type `number` ' +
+        'supplied to `Component`, expected `string`.\n' +
+        '    in Component (at **)',
     );
@@ -241,8 +248,6 @@ describe('ReactContextValidator', () => {
     ReactTestUtils.renderIntoDocument(
-      <Component testContext={{foo: 'foo', bar: 123}} />
+      <Component testContext={{foo: 'foo', bar: 123}} />,
     );
 
-    ReactTestUtils.renderIntoDocument(
-      <Component testContext={{foo: 'foo'}} />
-    );
+    ReactTestUtils.renderIntoDocument(<Component testContext={{foo: 'foo'}} />);
 
@@ -251,3 +256,2 @@ describe('ReactContextValidator', () => {
   });
-
 });
diff --git a/src/isomorphic/classic/class/ReactClass.js b/src/isomorphic/classic/class/ReactClass.js
deleted file mode 100644
index 9c9506e63..000000000
--- a/src/isomorphic/classic/class/ReactClass.js
+++ /dev/null
@@ -1,902 +0,0 @@
-/**
- * Copyright 2013-present, Facebook, Inc.
- * All rights reserved.
- *
- * This source code is licensed under the BSD-style license found in the
- * LICENSE file in the root directory of this source tree. An additional grant
- * of patent rights can be found in the PATENTS file in the same directory.
- *
- * @providesModule ReactClass
- */
-
-'use strict';
-
-var ReactComponent = require('ReactComponent');
-var ReactElement = require('ReactElement');
-var ReactPropTypeLocationNames = require('ReactPropTypeLocationNames');
-var ReactNoopUpdateQueue = require('ReactNoopUpdateQueue');
-
-var emptyObject = require('emptyObject');
-var invariant = require('invariant');
-var warning = require('warning');
-
-import type { ReactPropTypeLocations } from 'ReactPropTypeLocations';
-
-var MIXINS_KEY = 'mixins';
-
-// Helper function to allow the creation of anonymous functions which do not
-// have .name set to the name of the variable being assigned to.
-function identity(fn) {
-  return fn;
-}
-
-/**
- * Policies that describe methods in `ReactClassInterface`.
- */
-type SpecPolicy =
-  /**
-   * These methods may be defined only once by the class specification or mixin.
-   */
-  'DEFINE_ONCE' |
-  /**
-   * These methods may be defined by both the class specification and mixins.
-   * Subsequent definitions will be chained. These methods must return void.
-   */
-  'DEFINE_MANY' |
-  /**
-   * These methods are overriding the base class.
-   */
-  'OVERRIDE_BASE' |
-  /**
-   * These methods are similar to DEFINE_MANY, except we assume they return
-   * objects. We try to merge the keys of the return values of all the mixed in
-   * functions. If there is a key conflict we throw.
-   */
-  'DEFINE_MANY_MERGED';
-
-
-var injectedMixins = [];
-
-/**
- * Composite components are higher-level components that compose other composite
- * or host components.
- *
- * To create a new type of `ReactClass`, pass a specification of
- * your new class to `React.createClass`. The only requirement of your class
- * specification is that you implement a `render` method.
- *
- *   var MyComponent = React.createClass({
- *     render: function() {
- *       return <div>Hello World</div>;
- *     }
- *   });
- *
- * The class specification supports a specific protocol of methods that have
- * special meaning (e.g. `render`). See `ReactClassInterface` for
- * more the comprehensive protocol. Any other properties and methods in the
- * class specification will be available on the prototype.
- *
- * @interface ReactClassInterface
- * @internal
- */
-var ReactClassInterface: {[key: string]: SpecPolicy} = {
-
-  /**
-   * An array of Mixin objects to include when defining your component.
-   *
-   * @type {array}
-   * @optional
-   */
-  mixins: 'DEFINE_MANY',
-
-  /**
-   * An object containing properties and methods that should be defined on
-   * the component's constructor instead of its prototype (static methods).
-   *
-   * @type {object}
-   * @optional
-   */
-  statics: 'DEFINE_MANY',
-
-  /**
-   * Definition of prop types for this component.
-   *
-   * @type {object}
-   * @optional
-   */
-  propTypes: 'DEFINE_MANY',
-
-  /**
-   * Definition of context types for this component.
-   *
-   * @type {object}
-   * @optional
-   */
-  contextTypes: 'DEFINE_MANY',
-
-  /**
-   * Definition of context types this component sets for its children.
-   *
-   * @type {object}
-   * @optional
-   */
-  childContextTypes: 'DEFINE_MANY',
-
-  // ==== Definition methods ====
-
-  /**
-   * Invoked when the component is mounted. Values in the mapping will be set on
-   * `this.props` if that prop is not specified (i.e. using an `in` check).
-   *
-   * This method is invoked before `getInitialState` and therefore cannot rely
-   * on `this.state` or use `this.setState`.
-   *
-   * @return {object}
-   * @optional
-   */
-  getDefaultProps: 'DEFINE_MANY_MERGED',
-
-  /**
-   * Invoked once before the component is mounted. The return value will be used
-   * as the initial value of `this.state`.
-   *
-   *   getInitialState: function() {
-   *     return {
-   *       isOn: false,
-   *       fooBaz: new BazFoo()
-   *     }
-   *   }
-   *
-   * @return {object}
-   * @optional
-   */
-  getInitialState: 'DEFINE_MANY_MERGED',
-
-  /**
-   * @return {object}
-   * @optional
-   */
-  getChildContext: 'DEFINE_MANY_MERGED',
-
-  /**
-   * Uses props from `this.props` and state from `this.state` to render the
-   * structure of the component.
-   *
-   * No guarantees are made about when or how often this method is invoked, so
-   * it must not have side effects.
-   *
-   *   render: function() {
-   *     var name = this.props.name;
-   *     return <div>Hello, {name}!</div>;
-   *   }
-   *
-   * @return {ReactComponent}
-   * @required
-   */
-  render: 'DEFINE_ONCE',
-
-
-
-  // ==== Delegate methods ====
-
-  /**
-   * Invoked when the component is initially created and about to be mounted.
-   * This may have side effects, but any external subscriptions or data created
-   * by this method must be cleaned up in `componentWillUnmount`.
-   *
-   * @optional
-   */
-  componentWillMount: 'DEFINE_MANY',
-
-  /**
-   * Invoked when the component has been mounted and has a DOM representation.
-   * However, there is no guarantee that the DOM node is in the document.
-   *
-   * Use this as an opportunity to operate on the DOM when the component has
-   * been mounted (initialized and rendered) for the first time.
-   *
-   * @param {DOMElement} rootNode DOM element representing the component.
-   * @optional
-   */
-  componentDidMount: 'DEFINE_MANY',
-
-  /**
-   * Invoked before the component receives new props.
-   *
-   * Use this as an opportunity to react to a prop transition by updating the
-   * state using `this.setState`. Current props are accessed via `this.props`.
-   *
-   *   componentWillReceiveProps: function(nextProps, nextContext) {
-   *     this.setState({
-   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
-   *     });
-   *   }
-   *
-   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
-   * transition may cause a state change, but the opposite is not true. If you
-   * need it, you are probably looking for `componentWillUpdate`.
-   *
-   * @param {object} nextProps
-   * @optional
-   */
-  componentWillReceiveProps: 'DEFINE_MANY',
-
-  /**
-   * Invoked while deciding if the component should be updated as a result of
-   * receiving new props, state and/or context.
-   *
-   * Use this as an opportunity to `return false` when you're certain that the
-   * transition to the new props/state/context will not require a component
-   * update.
-   *
-   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
-   *     return !equal(nextProps, this.props) ||
-   *       !equal(nextState, this.state) ||
-   *       !equal(nextContext, this.context);
-   *   }
-   *
-   * @param {object} nextProps
-   * @param {?object} nextState
-   * @param {?object} nextContext
-   * @return {boolean} True if the component should update.
-   * @optional
-   */
-  shouldComponentUpdate: 'DEFINE_ONCE',
-
-  /**
-   * Invoked when the component is about to update due to a transition from
-   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
-   * and `nextContext`.
-   *
-   * Use this as an opportunity to perform preparation before an update occurs.
-   *
-   * NOTE: You **cannot** use `this.setState()` in this method.
-   *
-   * @param {object} nextProps
-   * @param {?object} nextState
-   * @param {?object} nextContext
-   * @param {ReactReconcileTransaction} transaction
-   * @optional
-   */
-  componentWillUpdate: 'DEFINE_MANY',
-
-  /**
-   * Invoked when the component's DOM representation has been updated.
-   *
-   * Use this as an opportunity to operate on the DOM when the component has
-   * been updated.
-   *
-   * @param {object} prevProps
-   * @param {?object} prevState
-   * @param {?object} prevContext
-   * @param {DOMElement} rootNode DOM element representing the component.
-   * @optional
-   */
-  componentDidUpdate: 'DEFINE_MANY',
-
-  /**
-   * Invoked when the component is about to be removed from its parent and have
-   * its DOM representation destroyed.
-   *
-   * Use this as an opportunity to deallocate any external resources.
-   *
-   * NOTE: There is no `componentDidUnmount` since your component will have been
-   * destroyed by that point.
-   *
-   * @optional
-   */
-  componentWillUnmount: 'DEFINE_MANY',
-
-
-
-  // ==== Advanced methods ====
-
-  /**
-   * Updates the component's currently mounted DOM representation.
-   *
-   * By default, this implements React's rendering and reconciliation algorithm.
-   * Sophisticated clients may wish to override this.
-   *
-   * @param {ReactReconcileTransaction} transaction
-   * @internal
-   * @overridable
-   */
-  updateComponent: 'OVERRIDE_BASE',
-
-};
-
-/**
- * Mapping from class specification keys to special processing functions.
- *
- * Although these are declared like instance properties in the specification
- * when defining classes using `React.createClass`, they are actually static
- * and are accessible on the constructor instead of the prototype. Despite
- * being static, they must be defined outside of the "statics" key under
- * which all other static methods are defined.
- */
-var RESERVED_SPEC_KEYS = {
-  displayName: function(Constructor, displayName) {
-    Constructor.displayName = displayName;
-  },
-  mixins: function(Constructor, mixins) {
-    if (mixins) {
-      for (var i = 0; i < mixins.length; i++) {
-        mixSpecIntoComponent(Constructor, mixins[i]);
-      }
-    }
-  },
-  childContextTypes: function(Constructor, childContextTypes) {
-    if (__DEV__) {
-      validateTypeDef(
-        Constructor,
-        childContextTypes,
-        'childContext'
-      );
-    }
-    Constructor.childContextTypes = Object.assign(
-      {},
-      Constructor.childContextTypes,
-      childContextTypes
-    );
-  },
-  contextTypes: function(Constructor, contextTypes) {
-    if (__DEV__) {
-      validateTypeDef(
-        Constructor,
-        contextTypes,
-        'context'
-      );
-    }
-    Constructor.contextTypes = Object.assign(
-      {},
-      Constructor.contextTypes,
-      contextTypes
-    );
-  },
-  /**
-   * Special case getDefaultProps which should move into statics but requires
-   * automatic merging.
-   */
-  getDefaultProps: function(Constructor, getDefaultProps) {
-    if (Constructor.getDefaultProps) {
-      Constructor.getDefaultProps = createMergedResultFunction(
-        Constructor.getDefaultProps,
-        getDefaultProps
-      );
-    } else {
-      Constructor.getDefaultProps = getDefaultProps;
-    }
-  },
-  propTypes: function(Constructor, propTypes) {
-    if (__DEV__) {
-      validateTypeDef(
-        Constructor,
-        propTypes,
-        'prop'
-      );
-    }
-    Constructor.propTypes = Object.assign(
-      {},
-      Constructor.propTypes,
-      propTypes
-    );
-  },
-  statics: function(Constructor, statics) {
-    mixStaticSpecIntoComponent(Constructor, statics);
-  },
-  autobind: function() {}, // noop
-};
-
-function validateTypeDef(
-  Constructor,
-  typeDef,
-  location: ReactPropTypeLocations,
-) {
-  for (var propName in typeDef) {
-    if (typeDef.hasOwnProperty(propName)) {
-      // use a warning instead of an invariant so components
-      // don't show up in prod but only in __DEV__
-      warning(
-        typeof typeDef[propName] === 'function',
-        '%s: %s type `%s` is invalid; it must be a function, usually from ' +
-        'React.PropTypes.',
-        Constructor.displayName || 'ReactClass',
-        ReactPropTypeLocationNames[location],
-        propName
-      );
-    }
-  }
-}
-
-function validateMethodOverride(isAlreadyDefined, name) {
-  var specPolicy = ReactClassInterface.hasOwnProperty(name) ?
-    ReactClassInterface[name] :
-    null;
-
-  // Disallow overriding of base class methods unless explicitly allowed.
-  if (ReactClassMixin.hasOwnProperty(name)) {
-    invariant(
-      specPolicy === 'OVERRIDE_BASE',
-      'ReactClassInterface: You are attempting to override ' +
-      '`%s` from your class specification. Ensure that your method names ' +
-      'do not overlap with React methods.',
-      name
-    );
-  }
-
-  // Disallow defining methods more than once unless explicitly allowed.
-  if (isAlreadyDefined) {
-    invariant(
-      specPolicy === 'DEFINE_MANY' ||
-      specPolicy === 'DEFINE_MANY_MERGED',
-      'ReactClassInterface: You are attempting to define ' +
-      '`%s` on your component more than once. This conflict may be due ' +
-      'to a mixin.',
-      name
-    );
-  }
-}
-
-/**
- * Mixin helper which handles policy validation and reserved
- * specification keys when building React classes.
- */
-function mixSpecIntoComponent(Constructor, spec) {
-  if (!spec) {
-    if (__DEV__) {
-      var typeofSpec = typeof spec;
-      var isMixinValid = typeofSpec === 'object' && spec !== null;
-
-      warning(
-        isMixinValid,
-        '%s: You\'re attempting to include a mixin that is either null ' +
-        'or not an object. Check the mixins included by the component, ' +
-        'as well as any mixins they include themselves. ' +
-        'Expected object but got %s.',
-        Constructor.displayName || 'ReactClass',
-        spec === null ? null : typeofSpec
-      );
-    }
-
-    return;
-  }
-
-  invariant(
-    typeof spec !== 'function',
-    'ReactClass: You\'re attempting to ' +
-    'use a component class or function as a mixin. Instead, just use a ' +
-    'regular object.'
-  );
-  invariant(
-    !ReactElement.isValidElement(spec),
-    'ReactClass: You\'re attempting to ' +
-    'use a component as a mixin. Instead, just use a regular object.'
-  );
-
-  var proto = Constructor.prototype;
-  var autoBindPairs = proto.__reactAutoBindPairs;
-
-  // By handling mixins before any other properties, we ensure the same
-  // chaining order is applied to methods with DEFINE_MANY policy, whether
-  // mixins are listed before or after these methods in the spec.
-  if (spec.hasOwnProperty(MIXINS_KEY)) {
-    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
-  }
-
-  for (var name in spec) {
-    if (!spec.hasOwnProperty(name)) {
-      continue;
-    }
-
-    if (name === MIXINS_KEY) {
-      // We have already handled mixins in a special case above.
-      continue;
-    }
-
-    var property = spec[name];
-    var isAlreadyDefined = proto.hasOwnProperty(name);
-    validateMethodOverride(isAlreadyDefined, name);
-
-    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
-      RESERVED_SPEC_KEYS[name](Constructor, property);
-    } else {
-      // Setup methods on prototype:
-      // The following member methods should not be automatically bound:
-      // 1. Expected ReactClass methods (in the "interface").
-      // 2. Overridden methods (that were mixed in).
-      var isReactClassMethod =
-        ReactClassInterface.hasOwnProperty(name);
-      var isFunction = typeof property === 'function';
-      var shouldAutoBind =
-        isFunction &&
-        !isReactClassMethod &&
-        !isAlreadyDefined &&
-        spec.autobind !== false;
-
-      if (shouldAutoBind) {
-        autoBindPairs.push(name, property);
-        proto[name] = property;
-      } else {
-        if (isAlreadyDefined) {
-          var specPolicy = ReactClassInterface[name];
-
-          // These cases should already be caught by validateMethodOverride.
-          invariant(
-            isReactClassMethod && (
-              specPolicy === 'DEFINE_MANY_MERGED' ||
-              specPolicy === 'DEFINE_MANY'
-            ),
-            'ReactClass: Unexpected spec policy %s for key %s ' +
-            'when mixing in component specs.',
-            specPolicy,
-            name
-          );
-
-          // For methods which are defined more than once, call the existing
-          // methods before calling the new property, merging if appropriate.
-          if (specPolicy === 'DEFINE_MANY_MERGED') {
-            proto[name] = createMergedResultFunction(proto[name], property);
-          } else if (specPolicy === 'DEFINE_MANY') {
-            proto[name] = createChainedFunction(proto[name], property);
-          }
-        } else {
-          proto[name] = property;
-          if (__DEV__) {
-            // Add verbose displayName to the function, which helps when looking
-            // at profiling tools.
-            if (typeof property === 'function' && spec.displayName) {
-              proto[name].displayName = spec.displayName + '_' + name;
-            }
-          }
-        }
-      }
-    }
-  }
-}
-
-function mixStaticSpecIntoComponent(Constructor, statics) {
-  if (!statics) {
-    return;
-  }
-  for (var name in statics) {
-    var property = statics[name];
-    if (!statics.hasOwnProperty(name)) {
-      continue;
-    }
-
-    var isReserved = name in RESERVED_SPEC_KEYS;
-    invariant(
-      !isReserved,
-      'ReactClass: You are attempting to define a reserved ' +
-      'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
-      'as an instance property instead; it will still be accessible on the ' +
-      'constructor.',
-      name
-    );
-
-    var isInherited = name in Constructor;
-    invariant(
-      !isInherited,
-      'ReactClass: You are attempting to define ' +
-      '`%s` on your component more than once. This conflict may be ' +
-      'due to a mixin.',
-      name
-    );
-    Constructor[name] = property;
-  }
-}
-
-/**
- * Merge two objects, but throw if both contain the same key.
- *
- * @param {object} one The first object, which is mutated.
- * @param {object} two The second object
- * @return {object} one after it has been mutated to contain everything in two.
- */
-function mergeIntoWithNoDuplicateKeys(one, two) {
-  invariant(
-    one && two && typeof one === 'object' && typeof two === 'object',
-    'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
-  );
-
-  for (var key in two) {
-    if (two.hasOwnProperty(key)) {
-      invariant(
-        one[key] === undefined,
-        'mergeIntoWithNoDuplicateKeys(): ' +
-        'Tried to merge two objects with the same key: `%s`. This conflict ' +
-        'may be due to a mixin; in particular, this may be caused by two ' +
-        'getInitialState() or getDefaultProps() methods returning objects ' +
-        'with clashing keys.',
-        key
-      );
-      one[key] = two[key];
-    }
-  }
-  return one;
-}
-
-/**
- * Creates a function that invokes two functions and merges their return values.
- *
- * @param {function} one Function to invoke first.
- * @param {function} two Function to invoke second.
- * @return {function} Function that invokes the two argument functions.
- * @private
- */
-function createMergedResultFunction(one, two) {
-  return function mergedResult() {
-    var a = one.apply(this, arguments);
-    var b = two.apply(this, arguments);
-    if (a == null) {
-      return b;
-    } else if (b == null) {
-      return a;
-    }
-    var c = {};
-    mergeIntoWithNoDuplicateKeys(c, a);
-    mergeIntoWithNoDuplicateKeys(c, b);
-    return c;
-  };
-}
-
-/**
- * Creates a function that invokes two functions and ignores their return vales.
- *
- * @param {function} one Function to invoke first.
- * @param {function} two Function to invoke second.
- * @return {function} Function that invokes the two argument functions.
- * @private
- */
-function createChainedFunction(one, two) {
-  return function chainedFunction() {
-    one.apply(this, arguments);
-    two.apply(this, arguments);
-  };
-}
-
-/**
- * Binds a method to the component.
- *
- * @param {object} component Component whose method is going to be bound.
- * @param {function} method Method to be bound.
- * @return {function} The bound method.
- */
-function bindAutoBindMethod(component, method) {
-  var boundMethod = method.bind(component);
-  if (__DEV__) {
-    boundMethod.__reactBoundContext = component;
-    boundMethod.__reactBoundMethod = method;
-    boundMethod.__reactBoundArguments = null;
-    var componentName = component.constructor.displayName;
-    var _bind = boundMethod.bind;
-    boundMethod.bind = function(newThis, ...args) {
-      // User is trying to bind() an autobound method; we effectively will
-      // ignore the value of "this" that the user is trying to use, so
-      // let's warn.
-      if (newThis !== component && newThis !== null) {
-        warning(
-          false,
-          'bind(): React component methods may only be bound to the ' +
-          'component instance. See %s',
-          componentName
-        );
-      } else if (!args.length) {
-        warning(
-          false,
-          'bind(): You are binding a component method to the component. ' +
-          'React does this for you automatically in a high-performance ' +
-          'way, so you can safely remove this call. See %s',
-          componentName
-        );
-        return boundMethod;
-      }
-      var reboundMethod = _bind.apply(boundMethod, arguments);
-      reboundMethod.__reactBoundContext = component;
-      reboundMethod.__reactBoundMethod = method;
-      reboundMethod.__reactBoundArguments = args;
-      return reboundMethod;
-    };
-  }
-  return boundMethod;
-}
-
-/**
- * Binds all auto-bound methods in a component.
- *
- * @param {object} component Component whose method is going to be bound.
- */
-function bindAutoBindMethods(component) {
-  var pairs = component.__reactAutoBindPairs;
-  for (var i = 0; i < pairs.length; i += 2) {
-    var autoBindKey = pairs[i];
-    var method = pairs[i + 1];
-    component[autoBindKey] = bindAutoBindMethod(
-      component,
-      method
-    );
-  }
-}
-
-/**
- * Add more to the ReactClass base class. These are all legacy features and
- * therefore not already part of the modern ReactComponent.
- */
-var ReactClassMixin = {
-
-  /**
-   * TODO: This will be deprecated because state should always keep a consistent
-   * type signature and the only use case for this, is to avoid that.
-   */
-  replaceState: function(newState, callback) {
-    this.updater.enqueueReplaceState(this, newState);
-    if (callback) {
-      this.updater.enqueueCallback(this, callback, 'replaceState');
-    }
-  },
-
-  /**
-   * Checks whether or not this composite component is mounted.
-   * @return {boolean} True if mounted, false otherwise.
-   * @protected
-   * @final
-   */
-  isMounted: function() {
-    return this.updater.isMounted(this);
-  },
-};
-
-var ReactClassComponent = function() {};
-Object.assign(
-  ReactClassComponent.prototype,
-  ReactComponent.prototype,
-  ReactClassMixin
-);
-
-let didWarnDeprecated = false;
-
-/**
- * Module for creating composite components.
- *
- * @class ReactClass
- */
-var ReactClass = {
-
-  /**
-   * Creates a composite component class given a class specification.
-   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
-   *
-   * @param {object} spec Class specification (which must define `render`).
-   * @return {function} Component constructor function.
-   * @public
-   */
-  createClass: function(spec) {
-    if (__DEV__) {
-      warning(
-        didWarnDeprecated,
-        '%s: React.createClass is deprecated and will be removed in version 16. ' +
-        'Use plain JavaScript classes instead. If you\'re not yet ready to ' +
-        'migrate, create-react-class is available on npm as a ' +
-        'drop-in replacement.',
-        (spec && spec.displayName) || 'A Component',
-      );
-      didWarnDeprecated = true;
-    }
-
-    // To keep our warnings more understandable, we'll use a little hack here to
-    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
-    // unnecessarily identify a class without displayName as 'Constructor'.
-    var Constructor = identity(function(props, context, updater) {
-      // This constructor gets overridden by mocks. The argument is used
-      // by mocks to assert on what gets mounted.
-
-      if (__DEV__) {
-        warning(
-          this instanceof Constructor,
-          'Something is calling a React component directly. Use a factory or ' +
-          'JSX instead. See: https://fb.me/react-legacyfactory'
-        );
-      }
-
-      // Wire up auto-binding
-      if (this.__reactAutoBindPairs.length) {
-        bindAutoBindMethods(this);
-      }
-
-      this.props = props;
-      this.context = context;
-      this.refs = emptyObject;
-      this.updater = updater || ReactNoopUpdateQueue;
-
-      this.state = null;
-
-      // ReactClasses doesn't have constructors. Instead, they use the
-      // getInitialState and componentWillMount methods for initialization.
-
-      var initialState = this.getInitialState ? this.getInitialState() : null;
-      if (__DEV__) {
-        // We allow auto-mocks to proceed as if they're returning null.
-        if (initialState === undefined &&
-            this.getInitialState._isMockFunction) {
-          // This is probably bad practice. Consider warning here and
-          // deprecating this convenience.
-          initialState = null;
-        }
-      }
-      invariant(
-        typeof initialState === 'object' && !Array.isArray(initialState),
-        '%s.getInitialState(): must return an object or null',
-        Constructor.displayName || 'ReactCompositeComponent'
-      );
-
-      this.state = initialState;
-    });
-    Constructor.prototype = new ReactClassComponent();
-    Constructor.prototype.constructor = Constructor;
-    Constructor.prototype.__reactAutoBindPairs = [];
-
-    injectedMixins.forEach(
-      mixSpecIntoComponent.bind(null, Constructor)
-    );
-
-    mixSpecIntoComponent(Constructor, spec);
-
-    // Initialize the defaultProps property after all mixins have been merged.
-    if (Constructor.getDefaultProps) {
-      Constructor.defaultProps = Constructor.getDefaultProps();
-    }
-
-    if (__DEV__) {
-      // This is a tag to indicate that the use of these method names is ok,
-      // since it's used with createClass. If it's not, then it's likely a
-      // mistake so we'll warn you to use the static property, property
-      // initializer or constructor respectively.
-      if (Constructor.getDefaultProps) {
-        Constructor.getDefaultProps.isReactClassApproved = {};
-      }
-      if (Constructor.prototype.getInitialState) {
-        Constructor.prototype.getInitialState.isReactClassApproved = {};
-      }
-    }
-
-    invariant(
-      Constructor.prototype.render,
-      'createClass(...): Class specification must implement a `render` method.'
-    );
-
-    if (__DEV__) {
-      warning(
-        !Constructor.prototype.componentShouldUpdate,
-        '%s has a method called ' +
-        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
-        'The name is phrased as a question because the function is ' +
-        'expected to return a value.',
-        spec.displayName || 'A component'
-      );
-      warning(
-        !Constructor.prototype.componentWillRecieveProps,
-        '%s has a method called ' +
-        'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
-        spec.displayName || 'A component'
-      );
-    }
-
-    // Reduce time spent doing lookups by setting these on the prototype.
-    for (var methodName in ReactClassInterface) {
-      if (!Constructor.prototype[methodName]) {
-        Constructor.prototype[methodName] = null;
-      }
-    }
-
-    return Constructor;
-  },
-
-  injection: {
-    injectMixin: function(mixin) {
-      injectedMixins.push(mixin);
-    },
-  },
-
-};
-
-module.exports = ReactClass;
diff --git a/src/isomorphic/classic/class/__tests__/ReactCreateClass-test.js b/src/isomorphic/classic/class/__tests__/ReactCreateClass-test.js
index 9c1a44ea5..61f4fafa0 100644
--- a/src/isomorphic/classic/class/__tests__/ReactCreateClass-test.js
+++ b/src/isomorphic/classic/class/__tests__/ReactCreateClass-test.js
@@ -13,2 +13,3 @@
 
+var PropTypes;
 var React;
@@ -19,4 +20,4 @@ var createReactClass;
 describe('ReactClass-spec', () => {
-
   beforeEach(() => {
+    PropTypes = require('prop-types');
     React = require('React');
@@ -36,3 +37,3 @@ describe('ReactClass-spec', () => {
     }).toThrowError(
-      'createClass(...): Class specification must implement a `render` method.'
+      'createClass(...): Class specification must implement a `render` method.',
     );
@@ -48,4 +49,3 @@ describe('ReactClass-spec', () => {
 
-    expect(TestComponent.displayName)
-      .toBe('TestComponent');
+    expect(TestComponent.displayName).toBe('TestComponent');
   });
@@ -64,4 +64,3 @@ describe('ReactClass-spec', () => {
     expect(TestComponent.propTypes).toBeDefined();
-    expect(TestComponent.propTypes.value)
-      .toBe(propValidator);
+    expect(TestComponent.propTypes.value).toBe(propValidator);
   });
@@ -82,3 +81,3 @@ describe('ReactClass-spec', () => {
       'Warning: Component: prop type `prop` is invalid; ' +
-      'it must be a function, usually from React.PropTypes.'
+        'it must be a function, usually from React.PropTypes.',
     );
@@ -100,3 +99,3 @@ describe('ReactClass-spec', () => {
       'Warning: Component: context type `prop` is invalid; ' +
-      'it must be a function, usually from React.PropTypes.'
+        'it must be a function, usually from React.PropTypes.',
     );
@@ -118,3 +117,3 @@ describe('ReactClass-spec', () => {
       'Warning: Component: child context type `prop` is invalid; ' +
-      'it must be a function, usually from React.PropTypes.'
+        'it must be a function, usually from React.PropTypes.',
     );
@@ -136,4 +135,4 @@ describe('ReactClass-spec', () => {
       'Warning: A component has a method called componentShouldUpdate(). Did you ' +
-      'mean shouldComponentUpdate()? The name is phrased as a question ' +
-      'because the function is expected to return a value.'
+        'mean shouldComponentUpdate()? The name is phrased as a question ' +
+        'because the function is expected to return a value.',
     );
@@ -152,4 +151,4 @@ describe('ReactClass-spec', () => {
       'Warning: NamedComponent has a method called componentShouldUpdate(). Did you ' +
-      'mean shouldComponentUpdate()? The name is phrased as a question ' +
-      'because the function is expected to return a value.'
+        'mean shouldComponentUpdate()? The name is phrased as a question ' +
+        'because the function is expected to return a value.',
     );
@@ -170,3 +169,3 @@ describe('ReactClass-spec', () => {
       'Warning: A component has a method called componentWillRecieveProps(). Did you ' +
-      'mean componentWillReceiveProps()?'
+        'mean componentWillReceiveProps()?',
     );
@@ -191,5 +190,5 @@ describe('ReactClass-spec', () => {
       'ReactClass: You are attempting to define a reserved property, ' +
-      '`getDefaultProps`, that shouldn\'t be on the "statics" key. Define ' +
-      'it as an instance property instead; it will still be accessible on ' +
-      'the constructor.'
+        '`getDefaultProps`, that shouldn\'t be on the "statics" key. Define ' +
+        'it as an instance property instead; it will still be accessible on ' +
+        'the constructor.',
     );
@@ -204,9 +203,9 @@ describe('ReactClass-spec', () => {
       propTypes: {
-        foo: React.PropTypes.string,
+        foo: PropTypes.string,
       },
       contextTypes: {
-        foo: React.PropTypes.string,
+        foo: PropTypes.string,
       },
       childContextTypes: {
-        foo: React.PropTypes.string,
+        foo: PropTypes.string,
       },
@@ -219,3 +218,3 @@ describe('ReactClass-spec', () => {
       'createClass(...): `mixins` is now a static property and should ' +
-      'be defined inside "statics".'
+        'be defined inside "statics".',
     );
@@ -223,3 +222,3 @@ describe('ReactClass-spec', () => {
       'createClass(...): `propTypes` is now a static property and should ' +
-      'be defined inside "statics".'
+        'be defined inside "statics".',
     );
@@ -227,3 +226,3 @@ describe('ReactClass-spec', () => {
       'createClass(...): `contextTypes` is now a static property and ' +
-      'should be defined inside "statics".'
+        'should be defined inside "statics".',
     );
@@ -231,3 +230,3 @@ describe('ReactClass-spec', () => {
       'createClass(...): `childContextTypes` is now a static property and ' +
-      'should be defined inside "statics".'
+        'should be defined inside "statics".',
     );
@@ -284,3 +283,3 @@ describe('ReactClass-spec', () => {
       contextTypes: {
-        className: React.PropTypes.string,
+        className: PropTypes.string,
       },
@@ -296,3 +295,3 @@ describe('ReactClass-spec', () => {
       childContextTypes: {
-        className: React.PropTypes.string,
+        className: PropTypes.string,
       },
@@ -325,3 +324,3 @@ describe('ReactClass-spec', () => {
       }).toThrowError(
-        'Component.getInitialState(): must return an object or null'
+        'Component.getInitialState(): must return an object or null',
       );
@@ -339,4 +338,4 @@ describe('ReactClass-spec', () => {
     });
-    expect(
-      () => ReactTestUtils.renderIntoDocument(<Component />)
+    expect(() =>
+      ReactTestUtils.renderIntoDocument(<Component />),
     ).not.toThrow();
@@ -356,3 +355,3 @@ describe('ReactClass-spec', () => {
       'Warning: Something is calling a React component directly. Use a ' +
-      'factory or JSX instead. See: https://fb.me/react-legacyfactory'
+        'factory or JSX instead. See: https://fb.me/react-legacyfactory',
     );
@@ -364,3 +363,3 @@ describe('ReactClass-spec', () => {
       getInitialState() {
-        return { step: 0 };
+        return {step: 0};
       },
@@ -369,3 +368,3 @@ describe('ReactClass-spec', () => {
         return <div />;
-      }
+      },
     });
@@ -373,10 +372,6 @@ describe('ReactClass-spec', () => {
     var instance = ReactTestUtils.renderIntoDocument(<Component />);
-    instance.replaceState({ step: 1 }, () => {
+    instance.replaceState({step: 1}, () => {
       ops.push('Callback: ' + instance.state.step);
     });
-    expect(ops).toEqual([
-      'Render: 0',
-      'Render: 1',
-      'Callback: 1',
-    ]);
+    expect(ops).toEqual(['Render: 0', 'Render: 1', 'Callback: 1']);
   });
@@ -416,3 +411,3 @@ describe('ReactClass-spec', () => {
         return <div />;
-      }
+      },
     });
@@ -439,4 +434,4 @@ describe('ReactClass-spec', () => {
       'Warning: MyComponent: isMounted is deprecated. Instead, make sure to ' +
-      'clean up subscriptions and pending requests in componentWillUnmount ' +
-      'to prevent memory leaks.'
+        'clean up subscriptions and pending requests in componentWillUnmount ' +
+        'to prevent memory leaks.',
     );
diff --git a/src/isomorphic/classic/class/__tests__/ReactClass-test.js b/src/isomorphic/classic/class/__tests__/create-react-class-integration-test.js
similarity index 67%
rename from src/isomorphic/classic/class/__tests__/ReactClass-test.js
rename to src/isomorphic/classic/class/__tests__/create-react-class-integration-test.js
index 5f315f0ca..4c89c732a 100644
--- a/src/isomorphic/classic/class/__tests__/ReactClass-test.js
+++ b/src/isomorphic/classic/class/__tests__/create-react-class-integration-test.js
@@ -16,5 +16,5 @@ var ReactDOM;
 var ReactTestUtils;
+var createReactClass;
 
-describe('ReactClass-spec', () => {
-
+describe('create-react-class-integration', () => {
   beforeEach(() => {
@@ -23,23 +23,8 @@ describe('ReactClass-spec', () => {
     ReactTestUtils = require('ReactTestUtils');
-  });
-
-  it('should warn on first call to React.createClass', () => {
-    spyOn(console, 'error');
-    const spec = {
-      displayName: 'MyComponent',
-      render() {
-        return <div />;
-      },
-    };
-    React.createClass(spec);
-    React.createClass(spec);
-    expect(console.error.calls.count()).toEqual(1);
-    expect(console.error.calls.count()).toEqual(1);
-    expect(console.error.calls.argsFor(0)[0]).toBe(
-      'Warning: MyComponent: React.createClass is deprecated and will be removed in ' +
-      'version 16. Use plain JavaScript classes instead. If you\'re not yet ' +
-      'ready to migrate, create-react-class is available on npm as a ' +
-      'drop-in replacement.'
+    var createReactClassFactory = require('create-react-class/factory');
+    createReactClass = createReactClassFactory(
+      React.Component,
+      React.isValidElement,
+      require('ReactNoopUpdateQueue'),
     );
-    console.error.calls.reset();
   });
@@ -48,5 +33,5 @@ describe('ReactClass-spec', () => {
     expect(function() {
-      React.createClass({});
+      createReactClass({});
     }).toThrowError(
-      'createClass(...): Class specification must implement a `render` method.'
+      'createClass(...): Class specification must implement a `render` method.',
     );
@@ -54,16 +39,5 @@ describe('ReactClass-spec', () => {
 
-  it('should copy `displayName` onto the Constructor', () => {
-    var TestComponent = React.createClass({
-      render: function() {
-        return <div />;
-      },
-    });
-
-    expect(TestComponent.displayName)
-      .toBe('TestComponent');
-  });
-
   it('should copy prop types onto the Constructor', () => {
     var propValidator = jest.fn();
-    var TestComponent = React.createClass({
+    var TestComponent = createReactClass({
       propTypes: {
@@ -77,4 +51,3 @@ describe('ReactClass-spec', () => {
     expect(TestComponent.propTypes).toBeDefined();
-    expect(TestComponent.propTypes.value)
-      .toBe(propValidator);
+    expect(TestComponent.propTypes.value).toBe(propValidator);
   });
@@ -83,3 +56,3 @@ describe('ReactClass-spec', () => {
     spyOn(console, 'error');
-    React.createClass({
+    createReactClass({
       displayName: 'Component',
@@ -95,3 +68,3 @@ describe('ReactClass-spec', () => {
       'Warning: Component: prop type `prop` is invalid; ' +
-      'it must be a function, usually from React.PropTypes.'
+        'it must be a function, usually from React.PropTypes.',
     );
@@ -101,3 +74,3 @@ describe('ReactClass-spec', () => {
     spyOn(console, 'error');
-    React.createClass({
+    createReactClass({
       displayName: 'Component',
@@ -113,3 +86,3 @@ describe('ReactClass-spec', () => {
       'Warning: Component: context type `prop` is invalid; ' +
-      'it must be a function, usually from React.PropTypes.'
+        'it must be a function, usually from React.PropTypes.',
     );
@@ -119,3 +92,3 @@ describe('ReactClass-spec', () => {
     spyOn(console, 'error');
-    React.createClass({
+    createReactClass({
       displayName: 'Component',
@@ -131,3 +104,3 @@ describe('ReactClass-spec', () => {
       'Warning: Component: child context type `prop` is invalid; ' +
-      'it must be a function, usually from React.PropTypes.'
+        'it must be a function, usually from React.PropTypes.',
     );
@@ -138,3 +111,3 @@ describe('ReactClass-spec', () => {
 
-    React.createClass({
+    createReactClass({
       componentShouldUpdate: function() {
@@ -149,7 +122,7 @@ describe('ReactClass-spec', () => {
       'Warning: A component has a method called componentShouldUpdate(). Did you ' +
-      'mean shouldComponentUpdate()? The name is phrased as a question ' +
-      'because the function is expected to return a value.'
+        'mean shouldComponentUpdate()? The name is phrased as a question ' +
+        'because the function is expected to return a value.',
     );
 
-    React.createClass({
+    createReactClass({
       displayName: 'NamedComponent',
@@ -165,4 +138,4 @@ describe('ReactClass-spec', () => {
       'Warning: NamedComponent has a method called componentShouldUpdate(). Did you ' +
-      'mean shouldComponentUpdate()? The name is phrased as a question ' +
-      'because the function is expected to return a value.'
+        'mean shouldComponentUpdate()? The name is phrased as a question ' +
+        'because the function is expected to return a value.',
     );
@@ -172,3 +145,3 @@ describe('ReactClass-spec', () => {
     spyOn(console, 'error');
-    React.createClass({
+    createReactClass({
       componentWillRecieveProps: function() {
@@ -183,3 +156,3 @@ describe('ReactClass-spec', () => {
       'Warning: A component has a method called componentWillRecieveProps(). Did you ' +
-      'mean componentWillReceiveProps()?'
+        'mean componentWillReceiveProps()?',
     );
@@ -189,3 +162,3 @@ describe('ReactClass-spec', () => {
     expect(function() {
-      React.createClass({
+      createReactClass({
         statics: {
@@ -204,5 +177,5 @@ describe('ReactClass-spec', () => {
       'ReactClass: You are attempting to define a reserved property, ' +
-      '`getDefaultProps`, that shouldn\'t be on the "statics" key. Define ' +
-      'it as an instance property instead; it will still be accessible on ' +
-      'the constructor.'
+        '`getDefaultProps`, that shouldn\'t be on the "statics" key. Define ' +
+        'it as an instance property instead; it will still be accessible on ' +
+        'the constructor.',
     );
@@ -214,3 +187,3 @@ describe('ReactClass-spec', () => {
     spyOn(console, 'error');
-    React.createClass({
+    createReactClass({
       mixins: [{}],
@@ -232,3 +205,3 @@ describe('ReactClass-spec', () => {
       'createClass(...): `mixins` is now a static property and should ' +
-      'be defined inside "statics".'
+        'be defined inside "statics".',
     );
@@ -236,3 +209,3 @@ describe('ReactClass-spec', () => {
       'createClass(...): `propTypes` is now a static property and should ' +
-      'be defined inside "statics".'
+        'be defined inside "statics".',
     );
@@ -240,3 +213,3 @@ describe('ReactClass-spec', () => {
       'createClass(...): `contextTypes` is now a static property and ' +
-      'should be defined inside "statics".'
+        'should be defined inside "statics".',
     );
@@ -244,3 +217,3 @@ describe('ReactClass-spec', () => {
       'createClass(...): `childContextTypes` is now a static property and ' +
-      'should be defined inside "statics".'
+        'should be defined inside "statics".',
     );
@@ -249,3 +222,3 @@ describe('ReactClass-spec', () => {
   it('should support statics', () => {
-    var Component = React.createClass({
+    var Component = createReactClass({
       statics: {
@@ -279,3 +252,3 @@ describe('ReactClass-spec', () => {
   it('should work with object getInitialState() return values', () => {
-    var Component = React.createClass({
+    var Component = createReactClass({
       getInitialState: function() {
@@ -295,3 +268,3 @@ describe('ReactClass-spec', () => {
   it('renders based on context getInitialState', () => {
-    var Foo = React.createClass({
+    var Foo = createReactClass({
       contextTypes: {
@@ -307,3 +280,3 @@ describe('ReactClass-spec', () => {
 
-    var Outer = React.createClass({
+    var Outer = createReactClass({
       childContextTypes: {
@@ -326,3 +299,3 @@ describe('ReactClass-spec', () => {
     [['an array'], 'a string', 1234].forEach(function(state) {
-      var Component = React.createClass({
+      var Component = createReactClass({
         getInitialState: function() {
@@ -338,3 +311,3 @@ describe('ReactClass-spec', () => {
       }).toThrowError(
-        'Component.getInitialState(): must return an object or null'
+        'Component.getInitialState(): must return an object or null',
       );
@@ -344,3 +317,3 @@ describe('ReactClass-spec', () => {
   it('should work with a null getInitialState() return value', () => {
-    var Component = React.createClass({
+    var Component = createReactClass({
       getInitialState: function() {
@@ -352,4 +325,4 @@ describe('ReactClass-spec', () => {
     });
-    expect(
-      () => ReactTestUtils.renderIntoDocument(<Component />)
+    expect(() =>
+      ReactTestUtils.renderIntoDocument(<Component />),
     ).not.toThrow();
@@ -359,3 +332,3 @@ describe('ReactClass-spec', () => {
     spyOn(console, 'error');
-    var Component = React.createClass({
+    var Component = createReactClass({
       render() {
@@ -369,3 +342,3 @@ describe('ReactClass-spec', () => {
       'Warning: Something is calling a React component directly. Use a ' +
-      'factory or JSX instead. See: https://fb.me/react-legacyfactory'
+        'factory or JSX instead. See: https://fb.me/react-legacyfactory',
     );
@@ -373,2 +346,81 @@ describe('ReactClass-spec', () => {
 
+  it('replaceState and callback works', () => {
+    var ops = [];
+    var Component = createReactClass({
+      getInitialState() {
+        return {step: 0};
+      },
+      render() {
+        ops.push('Render: ' + this.state.step);
+        return <div />;
+      },
+    });
+
+    var instance = ReactTestUtils.renderIntoDocument(<Component />);
+    instance.replaceState({step: 1}, () => {
+      ops.push('Callback: ' + instance.state.step);
+    });
+    expect(ops).toEqual(['Render: 0', 'Render: 1', 'Callback: 1']);
+  });
+
+  it('isMounted works', () => {
+    spyOn(console, 'error');
+
+    var ops = [];
+    var instance;
+    var Component = createReactClass({
+      displayName: 'MyComponent',
+      log(name) {
+        ops.push(`${name}: ${this.isMounted()}`);
+      },
+      getInitialState() {
+        this.log('getInitialState');
+        return {};
+      },
+      componentWillMount() {
+        this.log('componentWillMount');
+      },
+      componentDidMount() {
+        this.log('componentDidMount');
+      },
+      componentWillUpdate() {
+        this.log('componentWillUpdate');
+      },
+      componentDidUpdate() {
+        this.log('componentDidUpdate');
+      },
+      componentWillUnmount() {
+        this.log('componentWillUnmount');
+      },
+      render() {
+        instance = this;
+        this.log('render');
+        return <div />;
+      },
+    });
+
+    var container = document.createElement('div');
+    ReactDOM.render(<Component />, container);
+    ReactDOM.render(<Component />, container);
+    ReactDOM.unmountComponentAtNode(container);
+    instance.log('after unmount');
+    expect(ops).toEqual([
+      'getInitialState: false',
+      'componentWillMount: false',
+      'render: false',
+      'componentDidMount: true',
+      'componentWillUpdate: true',
+      'render: true',
+      'componentDidUpdate: true',
+      'componentWillUnmount: false',
+      'after unmount: false',
+    ]);
+
+    expect(console.error.calls.count()).toBe(1);
+    expect(console.error.calls.argsFor(0)[0]).toEqual(
+      'Warning: MyComponent: isMounted is deprecated. Instead, make sure to ' +
+        'clean up subscriptions and pending requests in componentWillUnmount ' +
+        'to prevent memory leaks.',
+    );
+  });
 });
diff --git a/src/isomorphic/classic/class/createClass.js b/src/isomorphic/classic/class/createClass.js
new file mode 100644
index 000000000..3791e5392
--- /dev/null
+++ b/src/isomorphic/classic/class/createClass.js
@@ -0,0 +1,19 @@
+/**
+ * Copyright 2013-present, Facebook, Inc.
+ * All rights reserved.
+ *
+ * This source code is licensed under the BSD-style license found in the
+ * LICENSE file in the root directory of this source tree. An additional grant
+ * of patent rights can be found in the PATENTS file in the same directory.
+ *
+ * @providesModule createClass
+ */
+
+'use strict';
+
+var {Component} = require('ReactBaseClasses');
+var {isValidElement} = require('ReactElement');
+var ReactNoopUpdateQueue = require('ReactNoopUpdateQueue');
+var factory = require('create-react-class/factory');
+
+module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);
diff --git a/src/isomorphic/classic/element/ReactCurrentOwner.js b/src/isomorphic/classic/element/ReactCurrentOwner.js
index da5786e87..a095fe009 100644
--- a/src/isomorphic/classic/element/ReactCurrentOwner.js
+++ b/src/isomorphic/classic/element/ReactCurrentOwner.js
@@ -14,3 +14,3 @@
 
-import type { ReactInstance } from 'ReactInstanceType';
+import type {ReactInstance} from 'ReactInstanceType';
 
@@ -23,3 +23,2 @@ import type { ReactInstance } from 'ReactInstanceType';
 var ReactCurrentOwner = {
-
   /**
@@ -29,3 +28,2 @@ var ReactCurrentOwner = {
   current: (null: null | ReactInstance),
-
 };
diff --git a/src/isomorphic/classic/element/ReactElement.js b/src/isomorphic/classic/element/ReactElement.js
index 90080c7ff..15ff17764 100644
--- a/src/isomorphic/classic/element/ReactElement.js
+++ b/src/isomorphic/classic/element/ReactElement.js
@@ -61,6 +61,6 @@ function defineKeyPropWarningGetter(props, displayName) {
         '%s: `key` is not a prop. Trying to access it will result ' +
-        'in `undefined` being returned. If you need to access the same ' +
-        'value within the child component, you should pass it as a different ' +
-        'prop. (https://fb.me/react-special-props)',
-        displayName
+          'in `undefined` being returned. If you need to access the same ' +
+          'value within the child component, you should pass it as a different ' +
+          'prop. (https://fb.me/react-special-props)',
+        displayName,
       );
@@ -82,6 +82,6 @@ function defineRefPropWarningGetter(props, displayName) {
         '%s: `ref` is not a prop. Trying to access it will result ' +
-        'in `undefined` being returned. If you need to access the same ' +
-        'value within the child component, you should pass it as a different ' +
-        'prop. (https://fb.me/react-special-props)',
-        displayName
+          'in `undefined` being returned. If you need to access the same ' +
+          'value within the child component, you should pass it as a different ' +
+          'prop. (https://fb.me/react-special-props)',
+        displayName,
       );
@@ -205,4 +205,6 @@ ReactElement.createElement = function(type, config, children) {
     for (propName in config) {
-      if (hasOwnProperty.call(config, propName) &&
-          !RESERVED_PROPS.hasOwnProperty(propName)) {
+      if (
+        hasOwnProperty.call(config, propName) &&
+        !RESERVED_PROPS.hasOwnProperty(propName)
+      ) {
         props[propName] = config[propName];
@@ -241,7 +243,9 @@ ReactElement.createElement = function(type, config, children) {
     if (key || ref) {
-      if (typeof props.$$typeof === 'undefined' ||
-          props.$$typeof !== REACT_ELEMENT_TYPE) {
-        var displayName = typeof type === 'function' ?
-          (type.displayName || type.name || 'Unknown') :
-          type;
+      if (
+        typeof props.$$typeof === 'undefined' ||
+        props.$$typeof !== REACT_ELEMENT_TYPE
+      ) {
+        var displayName = typeof type === 'function'
+          ? type.displayName || type.name || 'Unknown'
+          : type;
         if (key) {
@@ -262,3 +266,3 @@ ReactElement.createElement = function(type, config, children) {
     ReactCurrentOwner.current,
-    props
+    props,
   );
@@ -289,3 +293,3 @@ ReactElement.cloneAndReplaceKey = function(oldElement, newKey) {
     oldElement._owner,
-    oldElement.props
+    oldElement.props,
   );
@@ -334,4 +338,6 @@ ReactElement.cloneElement = function(element, config, children) {
     for (propName in config) {
-      if (hasOwnProperty.call(config, propName) &&
-          !RESERVED_PROPS.hasOwnProperty(propName)) {
+      if (
+        hasOwnProperty.call(config, propName) &&
+        !RESERVED_PROPS.hasOwnProperty(propName)
+      ) {
         if (config[propName] === undefined && defaultProps !== undefined) {
@@ -359,11 +365,3 @@ ReactElement.cloneElement = function(element, config, children) {
 
-  return ReactElement(
-    element.type,
-    key,
-    ref,
-    self,
-    source,
-    owner,
-    props
-  );
+  return ReactElement(element.type, key, ref, self, source, owner, props);
 };
diff --git a/src/isomorphic/classic/element/ReactElementType.js b/src/isomorphic/classic/element/ReactElementType.js
index 9702b0f77..a0d8427b1 100644
--- a/src/isomorphic/classic/element/ReactElementType.js
+++ b/src/isomorphic/classic/element/ReactElementType.js
@@ -14,3 +14,3 @@
 
-import type { ReactInstance } from 'ReactInstanceType';
+import type {ReactInstance} from 'ReactInstanceType';
 
diff --git a/src/isomorphic/classic/element/ReactElementValidator.js b/src/isomorphic/classic/element/ReactElementValidator.js
index 6613aeeb6..17f0332f8 100644
--- a/src/isomorphic/classic/element/ReactElementValidator.js
+++ b/src/isomorphic/classic/element/ReactElementValidator.js
@@ -29,2 +29,3 @@ var getIteratorFn = require('getIteratorFn');
 var warning = require('warning');
+var lowPriorityWarning = require('lowPriorityWarning');
 
@@ -65,4 +66,5 @@ function getCurrentComponentErrorInfo(parentType) {
   if (!info) {
-    var parentName = typeof parentType === 'string' ?
-      parentType : parentType.displayName || parentType.name;
+    var parentName = typeof parentType === 'string'
+      ? parentType
+      : parentType.displayName || parentType.name;
     if (parentName) {
@@ -91,5 +93,4 @@ function validateExplicitKey(element, parentType) {
 
-  var memoizer = ownerHasKeyUseWarning.uniqueKey || (
-    ownerHasKeyUseWarning.uniqueKey = {}
-  );
+  var memoizer =
+    ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
 
@@ -105,8 +106,9 @@ function validateExplicitKey(element, parentType) {
   var childOwner = '';
-  if (element &&
-      element._owner &&
-      element._owner !== ReactCurrentOwner.current) {
+  if (
+    element &&
+    element._owner &&
+    element._owner !== ReactCurrentOwner.current
+  ) {
     // Give the component that originally created this child.
-    childOwner =
-      ` It was passed a child from ${element._owner.getName()}.`;
+    childOwner = ` It was passed a child from ${element._owner.getName()}.`;
   }
@@ -116,6 +118,6 @@ function validateExplicitKey(element, parentType) {
     'Each child in an array or iterator should have a unique "key" prop.' +
-    '%s%s See https://fb.me/react-warning-keys for more information.%s',
+      '%s%s See https://fb.me/react-warning-keys for more information.%s',
     currentComponentErrorInfo,
     childOwner,
-    ReactComponentTreeHook.getCurrentStackAddendum(element)
+    ReactComponentTreeHook.getCurrentStackAddendum(element),
   );
@@ -184,3 +186,3 @@ function validatePropTypes(element) {
       element,
-      null
+      null,
     );
@@ -191,3 +193,3 @@ function validatePropTypes(element) {
       'getDefaultProps is only used on classic React.createClass ' +
-      'definitions. Use a static property named `defaultProps` instead.'
+        'definitions. Use a static property named `defaultProps` instead.',
     );
@@ -197,3 +199,2 @@ function validatePropTypes(element) {
 var ReactElementValidator = {
-
   createElement: function(type, props, children) {
@@ -203,6 +204,3 @@ var ReactElementValidator = {
     if (!validType) {
-      if (
-        typeof type !== 'function' &&
-        typeof type !== 'string'
-      ) {
+      if (typeof type !== 'function' && typeof type !== 'string') {
         var info = '';
@@ -210,5 +208,5 @@ var ReactElementValidator = {
           type === undefined ||
-          typeof type === 'object' &&
-          type !== null &&
-          Object.keys(type).length === 0
+          (typeof type === 'object' &&
+            type !== null &&
+            Object.keys(type).length === 0)
         ) {
@@ -216,3 +214,3 @@ var ReactElementValidator = {
             ' You likely forgot to export your component from the file ' +
-            'it\'s defined in.';
+            "it's defined in.";
         }
@@ -228,2 +226,8 @@ var ReactElementValidator = {
 
+        var currentSource = props !== null &&
+          props !== undefined &&
+          props.__source !== undefined
+          ? props.__source
+          : null;
+        ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);
         warning(
@@ -231,4 +235,4 @@ var ReactElementValidator = {
           'React.createElement: type is invalid -- expected a string (for ' +
-          'built-in components) or a class/function (for composite ' +
-          'components) but got: %s.%s',
+            'built-in components) or a class/function (for composite ' +
+            'components) but got: %s.%s',
           type == null ? type : typeof type,
@@ -236,2 +240,3 @@ var ReactElementValidator = {
         );
+        ReactComponentTreeHook.popNonStandardWarningStack();
       }
@@ -264,6 +269,3 @@ var ReactElementValidator = {
   createFactory: function(type) {
-    var validatedFactory = ReactElementValidator.createElement.bind(
-      null,
-      type
-    );
+    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
     // Legacy hook TODO: Warn if this is accessed
@@ -273,20 +275,16 @@ var ReactElementValidator = {
       if (canDefineProperty) {
-        Object.defineProperty(
-          validatedFactory,
-          'type',
-          {
-            enumerable: false,
-            get: function() {
-              warning(
-                false,
-                'Factory.type is deprecated. Access the class directly ' +
-                'before passing it to createFactory.'
-              );
-              Object.defineProperty(this, 'type', {
-                value: type,
-              });
-              return type;
-            },
-          }
-        );
+        Object.defineProperty(validatedFactory, 'type', {
+          enumerable: false,
+          get: function() {
+            lowPriorityWarning(
+              false,
+              'Factory.type is deprecated. Access the class directly ' +
+                'before passing it to createFactory.',
+            );
+            Object.defineProperty(this, 'type', {
+              value: type,
+            });
+            return type;
+          },
+        });
       }
@@ -294,3 +292,2 @@ var ReactElementValidator = {
 
-
     return validatedFactory;
@@ -306,3 +303,2 @@ var ReactElementValidator = {
   },
-
 };
diff --git a/src/isomorphic/classic/element/__tests__/ReactElement-test.js b/src/isomorphic/classic/element/__tests__/ReactElement-test.js
index cf82a9530..de83b4e91 100644
--- a/src/isomorphic/classic/element/__tests__/ReactElement-test.js
+++ b/src/isomorphic/classic/element/__tests__/ReactElement-test.js
@@ -83,5 +83,5 @@ describe('ReactElement', () => {
       'Child: `key` is not a prop. Trying to access it will result ' +
-      'in `undefined` being returned. If you need to access the same ' +
-      'value within the child component, you should pass it as a different ' +
-      'prop. (https://fb.me/react-special-props)'
+        'in `undefined` being returned. If you need to access the same ' +
+        'value within the child component, you should pass it as a different ' +
+        'prop. (https://fb.me/react-special-props)',
     );
@@ -97,5 +97,5 @@ describe('ReactElement', () => {
       'div: `key` is not a prop. Trying to access it will result ' +
-      'in `undefined` being returned. If you need to access the same ' +
-      'value within the child component, you should pass it as a different ' +
-      'prop. (https://fb.me/react-special-props)'
+        'in `undefined` being returned. If you need to access the same ' +
+        'value within the child component, you should pass it as a different ' +
+        'prop. (https://fb.me/react-special-props)',
     );
@@ -125,5 +125,5 @@ describe('ReactElement', () => {
       'Child: `ref` is not a prop. Trying to access it will result ' +
-      'in `undefined` being returned. If you need to access the same ' +
-      'value within the child component, you should pass it as a different ' +
-      'prop. (https://fb.me/react-special-props)'
+        'in `undefined` being returned. If you need to access the same ' +
+        'value within the child component, you should pass it as a different ' +
+        'prop. (https://fb.me/react-special-props)',
     );
@@ -143,3 +143,3 @@ describe('ReactElement', () => {
     var element = React.createFactory(ComponentClass)();
-    expect(() => element.type = 'div').toThrow();
+    expect(() => (element.type = 'div')).toThrow();
   });
@@ -235,3 +235,3 @@ describe('ReactElement', () => {
     var instance = ReactTestUtils.renderIntoDocument(
-      React.createElement(Wrapper)
+      React.createElement(Wrapper),
     );
@@ -244,5 +244,8 @@ describe('ReactElement', () => {
     var a = 1;
-    var element = React.createFactory(ComponentClass)({
-      children: 'text',
-    }, a);
+    var element = React.createFactory(ComponentClass)(
+      {
+        children: 'text',
+      },
+      a,
+    );
     expect(element.props.children).toBe(a);
@@ -262,5 +265,8 @@ describe('ReactElement', () => {
     spyOn(console, 'error');
-    var element = React.createFactory(ComponentClass)({
-      children: 'text',
-    }, null);
+    var element = React.createFactory(ComponentClass)(
+      {
+        children: 'text',
+      },
+      null,
+    );
     expect(element.props.children).toBe(null);
@@ -305,6 +311,4 @@ describe('ReactElement', () => {
 
-    expect(React.isValidElement(React.createElement('div')))
-      .toEqual(true);
-    expect(React.isValidElement(React.createElement(Component)))
-      .toEqual(true);
+    expect(React.isValidElement(React.createElement('div'))).toEqual(true);
+    expect(React.isValidElement(React.createElement(Component))).toEqual(true);
 
@@ -314,5 +318,5 @@ describe('ReactElement', () => {
     expect(React.isValidElement('string')).toEqual(false);
-    expect(React.isValidElement(React.DOM.div)).toEqual(false);
+    expect(React.isValidElement(React.createFactory('div'))).toEqual(false);
     expect(React.isValidElement(Component)).toEqual(false);
-    expect(React.isValidElement({ type: 'div', props: {} })).toEqual(false);
+    expect(React.isValidElement({type: 'div', props: {}})).toEqual(false);
 
@@ -343,3 +347,3 @@ describe('ReactElement', () => {
       React.createElement(Component, {fruit: 'mango'}),
-      container
+      container,
     );
@@ -362,3 +366,3 @@ describe('ReactElement', () => {
     var instance = ReactTestUtils.renderIntoDocument(
-      React.createElement(Component)
+      React.createElement(Component),
     );
@@ -367,3 +371,3 @@ describe('ReactElement', () => {
     var inst2 = ReactTestUtils.renderIntoDocument(
-      React.createElement(Component, {prop: null})
+      React.createElement(Component, {prop: null}),
     );
@@ -450,6 +454,4 @@ describe('ReactElement', () => {
 
-    expect(React.isValidElement(React.createElement('div')))
-      .toEqual(true);
-    expect(React.isValidElement(React.createElement(Component)))
-      .toEqual(true);
+    expect(React.isValidElement(React.createElement('div'))).toEqual(true);
+    expect(React.isValidElement(React.createElement(Component))).toEqual(true);
 
@@ -459,5 +461,5 @@ describe('ReactElement', () => {
     expect(React.isValidElement('string')).toEqual(false);
-    expect(React.isValidElement(React.DOM.div)).toEqual(false);
+    expect(React.isValidElement(React.createFactory('div'))).toEqual(false);
     expect(React.isValidElement(Component)).toEqual(false);
-    expect(React.isValidElement({ type: 'div', props: {} })).toEqual(false);
+    expect(React.isValidElement({type: 'div', props: {}})).toEqual(false);
 
@@ -466,3 +468,2 @@ describe('ReactElement', () => {
   });
-
 });
@@ -480,3 +481,2 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
 
-
   describe('when using jsx only', () => {
@@ -493,3 +493,3 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
       };
-      instance = ReactTestUtils.renderIntoDocument(<Parent/>);
+      instance = ReactTestUtils.renderIntoDocument(<Parent />);
     });
@@ -497,3 +497,6 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
     it('should scry children but cannot', () => {
-      var children = ReactTestUtils.scryRenderedComponentsWithType(instance, Child);
+      var children = ReactTestUtils.scryRenderedComponentsWithType(
+        instance,
+        Child,
+      );
       expect(children.length).toBe(1);
@@ -506,3 +509,6 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
     it('can capture Child instantiation calls', () => {
-      expect(Child.mock.calls[0][0]).toEqual({ foo: 'foo value', children: 'children value' });
+      expect(Child.mock.calls[0][0]).toEqual({
+        foo: 'foo value',
+        children: 'children value',
+      });
     });
@@ -516,3 +522,7 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
         render() {
-          return React.DOM.div({}, childFactory({ ref: 'child', foo: 'foo value' }, 'children value'));
+          return React.createElement(
+            'div',
+            {},
+            childFactory({ref: 'child', foo: 'foo value'}, 'children value'),
+          );
         }
@@ -524,3 +534,6 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
     it('can properly scry children', () => {
-      var children = ReactTestUtils.scryRenderedComponentsWithType(instance, Child);
+      var children = ReactTestUtils.scryRenderedComponentsWithType(
+        instance,
+        Child,
+      );
       expect(children.length).toBe(1);
@@ -533,3 +546,6 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
     it('can capture Child instantiation calls', () => {
-      expect(Child.mock.calls[0][0]).toEqual({ foo: 'foo value', children: 'children value' });
+      expect(Child.mock.calls[0][0]).toEqual({
+        foo: 'foo value',
+        children: 'children value',
+      });
     });
@@ -542,3 +558,11 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
         render() {
-          return React.DOM.div({}, React.createElement(Child, { ref: 'child', foo: 'foo value' }, 'children value'));
+          return React.createElement(
+            'div',
+            {},
+            React.createElement(
+              Child,
+              {ref: 'child', foo: 'foo value'},
+              'children value',
+            ),
+          );
         }
@@ -550,3 +574,6 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
     it('should scry children but cannot', () => {
-      var children = ReactTestUtils.scryRenderedComponentsWithType(instance, Child);
+      var children = ReactTestUtils.scryRenderedComponentsWithType(
+        instance,
+        Child,
+      );
       expect(children.length).toBe(1);
@@ -559,6 +586,8 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
     it('can capture Child instantiation calls', () => {
-      expect(Child.mock.calls[0][0]).toEqual({ foo: 'foo value', children: 'children value' });
+      expect(Child.mock.calls[0][0]).toEqual({
+        foo: 'foo value',
+        children: 'children value',
+      });
     });
   });
-
 });
diff --git a/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js b/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js
index 69e8984ca..a29bdff98 100644
--- a/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js
+++ b/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js
@@ -13,2 +13,3 @@
 
+var PropTypes;
 var React;
@@ -24,2 +25,3 @@ describe('ReactElementClone', () => {
     ReactTestUtils = require('ReactTestUtils');
+    PropTypes = require('prop-types');
 
@@ -44,3 +46,3 @@ describe('ReactElementClone', () => {
           <div className="parent">
-            {React.cloneElement(this.props.child, { className: 'xyz' })}
+            {React.cloneElement(this.props.child, {className: 'xyz'})}
           </div>
@@ -68,3 +70,3 @@ describe('ReactElementClone', () => {
           <div className="parent">
-            {React.cloneElement(this.props.child, { className: 'xyz' })}
+            {React.cloneElement(this.props.child, {className: 'xyz'})}
           </div>
@@ -93,3 +95,3 @@ describe('ReactElementClone', () => {
           <div>
-            {React.cloneElement(this.props.child, { className: 'xyz' })}
+            {React.cloneElement(this.props.child, {className: 'xyz'})}
           </div>
@@ -122,3 +124,3 @@ describe('ReactElementClone', () => {
     ReactTestUtils.renderIntoDocument(
-      React.cloneElement(<Component />, {children: 'xyz'})
+      React.cloneElement(<Component />, {children: 'xyz'}),
     );
@@ -135,3 +137,3 @@ describe('ReactElementClone', () => {
     ReactTestUtils.renderIntoDocument(
-      React.cloneElement(<Component>xyz</Component>, {})
+      React.cloneElement(<Component>xyz</Component>, {}),
     );
@@ -148,11 +150,8 @@ describe('ReactElementClone', () => {
       <Component>xyz</Component>,
-      { children: <Component /> },
+      {children: <Component />},
       <div />,
-      <span />
+      <span />,
     );
 
-    expect(clone.props.children).toEqual([
-      <div />,
-      <span />,
-    ]);
+    expect(clone.props.children).toEqual([<div />, <span />]);
   });
@@ -160,10 +159,18 @@ describe('ReactElementClone', () => {
   it('should override children if undefined is provided as an argument', () => {
-    var element = React.createElement(ComponentClass, {
-      children: 'text',
-    }, undefined);
+    var element = React.createElement(
+      ComponentClass,
+      {
+        children: 'text',
+      },
+      undefined,
+    );
     expect(element.props.children).toBe(undefined);
 
-    var element2 = React.cloneElement(React.createElement(ComponentClass, {
-      children: 'text',
-    }), {}, undefined);
+    var element2 = React.cloneElement(
+      React.createElement(ComponentClass, {
+        children: 'text',
+      }),
+      {},
+      undefined,
+    );
     expect(element2.props.children).toBe(undefined);
@@ -174,4 +181,6 @@ describe('ReactElementClone', () => {
       render() {
-        var clone =
-          React.cloneElement(this.props.children, {key: 'xyz', ref: 'xyz'});
+        var clone = React.cloneElement(this.props.children, {
+          key: 'xyz',
+          ref: 'xyz',
+        });
         expect(clone.key).toBe('xyz');
@@ -220,3 +229,3 @@ describe('ReactElementClone', () => {
     ReactTestUtils.renderIntoDocument(
-      React.cloneElement(<Component myprop="abc" />, {myprop: 'xyz'})
+      React.cloneElement(<Component myprop="abc" />, {myprop: 'xyz'}),
     );
@@ -252,3 +261,3 @@ describe('ReactElementClone', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Each child in an array or iterator should have a unique "key" prop.'
+      'Each child in an array or iterator should have a unique "key" prop.',
     );
@@ -288,3 +297,3 @@ describe('ReactElementClone', () => {
     Component.propTypes = {
-      color: React.PropTypes.string.isRequired,
+      color: PropTypes.string.isRequired,
     };
@@ -297,6 +306,5 @@ describe('ReactElementClone', () => {
       render() {
-        return React.createElement(
-          Parent,
-          { child: React.createElement(Component, {color: 'red'}) }
-        );
+        return React.createElement(Parent, {
+          child: React.createElement(Component, {color: 'red'}),
+        });
       }
@@ -307,7 +315,7 @@ describe('ReactElementClone', () => {
       'Warning: Failed prop type: ' +
-      'Invalid prop `color` of type `number` supplied to `Component`, ' +
-      'expected `string`.\n' +
-      '    in Component (created by GrandParent)\n' +
-      '    in Parent (created by GrandParent)\n' +
-      '    in GrandParent'
+        'Invalid prop `color` of type `number` supplied to `Component`, ' +
+        'expected `string`.\n' +
+        '    in Component (created by GrandParent)\n' +
+        '    in Parent (created by GrandParent)\n' +
+        '    in GrandParent',
     );
@@ -361,3 +369,2 @@ describe('ReactElementClone', () => {
   });
-
 });
diff --git a/src/isomorphic/classic/element/__tests__/ReactElementValidator-test.js b/src/isomorphic/classic/element/__tests__/ReactElementValidator-test.js
index f2e403c5a..a772395aa 100644
--- a/src/isomorphic/classic/element/__tests__/ReactElementValidator-test.js
+++ b/src/isomorphic/classic/element/__tests__/ReactElementValidator-test.js
@@ -16,2 +16,3 @@
 
+var PropTypes;
 var React;
@@ -33,2 +34,3 @@ describe('ReactElementValidator', () => {
     ReactTestUtils = require('ReactTestUtils');
+    PropTypes = require('prop-types');
     ComponentClass = class extends React.Component {
@@ -48,3 +50,3 @@ describe('ReactElementValidator', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Each child in an array or iterator should have a unique "key" prop.'
+      'Each child in an array or iterator should have a unique "key" prop.',
     );
@@ -66,3 +68,3 @@ describe('ReactElementValidator', () => {
       render() {
-        return InnerComponent({childSet: [Component(), Component()] });
+        return InnerComponent({childSet: [Component(), Component()]});
       }
@@ -70,5 +72,3 @@ describe('ReactElementValidator', () => {
 
-    ReactTestUtils.renderIntoDocument(
-      React.createElement(ComponentWrapper)
-    );
+    ReactTestUtils.renderIntoDocument(React.createElement(ComponentWrapper));
 
@@ -77,4 +77,4 @@ describe('ReactElementValidator', () => {
       'Each child in an array or iterator should have a unique "key" prop. ' +
-      'Check the render method of `InnerClass`. ' +
-      'It was passed a child from ComponentWrapper. '
+        'Check the render method of `InnerClass`. ' +
+        'It was passed a child from ComponentWrapper. ',
     );
@@ -88,8 +88,5 @@ describe('ReactElementValidator', () => {
     }
-    Object.defineProperty(Anonymous, 'name', { value: undefined });
+    Object.defineProperty(Anonymous, 'name', {value: undefined});
 
-    var divs = [
-      <div />,
-      <div />,
-    ];
+    var divs = [<div />, <div />];
     ReactTestUtils.renderIntoDocument(<Anonymous>{divs}</Anonymous>);
@@ -99,4 +96,4 @@ describe('ReactElementValidator', () => {
       'Warning: Each child in an array or iterator should have a unique ' +
-      '"key" prop. See https://fb.me/react-warning-keys for more information.\n' +
-      '    in div (at **)'
+        '"key" prop. See https://fb.me/react-warning-keys for more information.\n' +
+        '    in div (at **)',
     );
@@ -107,6 +104,3 @@ describe('ReactElementValidator', () => {
 
-    var divs = [
-      <div />,
-      <div />,
-    ];
+    var divs = [<div />, <div />];
     ReactTestUtils.renderIntoDocument(<div>{divs}</div>);
@@ -116,5 +110,5 @@ describe('ReactElementValidator', () => {
       'Warning: Each child in an array or iterator should have a unique ' +
-      '"key" prop. Check the top-level render call using <div>. See ' +
-      'https://fb.me/react-warning-keys for more information.\n' +
-      '    in div (at **)'
+        '"key" prop. Check the top-level render call using <div>. See ' +
+        'https://fb.me/react-warning-keys for more information.\n' +
+        '    in div (at **)',
     );
@@ -142,8 +136,8 @@ describe('ReactElementValidator', () => {
       'Warning: Each child in an array or iterator should have a unique ' +
-      '"key" prop. Check the render method of `Component`. See ' +
-      'https://fb.me/react-warning-keys for more information.\n' +
-      '    in div (at **)\n' +
-      '    in Component (at **)\n' +
-      '    in Parent (at **)\n' +
-      '    in GrandParent (at **)'
+        '"key" prop. Check the render method of `Component`. See ' +
+        'https://fb.me/react-warning-keys for more information.\n' +
+        '    in div (at **)\n' +
+        '    in Component (at **)\n' +
+        '    in Parent (at **)\n' +
+        '    in GrandParent (at **)',
     );
@@ -167,3 +161,3 @@ describe('ReactElementValidator', () => {
         <span />
-      </Wrapper>
+      </Wrapper>,
     );
@@ -193,3 +187,3 @@ describe('ReactElementValidator', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Each child in an array or iterator should have a unique "key" prop.'
+      'Each child in an array or iterator should have a unique "key" prop.',
     );
@@ -260,3 +254,3 @@ describe('ReactElementValidator', () => {
     MyComp.propTypes = {
-      color: React.PropTypes.string,
+      color: PropTypes.string,
     };
@@ -268,6 +262,6 @@ describe('ReactElementValidator', () => {
       'Warning: Failed prop type: ' +
-      'Invalid prop `color` of type `number` supplied to `MyComp`, ' +
-      'expected `string`.\n' +
-      '    in MyComp (created by ParentComp)\n' +
-      '    in ParentComp'
+        'Invalid prop `color` of type `number` supplied to `MyComp`, ' +
+        'expected `string`.\n' +
+        '    in MyComp (created by ParentComp)\n' +
+        '    in ParentComp',
     );
@@ -286,5 +280,5 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-      '(for built-in components) or a class/function (for composite ' +
-      'components) but got: undefined. You likely forgot to export your ' +
-      'component from the file it\'s defined in.'
+        '(for built-in components) or a class/function (for composite ' +
+        'components) but got: undefined. You likely forgot to export your ' +
+        "component from the file it's defined in.",
     );
@@ -292,4 +286,4 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-      '(for built-in components) or a class/function (for composite ' +
-      'components) but got: null.'
+        '(for built-in components) or a class/function (for composite ' +
+        'components) but got: null.',
     );
@@ -297,4 +291,4 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-      '(for built-in components) or a class/function (for composite ' +
-      'components) but got: boolean.'
+        '(for built-in components) or a class/function (for composite ' +
+        'components) but got: boolean.',
     );
@@ -302,4 +296,4 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-      '(for built-in components) or a class/function (for composite ' +
-      'components) but got: number.'
+        '(for built-in components) or a class/function (for composite ' +
+        'components) but got: number.',
     );
@@ -307,4 +301,4 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-      '(for built-in components) or a class/function (for composite ' +
-      'components) but got: object.'
+        '(for built-in components) or a class/function (for composite ' +
+        'components) but got: object.',
     );
@@ -312,5 +306,5 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-      '(for built-in components) or a class/function (for composite ' +
-      'components) but got: object. You likely forgot to export your ' +
-      'component from the file it\'s defined in.'
+        '(for built-in components) or a class/function (for composite ' +
+        'components) but got: object. You likely forgot to export your ' +
+        "component from the file it's defined in.",
     );
@@ -329,4 +323,4 @@ describe('ReactElementValidator', () => {
       'Element type is invalid: expected a string (for built-in components) ' +
-      'or a class/function (for composite components) but got: null. Check ' +
-      'the render method of `ParentComp`.'
+        'or a class/function (for composite components) but got: null. Check ' +
+        'the render method of `ParentComp`.',
     );
@@ -335,5 +329,5 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-      '(for built-in components) or a class/function (for composite ' +
-      'components) but got: null. Check the render method of `ParentComp`.' +
-      '\n    in ParentComp'
+        '(for built-in components) or a class/function (for composite ' +
+        'components) but got: null. Check the render method of `ParentComp`.' +
+        '\n    in ParentComp',
     );
@@ -349,3 +343,3 @@ describe('ReactElementValidator', () => {
     }
-    Component.propTypes = {prop: React.PropTypes.string.isRequired};
+    Component.propTypes = {prop: PropTypes.string.isRequired};
     Component.defaultProps = {prop: null};
@@ -357,4 +351,4 @@ describe('ReactElementValidator', () => {
       'Warning: Failed prop type: The prop `prop` is marked as required in ' +
-      '`Component`, but its value is `null`.\n' +
-      '    in Component'
+        '`Component`, but its value is `null`.\n' +
+        '    in Component',
     );
@@ -370,3 +364,3 @@ describe('ReactElementValidator', () => {
     }
-    Component.propTypes = {prop: React.PropTypes.string.isRequired};
+    Component.propTypes = {prop: PropTypes.string.isRequired};
     Component.defaultProps = {prop: 'text'};
@@ -374,3 +368,3 @@ describe('ReactElementValidator', () => {
     ReactTestUtils.renderIntoDocument(
-      React.createElement(Component, {prop:null})
+      React.createElement(Component, {prop: null}),
     );
@@ -380,4 +374,4 @@ describe('ReactElementValidator', () => {
       'Warning: Failed prop type: The prop `prop` is marked as required in ' +
-      '`Component`, but its value is `null`.\n' +
-      '    in Component'
+        '`Component`, but its value is `null`.\n' +
+        '    in Component',
     );
@@ -394,10 +388,8 @@ describe('ReactElementValidator', () => {
     Component.propTypes = {
-      prop: React.PropTypes.string.isRequired,
+      prop: PropTypes.string.isRequired,
     };
 
+    ReactTestUtils.renderIntoDocument(React.createElement(Component));
     ReactTestUtils.renderIntoDocument(
-      React.createElement(Component)
-    );
-    ReactTestUtils.renderIntoDocument(
-      React.createElement(Component, {prop: 42})
+      React.createElement(Component, {prop: 42}),
     );
@@ -407,5 +399,5 @@ describe('ReactElementValidator', () => {
       'Warning: Failed prop type: ' +
-      'The prop `prop` is marked as required in `Component`, but its value ' +
-      'is `undefined`.\n' +
-      '    in Component'
+        'The prop `prop` is marked as required in `Component`, but its value ' +
+        'is `undefined`.\n' +
+        '    in Component',
     );
@@ -414,5 +406,5 @@ describe('ReactElementValidator', () => {
       'Warning: Failed prop type: ' +
-      'Invalid prop `prop` of type `number` supplied to ' +
-      '`Component`, expected `string`.\n' +
-      '    in Component'
+        'Invalid prop `prop` of type `number` supplied to ' +
+        '`Component`, expected `string`.\n' +
+        '    in Component',
     );
@@ -420,3 +412,3 @@ describe('ReactElementValidator', () => {
     ReactTestUtils.renderIntoDocument(
-      React.createElement(Component, {prop: 'string'})
+      React.createElement(Component, {prop: 'string'}),
     );
@@ -433,3 +425,2 @@ describe('ReactElementValidator', () => {
         return React.createElement('span', null, this.props.myProp.value);
-
       }
@@ -437,3 +428,3 @@ describe('ReactElementValidator', () => {
     Component.propTypes = {
-      myProp: React.PropTypes.shape,
+      myProp: PropTypes.shape,
     };
@@ -441,3 +432,3 @@ describe('ReactElementValidator', () => {
     ReactTestUtils.renderIntoDocument(
-      React.createElement(Component, {myProp: {value: 'hi'}})
+      React.createElement(Component, {myProp: {value: 'hi'}}),
     );
@@ -447,6 +438,6 @@ describe('ReactElementValidator', () => {
       'Warning: Component: type specification of prop `myProp` is invalid; ' +
-      'the type checker function must return `null` or an `Error` but ' +
-      'returned a function. You may have forgotten to pass an argument to ' +
-      'the type checker creator (arrayOf, instanceOf, objectOf, oneOf, ' +
-      'oneOfType, and shape all require an argument).'
+        'the type checker function must return `null` or an `Error` but ' +
+        'returned a function. You may have forgotten to pass an argument to ' +
+        'the type checker creator (arrayOf, instanceOf, objectOf, oneOf, ' +
+        'oneOfType, and shape all require an argument).',
     );
@@ -455,3 +446,3 @@ describe('ReactElementValidator', () => {
   it('should warn when accessing .type on an element factory', () => {
-    spyOn(console, 'error');
+    spyOn(console, 'warn');
     function TestComponent() {
@@ -461,6 +452,6 @@ describe('ReactElementValidator', () => {
     expect(TestFactory.type).toBe(TestComponent);
-    expect(console.error.calls.count()).toBe(1);
-    expect(console.error.calls.argsFor(0)[0]).toBe(
+    expect(console.warn.calls.count()).toBe(1);
+    expect(console.warn.calls.argsFor(0)[0]).toBe(
       'Warning: Factory.type is deprecated. Access the class directly before ' +
-      'passing it to createFactory.'
+        'passing it to createFactory.',
     );
@@ -468,3 +459,3 @@ describe('ReactElementValidator', () => {
     expect(TestFactory.type).toBe(TestComponent);
-    expect(console.error.calls.count()).toBe(1);
+    expect(console.warn.calls.count()).toBe(1);
   });
@@ -513,3 +504,3 @@ describe('ReactElementValidator', () => {
     var child = {
-      $$typeof: (<div />).$$typeof,
+      $$typeof: <div />.$$typeof,
       type: 'span',
@@ -531,5 +522,5 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-      '(for built-in components) or a class/function (for composite ' +
-      'components) but got: undefined. You likely forgot to export your ' +
-      'component from the file it\'s defined in. Check your code at **.'
+        '(for built-in components) or a class/function (for composite ' +
+        'components) but got: undefined. You likely forgot to export your ' +
+        "component from the file it's defined in. Check your code at **.",
     );
@@ -537,2 +528,52 @@ describe('ReactElementValidator', () => {
 
+  it('provides stack via non-standard console.reactStack for invalid types', () => {
+    spyOn(console, 'error');
+
+    function Foo() {
+      var Bad = undefined;
+      return React.createElement(Bad);
+    }
+
+    function App() {
+      return React.createElement('div', null, React.createElement(Foo));
+    }
+
+    try {
+      console.reactStack = jest.fn();
+      console.reactStackEnd = jest.fn();
+
+      expect(() => {
+        ReactTestUtils.renderIntoDocument(React.createElement(App));
+      }).toThrow(
+        'Element type is invalid: expected a string (for built-in components) ' +
+          'or a class/function (for composite components) but got: undefined. ' +
+          "You likely forgot to export your component from the file it's " +
+          'defined in. Check the render method of `Foo`.',
+      );
+
+      expect(console.reactStack.mock.calls.length).toBe(1);
+      expect(console.reactStackEnd.mock.calls.length).toBe(1);
+
+      var stack = console.reactStack.mock.calls[0][0];
+      expect(Array.isArray(stack)).toBe(true);
+      expect(stack.map(frame => frame.name)).toEqual([
+        'Foo', // <Bad> is inside Foo
+        'App', // <Foo> is inside App
+        'App', // <div> is inside App
+        null, // <App> is outside a component
+      ]);
+      expect(
+        stack.map(frame => frame.fileName && frame.fileName.slice(-8)),
+      ).toEqual([null, null, null, null]);
+      expect(stack.map(frame => frame.lineNumber)).toEqual([
+        null,
+        null,
+        null,
+        null,
+      ]);
+    } finally {
+      delete console.reactStack;
+      delete console.reactStackEnd;
+    }
+  });
 });
diff --git a/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js b/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js
index 26cb0fa20..092d2b6f8 100644
--- a/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js
+++ b/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js
@@ -30,3 +30,3 @@ function typeCheckFail(declaration, value, message) {
     null,
-    ReactPropTypesSecret
+    ReactPropTypesSecret,
   );
@@ -37,6 +37,8 @@ function typeCheckFail(declaration, value, message) {
 function typeCheckFailRequiredValues(declaration) {
-  var specifiedButIsNullMsg = 'The prop `testProp` is marked as required in ' +
+  var specifiedButIsNullMsg =
+    'The prop `testProp` is marked as required in ' +
     '`testComponent`, but its value is `null`.';
-  var unspecifiedMsg = 'The prop `testProp` is marked as required in ' +
-    '`testComponent`, but its value is \`undefined\`.';
+  var unspecifiedMsg =
+    'The prop `testProp` is marked as required in ' +
+    '`testComponent`, but its value is `undefined`.';
   var props1 = {testProp: null};
@@ -48,3 +50,3 @@ function typeCheckFailRequiredValues(declaration) {
     null,
-    ReactPropTypesSecret
+    ReactPropTypesSecret,
   );
@@ -59,3 +61,3 @@ function typeCheckFailRequiredValues(declaration) {
     null,
-    ReactPropTypesSecret
+    ReactPropTypesSecret,
   );
@@ -70,3 +72,3 @@ function typeCheckFailRequiredValues(declaration) {
     null,
-    ReactPropTypesSecret
+    ReactPropTypesSecret,
   );
@@ -84,3 +86,3 @@ function typeCheckPass(declaration, value) {
     null,
-    ReactPropTypesSecret
+    ReactPropTypesSecret,
   );
@@ -94,8 +96,3 @@ function expectWarningInDevelopment(declaration, value) {
   for (var i = 0; i < 3; i++) {
-    declaration(
-      props,
-      propName,
-      componentName,
-      'prop'
-    );
+    declaration(props, propName, componentName, 'prop');
   }
@@ -103,3 +100,3 @@ function expectWarningInDevelopment(declaration, value) {
   expect(console.error.calls.argsFor(0)[0]).toContain(
-    'You are manually calling a React.PropTypes validation '
+    'You are manually calling a React.PropTypes validation ',
   );
@@ -123,3 +120,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `array` supplied to ' +
-        '`testComponent`, expected `string`.'
+          '`testComponent`, expected `string`.',
       );
@@ -129,3 +126,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `boolean` supplied to ' +
-        '`testComponent`, expected `string`.'
+          '`testComponent`, expected `string`.',
       );
@@ -135,3 +132,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `number` supplied to ' +
-        '`testComponent`, expected `string`.'
+          '`testComponent`, expected `string`.',
       );
@@ -141,3 +138,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `object` supplied to ' +
-        '`testComponent`, expected `string`.'
+          '`testComponent`, expected `string`.',
       );
@@ -147,3 +144,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `symbol` supplied to ' +
-        '`testComponent`, expected `string`.'
+          '`testComponent`, expected `string`.',
       );
@@ -156,3 +153,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `date` supplied to ' +
-        '`testComponent`, expected `string`.'
+          '`testComponent`, expected `string`.',
       );
@@ -162,3 +159,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `regexp` supplied to ' +
-        '`testComponent`, expected `string`.'
+          '`testComponent`, expected `string`.',
       );
@@ -262,5 +259,5 @@ describe('ReactPropTypes', () => {
       typeCheckFail(
-        PropTypes.arrayOf({ foo: PropTypes.string }),
-        { foo: 'bar' },
-        'Property `testProp` of component `testComponent` has invalid PropType notation inside arrayOf.'
+        PropTypes.arrayOf({foo: PropTypes.string}),
+        {foo: 'bar'},
+        'Property `testProp` of component `testComponent` has invalid PropType notation inside arrayOf.',
       );
@@ -278,3 +275,3 @@ describe('ReactPropTypes', () => {
         PropTypes.arrayOf(PropTypes.shape({a: PropTypes.number.isRequired})),
-        [{a: 1}, {a: 2}]
+        [{a: 1}, {a: 2}],
       );
@@ -282,6 +279,6 @@ describe('ReactPropTypes', () => {
       function Thing() {}
-      typeCheckPass(
-        PropTypes.arrayOf(PropTypes.instanceOf(Thing)),
-        [new Thing(), new Thing()]
-      );
+      typeCheckPass(PropTypes.arrayOf(PropTypes.instanceOf(Thing)), [
+        new Thing(),
+        new Thing(),
+      ]);
     });
@@ -293,3 +290,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp[2]` of type `string` supplied to ' +
-        '`testComponent`, expected `number`.'
+          '`testComponent`, expected `number`.',
       );
@@ -305,3 +302,5 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp[1]` of type `String` supplied to ' +
-        '`testComponent`, expected instance of `' + name + '`.'
+          '`testComponent`, expected instance of `' +
+          name +
+          '`.',
       );
@@ -314,3 +313,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `object` supplied to ' +
-        '`testComponent`, expected an array.'
+          '`testComponent`, expected an array.',
       );
@@ -320,3 +319,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `number` supplied to ' +
-        '`testComponent`, expected an array.'
+          '`testComponent`, expected an array.',
       );
@@ -326,3 +325,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `string` supplied to ' +
-        '`testComponent`, expected an array.'
+          '`testComponent`, expected an array.',
       );
@@ -341,3 +340,3 @@ describe('ReactPropTypes', () => {
       typeCheckFailRequiredValues(
-        PropTypes.arrayOf(PropTypes.number).isRequired
+        PropTypes.arrayOf(PropTypes.number).isRequired,
       );
@@ -347,16 +346,22 @@ describe('ReactPropTypes', () => {
       spyOn(console, 'error');
+      expectWarningInDevelopment(PropTypes.arrayOf({foo: PropTypes.string}), {
+        foo: 'bar',
+      });
+      expectWarningInDevelopment(PropTypes.arrayOf(PropTypes.number), [
+        1,
+        2,
+        'b',
+      ]);
+      expectWarningInDevelopment(PropTypes.arrayOf(PropTypes.number), {
+        '0': 'maybe-array',
+        length: 1,
+      });
       expectWarningInDevelopment(
-      PropTypes.arrayOf({ foo: PropTypes.string }),
-        { foo: 'bar' }
+        PropTypes.arrayOf(PropTypes.number).isRequired,
+        null,
       );
       expectWarningInDevelopment(
-        PropTypes.arrayOf(PropTypes.number),
-        [1, 2, 'b']
+        PropTypes.arrayOf(PropTypes.number).isRequired,
+        undefined,
       );
-      expectWarningInDevelopment(
-        PropTypes.arrayOf(PropTypes.number),
-        {'0': 'maybe-array', length: 1}
-      );
-      expectWarningInDevelopment(PropTypes.arrayOf(PropTypes.number).isRequired, null);
-      expectWarningInDevelopment(PropTypes.arrayOf(PropTypes.number).isRequired, undefined);
     });
@@ -386,3 +391,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `array` supplied to `testComponent`, ' +
-        'expected a single ReactElement.'
+          'expected a single ReactElement.',
       );
@@ -392,3 +397,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `number` supplied to `testComponent`, ' +
-        'expected a single ReactElement.'
+          'expected a single ReactElement.',
       );
@@ -398,3 +403,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `string` supplied to `testComponent`, ' +
-        'expected a single ReactElement.'
+          'expected a single ReactElement.',
       );
@@ -404,3 +409,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `boolean` supplied to `testComponent`, ' +
-        'expected a single ReactElement.'
+          'expected a single ReactElement.',
       );
@@ -445,3 +450,2 @@ describe('ReactPropTypes', () => {
     });
-
   });
@@ -460,3 +464,5 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `Boolean` supplied to ' +
-        '`testComponent`, expected instance of `' + personName + '`.'
+          '`testComponent`, expected instance of `' +
+          personName +
+          '`.',
       );
@@ -466,3 +472,5 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `Object` supplied to ' +
-        '`testComponent`, expected instance of `' + personName + '`.'
+          '`testComponent`, expected instance of `' +
+          personName +
+          '`.',
       );
@@ -472,3 +480,5 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `String` supplied to ' +
-        '`testComponent`, expected instance of `' + personName + '`.'
+          '`testComponent`, expected instance of `' +
+          personName +
+          '`.',
       );
@@ -478,3 +488,5 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `Object` supplied to ' +
-        '`testComponent`, expected instance of `' + dateName + '`.'
+          '`testComponent`, expected instance of `' +
+          dateName +
+          '`.',
       );
@@ -484,3 +496,5 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `Object` supplied to ' +
-        '`testComponent`, expected instance of `' + regExpName + '`.'
+          '`testComponent`, expected instance of `' +
+          regExpName +
+          '`.',
       );
@@ -490,3 +504,5 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `Cat` supplied to ' +
-        '`testComponent`, expected instance of `' + personName + '`.'
+          '`testComponent`, expected instance of `' +
+          personName +
+          '`.',
       );
@@ -496,3 +512,5 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `<<anonymous>>` supplied to ' +
-        '`testComponent`, expected instance of `' + personName + '`.'
+          '`testComponent`, expected instance of `' +
+          personName +
+          '`.',
       );
@@ -526,5 +544,7 @@ describe('ReactPropTypes', () => {
       expectWarningInDevelopment(PropTypes.instanceOf(Date).isRequired, {});
-      expectWarningInDevelopment(PropTypes.instanceOf(Date).isRequired, new Date());
+      expectWarningInDevelopment(
+        PropTypes.instanceOf(Date).isRequired,
+        new Date(),
+      );
     });
-
   });
@@ -541,3 +561,4 @@ describe('ReactPropTypes', () => {
     it('should warn for invalid values', () => {
-      var failMessage = 'Invalid prop `testProp` supplied to ' +
+      var failMessage =
+        'Invalid prop `testProp` supplied to ' +
         '`testComponent`, expected a ReactNode.';
@@ -567,14 +588,17 @@ describe('ReactPropTypes', () => {
       var frag = ReactFragment.create;
-      typeCheckPass(PropTypes.node, frag({
-        k0: 123,
-        k1: 'Some string',
-        k2: <div />,
-        k3: frag({
-          k30: <MyComponent />,
-          k31: frag({k310: <a />}),
-          k32: 'Another string',
+      typeCheckPass(
+        PropTypes.node,
+        frag({
+          k0: 123,
+          k1: 'Some string',
+          k2: <div />,
+          k3: frag({
+            k30: <MyComponent />,
+            k31: frag({k310: <a />}),
+            k32: 'Another string',
+          }),
+          k4: null,
+          k5: undefined,
         }),
-        k4: null,
-        k5: undefined,
-      }));
+      );
       expect(console.error.calls.count()).toBe(0);
@@ -605,3 +629,6 @@ describe('ReactPropTypes', () => {
               var done = ++i > 2;
-              return {value: done ? undefined : ['#' + i, <MyComponent />], done: done};
+              return {
+                value: done ? undefined : ['#' + i, <MyComponent />],
+                done: done,
+              };
             },
@@ -636,3 +663,2 @@ describe('ReactPropTypes', () => {
     });
-
   });
@@ -642,5 +668,5 @@ describe('ReactPropTypes', () => {
       typeCheckFail(
-        PropTypes.objectOf({ foo: PropTypes.string }),
-        { foo: 'bar' },
-        'Property `testProp` of component `testComponent` has invalid PropType notation inside objectOf.'
+        PropTypes.objectOf({foo: PropTypes.string}),
+        {foo: 'bar'},
+        'Property `testProp` of component `testComponent` has invalid PropType notation inside objectOf.',
       );
@@ -650,14 +676,16 @@ describe('ReactPropTypes', () => {
       typeCheckPass(PropTypes.objectOf(PropTypes.number), {a: 1, b: 2, c: 3});
-      typeCheckPass(
-        PropTypes.objectOf(PropTypes.string),
-        {a: 'a', b: 'b', c: 'c'}
-      );
-      typeCheckPass(
-        PropTypes.objectOf(PropTypes.oneOf(['a', 'b'])),
-        {a: 'a', b: 'b'}
-      );
-      typeCheckPass(
-        PropTypes.objectOf(PropTypes.symbol),
-        {a: Symbol(), b: Symbol(), c: Symbol()}
-      );
+      typeCheckPass(PropTypes.objectOf(PropTypes.string), {
+        a: 'a',
+        b: 'b',
+        c: 'c',
+      });
+      typeCheckPass(PropTypes.objectOf(PropTypes.oneOf(['a', 'b'])), {
+        a: 'a',
+        b: 'b',
+      });
+      typeCheckPass(PropTypes.objectOf(PropTypes.symbol), {
+        a: Symbol(),
+        b: Symbol(),
+        c: Symbol(),
+      });
     });
@@ -667,3 +695,3 @@ describe('ReactPropTypes', () => {
         PropTypes.objectOf(PropTypes.shape({a: PropTypes.number.isRequired})),
-        {a: {a: 1}, b: {a: 2}}
+        {a: {a: 1}, b: {a: 2}},
       );
@@ -671,6 +699,6 @@ describe('ReactPropTypes', () => {
       function Thing() {}
-      typeCheckPass(
-        PropTypes.objectOf(PropTypes.instanceOf(Thing)),
-        {a: new Thing(), b: new Thing()}
-      );
+      typeCheckPass(PropTypes.objectOf(PropTypes.instanceOf(Thing)), {
+        a: new Thing(),
+        b: new Thing(),
+      });
     });
@@ -682,3 +710,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp.c` of type `string` supplied to `testComponent`, ' +
-        'expected `number`.'
+          'expected `number`.',
       );
@@ -694,3 +722,5 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp.b` of type `String` supplied to ' +
-        '`testComponent`, expected instance of `' + name + '`.'
+          '`testComponent`, expected instance of `' +
+          name +
+          '`.',
       );
@@ -703,3 +733,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `array` supplied to ' +
-        '`testComponent`, expected an object.'
+          '`testComponent`, expected an object.',
       );
@@ -709,3 +739,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `number` supplied to ' +
-        '`testComponent`, expected an object.'
+          '`testComponent`, expected an object.',
       );
@@ -715,3 +745,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `string` supplied to ' +
-        '`testComponent`, expected an object.'
+          '`testComponent`, expected an object.',
       );
@@ -721,3 +751,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `symbol` supplied to ' +
-        '`testComponent`, expected an object.'
+          '`testComponent`, expected an object.',
       );
@@ -736,3 +766,3 @@ describe('ReactPropTypes', () => {
       typeCheckFailRequiredValues(
-        PropTypes.objectOf(PropTypes.number).isRequired
+        PropTypes.objectOf(PropTypes.number).isRequired,
       );
@@ -742,13 +772,16 @@ describe('ReactPropTypes', () => {
       spyOn(console, 'error');
-      expectWarningInDevelopment(
-        PropTypes.objectOf({ foo: PropTypes.string }),
-        { foo: 'bar' }
-      );
+      expectWarningInDevelopment(PropTypes.objectOf({foo: PropTypes.string}), {
+        foo: 'bar',
+      });
+      expectWarningInDevelopment(PropTypes.objectOf(PropTypes.number), {
+        a: 1,
+        b: 2,
+        c: 'b',
+      });
+      expectWarningInDevelopment(PropTypes.objectOf(PropTypes.number), [1, 2]);
+      expectWarningInDevelopment(PropTypes.objectOf(PropTypes.number), null);
       expectWarningInDevelopment(
         PropTypes.objectOf(PropTypes.number),
-        {a: 1, b: 2, c: 'b'}
+        undefined,
       );
-      expectWarningInDevelopment(PropTypes.objectOf(PropTypes.number), [1, 2]);
-      expectWarningInDevelopment(PropTypes.objectOf(PropTypes.number), null);
-      expectWarningInDevelopment(PropTypes.objectOf(PropTypes.number), undefined);
     });
@@ -763,4 +796,5 @@ describe('ReactPropTypes', () => {
       expect(console.error).toHaveBeenCalled();
-      expect(console.error.calls.argsFor(0)[0])
-        .toContain('Invalid argument supplied to oneOf, expected an instance of array.');
+      expect(console.error.calls.argsFor(0)[0]).toContain(
+        'Invalid argument supplied to oneOf, expected an instance of array.',
+      );
 
@@ -774,3 +808,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of value `true` supplied to ' +
-        '`testComponent`, expected one of ["red","blue"].'
+          '`testComponent`, expected one of ["red","blue"].',
       );
@@ -780,3 +814,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of value `` supplied to `testComponent`, ' +
-        'expected one of ["red","blue"].'
+          'expected one of ["red","blue"].',
       );
@@ -786,3 +820,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of value `` supplied to `testComponent`, ' +
-        'expected one of ["red","blue"].'
+          'expected one of ["red","blue"].',
       );
@@ -792,3 +826,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of value `false` supplied to ' +
-        '`testComponent`, expected one of [0,"false"].'
+          '`testComponent`, expected one of [0,"false"].',
       );
@@ -826,4 +860,5 @@ describe('ReactPropTypes', () => {
       expect(console.error).toHaveBeenCalled();
-      expect(console.error.calls.argsFor(0)[0])
-        .toContain('Invalid argument supplied to oneOfType, expected an instance of array.');
+      expect(console.error.calls.argsFor(0)[0]).toContain(
+        'Invalid argument supplied to oneOfType, expected an instance of array.',
+      );
 
@@ -836,3 +871,3 @@ describe('ReactPropTypes', () => {
         [],
-        'Invalid prop `testProp` supplied to `testComponent`.'
+        'Invalid prop `testProp` supplied to `testComponent`.',
       );
@@ -846,3 +881,3 @@ describe('ReactPropTypes', () => {
         {c: 1},
-        'Invalid prop `testProp` supplied to `testComponent`.'
+        'Invalid prop `testProp` supplied to `testComponent`.',
       );
@@ -851,6 +886,3 @@ describe('ReactPropTypes', () => {
     it('should not warn if one of the types are valid', () => {
-      var checker = PropTypes.oneOfType([
-        PropTypes.string,
-        PropTypes.number,
-      ]);
+      var checker = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);
       typeCheckPass(checker, null);
@@ -869,6 +901,8 @@ describe('ReactPropTypes', () => {
       typeCheckPass(
-        PropTypes.oneOfType([PropTypes.string, PropTypes.number]), null
+        PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+        null,
       );
       typeCheckPass(
-        PropTypes.oneOfType([PropTypes.string, PropTypes.number]), undefined
+        PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+        undefined,
       );
@@ -878,3 +912,3 @@ describe('ReactPropTypes', () => {
       typeCheckFailRequiredValues(
-        PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired
+        PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
       );
@@ -886,3 +920,3 @@ describe('ReactPropTypes', () => {
         PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-        []
+        [],
       );
@@ -890,3 +924,3 @@ describe('ReactPropTypes', () => {
         PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-        null
+        null,
       );
@@ -894,6 +928,5 @@ describe('ReactPropTypes', () => {
         PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-        undefined
+        undefined,
       );
     });
-
   });
@@ -906,3 +939,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `string` supplied to ' +
-        '`testComponent`, expected `object`.'
+          '`testComponent`, expected `object`.',
       );
@@ -912,3 +945,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `array` supplied to ' +
-        '`testComponent`, expected `object`.'
+          '`testComponent`, expected `object`.',
       );
@@ -939,3 +972,3 @@ describe('ReactPropTypes', () => {
         'The prop `testProp.key` is marked as required in `testComponent`, ' +
-          'but its value is `undefined`.'
+          'but its value is `undefined`.',
       );
@@ -951,3 +984,3 @@ describe('ReactPropTypes', () => {
         'The prop `testProp.key` is marked as required in `testComponent`, ' +
-          'but its value is `undefined`.'
+          'but its value is `undefined`.',
       );
@@ -956,6 +989,7 @@ describe('ReactPropTypes', () => {
     it('should warn for invalid key types', () => {
-      typeCheckFail(PropTypes.shape({key: PropTypes.number}),
+      typeCheckFail(
+        PropTypes.shape({key: PropTypes.number}),
         {key: 'abc'},
         'Invalid prop `testProp.key` of type `string` supplied to `testComponent`, ' +
-        'expected `number`.'
+          'expected `number`.',
       );
@@ -965,6 +999,8 @@ describe('ReactPropTypes', () => {
       typeCheckPass(
-        PropTypes.shape(PropTypes.shape({key: PropTypes.number})), null
+        PropTypes.shape(PropTypes.shape({key: PropTypes.number})),
+        null,
       );
       typeCheckPass(
-        PropTypes.shape(PropTypes.shape({key: PropTypes.number})), undefined
+        PropTypes.shape(PropTypes.shape({key: PropTypes.number})),
+        undefined,
       );
@@ -974,3 +1010,3 @@ describe('ReactPropTypes', () => {
       typeCheckFailRequiredValues(
-        PropTypes.shape({key: PropTypes.number}).isRequired
+        PropTypes.shape({key: PropTypes.number}).isRequired,
       );
@@ -981,6 +1017,8 @@ describe('ReactPropTypes', () => {
       expectWarningInDevelopment(PropTypes.shape({}), 'some string');
-      expectWarningInDevelopment(PropTypes.shape({ foo: PropTypes.number }), { foo: 42 });
+      expectWarningInDevelopment(PropTypes.shape({foo: PropTypes.number}), {
+        foo: 42,
+      });
       expectWarningInDevelopment(
         PropTypes.shape({key: PropTypes.number}).isRequired,
-        null
+        null,
       );
@@ -988,3 +1026,3 @@ describe('ReactPropTypes', () => {
         PropTypes.shape({key: PropTypes.number}).isRequired,
-        undefined
+        undefined,
       );
@@ -1000,3 +1038,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `string` supplied to ' +
-        '`testComponent`, expected `symbol`.'
+          '`testComponent`, expected `symbol`.',
       );
@@ -1004,5 +1042,5 @@ describe('ReactPropTypes', () => {
         PropTypes.symbol,
-        function() { },
+        function() {},
         'Invalid prop `testProp` of type `function` supplied to ' +
-        '`testComponent`, expected `symbol`.'
+          '`testComponent`, expected `symbol`.',
       );
@@ -1014,3 +1052,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `object` supplied to ' +
-        '`testComponent`, expected `symbol`.'
+          '`testComponent`, expected `symbol`.',
       );
@@ -1063,6 +1101,7 @@ describe('ReactPropTypes', () => {
 
-    it('should have received the validator\'s return value', () => {
+    it("should have received the validator's return value", () => {
       spyOn(console, 'error');
-      var spy = jasmine.createSpy().and.callFake(
-        function(props, propName, componentName) {
+      var spy = jasmine
+        .createSpy()
+        .and.callFake(function(props, propName, componentName) {
           if (props[propName] !== 5) {
@@ -1070,4 +1109,3 @@ describe('ReactPropTypes', () => {
           }
-        }
-      );
+        });
       Component = class extends React.Component {
@@ -1084,6 +1122,6 @@ describe('ReactPropTypes', () => {
       expect(
-        console.error.calls.argsFor(0)[0].replace(/\(at .+?:\d+\)/g, '(at **)')
+        console.error.calls.argsFor(0)[0].replace(/\(at .+?:\d+\)/g, '(at **)'),
       ).toBe(
         'Warning: Failed prop type: num must be 5!\n' +
-        '    in Component (at **)'
+          '    in Component (at **)',
       );
@@ -1091,23 +1129,21 @@ describe('ReactPropTypes', () => {
 
-    it('should not warn if the validator returned null',
-      () => {
-        spyOn(console, 'error');
-        var spy = jasmine.createSpy().and.callFake(
-          function(props, propName, componentName) {
-            return null;
-          }
-        );
-        Component = class extends React.Component {
-          static propTypes = {num: spy};
+    it('should not warn if the validator returned null', () => {
+      spyOn(console, 'error');
+      var spy = jasmine
+        .createSpy()
+        .and.callFake(function(props, propName, componentName) {
+          return null;
+        });
+      Component = class extends React.Component {
+        static propTypes = {num: spy};
 
-          render() {
-            return <div />;
-          }
-        };
+        render() {
+          return <div />;
+        }
+      };
 
-        var instance = <Component num={5} />;
-        ReactTestUtils.renderIntoDocument(instance);
-        expect(console.error.calls.count()).toBe(0);
-      }
-    );
+      var instance = <Component num={5} />;
+      ReactTestUtils.renderIntoDocument(instance);
+      expect(console.error.calls.count()).toBe(0);
+    });
   });
diff --git a/src/isomorphic/hooks/ReactComponentTreeHook.js b/src/isomorphic/hooks/ReactComponentTreeHook.js
index fd778f753..6ff41657a 100644
--- a/src/isomorphic/hooks/ReactComponentTreeHook.js
+++ b/src/isomorphic/hooks/ReactComponentTreeHook.js
@@ -19,4 +19,4 @@ var warning = require('warning');
 
-import type { ReactElement, Source } from 'ReactElementType';
-import type { DebugID } from 'ReactInstanceType';
+import type {ReactElement, Source} from 'ReactElementType';
+import type {DebugID} from 'ReactInstanceType';
 
@@ -26,12 +26,15 @@ function isNative(fn) {
   var hasOwnProperty = Object.prototype.hasOwnProperty;
-  var reIsNative = RegExp('^' + funcToString
-    // Take an example native function source for comparison
-    .call(hasOwnProperty)
-    // Strip regex characters so we can use it for regex
-    .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
-    // Remove hasOwnProperty from the template to make it generic
-    .replace(
-      /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
-      '$1.*?'
-    ) + '$'
+  var reIsNative = RegExp(
+    '^' +
+      funcToString
+        // Take an example native function source for comparison
+        .call(hasOwnProperty)
+        // Strip regex characters so we can use it for regex
+        .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
+        // Remove hasOwnProperty from the template to make it generic
+        .replace(
+          /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
+          '$1.*?',
+        ) +
+      '$',
   );
@@ -45,3 +48,3 @@ function isNative(fn) {
 
-var canUseCollections = (
+var canUseCollections =
   // Array.from
@@ -61,4 +64,3 @@ var canUseCollections = (
   typeof Set.prototype.keys === 'function' &&
-  isNative(Set.prototype.keys)
-);
+  isNative(Set.prototype.keys);
 
@@ -98,3 +100,2 @@ if (canUseCollections) {
   };
-
 } else {
@@ -153,9 +154,12 @@ function purgeDeep(id) {
 function describeComponentFrame(name, source, ownerName) {
-  return '\n    in ' + (name || 'Unknown') + (
-    source ?
-      ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' +
-      source.lineNumber + ')' :
-    ownerName ?
-      ' (created by ' + ownerName + ')' :
-      ''
+  return (
+    '\n    in ' +
+    (name || 'Unknown') +
+    (source
+      ? ' (at ' +
+          source.fileName.replace(/^.*[\\\/]/, '') +
+          ':' +
+          source.lineNumber +
+          ')'
+      : ownerName ? ' (created by ' + ownerName + ')' : '')
   );
@@ -186,4 +190,4 @@ function describeID(id: DebugID): string {
     'ReactComponentTreeHook: Missing React element for debugID %s when ' +
-    'building stack',
-    id
+      'building stack',
+    id,
   );
@@ -204,3 +208,3 @@ var ReactComponentTreeHook = {
         'Expected hook events to fire for the child ' +
-        'before its parent includes it in onSetChildren().'
+          'before its parent includes it in onSetChildren().',
       );
@@ -208,6 +212,6 @@ var ReactComponentTreeHook = {
         nextChild.childIDs != null ||
-        typeof nextChild.element !== 'object' ||
-        nextChild.element == null,
+          typeof nextChild.element !== 'object' ||
+          nextChild.element == null,
         'Expected onSetChildren() to fire for a container child ' +
-        'before its parent includes it in onSetChildren().'
+          'before its parent includes it in onSetChildren().',
       );
@@ -216,3 +220,3 @@ var ReactComponentTreeHook = {
         'Expected onMountComponent() to fire for the child ' +
-        'before its parent includes it in onSetChildren().'
+          'before its parent includes it in onSetChildren().',
       );
@@ -227,6 +231,6 @@ var ReactComponentTreeHook = {
         'Expected onBeforeMountComponent() parent and onSetChildren() to ' +
-        'be consistent (%s has parents %s and %s).',
+          'be consistent (%s has parents %s and %s).',
         nextChildID,
         nextChild.parentID,
-        id
+        id,
       );
@@ -235,3 +239,7 @@ var ReactComponentTreeHook = {
 
-  onBeforeMountComponent(id: DebugID, element: ReactElement, parentID: DebugID): void {
+  onBeforeMountComponent(
+    id: DebugID,
+    element: ReactElement,
+    parentID: DebugID,
+  ): void {
     var item = {
@@ -320,3 +328,3 @@ var ReactComponentTreeHook = {
         topElement._source,
-        owner && owner.getName()
+        owner && owner.getName(),
       );
@@ -396,2 +404,53 @@ var ReactComponentTreeHook = {
   getRegisteredIDs: getItemIDs,
+
+  pushNonStandardWarningStack(
+    isCreatingElement: boolean,
+    currentSource: ?Source,
+  ) {
+    if (typeof console.reactStack !== 'function') {
+      return;
+    }
+
+    var stack = [];
+    var currentOwner = ReactCurrentOwner.current;
+    var id = currentOwner && currentOwner._debugID;
+
+    try {
+      if (isCreatingElement) {
+        stack.push({
+          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
+          fileName: currentSource ? currentSource.fileName : null,
+          lineNumber: currentSource ? currentSource.lineNumber : null,
+        });
+      }
+
+      while (id) {
+        var element = ReactComponentTreeHook.getElement(id);
+        var parentID = ReactComponentTreeHook.getParentID(id);
+        var ownerID = ReactComponentTreeHook.getOwnerID(id);
+        var ownerName = ownerID
+          ? ReactComponentTreeHook.getDisplayName(ownerID)
+          : null;
+        var source = element && element._source;
+        stack.push({
+          name: ownerName,
+          fileName: source ? source.fileName : null,
+          lineNumber: source ? source.lineNumber : null,
+        });
+        id = parentID;
+      }
+    } catch (err) {
+      // Internal state is messed up.
+      // Stop building the stack (it's just a nice to have).
+    }
+
+    console.reactStack(stack);
+  },
+
+  popNonStandardWarningStack() {
+    if (typeof console.reactStackEnd !== 'function') {
+      return;
+    }
+    console.reactStackEnd();
+  },
 };
diff --git a/src/isomorphic/modern/class/PropTypes.d.ts b/src/isomorphic/modern/class/PropTypes.d.ts
new file mode 100644
index 000000000..a8802e66f
--- /dev/null
+++ b/src/isomorphic/modern/class/PropTypes.d.ts
@@ -0,0 +1,19 @@
+/*!
+ * Copyright 2015-present, Facebook, Inc.
+ * All rights reserved.
+ *
+ * This source code is licensed under the BSD-style license found in the
+ * LICENSE file in the root directory of this source tree. An additional grant
+ * of patent rights can be found in the PATENTS file in the same directory.
+ */
+
+/**
+ * TypeScript Definition File for React.
+ *
+ * Full type definitions are not yet officially supported. These are mostly
+ * just helpers for the unit test.
+ */
+
+declare module 'prop-types' {
+  export var string : any;
+}
diff --git a/src/isomorphic/modern/class/ReactComponent.js b/src/isomorphic/modern/class/ReactBaseClasses.js
similarity index 76%
rename from src/isomorphic/modern/class/ReactComponent.js
rename to src/isomorphic/modern/class/ReactBaseClasses.js
index b93da63e9..ed8d31e9b 100644
--- a/src/isomorphic/modern/class/ReactComponent.js
+++ b/src/isomorphic/modern/class/ReactBaseClasses.js
@@ -8,3 +8,3 @@
  *
- * @providesModule ReactComponent
+ * @providesModule ReactBaseClasses
  */
@@ -18,3 +18,3 @@ var emptyObject = require('emptyObject');
 var invariant = require('invariant');
-var warning = require('warning');
+var lowPriorityWarning = require('lowPriorityWarning');
 
@@ -62,6 +62,6 @@ ReactComponent.prototype.setState = function(partialState, callback) {
     typeof partialState === 'object' ||
-    typeof partialState === 'function' ||
-    partialState == null,
+      typeof partialState === 'function' ||
+      partialState == null,
     'setState(...): takes an object of state variables to update or a ' +
-    'function which returns an object of state variables.'
+      'function which returns an object of state variables.',
   );
@@ -104,3 +104,3 @@ if (__DEV__) {
       'Instead, make sure to clean up subscriptions and pending requests in ' +
-      'componentWillUnmount to prevent memory leaks.',
+        'componentWillUnmount to prevent memory leaks.',
     ],
@@ -109,3 +109,3 @@ if (__DEV__) {
       'Refactor your code to use setState instead (see ' +
-      'https://github.com/facebook/react/issues/3236).',
+        'https://github.com/facebook/react/issues/3236).',
     ],
@@ -116,3 +116,3 @@ if (__DEV__) {
         get: function() {
-          warning(
+          lowPriorityWarning(
             false,
@@ -120,3 +120,3 @@ if (__DEV__) {
             info[0],
-            info[1]
+            info[1],
           );
@@ -134,2 +134,26 @@ if (__DEV__) {
 
-module.exports = ReactComponent;
+/**
+ * Base class helpers for the updating state of a component.
+ */
+function ReactPureComponent(props, context, updater) {
+  // Duplicated from ReactComponent.
+  this.props = props;
+  this.context = context;
+  this.refs = emptyObject;
+  // We initialize the default updater but the real one gets injected by the
+  // renderer.
+  this.updater = updater || ReactNoopUpdateQueue;
+}
+
+function ComponentDummy() {}
+ComponentDummy.prototype = ReactComponent.prototype;
+ReactPureComponent.prototype = new ComponentDummy();
+ReactPureComponent.prototype.constructor = ReactPureComponent;
+// Avoid an extra prototype jump for these methods.
+Object.assign(ReactPureComponent.prototype, ReactComponent.prototype);
+ReactPureComponent.prototype.isPureReactComponent = true;
+
+module.exports = {
+  Component: ReactComponent,
+  PureComponent: ReactPureComponent,
+};
diff --git a/src/isomorphic/modern/class/ReactNoopUpdateQueue.js b/src/isomorphic/modern/class/ReactNoopUpdateQueue.js
index 49d4c7266..c9e03b723 100644
--- a/src/isomorphic/modern/class/ReactNoopUpdateQueue.js
+++ b/src/isomorphic/modern/class/ReactNoopUpdateQueue.js
@@ -21,7 +21,8 @@ function warnNoop(publicInstance, callerName) {
       '%s(...): Can only update a mounted or mounting component. ' +
-      'This usually means you called %s() on an unmounted component. ' +
-      'This is a no-op. Please check the code for the %s component.',
+        'This usually means you called %s() on an unmounted component. ' +
+        'This is a no-op. Please check the code for the %s component.',
       callerName,
       callerName,
-      constructor && (constructor.displayName || constructor.name) || 'ReactClass'
+      (constructor && (constructor.displayName || constructor.name)) ||
+        'ReactClass',
     );
@@ -34,3 +35,2 @@ function warnNoop(publicInstance, callerName) {
 var ReactNoopUpdateQueue = {
-
   /**
@@ -54,3 +54,3 @@ var ReactNoopUpdateQueue = {
    */
-  enqueueCallback: function(publicInstance, callback) { },
+  enqueueCallback: function(publicInstance, callback) {},
 
diff --git a/src/isomorphic/modern/class/ReactPureComponent.js b/src/isomorphic/modern/class/ReactPureComponent.js
deleted file mode 100644
index b4a808864..000000000
--- a/src/isomorphic/modern/class/ReactPureComponent.js
+++ /dev/null
@@ -1,40 +0,0 @@
-/**
- * Copyright 2013-present, Facebook, Inc.
- * All rights reserved.
- *
- * This source code is licensed under the BSD-style license found in the
- * LICENSE file in the root directory of this source tree. An additional grant
- * of patent rights can be found in the PATENTS file in the same directory.
- *
- * @providesModule ReactPureComponent
- */
-
-'use strict';
-
-var ReactComponent = require('ReactComponent');
-var ReactNoopUpdateQueue = require('ReactNoopUpdateQueue');
-
-var emptyObject = require('emptyObject');
-
-/**
- * Base class helpers for the updating state of a component.
- */
-function ReactPureComponent(props, context, updater) {
-  // Duplicated from ReactComponent.
-  this.props = props;
-  this.context = context;
-  this.refs = emptyObject;
-  // We initialize the default updater but the real one gets injected by the
-  // renderer.
-  this.updater = updater || ReactNoopUpdateQueue;
-}
-
-function ComponentDummy() {}
-ComponentDummy.prototype = ReactComponent.prototype;
-ReactPureComponent.prototype = new ComponentDummy();
-ReactPureComponent.prototype.constructor = ReactPureComponent;
-// Avoid an extra prototype jump for these methods.
-Object.assign(ReactPureComponent.prototype, ReactComponent.prototype);
-ReactPureComponent.prototype.isPureReactComponent = true;
-
-module.exports = ReactPureComponent;
diff --git a/src/isomorphic/modern/class/__tests__/ReactClassEquivalence-test.js b/src/isomorphic/modern/class/__tests__/ReactClassEquivalence-test.js
index b78a2edab..bfa6c3b21 100644
--- a/src/isomorphic/modern/class/__tests__/ReactClassEquivalence-test.js
+++ b/src/isomorphic/modern/class/__tests__/ReactClassEquivalence-test.js
@@ -28,3 +28,2 @@ describe('ReactClassEquivalence', () => {
   });
-
 });
@@ -37,10 +36,9 @@ function runJest(testFile) {
     'jest',
-    'setupSpecEquivalenceReporter.js'
+    'setupSpecEquivalenceReporter.js',
+  );
+  var result = spawnSync(
+    'node',
+    [jestBin, testFile, '--setupTestFrameworkScriptFile', setupFile],
+    {cwd},
   );
-  var result = spawnSync('node', [
-    jestBin,
-    testFile,
-    '--setupTestFrameworkScriptFile',
-    setupFile,
-  ], {cwd});
 
@@ -53,8 +51,8 @@ function runJest(testFile) {
       'jest process exited with: ' +
-      result.status +
-      '\n' +
-      'stdout: ' +
-      result.stdout.toString() +
-      'stderr: ' +
-      result.stderr.toString()
+        result.status +
+        '\n' +
+        'stdout: ' +
+        result.stdout.toString() +
+        'stderr: ' +
+        result.stderr.toString(),
     );
diff --git a/src/isomorphic/modern/class/__tests__/ReactCoffeeScriptClass-test.coffee b/src/isomorphic/modern/class/__tests__/ReactCoffeeScriptClass-test.coffee
index de03d875b..23661be18 100644
--- a/src/isomorphic/modern/class/__tests__/ReactCoffeeScriptClass-test.coffee
+++ b/src/isomorphic/modern/class/__tests__/ReactCoffeeScriptClass-test.coffee
@@ -9,2 +9,3 @@ of patent rights can be found in the PATENTS file in the same directory.
 
+PropTypes = null
 React = null
@@ -23,2 +24,3 @@ describe 'ReactCoffeeScriptClass', ->
     ReactDOM = require 'ReactDOM'
+    PropTypes = require 'prop-types'
     container = document.createElement 'div'
@@ -104,4 +106,4 @@ describe 'ReactCoffeeScriptClass', ->
       @contextTypes:
-        tag: React.PropTypes.string
-        className: React.PropTypes.string
+        tag: PropTypes.string
+        className: PropTypes.string
 
@@ -120,4 +122,4 @@ describe 'ReactCoffeeScriptClass', ->
       @childContextTypes:
-        tag: React.PropTypes.string
-        className: React.PropTypes.string
+        tag: PropTypes.string
+        className: PropTypes.string
 
@@ -378,3 +380,3 @@ describe 'ReactCoffeeScriptClass', ->
   it 'should throw AND warn when trying to access classic APIs', ->
-    spyOn console, 'error'
+    spyOn console, 'warn'
     instance =
@@ -383,7 +385,7 @@ describe 'ReactCoffeeScriptClass', ->
     expect(-> instance.isMounted()).toThrow()
-    expect(console.error.calls.count()).toBe 2
-    expect(console.error.calls.argsFor(0)[0]).toContain(
+    expect(console.warn.calls.count()).toBe 2
+    expect(console.warn.calls.argsFor(0)[0]).toContain(
       'replaceState(...) is deprecated in plain JavaScript React classes'
     )
-    expect(console.error.calls.argsFor(1)[0]).toContain(
+    expect(console.warn.calls.argsFor(1)[0]).toContain(
       'isMounted(...) is deprecated in plain JavaScript React classes'
@@ -395,3 +397,3 @@ describe 'ReactCoffeeScriptClass', ->
       @contextTypes:
-        bar: React.PropTypes.string
+        bar: PropTypes.string
       render: ->
@@ -401,3 +403,3 @@ describe 'ReactCoffeeScriptClass', ->
       @childContextTypes:
-        bar: React.PropTypes.string
+        bar: PropTypes.string
       getChildContext: ->
diff --git a/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js b/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js
index ca3408915..ee63a7af7 100644
--- a/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js
+++ b/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js
@@ -13,2 +13,3 @@
 
+var PropTypes;
 var React;
@@ -17,3 +18,2 @@ var ReactDOM;
 describe('ReactES6Class', () => {
-
   var container;
@@ -30,2 +30,3 @@ describe('ReactES6Class', () => {
     ReactDOM = require('ReactDOM');
+    PropTypes = require('prop-types');
     container = document.createElement('div');
@@ -54,3 +55,3 @@ describe('ReactES6Class', () => {
   it('preserves the name of the class for use in error messages', () => {
-    class Foo extends React.Component { }
+    class Foo extends React.Component {}
     expect(Foo.name).toBe('Foo');
@@ -60,3 +61,3 @@ describe('ReactES6Class', () => {
     spyOn(console, 'error');
-    class Foo extends React.Component { }
+    class Foo extends React.Component {}
     expect(() => ReactDOM.render(<Foo />, container)).toThrow();
@@ -66,3 +67,3 @@ describe('ReactES6Class', () => {
       'Warning: Foo(...): No `render` method found on the returned component ' +
-      'instance: you may have forgotten to define `render`.'
+        'instance: you may have forgotten to define `render`.',
     );
@@ -126,4 +127,4 @@ describe('ReactES6Class', () => {
     Foo.contextTypes = {
-      tag: React.PropTypes.string,
-      className: React.PropTypes.string,
+      tag: PropTypes.string,
+      className: PropTypes.string,
     };
@@ -139,4 +140,4 @@ describe('ReactES6Class', () => {
     Outer.childContextTypes = {
-      tag: React.PropTypes.string,
-      className: React.PropTypes.string,
+      tag: PropTypes.string,
+      className: PropTypes.string,
     };
@@ -176,3 +177,3 @@ describe('ReactES6Class', () => {
       expect(() => test(<Foo />, 'span', '')).toThrowError(
-        'Foo.state: must be set to an object or null'
+        'Foo.state: must be set to an object or null',
       );
@@ -205,6 +206,3 @@ describe('ReactES6Class', () => {
         return (
-          <Inner
-            name={this.state.bar}
-            onClick={this.handleClick.bind(this)}
-          />
+          <Inner name={this.state.bar} onClick={this.handleClick.bind(this)} />
         );
@@ -227,8 +225,3 @@ describe('ReactES6Class', () => {
       render() {
-        return (
-          <Inner
-            name={this.state.bar}
-            onClick={this.handleClick}
-          />
-        );
+        return <Inner name={this.state.bar} onClick={this.handleClick} />;
       }
@@ -297,6 +290,3 @@ describe('ReactES6Class', () => {
     test(<Foo value="foo" />, 'SPAN', 'foo');
-    expect(lifeCycles).toEqual([
-      'will-mount',
-      'did-mount',
-    ]);
+    expect(lifeCycles).toEqual(['will-mount', 'did-mount']);
     lifeCycles = []; // reset
@@ -304,6 +294,13 @@ describe('ReactES6Class', () => {
     expect(lifeCycles).toEqual([
-      'receive-props', freeze({value: 'bar'}),
-      'should-update', freeze({value: 'bar'}), {},
-      'will-update', freeze({value: 'bar'}), {},
-      'did-update', freeze({value: 'foo'}), {},
+      'receive-props',
+      freeze({value: 'bar'}),
+      'should-update',
+      freeze({value: 'bar'}),
+      {},
+      'will-update',
+      freeze({value: 'bar'}),
+      {},
+      'did-update',
+      freeze({value: 'foo'}),
+      {},
     ]);
@@ -311,5 +308,3 @@ describe('ReactES6Class', () => {
     ReactDOM.unmountComponentAtNode(container);
-    expect(lifeCycles).toEqual([
-      'will-unmount',
-    ]);
+    expect(lifeCycles).toEqual(['will-unmount']);
   });
@@ -343,12 +338,12 @@ describe('ReactES6Class', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'getInitialState was defined on Foo, a plain JavaScript class.'
+      'getInitialState was defined on Foo, a plain JavaScript class.',
     );
     expect(console.error.calls.argsFor(1)[0]).toContain(
-      'getDefaultProps was defined on Foo, a plain JavaScript class.'
+      'getDefaultProps was defined on Foo, a plain JavaScript class.',
     );
     expect(console.error.calls.argsFor(2)[0]).toContain(
-      'propTypes was defined as an instance property on Foo.'
+      'propTypes was defined as an instance property on Foo.',
     );
     expect(console.error.calls.argsFor(3)[0]).toContain(
-      'contextTypes was defined as an instance property on Foo.'
+      'contextTypes was defined as an instance property on Foo.',
     );
@@ -387,5 +382,5 @@ describe('ReactES6Class', () => {
       'Warning: ' +
-      'NamedComponent has a method called componentShouldUpdate(). Did you ' +
-      'mean shouldComponentUpdate()? The name is phrased as a question ' +
-      'because the function is expected to return a value.'
+        'NamedComponent has a method called componentShouldUpdate(). Did you ' +
+        'mean shouldComponentUpdate()? The name is phrased as a question ' +
+        'because the function is expected to return a value.',
     );
@@ -409,4 +404,4 @@ describe('ReactES6Class', () => {
       'Warning: ' +
-      'NamedComponent has a method called componentWillRecieveProps(). Did ' +
-      'you mean componentWillReceiveProps()?'
+        'NamedComponent has a method called componentWillRecieveProps(). Did ' +
+        'you mean componentWillReceiveProps()?',
     );
@@ -415,3 +410,3 @@ describe('ReactES6Class', () => {
   it('should throw AND warn when trying to access classic APIs', () => {
-    spyOn(console, 'error');
+    spyOn(console, 'warn');
     var instance = test(<Inner name="foo" />, 'DIV', 'foo');
@@ -419,8 +414,8 @@ describe('ReactES6Class', () => {
     expect(() => instance.isMounted()).toThrow();
-    expect(console.error.calls.count()).toBe(2);
-    expect(console.error.calls.argsFor(0)[0]).toContain(
-      'replaceState(...) is deprecated in plain JavaScript React classes'
+    expect(console.warn.calls.count()).toBe(2);
+    expect(console.warn.calls.argsFor(0)[0]).toContain(
+      'replaceState(...) is deprecated in plain JavaScript React classes',
     );
-    expect(console.error.calls.argsFor(1)[0]).toContain(
-      'isMounted(...) is deprecated in plain JavaScript React classes'
+    expect(console.warn.calls.argsFor(1)[0]).toContain(
+      'isMounted(...) is deprecated in plain JavaScript React classes',
     );
@@ -434,3 +429,3 @@ describe('ReactES6Class', () => {
     }
-    Bar.contextTypes = {bar: React.PropTypes.string};
+    Bar.contextTypes = {bar: PropTypes.string};
     class Foo extends React.Component {
@@ -443,3 +438,3 @@ describe('ReactES6Class', () => {
     }
-    Foo.childContextTypes = {bar: React.PropTypes.string};
+    Foo.childContextTypes = {bar: PropTypes.string};
     test(<Foo />, 'DIV', 'bar-through-context');
@@ -462,3 +457,2 @@ describe('ReactES6Class', () => {
   });
-
 });
diff --git a/src/isomorphic/modern/class/__tests__/ReactPureComponent-test.js b/src/isomorphic/modern/class/__tests__/ReactPureComponent-test.js
index 1235a1ea8..0cf7f751a 100644
--- a/src/isomorphic/modern/class/__tests__/ReactPureComponent-test.js
+++ b/src/isomorphic/modern/class/__tests__/ReactPureComponent-test.js
@@ -95,3 +95,2 @@ describe('ReactPureComponent', () => {
   });
-
 });
diff --git a/src/isomorphic/modern/class/__tests__/ReactTypeScriptClass-test.ts b/src/isomorphic/modern/class/__tests__/ReactTypeScriptClass-test.ts
index 6ef95ccaa..d7de7469d 100644
--- a/src/isomorphic/modern/class/__tests__/ReactTypeScriptClass-test.ts
+++ b/src/isomorphic/modern/class/__tests__/ReactTypeScriptClass-test.ts
@@ -1 +1,2 @@
+/// <reference path="../PropTypes.d.ts" />
 /// <reference path="../React.d.ts" />
@@ -14,2 +15,3 @@ import React = require('React');
 import ReactDOM = require('ReactDOM');
+import PropTypes = require('prop-types');
 
@@ -87,4 +89,4 @@ class StateBasedOnContext extends React.Component {
   static contextTypes = {
-    tag: React.PropTypes.string,
-    className: React.PropTypes.string
+    tag: PropTypes.string,
+    className: PropTypes.string
   };
@@ -102,4 +104,4 @@ class ProvideChildContextTypes extends React.Component {
   static childContextTypes = {
-    tag: React.PropTypes.string,
-    className: React.PropTypes.string
+    tag: PropTypes.string,
+    className: PropTypes.string
   };
@@ -280,3 +282,3 @@ class MisspelledComponent2 extends React.Component {
 class ReadContext extends React.Component {
-  static contextTypes = { bar: React.PropTypes.string };
+  static contextTypes = { bar: PropTypes.string };
   render() {
@@ -286,3 +288,3 @@ class ReadContext extends React.Component {
 class ProvideContext extends React.Component {
-  static childContextTypes = { bar: React.PropTypes.string };
+  static childContextTypes = { bar: PropTypes.string };
   getChildContext() {
@@ -502,3 +504,3 @@ describe('ReactTypeScriptClass', function() {
   it('should throw AND warn when trying to access classic APIs', function() {
-    spyOn(console, 'error');
+    spyOn(console, 'warn');
     var instance = test(
@@ -509,7 +511,7 @@ describe('ReactTypeScriptClass', function() {
     expect(() => instance.isMounted()).toThrow();
-    expect((<any>console.error).calls.count()).toBe(2);
-    expect((<any>console.error).calls.argsFor(0)[0]).toContain(
+    expect((<any>console.warn).calls.count()).toBe(2);
+    expect((<any>console.warn).calls.argsFor(0)[0]).toContain(
       'replaceState(...) is deprecated in plain JavaScript React classes'
     );
-    expect((<any>console.error).calls.argsFor(1)[0]).toContain(
+    expect((<any>console.warn).calls.argsFor(1)[0]).toContain(
       'isMounted(...) is deprecated in plain JavaScript React classes'
diff --git a/src/isomorphic/modern/element/__tests__/ReactJSXElement-test.js b/src/isomorphic/modern/element/__tests__/ReactJSXElement-test.js
index 1b897494f..fc494b436 100644
--- a/src/isomorphic/modern/element/__tests__/ReactJSXElement-test.js
+++ b/src/isomorphic/modern/element/__tests__/ReactJSXElement-test.js
@@ -66,3 +66,3 @@ describe('ReactJSXElement', () => {
     var element = <Component />;
-    expect(() => element.type = 'div').toThrow();
+    expect(() => (element.type = 'div')).toThrow();
   });
@@ -82,3 +82,3 @@ describe('ReactJSXElement', () => {
     expect(element.ref).toBe('34');
-    var expectation = {foo:'56'};
+    var expectation = {foo: '56'};
     Object.freeze(expectation);
@@ -92,3 +92,3 @@ describe('ReactJSXElement', () => {
     expect(element.ref).toBe(null);
-    var expectation = {foo:'56'};
+    var expectation = {foo: '56'};
     Object.freeze(expectation);
@@ -126,3 +126,3 @@ describe('ReactJSXElement', () => {
       {},
-      undefined
+      undefined,
     );
@@ -167,3 +167,3 @@ describe('ReactJSXElement', () => {
     expect(React.isValidElement(Component)).toEqual(false);
-    expect(React.isValidElement({ type: 'div', props: {} })).toEqual(false);
+    expect(React.isValidElement({type: 'div', props: {}})).toEqual(false);
   });
@@ -180,6 +180,3 @@ describe('ReactJSXElement', () => {
     var container = document.createElement('div');
-    var instance = ReactDOM.render(
-      <Component fruit="mango" />,
-      container
-    );
+    var instance = ReactDOM.render(<Component fruit="mango" />, container);
     expect(instance.props.fruit).toBe('mango');
@@ -201,7 +198,7 @@ describe('ReactJSXElement', () => {
 
-    var inst2 =
-      ReactTestUtils.renderIntoDocument(<NormalizingComponent prop={null} />);
+    var inst2 = ReactTestUtils.renderIntoDocument(
+      <NormalizingComponent prop={null} />,
+    );
     expect(inst2.props.prop).toBe(null);
   });
-
 });
diff --git a/src/isomorphic/modern/element/__tests__/ReactJSXElementValidator-test.js b/src/isomorphic/modern/element/__tests__/ReactJSXElementValidator-test.js
index 5bb44c694..0502161aa 100644
--- a/src/isomorphic/modern/element/__tests__/ReactJSXElementValidator-test.js
+++ b/src/isomorphic/modern/element/__tests__/ReactJSXElementValidator-test.js
@@ -16,2 +16,3 @@
 
+var PropTypes;
 var React;
@@ -34,2 +35,3 @@ describe('ReactJSXElementValidator', () => {
     ReactTestUtils = require('ReactTestUtils');
+    PropTypes = require('prop-types');
 
@@ -47,3 +49,3 @@ describe('ReactJSXElementValidator', () => {
     RequiredPropComponent.displayName = 'RequiredPropComponent';
-    RequiredPropComponent.propTypes = {prop: React.PropTypes.string.isRequired};
+    RequiredPropComponent.propTypes = {prop: PropTypes.string.isRequired};
   });
@@ -57,3 +59,3 @@ describe('ReactJSXElementValidator', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Each child in an array or iterator should have a unique "key" prop.'
+      'Each child in an array or iterator should have a unique "key" prop.',
     );
@@ -72,7 +74,3 @@ describe('ReactJSXElementValidator', () => {
       render() {
-        return (
-          <InnerComponent
-            childSet={[<Component />, <Component />]}
-          />
-        );
+        return <InnerComponent childSet={[<Component />, <Component />]} />;
       }
@@ -85,4 +83,4 @@ describe('ReactJSXElementValidator', () => {
       'Each child in an array or iterator should have a unique "key" prop. ' +
-      'Check the render method of `InnerComponent`. ' +
-      'It was passed a child from ComponentWrapper. '
+        'Check the render method of `InnerComponent`. ' +
+        'It was passed a child from ComponentWrapper. ',
     );
@@ -109,3 +107,3 @@ describe('ReactJSXElementValidator', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Each child in an array or iterator should have a unique "key" prop.'
+      'Each child in an array or iterator should have a unique "key" prop.',
     );
@@ -116,3 +114,5 @@ describe('ReactJSXElementValidator', () => {
 
-    void <Component>{[<Component key="#1" />, <Component key="#2" />]}</Component>;
+    void (
+      <Component>{[<Component key="#1" />, <Component key="#2" />]}</Component>
+    );
 
@@ -195,3 +195,3 @@ describe('ReactJSXElementValidator', () => {
     MyComp.propTypes = {
-      color: React.PropTypes.string,
+      color: PropTypes.string,
     };
@@ -205,6 +205,6 @@ describe('ReactJSXElementValidator', () => {
       'Warning: Failed prop type: ' +
-      'Invalid prop `color` of type `number` supplied to `MyComp`, ' +
-      'expected `string`.\n' +
-      '    in MyComp (at **)\n' +
-      '    in ParentComp (at **)'
+        'Invalid prop `color` of type `number` supplied to `MyComp`, ' +
+        'expected `string`.\n' +
+        '    in MyComp (at **)\n' +
+        '    in ParentComp (at **)',
     );
@@ -218,3 +218,3 @@ describe('ReactJSXElementValidator', () => {
     MyComp.propTypes = {
-      color: React.PropTypes.string,
+      color: PropTypes.string,
     };
@@ -241,7 +241,7 @@ describe('ReactJSXElementValidator', () => {
       'Warning: Failed prop type: ' +
-      'Invalid prop `color` of type `number` supplied to `MyComp`, ' +
-      'expected `string`.\n' +
-      '    in MyComp (at **)\n' +
-      '    in MiddleComp (at **)\n' +
-      '    in ParentComp (at **)'
+        'Invalid prop `color` of type `number` supplied to `MyComp`, ' +
+        'expected `string`.\n' +
+        '    in MyComp (at **)\n' +
+        '    in MiddleComp (at **)\n' +
+        '    in ParentComp (at **)',
     );
@@ -263,6 +263,6 @@ describe('ReactJSXElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-      '(for built-in components) or a class/function (for composite ' +
-      'components) but got: undefined. You likely forgot to export your ' +
-      'component from the file it\'s defined in. ' +
-      'Check your code at **.'
+        '(for built-in components) or a class/function (for composite ' +
+        'components) but got: undefined. You likely forgot to export your ' +
+        "component from the file it's defined in. " +
+        'Check your code at **.',
     );
@@ -270,5 +270,5 @@ describe('ReactJSXElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-      '(for built-in components) or a class/function (for composite ' +
-      'components) but got: null. ' +
-      'Check your code at **.'
+        '(for built-in components) or a class/function (for composite ' +
+        'components) but got: null. ' +
+        'Check your code at **.',
     );
@@ -276,5 +276,5 @@ describe('ReactJSXElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-      '(for built-in components) or a class/function (for composite ' +
-      'components) but got: boolean. ' +
-      'Check your code at **.'
+        '(for built-in components) or a class/function (for composite ' +
+        'components) but got: boolean. ' +
+        'Check your code at **.',
     );
@@ -282,5 +282,5 @@ describe('ReactJSXElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-      '(for built-in components) or a class/function (for composite ' +
-      'components) but got: number. ' +
-      'Check your code at **.'
+        '(for built-in components) or a class/function (for composite ' +
+        'components) but got: number. ' +
+        'Check your code at **.',
     );
@@ -300,4 +300,4 @@ describe('ReactJSXElementValidator', () => {
       'Warning: Failed prop type: The prop `prop` is marked as required in ' +
-      '`RequiredPropComponent`, but its value is `null`.\n' +
-      '    in RequiredPropComponent (at **)'
+        '`RequiredPropComponent`, but its value is `null`.\n' +
+        '    in RequiredPropComponent (at **)',
     );
@@ -313,4 +313,4 @@ describe('ReactJSXElementValidator', () => {
       'Warning: Failed prop type: The prop `prop` is marked as required in ' +
-      '`RequiredPropComponent`, but its value is `null`.\n' +
-      '    in RequiredPropComponent (at **)'
+        '`RequiredPropComponent`, but its value is `null`.\n' +
+        '    in RequiredPropComponent (at **)',
     );
@@ -327,5 +327,5 @@ describe('ReactJSXElementValidator', () => {
       'Warning: Failed prop type: ' +
-      'The prop `prop` is marked as required in `RequiredPropComponent`, but ' +
-      'its value is `undefined`.\n' +
-      '    in RequiredPropComponent (at **)'
+        'The prop `prop` is marked as required in `RequiredPropComponent`, but ' +
+        'its value is `undefined`.\n' +
+        '    in RequiredPropComponent (at **)',
     );
@@ -334,5 +334,5 @@ describe('ReactJSXElementValidator', () => {
       'Warning: Failed prop type: ' +
-      'Invalid prop `prop` of type `number` supplied to ' +
-      '`RequiredPropComponent`, expected `string`.\n' +
-      '    in RequiredPropComponent (at **)'
+        'Invalid prop `prop` of type `number` supplied to ' +
+        '`RequiredPropComponent`, expected `string`.\n' +
+        '    in RequiredPropComponent (at **)',
     );
@@ -363,3 +363,3 @@ describe('ReactJSXElementValidator', () => {
       'NullPropTypeComponent: prop type `prop` is invalid; it must be a ' +
-      'function, usually from React.PropTypes.'
+        'function, usually from React.PropTypes.',
     );
@@ -381,3 +381,3 @@ describe('ReactJSXElementValidator', () => {
       'NullContextTypeComponent: context type `prop` is invalid; it must ' +
-      'be a function, usually from React.PropTypes.'
+        'be a function, usually from React.PropTypes.',
     );
@@ -399,3 +399,3 @@ describe('ReactJSXElementValidator', () => {
       'getDefaultProps is only used on classic React.createClass definitions.' +
-      ' Use a static property named `defaultProps` instead.'
+        ' Use a static property named `defaultProps` instead.',
     );
@@ -403,2 +403,52 @@ describe('ReactJSXElementValidator', () => {
 
+  it('provides stack via non-standard console.reactStack for invalid types', () => {
+    spyOn(console, 'error');
+
+    function Foo() {
+      var Bad = undefined;
+      return <Bad />;
+    }
+
+    function App() {
+      return <div><Foo /></div>;
+    }
+
+    try {
+      console.reactStack = jest.fn();
+      console.reactStackEnd = jest.fn();
+
+      expect(() => {
+        ReactTestUtils.renderIntoDocument(<App />);
+      }).toThrow(
+        'Element type is invalid: expected a string (for built-in components) ' +
+          'or a class/function (for composite components) but got: undefined. ' +
+          "You likely forgot to export your component from the file it's " +
+          'defined in. Check the render method of `Foo`.',
+      );
+
+      expect(console.reactStack.mock.calls.length).toBe(1);
+      expect(console.reactStackEnd.mock.calls.length).toBe(1);
+
+      var stack = console.reactStack.mock.calls[0][0];
+      expect(Array.isArray(stack)).toBe(true);
+      expect(stack.map(frame => frame.name)).toEqual([
+        'Foo', // <Bad> is inside Foo
+        'App', // <Foo> is inside App
+        'App', // <div> is inside App
+        null, // <App> is outside a component
+      ]);
+      expect(
+        stack.map(frame => frame.fileName && frame.fileName.slice(-8)),
+      ).toEqual(['-test.js', '-test.js', '-test.js', '-test.js']);
+      expect(stack.map(frame => typeof frame.lineNumber)).toEqual([
+        'number',
+        'number',
+        'number',
+        'number',
+      ]);
+    } finally {
+      delete console.reactStack;
+      delete console.reactStackEnd;
+    }
+  });
 });
diff --git a/src/renderers/art/ReactART.js b/src/renderers/art/ReactART.js
index be85e1f23..7550e330d 100644
--- a/src/renderers/art/ReactART.js
+++ b/src/renderers/art/ReactART.js
@@ -14,3 +14,3 @@
 require('art/modes/current').setCurrent(
-  require('art/modes/fast-noSideEffects') // Flip this to DOM mode for debugging
+  require('art/modes/fast-noSideEffects'), // Flip this to DOM mode for debugging
 );
@@ -26,2 +26,3 @@ const ReactUpdates = require('ReactUpdates');
 
+const createReactClass = require('createClass');
 const emptyObject = require('emptyObject');
@@ -69,4 +70,6 @@ function injectAfter(parentNode, referenceNode, node) {
   let beforeNode;
-  if (node.parentNode === parentNode &&
-      node.previousSibling === referenceNode) {
+  if (
+    node.parentNode === parentNode &&
+    node.previousSibling === referenceNode
+  ) {
     return;
@@ -85,3 +88,3 @@ function injectAfter(parentNode, referenceNode, node) {
       node !== beforeNode,
-      'ReactART: Can not insert node before itself'
+      'ReactART: Can not insert node before itself',
     );
@@ -96,3 +99,2 @@ function injectAfter(parentNode, referenceNode, node) {
 const ContainerMixin = assign({}, ReactMultiChild.Mixin, {
-
   /**
@@ -155,7 +157,3 @@ const ContainerMixin = assign({}, ReactMultiChild.Mixin, {
   mountAndInjectChildren: function(children, transaction, context) {
-    const mountedImages = this.mountChildren(
-      children,
-      transaction,
-      context
-    );
+    const mountedImages = this.mountChildren(children, transaction, context);
     // Each mount image corresponds to one of the flattened children
@@ -170,4 +168,3 @@ const ContainerMixin = assign({}, ReactMultiChild.Mixin, {
     }
-  }
-
+  },
 });
@@ -177,4 +174,3 @@ const ContainerMixin = assign({}, ReactMultiChild.Mixin, {
 
-const Surface = React.createClass({
-
+const Surface = createReactClass({
   displayName: 'Surface',
@@ -194,3 +190,3 @@ const Surface = React.createClass({
       transaction,
-      ReactInstanceMap.get(this)._context
+      ReactInstanceMap.get(this)._context,
     );
@@ -201,4 +197,6 @@ const Surface = React.createClass({
     const node = this.node;
-    if (this.props.width != oldProps.width ||
-        this.props.height != oldProps.height) {
+    if (
+      this.props.width != oldProps.width ||
+      this.props.height != oldProps.height
+    ) {
       node.resize(+this.props.width, +this.props.height);
@@ -212,3 +210,3 @@ const Surface = React.createClass({
       transaction,
-      ReactInstanceMap.get(this)._context
+      ReactInstanceMap.get(this)._context,
     );
@@ -243,4 +241,3 @@ const Surface = React.createClass({
     );
-  }
-
+  },
 });
@@ -255,3 +252,3 @@ const EventTypes = {
   onMouseDown: 'mousedown',
-  onClick: 'click'
+  onClick: 'click',
 };
@@ -259,3 +256,2 @@ const EventTypes = {
 const NodeMixin = {
-
   construct: function(element) {
@@ -314,6 +310,8 @@ const NodeMixin = {
 
-    const scaleX = props.scaleX != null ? props.scaleX :
-                 props.scale != null ? props.scale : 1;
-    const scaleY = props.scaleY != null ? props.scaleY :
-                 props.scale != null ? props.scale : 1;
+    const scaleX = props.scaleX != null
+      ? props.scaleX
+      : props.scale != null ? props.scale : 1;
+    const scaleY = props.scaleY != null
+      ? props.scaleY
+      : props.scale != null ? props.scale : 1;
 
@@ -329,5 +327,10 @@ const NodeMixin = {
 
-    if (node.xx !== pooledTransform.xx || node.yx !== pooledTransform.yx ||
-        node.xy !== pooledTransform.xy || node.yy !== pooledTransform.yy ||
-        node.x  !== pooledTransform.x  || node.y  !== pooledTransform.y) {
+    if (
+      node.xx !== pooledTransform.xx ||
+      node.yx !== pooledTransform.yx ||
+      node.xy !== pooledTransform.xy ||
+      node.yy !== pooledTransform.yy ||
+      node.x !== pooledTransform.x ||
+      node.y !== pooledTransform.y
+    ) {
       node.transformTo(pooledTransform);
@@ -359,6 +362,5 @@ const NodeMixin = {
       'You cannot render an ART component standalone. ' +
-      'You need to wrap it in a Surface.'
+        'You need to wrap it in a Surface.',
     );
-  }
-
+  },
 };
@@ -368,3 +370,2 @@ const NodeMixin = {
 const Group = createComponent('Group', NodeMixin, ContainerMixin, {
-
   mountComponent: function(
@@ -373,3 +374,3 @@ const Group = createComponent('Group', NodeMixin, ContainerMixin, {
     nativeContainerInfo,
-    context
+    context,
   ) {
@@ -399,4 +400,3 @@ const Group = createComponent('Group', NodeMixin, ContainerMixin, {
     this.unmountChildren();
-  }
-
+  },
 });
@@ -405,40 +405,41 @@ const Group = createComponent('Group', NodeMixin, ContainerMixin, {
 const ClippingRectangle = createComponent(
-    'ClippingRectangle', NodeMixin, ContainerMixin, {
-
-  mountComponent: function(
-    transaction,
-    nativeParent,
-    nativeContainerInfo,
-    context
-  ) {
-    this.node = Mode.ClippingRectangle();
-    const props = this._currentElement.props;
-    this.applyClippingProps(emptyObject, props);
-    this.mountAndInjectChildren(props.children, transaction, context);
-    return this.node;
-  },
-
-  receiveComponent: function(nextComponent, transaction, context) {
-    const props = nextComponent.props;
-    const oldProps = this._currentElement.props;
-    this.applyClippingProps(oldProps, props);
-    this.updateChildren(props.children, transaction, context);
-    this._currentElement = nextComponent;
-  },
-
-  applyClippingProps: function(oldProps, props) {
-    this.node.width = props.width;
-    this.node.height = props.height;
-    this.node.x = props.x;
-    this.node.y = props.y;
-    this.applyNodeProps(oldProps, props);
+  'ClippingRectangle',
+  NodeMixin,
+  ContainerMixin,
+  {
+    mountComponent: function(
+      transaction,
+      nativeParent,
+      nativeContainerInfo,
+      context,
+    ) {
+      this.node = Mode.ClippingRectangle();
+      const props = this._currentElement.props;
+      this.applyClippingProps(emptyObject, props);
+      this.mountAndInjectChildren(props.children, transaction, context);
+      return this.node;
+    },
+
+    receiveComponent: function(nextComponent, transaction, context) {
+      const props = nextComponent.props;
+      const oldProps = this._currentElement.props;
+      this.applyClippingProps(oldProps, props);
+      this.updateChildren(props.children, transaction, context);
+      this._currentElement = nextComponent;
+    },
+
+    applyClippingProps: function(oldProps, props) {
+      this.node.width = props.width;
+      this.node.height = props.height;
+      this.node.x = props.x;
+      this.node.y = props.y;
+      this.applyNodeProps(oldProps, props);
+    },
+
+    unmountComponent: function() {
+      this.destroyEventListeners();
+      this.unmountChildren();
+    },
   },
-
-  unmountComponent: function() {
-    this.destroyEventListeners();
-    this.unmountChildren();
-  }
-
-});
-
+);
 
@@ -447,3 +448,2 @@ const ClippingRectangle = createComponent(
 const RenderableMixin = assign({}, NodeMixin, {
-
   applyRenderableProps: function(oldProps, props) {
@@ -470,3 +470,3 @@ const RenderableMixin = assign({}, NodeMixin, {
         props.strokeJoin,
-        props.strokeDash
+        props.strokeDash,
       );
@@ -478,4 +478,3 @@ const RenderableMixin = assign({}, NodeMixin, {
     this.destroyEventListeners();
-  }
-
+  },
 });
@@ -485,3 +484,2 @@ const RenderableMixin = assign({}, NodeMixin, {
 const Shape = createComponent('Shape', RenderableMixin, {
-
   construct: function(element) {
@@ -496,3 +494,3 @@ const Shape = createComponent('Shape', RenderableMixin, {
     nativeContainerInfo,
-    context
+    context,
   ) {
@@ -516,12 +514,9 @@ const Shape = createComponent('Shape', RenderableMixin, {
 
-    if (path.delta !== oldDelta ||
-        path !== oldPath ||
-        oldProps.width !== props.width ||
-        oldProps.height !== props.height) {
-
-      this.node.draw(
-        path,
-        props.width,
-        props.height
-      );
+    if (
+      path.delta !== oldDelta ||
+      path !== oldPath ||
+      oldProps.width !== props.width ||
+      oldProps.height !== props.height
+    ) {
+      this.node.draw(path, props.width, props.height);
 
@@ -532,4 +527,3 @@ const Shape = createComponent('Shape', RenderableMixin, {
     this.applyRenderableProps(oldProps, props);
-  }
-
+  },
 });
@@ -539,3 +533,2 @@ const Shape = createComponent('Shape', RenderableMixin, {
 const Text = createComponent('Text', RenderableMixin, {
-
   construct: function(element) {
@@ -549,3 +542,3 @@ const Text = createComponent('Text', RenderableMixin, {
     nativeContainerInfo,
-    context
+    context,
   ) {
@@ -582,12 +575,9 @@ const Text = createComponent('Text', RenderableMixin, {
 
-    if (oldString !== newString ||
-        !this.isSameFont(oldProps.font, props.font) ||
-        oldProps.alignment !== props.alignment ||
-        oldProps.path !== props.path) {
-      this.node.draw(
-        newString,
-        props.font,
-        props.alignment,
-        props.path
-      );
+    if (
+      oldString !== newString ||
+      !this.isSameFont(oldProps.font, props.font) ||
+      oldProps.alignment !== props.alignment ||
+      oldProps.path !== props.path
+    ) {
+      this.node.draw(newString, props.font, props.alignment, props.path);
       this._oldString = newString;
@@ -597,4 +587,3 @@ const Text = createComponent('Text', RenderableMixin, {
     this._currentElement = nextComponent;
-  }
-
+  },
 });
diff --git a/src/renderers/art/__tests__/ReactART-test.js b/src/renderers/art/__tests__/ReactART-test.js
index b8cfea1c2..7d9ce37ff 100644
--- a/src/renderers/art/__tests__/ReactART-test.js
+++ b/src/renderers/art/__tests__/ReactART-test.js
@@ -51,3 +51,2 @@ function testDOMNodeStructure(domNode, expectedStructure) {
 describe('ReactART', () => {
-
   beforeEach(() => {
@@ -61,14 +60,16 @@ describe('ReactART', () => {
       render() {
-
-        var a =
+        var a = (
           <Shape
             d="M0,0l50,0l0,50l-50,0z"
-            fill={new ReactART.LinearGradient(["black", "white"])}
+            fill={new ReactART.LinearGradient(['black', 'white'])}
             key="a"
-            width={50} height={50}
-            x={50} y={50}
+            width={50}
+            height={50}
+            x={50}
+            y={50}
             opacity={0.1}
-          />;
+          />
+        );
 
-        var b =
+        var b = (
           <Shape
@@ -77,3 +78,4 @@ describe('ReactART', () => {
             scale={0.5}
-            x={50} y={50}
+            x={50}
+            y={50}
             title="This is an F"
@@ -83,3 +85,4 @@ describe('ReactART', () => {
             h-6.99v11.652h6.99v33.815H54V50.235h9.331L64.564,38.583z
-          </Shape>;
+          </Shape>
+        );
 
@@ -115,3 +118,3 @@ describe('ReactART', () => {
       children: [
-        { nodeName: 'defs' },
+        {nodeName: 'defs'},
         {
@@ -121,12 +124,10 @@ describe('ReactART', () => {
               nodeName: 'defs',
-              children: [
-                { nodeName: 'linearGradient' }
-              ]
+              children: [{nodeName: 'linearGradient'}],
             },
-            { nodeName: 'path' },
-            { nodeName: 'path' },
-            { nodeName: 'g' }
-          ]
-        }
-      ]
+            {nodeName: 'path'},
+            {nodeName: 'path'},
+            {nodeName: 'g'},
+          ],
+        },
+      ],
     };
@@ -139,3 +140,6 @@ describe('ReactART', () => {
     var container = document.createElement('div');
-    var instance = ReactDOM.render(<TestComponent flipped={false} />, container);
+    var instance = ReactDOM.render(
+      <TestComponent flipped={false} />,
+      container,
+    );
 
@@ -144,3 +148,3 @@ describe('ReactART', () => {
       children: [
-        { nodeName: 'defs' },
+        {nodeName: 'defs'},
         {
@@ -148,9 +152,9 @@ describe('ReactART', () => {
           children: [
-            { nodeName: 'defs' },
-            { nodeName: 'path', opacity: '0.1' },
-            { nodeName: 'path', opacity: Missing },
-            { nodeName: 'g' }
-          ]
-        }
-      ]
+            {nodeName: 'defs'},
+            {nodeName: 'path', opacity: '0.1'},
+            {nodeName: 'path', opacity: Missing},
+            {nodeName: 'g'},
+          ],
+        },
+      ],
     };
@@ -165,3 +169,3 @@ describe('ReactART', () => {
       children: [
-        { nodeName: 'defs' },
+        {nodeName: 'defs'},
         {
@@ -169,9 +173,9 @@ describe('ReactART', () => {
           children: [
-            { nodeName: 'defs' },
-            { nodeName: 'path', opacity: Missing },
-            { nodeName: 'path', opacity: '0.1' },
-            { nodeName: 'g' }
-          ]
-        }
-      ]
+            {nodeName: 'defs'},
+            {nodeName: 'path', opacity: Missing},
+            {nodeName: 'path', opacity: '0.1'},
+            {nodeName: 'g'},
+          ],
+        },
+      ],
     };
@@ -189,3 +193,3 @@ describe('ReactART', () => {
           <Surface>
-            {chars.map((text) => <Shape key={text} title={text} />)}
+            {chars.map(text => <Shape key={text} title={text} />)}
           </Surface>
@@ -227,3 +231,3 @@ describe('ReactART', () => {
         </Group>
-      </Surface>
+      </Surface>,
     );
@@ -296,3 +300,2 @@ describe('ReactART', () => {
   });
-
 });
diff --git a/src/renderers/dom/ReactDOM.js b/src/renderers/dom/ReactDOM.js
index ff39dc5aa..a30ee9af4 100644
--- a/src/renderers/dom/ReactDOM.js
+++ b/src/renderers/dom/ReactDOM.js
@@ -45,3 +45,4 @@ if (
   typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
-  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'
+) {
   __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
@@ -70,3 +71,2 @@ if (__DEV__) {
   if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
-
     // First check if devtools is not installed
@@ -74,7 +74,10 @@ if (__DEV__) {
       // If we're in Chrome or Firefox, provide a download link if not installed.
-      if ((navigator.userAgent.indexOf('Chrome') > -1 &&
+      if (
+        (navigator.userAgent.indexOf('Chrome') > -1 &&
           navigator.userAgent.indexOf('Edge') === -1) ||
-          navigator.userAgent.indexOf('Firefox') > -1) {
+        navigator.userAgent.indexOf('Firefox') > -1
+      ) {
         // Firefox does not have the issue with devtools loaded over file://
-        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 &&
+        var showFileUrlMessage =
+          window.location.protocol.indexOf('http') === -1 &&
           navigator.userAgent.indexOf('Firefox') === -1;
@@ -82,5 +85,7 @@ if (__DEV__) {
           'Download the React DevTools ' +
-          (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') +
-          'for a better development experience: ' +
-          'https://fb.me/react-devtools'
+            (showFileUrlMessage
+              ? 'and use an HTTP server (instead of a file: URL) '
+              : '') +
+            'for a better development experience: ' +
+            'https://fb.me/react-devtools',
         );
@@ -92,6 +97,6 @@ if (__DEV__) {
       (testFunc.name || testFunc.toString()).indexOf('testFn') !== -1,
-      'It looks like you\'re using a minified copy of the development build ' +
-      'of React. When deploying React apps to production, make sure to use ' +
-      'the production build which skips development warnings and is faster. ' +
-      'See https://fb.me/react-minification for more details.'
+      "It looks like you're using a minified copy of the development build " +
+        'of React. When deploying React apps to production, make sure to use ' +
+        'the production build which skips development warnings and is faster. ' +
+        'See https://fb.me/react-minification for more details.',
     );
@@ -106,4 +111,4 @@ if (__DEV__) {
       'Internet Explorer is running in compatibility mode; please add the ' +
-      'following tag to your HTML to prevent this from happening: ' +
-      '<meta http-equiv="X-UA-Compatible" content="IE=edge" />'
+        'following tag to your HTML to prevent this from happening: ' +
+        '<meta http-equiv="X-UA-Compatible" content="IE=edge" />',
     );
@@ -128,3 +133,3 @@ if (__DEV__) {
           'One or more ES5 shims expected by React are not available: ' +
-          'https://fb.me/react-warning-polyfills'
+            'https://fb.me/react-warning-polyfills',
         );
diff --git a/src/renderers/dom/__mocks__/ReactDOM.js b/src/renderers/dom/__mocks__/ReactDOM.js
index 00d14eb7f..c5965c9ec 100644
--- a/src/renderers/dom/__mocks__/ReactDOM.js
+++ b/src/renderers/dom/__mocks__/ReactDOM.js
@@ -15,3 +15,4 @@ var useFiber = ReactDOMFeatureFlags.useFiber;
 
-module.exports =
-  useFiber ? require('ReactDOMFiber') : require.requireActual('ReactDOM');
+module.exports = useFiber
+  ? require('ReactDOMFiber')
+  : require.requireActual('ReactDOM');
diff --git a/src/renderers/dom/__tests__/ReactDOMProduction-test.js b/src/renderers/dom/__tests__/ReactDOMProduction-test.js
index c25d5e759..f2b4a7fc1 100644
--- a/src/renderers/dom/__tests__/ReactDOMProduction-test.js
+++ b/src/renderers/dom/__tests__/ReactDOMProduction-test.js
@@ -64,3 +64,3 @@ describe('ReactDOMProduction', () => {
       </div>,
-      container
+      container,
     );
@@ -77,3 +77,3 @@ describe('ReactDOMProduction', () => {
       </div>,
-      container
+      container,
     );
@@ -121,6 +121,3 @@ describe('ReactDOMProduction', () => {
     var container = document.createElement('div');
-    var inst = ReactDOM.render(
-      <Component x={1} />,
-      container
-    );
+    var inst = ReactDOM.render(<Component x={1} />, container);
     expect(log).toEqual([
@@ -142,11 +139,6 @@ describe('ReactDOMProduction', () => {
     inst.setState({y: 2});
-    expect(log).toEqual([
-      ['shouldComponentUpdate', {x: 1}, {y: 2}],
-    ]);
+    expect(log).toEqual([['shouldComponentUpdate', {x: 1}, {y: 2}]]);
     log = [];
 
-    ReactDOM.render(
-      <Component x={2} />,
-      container
-    );
+    ReactDOM.render(<Component x={2} />, container);
     expect(log).toEqual([
@@ -160,6 +152,3 @@ describe('ReactDOMProduction', () => {
 
-    ReactDOM.render(
-      <Component x={2} />,
-      container
-    );
+    ReactDOM.render(<Component x={2} />, container);
     expect(log).toEqual([
@@ -171,5 +160,3 @@ describe('ReactDOMProduction', () => {
     ReactDOM.unmountComponentAtNode(container);
-    expect(log).toEqual([
-      ['componentWillUnmount'],
-    ]);
+    expect(log).toEqual([['componentWillUnmount']]);
   });
@@ -188,5 +175,5 @@ describe('ReactDOMProduction', () => {
       'Minified React error #109; visit ' +
-      'http://facebook.github.io/react/docs/error-decoder.html?invariant=109&args[]=Component' +
-      ' for the full message or use the non-minified dev environment' +
-      ' for full errors and additional helpful warnings.'
+        'http://facebook.github.io/react/docs/error-decoder.html?invariant=109&args[]=Component' +
+        ' for the full message or use the non-minified dev environment' +
+        ' for full errors and additional helpful warnings.',
     );
diff --git a/src/renderers/dom/client/ReactBrowserEventEmitter.js b/src/renderers/dom/client/ReactBrowserEventEmitter.js
index 0d6a3b7a4..e51837c11 100644
--- a/src/renderers/dom/client/ReactBrowserEventEmitter.js
+++ b/src/renderers/dom/client/ReactBrowserEventEmitter.js
@@ -86,4 +86,6 @@ var topEventMapping = {
   topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
-  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
-  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
+  topAnimationIteration:
+    getVendorPrefixedEventName('animationiteration') || 'animationiteration',
+  topAnimationStart:
+    getVendorPrefixedEventName('animationstart') || 'animationstart',
   topBlur: 'blur',
@@ -144,3 +146,4 @@ var topEventMapping = {
   topTouchStart: 'touchstart',
-  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
+  topTransitionEnd:
+    getVendorPrefixedEventName('transitionend') || 'transitionend',
   topVolumeChange: 'volumechange',
@@ -176,3 +179,2 @@ function getListeningForDocument(mountAt) {
 var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
-
   /**
@@ -188,3 +190,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
       ReactEventListener.setHandleTopLevel(
-        ReactBrowserEventEmitter.handleTopLevel
+        ReactBrowserEventEmitter.handleTopLevel,
       );
@@ -244,6 +246,5 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
       var dependency = dependencies[i];
-      if (!(
-            isListening.hasOwnProperty(dependency) &&
-            isListening[dependency]
-          )) {
+      if (
+        !(isListening.hasOwnProperty(dependency) && isListening[dependency])
+      ) {
         if (dependency === 'topWheel') {
@@ -253,3 +254,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'wheel',
-              mountAt
+              mountAt,
             );
@@ -259,3 +260,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'mousewheel',
-              mountAt
+              mountAt,
             );
@@ -267,3 +268,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'DOMMouseScroll',
-              mountAt
+              mountAt,
             );
@@ -271,3 +272,2 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
         } else if (dependency === 'topScroll') {
-
           if (isEventSupported('scroll', true)) {
@@ -276,3 +276,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'scroll',
-              mountAt
+              mountAt,
             );
@@ -282,8 +282,6 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'scroll',
-              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE
+              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE,
             );
           }
-        } else if (dependency === 'topFocus' ||
-            dependency === 'topBlur') {
-
+        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
           if (isEventSupported('focus', true)) {
@@ -292,3 +290,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'focus',
-              mountAt
+              mountAt,
             );
@@ -297,3 +295,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'blur',
-              mountAt
+              mountAt,
             );
@@ -305,3 +303,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'focusin',
-              mountAt
+              mountAt,
             );
@@ -310,3 +308,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'focusout',
-              mountAt
+              mountAt,
             );
@@ -321,3 +319,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
             topEventMapping[dependency],
-            mountAt
+            mountAt,
           );
@@ -334,3 +332,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
       handlerBaseName,
-      handle
+      handle,
     );
@@ -342,3 +340,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
       handlerBaseName,
-      handle
+      handle,
     );
@@ -380,3 +378,2 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
   },
-
 });
diff --git a/src/renderers/dom/client/ReactDOMComponentTree.js b/src/renderers/dom/client/ReactDOMComponentTree.js
index d440446ac..88e2b4bf1 100644
--- a/src/renderers/dom/client/ReactDOMComponentTree.js
+++ b/src/renderers/dom/client/ReactDOMComponentTree.js
@@ -28,8 +28,8 @@ var internalInstanceKey =
 function shouldPrecacheNode(node, nodeID) {
-  return (node.nodeType === 1 &&
-          node.getAttribute(ATTR_NAME) === String(nodeID)) ||
-         (node.nodeType === 8 &&
-          node.nodeValue === ' react-text: ' + nodeID + ' ') ||
-         (node.nodeType === 8 &&
-          node.nodeValue === ' react-empty: ' + nodeID + ' ');
+  return (
+    (node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID)) ||
+    (node.nodeType === 8 &&
+      node.nodeValue === ' react-text: ' + nodeID + ' ') ||
+    (node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ')
+  );
 }
@@ -168,3 +168,3 @@ function getNodeFromInstance(inst) {
     inst._hostNode !== undefined,
-    'getNodeFromInstance: Invalid argument.'
+    'getNodeFromInstance: Invalid argument.',
   );
@@ -181,3 +181,3 @@ function getNodeFromInstance(inst) {
       inst._hostParent,
-      'React DOM tree root should always have a node reference.'
+      'React DOM tree root should always have a node reference.',
     );
diff --git a/src/renderers/dom/client/ReactDOMIDOperations.js b/src/renderers/dom/client/ReactDOMIDOperations.js
index fd8c16797..e24335341 100644
--- a/src/renderers/dom/client/ReactDOMIDOperations.js
+++ b/src/renderers/dom/client/ReactDOMIDOperations.js
@@ -20,3 +20,2 @@ var ReactDOMComponentTree = require('ReactDOMComponentTree');
 var ReactDOMIDOperations = {
-
   /**
diff --git a/src/renderers/dom/client/ReactDOMSelection.js b/src/renderers/dom/client/ReactDOMSelection.js
index aff9e894b..307d5c340 100644
--- a/src/renderers/dom/client/ReactDOMSelection.js
+++ b/src/renderers/dom/client/ReactDOMSelection.js
@@ -101,3 +101,3 @@ function getModernOffsets(node) {
     selection.focusNode,
-    selection.focusOffset
+    selection.focusOffset,
   );
@@ -114,3 +114,3 @@ function getModernOffsets(node) {
     tempRange.endContainer,
-    tempRange.endOffset
+    tempRange.endOffset,
   );
@@ -178,4 +178,3 @@ function setModernOffsets(node, offsets) {
   var start = Math.min(offsets.start, length);
-  var end = offsets.end === undefined ?
-            start : Math.min(offsets.end, length);
+  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
 
@@ -207,7 +206,6 @@ function setModernOffsets(node, offsets) {
 
-var useIEOffsets = (
+var useIEOffsets =
   ExecutionEnvironment.canUseDOM &&
   'selection' in document &&
-  !('getSelection' in window)
-);
+  !('getSelection' in window);
 
diff --git a/src/renderers/dom/client/ReactDOMTreeTraversal.js b/src/renderers/dom/client/ReactDOMTreeTraversal.js
index 72cb83803..4d809cfdb 100644
--- a/src/renderers/dom/client/ReactDOMTreeTraversal.js
+++ b/src/renderers/dom/client/ReactDOMTreeTraversal.js
@@ -91,3 +91,3 @@ function traverseTwoPhase(inst, fn, arg) {
   var i;
-  for (i = path.length; i-- > 0;) {
+  for (i = path.length; i-- > 0; ) {
     fn(path[i], 'captured', arg);
@@ -122,3 +122,3 @@ function traverseEnterLeave(from, to, fn, argFrom, argTo) {
   }
-  for (i = pathTo.length; i-- > 0;) {
+  for (i = pathTo.length; i-- > 0; ) {
     fn(pathTo[i], 'captured', argTo);
diff --git a/src/renderers/dom/client/ReactEventListener.js b/src/renderers/dom/client/ReactEventListener.js
index 8a329e959..a885cb9b9 100644
--- a/src/renderers/dom/client/ReactEventListener.js
+++ b/src/renderers/dom/client/ReactEventListener.js
@@ -54,3 +54,3 @@ PooledClass.addPoolingTo(
   TopLevelCallbackBookKeeping,
-  PooledClass.twoArgumentPooler
+  PooledClass.twoArgumentPooler,
 );
@@ -60,3 +60,3 @@ function handleTopLevelImpl(bookKeeping) {
   var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(
-    nativeEventTarget
+    nativeEventTarget,
   );
@@ -79,3 +79,3 @@ function handleTopLevelImpl(bookKeeping) {
       bookKeeping.nativeEvent,
-      getEventTarget(bookKeeping.nativeEvent)
+      getEventTarget(bookKeeping.nativeEvent),
     );
@@ -107,3 +107,2 @@ var ReactEventListener = {
 
-
   /**
@@ -125,3 +124,3 @@ var ReactEventListener = {
       handlerBaseName,
-      ReactEventListener.dispatchEvent.bind(null, topLevelType)
+      ReactEventListener.dispatchEvent.bind(null, topLevelType),
     );
@@ -146,3 +145,3 @@ var ReactEventListener = {
       handlerBaseName,
-      ReactEventListener.dispatchEvent.bind(null, topLevelType)
+      ReactEventListener.dispatchEvent.bind(null, topLevelType),
     );
@@ -162,3 +161,3 @@ var ReactEventListener = {
       topLevelType,
-      nativeEvent
+      nativeEvent,
     );
diff --git a/src/renderers/dom/client/ReactInputSelection.js b/src/renderers/dom/client/ReactInputSelection.js
index 46e6931a6..ee9d33ddc 100644
--- a/src/renderers/dom/client/ReactInputSelection.js
+++ b/src/renderers/dom/client/ReactInputSelection.js
@@ -30,9 +30,9 @@ function isInDocument(node) {
 var ReactInputSelection = {
-
   hasSelectionCapabilities: function(elem) {
     var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
-    return nodeName && (
-      (nodeName === 'input' && elem.type === 'text') ||
-      nodeName === 'textarea' ||
-      elem.contentEditable === 'true'
+    return (
+      nodeName &&
+      ((nodeName === 'input' && elem.type === 'text') ||
+        nodeName === 'textarea' ||
+        elem.contentEditable === 'true')
     );
@@ -44,6 +44,5 @@ var ReactInputSelection = {
       focusedElem: focusedElem,
-      selectionRange:
-          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
-          ReactInputSelection.getSelection(focusedElem) :
-          null,
+      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem)
+        ? ReactInputSelection.getSelection(focusedElem)
+        : null,
     };
@@ -60,9 +59,5 @@ var ReactInputSelection = {
     var priorSelectionRange = priorSelectionInformation.selectionRange;
-    if (curFocusedElem !== priorFocusedElem &&
-        isInDocument(priorFocusedElem)) {
+    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
       if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
-        ReactInputSelection.setSelection(
-          priorFocusedElem,
-          priorSelectionRange
-        );
+        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
       }
@@ -87,4 +82,6 @@ var ReactInputSelection = {
       };
-    } else if (document.selection &&
-        (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
+    } else if (
+      document.selection &&
+      (input.nodeName && input.nodeName.toLowerCase() === 'input')
+    ) {
       // IE8 input.
@@ -123,4 +120,6 @@ var ReactInputSelection = {
       input.selectionEnd = Math.min(end, input.value.length);
-    } else if (document.selection &&
-        (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
+    } else if (
+      document.selection &&
+      (input.nodeName && input.nodeName.toLowerCase() === 'input')
+    ) {
       var range = input.createTextRange();
diff --git a/src/renderers/dom/client/ReactMount.js b/src/renderers/dom/client/ReactMount.js
index c0e3c9ec0..382aff890 100644
--- a/src/renderers/dom/client/ReactMount.js
+++ b/src/renderers/dom/client/ReactMount.js
@@ -82,3 +82,3 @@ function internalGetID(node) {
   // the empty string, as if the attribute were missing.
-  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
+  return (node.getAttribute && node.getAttribute(ATTR_NAME)) || '';
 }
@@ -98,3 +98,3 @@ function mountComponentIntoNode(
   shouldReuseMarkup,
-  context
+  context,
 ) {
@@ -104,6 +104,5 @@ function mountComponentIntoNode(
     var type = wrappedElement.type;
-    markerName = 'React mount: ' + (
-      typeof type === 'string' ? type :
-      type.displayName || type.name
-    );
+    markerName =
+      'React mount: ' +
+      (typeof type === 'string' ? type : type.displayName || type.name);
     console.time(markerName);
@@ -117,3 +116,3 @@ function mountComponentIntoNode(
     context,
-    0 /* parentDebugID */
+    0 /* parentDebugID */,
   );
@@ -130,3 +129,3 @@ function mountComponentIntoNode(
     shouldReuseMarkup,
-    transaction
+    transaction,
   );
@@ -145,3 +144,3 @@ function batchedMountComponentIntoNode(
   shouldReuseMarkup,
-  context
+  context,
 ) {
@@ -149,3 +148,3 @@ function batchedMountComponentIntoNode(
     /* useCreateElement */
-    !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement
+    !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement,
   );
@@ -158,3 +157,3 @@ function batchedMountComponentIntoNode(
     shouldReuseMarkup,
-    context
+    context,
   );
@@ -219,3 +218,7 @@ function nodeIsRenderedByOtherInstance(container) {
   var rootEl = getReactRootElementInContainer(container);
-  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
+  return !!(
+    rootEl &&
+    isReactNode(rootEl) &&
+    !ReactDOMComponentTree.getInstanceFromNode(rootEl)
+  );
 }
@@ -230,7 +233,8 @@ function nodeIsRenderedByOtherInstance(container) {
 function isValidContainer(node) {
-  return !!(node && (
-    node.nodeType === ELEMENT_NODE_TYPE ||
-    node.nodeType === DOC_NODE_TYPE ||
-    node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE
-  ));
+  return !!(
+    node &&
+    (node.nodeType === ELEMENT_NODE_TYPE ||
+      node.nodeType === DOC_NODE_TYPE ||
+      node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)
+  );
 }
@@ -245,3 +249,6 @@ function isValidContainer(node) {
 function isReactNode(node) {
-  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
+  return (
+    isValidContainer(node) &&
+    (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME))
+  );
 }
@@ -252,6 +259,5 @@ function getHostRootInstanceInContainer(container) {
     rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
-  return (
-    prevHostInstance && !prevHostInstance._hostParent ?
-    prevHostInstance : null
-  );
+  return prevHostInstance && !prevHostInstance._hostParent
+    ? prevHostInstance
+    : null;
 }
@@ -300,3 +306,2 @@ TopLevelWrapper.isReactTopLevelWrapper = true;
 var ReactMount = {
-
   TopLevelWrapper: TopLevelWrapper,
@@ -328,9 +333,14 @@ var ReactMount = {
   _updateRootComponent: function(
-      prevComponent,
-      nextElement,
-      nextContext,
-      container,
-      callback) {
+    prevComponent,
+    nextElement,
+    nextContext,
+    container,
+    callback,
+  ) {
     ReactMount.scrollMonitor(container, function() {
-      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
+      ReactUpdateQueue.enqueueElementInternal(
+        prevComponent,
+        nextElement,
+        nextContext,
+      );
       if (callback) {
@@ -355,3 +365,3 @@ var ReactMount = {
     shouldReuseMarkup,
-    context
+    context,
   ) {
@@ -363,7 +373,7 @@ var ReactMount = {
       '_renderNewRootComponent(): Render methods should be a pure function ' +
-      'of props and state; triggering nested component updates from ' +
-      'render is not allowed. If necessary, trigger nested updates in ' +
-      'componentDidUpdate. Check the render method of %s.',
-      ReactCurrentOwner.current && ReactCurrentOwner.current.getName() ||
-        'ReactCompositeComponent'
+        'of props and state; triggering nested component updates from ' +
+        'render is not allowed. If necessary, trigger nested updates in ' +
+        'componentDidUpdate. Check the render method of %s.',
+      (ReactCurrentOwner.current && ReactCurrentOwner.current.getName()) ||
+        'ReactCompositeComponent',
     );
@@ -372,3 +382,3 @@ var ReactMount = {
       isValidContainer(container),
-      '_registerComponent(...): Target container is not a DOM element.'
+      '_registerComponent(...): Target container is not a DOM element.',
     );
@@ -387,3 +397,3 @@ var ReactMount = {
       shouldReuseMarkup,
-      context
+      context,
     );
@@ -409,6 +419,11 @@ var ReactMount = {
    */
-  renderSubtreeIntoContainer: function(parentComponent, nextElement, container, callback) {
+  renderSubtreeIntoContainer: function(
+    parentComponent,
+    nextElement,
+    container,
+    callback,
+  ) {
     invariant(
       parentComponent != null && ReactInstanceMap.has(parentComponent),
-      'parentComponent must be a valid React Component'
+      'parentComponent must be a valid React Component',
     );
@@ -418,3 +433,3 @@ var ReactMount = {
       container,
-      callback
+      callback,
     );
@@ -422,3 +437,8 @@ var ReactMount = {
 
-  _renderSubtreeIntoContainer: function(parentComponent, nextElement, container, callback) {
+  _renderSubtreeIntoContainer: function(
+    parentComponent,
+    nextElement,
+    container,
+    callback,
+  ) {
     ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
@@ -427,15 +447,13 @@ var ReactMount = {
       'ReactDOM.render(): Invalid component element.%s',
-      (
-        typeof nextElement === 'string' ?
-          ' Instead of passing a string like \'div\', pass ' +
-          'React.createElement(\'div\') or <div />.' :
-        typeof nextElement === 'function' ?
-          ' Instead of passing a class like Foo, pass ' +
-          'React.createElement(Foo) or <Foo />.' :
-        // Check if it quacks like an element
-        nextElement != null && nextElement.props !== undefined ?
-          ' This may be caused by unintentionally loading two independent ' +
-          'copies of React.' :
-          ''
-      )
+      typeof nextElement === 'string'
+        ? " Instead of passing a string like 'div', pass " +
+            "React.createElement('div') or <div />."
+        : typeof nextElement === 'function'
+          ? ' Instead of passing a class like Foo, pass ' +
+              'React.createElement(Foo) or <Foo />.'
+          : // Check if it quacks like an element
+            nextElement != null && nextElement.props !== undefined
+            ? ' This may be caused by unintentionally loading two independent ' +
+                'copies of React.'
+            : '',
     );
@@ -443,15 +461,15 @@ var ReactMount = {
     warning(
-      !container || !container.tagName ||
-      container.tagName.toUpperCase() !== 'BODY',
+      !container ||
+        !container.tagName ||
+        container.tagName.toUpperCase() !== 'BODY',
       'render(): Rendering components directly into document.body is ' +
-      'discouraged, since its children are often manipulated by third-party ' +
-      'scripts and browser extensions. This may lead to subtle ' +
-      'reconciliation issues. Try rendering into a container element created ' +
-      'for your app.'
+        'discouraged, since its children are often manipulated by third-party ' +
+        'scripts and browser extensions. This may lead to subtle ' +
+        'reconciliation issues. Try rendering into a container element created ' +
+        'for your app.',
     );
 
-    var nextWrappedElement = React.createElement(
-      TopLevelWrapper,
-      { child: nextElement }
-    );
+    var nextWrappedElement = React.createElement(TopLevelWrapper, {
+      child: nextElement,
+    });
 
@@ -472,5 +490,7 @@ var ReactMount = {
         var publicInst = prevComponent._renderedComponent.getPublicInstance();
-        var updatedCallback = callback && function() {
-          callback.call(publicInst);
-        };
+        var updatedCallback =
+          callback &&
+          function() {
+            callback.call(publicInst);
+          };
         ReactMount._updateRootComponent(
@@ -480,3 +500,3 @@ var ReactMount = {
           container,
-          updatedCallback
+          updatedCallback,
         );
@@ -497,5 +517,5 @@ var ReactMount = {
         'render(...): Replacing React-rendered children with a new root ' +
-        'component. If you intended to update the children of this node, ' +
-        'you should instead have the existing children update their state ' +
-        'and render the new components instead of calling ReactDOM.render.'
+          'component. If you intended to update the children of this node, ' +
+          'you should instead have the existing children update their state ' +
+          'and render the new components instead of calling ReactDOM.render.',
       );
@@ -509,4 +529,4 @@ var ReactMount = {
               'render(): Target node has markup rendered by React, but there ' +
-              'are unrelated nodes as well. This is most commonly caused by ' +
-              'white-space inserted around server-rendered markup.'
+                'are unrelated nodes as well. This is most commonly caused by ' +
+                'white-space inserted around server-rendered markup.',
             );
@@ -527,3 +547,3 @@ var ReactMount = {
       shouldReuseMarkup,
-      nextContext
+      nextContext,
     )._renderedComponent.getPublicInstance();
@@ -535,3 +555,2 @@ var ReactMount = {
 
-
   /**
@@ -550,3 +569,8 @@ var ReactMount = {
   render: function(nextElement, container, callback) {
-    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
+    return ReactMount._renderSubtreeIntoContainer(
+      null,
+      nextElement,
+      container,
+      callback,
+    );
   },
@@ -569,7 +593,7 @@ var ReactMount = {
       'unmountComponentAtNode(): Render methods should be a pure function ' +
-      'of props and state; triggering nested component updates from render ' +
-      'is not allowed. If necessary, trigger nested updates in ' +
-      'componentDidUpdate. Check the render method of %s.',
-      ReactCurrentOwner.current && ReactCurrentOwner.current.getName() ||
-        'ReactCompositeComponent'
+        'of props and state; triggering nested component updates from render ' +
+        'is not allowed. If necessary, trigger nested updates in ' +
+        'componentDidUpdate. Check the render method of %s.',
+      (ReactCurrentOwner.current && ReactCurrentOwner.current.getName()) ||
+        'ReactCompositeComponent',
     );
@@ -578,3 +602,3 @@ var ReactMount = {
       isValidContainer(container),
-      'unmountComponentAtNode(...): Target container is not a DOM element.'
+      'unmountComponentAtNode(...): Target container is not a DOM element.',
     );
@@ -584,4 +608,4 @@ var ReactMount = {
         !nodeIsRenderedByOtherInstance(container),
-        'unmountComponentAtNode(): The node you\'re attempting to unmount ' +
-        'was rendered by another copy of React.'
+        "unmountComponentAtNode(): The node you're attempting to unmount " +
+          'was rendered by another copy of React.',
       );
@@ -602,11 +626,9 @@ var ReactMount = {
           !containerHasNonRootReactChild,
-          'unmountComponentAtNode(): The node you\'re attempting to unmount ' +
-          'was rendered by React and is not a top-level container. %s',
-          (
-            isContainerReactRoot ?
-              'You may have accidentally passed in a React root node instead ' +
-              'of its container.' :
-              'Instead, have the parent component update its state and ' +
-              'rerender in order to remove this component.'
-          )
+          "unmountComponentAtNode(): The node you're attempting to unmount " +
+            'was rendered by React and is not a top-level container. %s',
+          isContainerReactRoot
+            ? 'You may have accidentally passed in a React root node instead ' +
+                'of its container.'
+            : 'Instead, have the parent component update its state and ' +
+                'rerender in order to remove this component.',
         );
@@ -621,3 +643,3 @@ var ReactMount = {
       container,
-      false
+      false,
     );
@@ -631,3 +653,3 @@ var ReactMount = {
     shouldReuseMarkup,
-    transaction
+    transaction,
   ) {
@@ -635,3 +657,3 @@ var ReactMount = {
       isValidContainer(container),
-      'mountComponentIntoNode(...): Target container is not valid.'
+      'mountComponentIntoNode(...): Target container is not valid.',
     );
@@ -645,3 +667,3 @@ var ReactMount = {
         var checksum = rootElement.getAttribute(
-          ReactMarkupChecksum.CHECKSUM_ATTR_NAME
+          ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
         );
@@ -652,3 +674,3 @@ var ReactMount = {
           ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
-          checksum
+          checksum,
         );
@@ -670,3 +692,4 @@ var ReactMount = {
             normalizer.contentDocument.write(markup);
-            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
+            normalizedMarkup =
+              normalizer.contentDocument.documentElement.outerHTML;
             document.body.removeChild(normalizer);
@@ -676,5 +699,7 @@ var ReactMount = {
         var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
-        var difference = ' (client) ' +
+        var difference =
+          ' (client) ' +
           normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) +
-          '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
+          '\n (server) ' +
+          rootMarkup.substring(diffIndex - 20, diffIndex + 20);
 
@@ -682,11 +707,11 @@ var ReactMount = {
           container.nodeType !== DOC_NODE_TYPE,
-          'You\'re trying to render a component to the document using ' +
-          'server rendering but the checksum was invalid. This usually ' +
-          'means you rendered a different component type or props on ' +
-          'the client from the one on the server, or your render() ' +
-          'methods are impure. React cannot handle this case due to ' +
-          'cross-browser quirks by rendering at the document root. You ' +
-          'should look for environment dependent code in your components ' +
-          'and ensure the props are the same client and server side:\n%s',
-          difference
+          "You're trying to render a component to the document using " +
+            'server rendering but the checksum was invalid. This usually ' +
+            'means you rendered a different component type or props on ' +
+            'the client from the one on the server, or your render() ' +
+            'methods are impure. React cannot handle this case due to ' +
+            'cross-browser quirks by rendering at the document root. You ' +
+            'should look for environment dependent code in your components ' +
+            'and ensure the props are the same client and server side:\n%s',
+          difference,
         );
@@ -697,10 +722,10 @@ var ReactMount = {
             'React attempted to reuse markup in a container but the ' +
-            'checksum was invalid. This generally means that you are ' +
-            'using server rendering and the markup generated on the ' +
-            'server was not what the client was expecting. React injected ' +
-            'new markup to compensate which works but you have lost many ' +
-            'of the benefits of server rendering. Instead, figure out ' +
-            'why the markup being generated is different on the client ' +
-            'or server:\n%s',
-            difference
+              'checksum was invalid. This generally means that you are ' +
+              'using server rendering and the markup generated on the ' +
+              'server was not what the client was expecting. React injected ' +
+              'new markup to compensate which works but you have lost many ' +
+              'of the benefits of server rendering. Instead, figure out ' +
+              'why the markup being generated is different on the client ' +
+              'or server:\n%s',
+            difference,
           );
@@ -712,6 +737,6 @@ var ReactMount = {
       container.nodeType !== DOC_NODE_TYPE,
-      'You\'re trying to render a component to the document but ' +
-        'you didn\'t use server rendering. We can\'t do this ' +
+      "You're trying to render a component to the document but " +
+        "you didn't use server rendering. We can't do this " +
         'without using server rendering due to cross-browser quirks. ' +
-        'See ReactDOMServer.renderToString() for server rendering.'
+        'See ReactDOMServer.renderToString() for server rendering.',
     );
@@ -729,3 +754,5 @@ var ReactMount = {
     if (__DEV__) {
-      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
+      var hostNode = ReactDOMComponentTree.getInstanceFromNode(
+        container.firstChild,
+      );
       if (hostNode._debugID !== 0) {
diff --git a/src/renderers/dom/client/ReactReconcileTransaction.js b/src/renderers/dom/client/ReactReconcileTransaction.js
index 8888dcb51..4b3950bbf 100644
--- a/src/renderers/dom/client/ReactReconcileTransaction.js
+++ b/src/renderers/dom/client/ReactReconcileTransaction.js
@@ -21,3 +21,2 @@ var ReactUpdateQueue = require('ReactUpdateQueue');
 
-
 /**
@@ -176,3 +175,2 @@ var Mixin = {
 
-
 Object.assign(ReactReconcileTransaction.prototype, Transaction, Mixin);
diff --git a/src/renderers/dom/client/__tests__/ReactBrowserEventEmitter-test.js b/src/renderers/dom/client/__tests__/ReactBrowserEventEmitter-test.js
index d76d4868a..fb0f0619b 100644
--- a/src/renderers/dom/client/__tests__/ReactBrowserEventEmitter-test.js
+++ b/src/renderers/dom/client/__tests__/ReactBrowserEventEmitter-test.js
@@ -56,3 +56,2 @@ function getInternal(node) {
 
-
 describe('ReactBrowserEventEmitter', () => {
@@ -71,7 +70,7 @@ describe('ReactBrowserEventEmitter', () => {
     ReactTestUtils.renderIntoDocument(
-      <div ref={(c) => GRANDPARENT = c}>
-        <div ref={(c) => PARENT = c}>
-          <div ref={(c) => CHILD = c} />
+      <div ref={c => (GRANDPARENT = c)}>
+        <div ref={c => (PARENT = c)}>
+          <div ref={c => (CHILD = c)} />
         </div>
-      </div>
+      </div>,
     );
@@ -110,14 +109,11 @@ describe('ReactBrowserEventEmitter', () => {
 
-  it(
-    'should not invoke handlers if ReactBrowserEventEmitter is disabled',
-    () => {
-      registerSimpleTestHandler();
-      ReactBrowserEventEmitter.setEnabled(false);
-      ReactTestUtils.SimulateNative.click(CHILD);
-      expect(LISTENER.mock.calls.length).toBe(0);
-      ReactBrowserEventEmitter.setEnabled(true);
-      ReactTestUtils.SimulateNative.click(CHILD);
-      expect(LISTENER.mock.calls.length).toBe(1);
-    }
-  );
+  it('should not invoke handlers if ReactBrowserEventEmitter is disabled', () => {
+    registerSimpleTestHandler();
+    ReactBrowserEventEmitter.setEnabled(false);
+    ReactTestUtils.SimulateNative.click(CHILD);
+    expect(LISTENER.mock.calls.length).toBe(0);
+    ReactBrowserEventEmitter.setEnabled(true);
+    ReactTestUtils.SimulateNative.click(CHILD);
+    expect(LISTENER.mock.calls.length).toBe(1);
+  });
 
@@ -127,3 +123,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(CHILD))
+      recordID.bind(null, getInternal(CHILD)),
     );
@@ -132,3 +128,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(PARENT))
+      recordID.bind(null, getInternal(PARENT)),
     );
@@ -137,3 +133,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(GRANDPARENT))
+      recordID.bind(null, getInternal(GRANDPARENT)),
     );
@@ -150,12 +146,8 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(CHILD))
-    );
-    EventPluginHub.putListener(
-      getInternal(PARENT),
-      ON_CLICK_KEY,
-      function() {
-        recordID(getInternal(PARENT));
-        throw new Error('Handler interrupted');
-      }
+      recordID.bind(null, getInternal(CHILD)),
     );
+    EventPluginHub.putListener(getInternal(PARENT), ON_CLICK_KEY, function() {
+      recordID(getInternal(PARENT));
+      throw new Error('Handler interrupted');
+    });
     EventPluginHub.putListener(
@@ -163,3 +155,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(GRANDPARENT))
+      recordID.bind(null, getInternal(GRANDPARENT)),
     );
@@ -175,26 +167,20 @@ describe('ReactBrowserEventEmitter', () => {
   it('should set currentTarget', () => {
-    EventPluginHub.putListener(
-      getInternal(CHILD),
-      ON_CLICK_KEY,
-      function(event) {
-        recordID(getInternal(CHILD));
-        expect(event.currentTarget).toBe(CHILD);
-      }
-    );
-    EventPluginHub.putListener(
-      getInternal(PARENT),
-      ON_CLICK_KEY,
-      function(event) {
-        recordID(getInternal(PARENT));
-        expect(event.currentTarget).toBe(PARENT);
-      }
-    );
-    EventPluginHub.putListener(
-      getInternal(GRANDPARENT),
-      ON_CLICK_KEY,
-      function(event) {
-        recordID(getInternal(GRANDPARENT));
-        expect(event.currentTarget).toBe(GRANDPARENT);
-      }
-    );
+    EventPluginHub.putListener(getInternal(CHILD), ON_CLICK_KEY, function(
+      event,
+    ) {
+      recordID(getInternal(CHILD));
+      expect(event.currentTarget).toBe(CHILD);
+    });
+    EventPluginHub.putListener(getInternal(PARENT), ON_CLICK_KEY, function(
+      event,
+    ) {
+      recordID(getInternal(PARENT));
+      expect(event.currentTarget).toBe(PARENT);
+    });
+    EventPluginHub.putListener(getInternal(GRANDPARENT), ON_CLICK_KEY, function(
+      event,
+    ) {
+      recordID(getInternal(GRANDPARENT));
+      expect(event.currentTarget).toBe(GRANDPARENT);
+    });
     ReactTestUtils.Simulate.click(CHILD);
@@ -210,3 +196,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(CHILD))
+      recordID.bind(null, getInternal(CHILD)),
     );
@@ -215,3 +201,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordIDAndStopPropagation.bind(null, getInternal(PARENT))
+      recordIDAndStopPropagation.bind(null, getInternal(PARENT)),
     );
@@ -220,3 +206,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(GRANDPARENT))
+      recordID.bind(null, getInternal(GRANDPARENT)),
     );
@@ -232,3 +218,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordIDAndStopPropagation.bind(null, getInternal(CHILD))
+      recordIDAndStopPropagation.bind(null, getInternal(CHILD)),
     );
@@ -237,3 +223,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(PARENT))
+      recordID.bind(null, getInternal(PARENT)),
     );
@@ -242,3 +228,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(GRANDPARENT))
+      recordID.bind(null, getInternal(GRANDPARENT)),
     );
@@ -253,3 +239,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordIDAndReturnFalse.bind(null, getInternal(CHILD))
+      recordIDAndReturnFalse.bind(null, getInternal(CHILD)),
     );
@@ -258,3 +244,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(PARENT))
+      recordID.bind(null, getInternal(PARENT)),
     );
@@ -263,3 +249,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(GRANDPARENT))
+      recordID.bind(null, getInternal(GRANDPARENT)),
     );
@@ -291,3 +277,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      handleChildClick
+      handleChildClick,
     );
@@ -296,3 +282,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      handleParentClick
+      handleParentClick,
     );
@@ -308,3 +294,3 @@ describe('ReactBrowserEventEmitter', () => {
         ON_CLICK_KEY,
-        handleParentClick
+        handleParentClick,
       );
@@ -314,3 +300,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      handleChildClick
+      handleChildClick,
     );
@@ -324,3 +310,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_MOUSE_ENTER_KEY,
-      recordID.bind(null, getInternal(CHILD))
+      recordID.bind(null, getInternal(CHILD)),
     );
@@ -335,3 +321,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_TOUCH_TAP_KEY,
-      recordID.bind(null, getInternal(CHILD))
+      recordID.bind(null, getInternal(CHILD)),
     );
@@ -339,3 +325,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, 0)
+      ReactTestUtils.nativeTouchData(0, 0),
     );
@@ -343,3 +329,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, 0)
+      ReactTestUtils.nativeTouchData(0, 0),
     );
@@ -353,3 +339,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_TOUCH_TAP_KEY,
-      recordID.bind(null, getInternal(CHILD))
+      recordID.bind(null, getInternal(CHILD)),
     );
@@ -357,3 +343,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, 0)
+      ReactTestUtils.nativeTouchData(0, 0),
     );
@@ -361,3 +347,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, tapMoveThreshold - 1)
+      ReactTestUtils.nativeTouchData(0, tapMoveThreshold - 1),
     );
@@ -371,3 +357,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_TOUCH_TAP_KEY,
-      recordID.bind(null, getInternal(CHILD))
+      recordID.bind(null, getInternal(CHILD)),
     );
@@ -375,3 +361,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, 0)
+      ReactTestUtils.nativeTouchData(0, 0),
     );
@@ -379,3 +365,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, tapMoveThreshold + 1)
+      ReactTestUtils.nativeTouchData(0, tapMoveThreshold + 1),
     );
@@ -428,3 +414,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_TOUCH_TAP_KEY,
-      recordID.bind(null, getInternal(CHILD))
+      recordID.bind(null, getInternal(CHILD)),
     );
@@ -433,3 +419,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_TOUCH_TAP_KEY,
-      recordID.bind(null, getInternal(PARENT))
+      recordID.bind(null, getInternal(PARENT)),
     );
@@ -438,3 +424,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_TOUCH_TAP_KEY,
-      recordID.bind(null, getInternal(GRANDPARENT))
+      recordID.bind(null, getInternal(GRANDPARENT)),
     );
@@ -442,3 +428,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, 0)
+      ReactTestUtils.nativeTouchData(0, 0),
     );
@@ -446,3 +432,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, 0)
+      ReactTestUtils.nativeTouchData(0, 0),
     );
@@ -469,3 +455,2 @@ describe('ReactBrowserEventEmitter', () => {
   });
-
 });
diff --git a/src/renderers/dom/client/__tests__/ReactDOM-test.js b/src/renderers/dom/client/__tests__/ReactDOM-test.js
index 76bc51e85..b55e913ff 100644
--- a/src/renderers/dom/client/__tests__/ReactDOM-test.js
+++ b/src/renderers/dom/client/__tests__/ReactDOM-test.js
@@ -55,5 +55,3 @@ describe('ReactDOM', () => {
   it('should allow children to be passed as an argument', () => {
-    var argDiv = ReactTestUtils.renderIntoDocument(
-      div(null, 'child')
-    );
+    var argDiv = ReactTestUtils.renderIntoDocument(div(null, 'child'));
     var argNode = ReactDOM.findDOMNode(argDiv);
@@ -64,3 +62,3 @@ describe('ReactDOM', () => {
     var conflictDiv = ReactTestUtils.renderIntoDocument(
-      div({children: 'fakechild'}, 'child')
+      div({children: 'fakechild'}, 'child'),
     );
@@ -79,3 +77,3 @@ describe('ReactDOM', () => {
         <div key="theBird" className="bird" />
-      </div>
+      </div>,
     );
@@ -86,3 +84,3 @@ describe('ReactDOM', () => {
         <div key="theBird" className="bird" />,
-      </div>
+      </div>,
     );
@@ -92,3 +90,3 @@ describe('ReactDOM', () => {
         <div key="theBird" className="bird" />,
-      </div>
+      </div>,
     );
@@ -99,3 +97,3 @@ describe('ReactDOM', () => {
         <div key="theBird" className="bird" />,
-      </div>
+      </div>,
     );
@@ -106,3 +104,3 @@ describe('ReactDOM', () => {
         <div key="theBird" className="bird" />,
-      </div>
+      </div>,
     );
@@ -113,7 +111,7 @@ describe('ReactDOM', () => {
 
-  it('allow React.DOM factories to be called without warnings', () => {
-    spyOn(console, 'error');
+  it('throws warning when  React.DOM factories are called', () => {
+    spyOn(console, 'warn');
     var element = React.DOM.div();
     expect(element.type).toBe('div');
-    expect(console.error.calls.count()).toBe(0);
+    expect(console.warn.calls.count()).toBe(1);
   });
@@ -137,3 +135,3 @@ describe('ReactDOM', () => {
       'ReactDOM.render(...): Expected the last optional `callback` argument ' +
-      'to be a function. Instead received: string.'
+        'to be a function. Instead received: string.',
     );
@@ -141,3 +139,3 @@ describe('ReactDOM', () => {
       'ReactDOM.render(...): Expected the last optional `callback` argument ' +
-      'to be a function. Instead received: Object.'
+        'to be a function. Instead received: Object.',
     );
@@ -145,3 +143,3 @@ describe('ReactDOM', () => {
       'ReactDOM.render(...): Expected the last optional `callback` argument ' +
-      'to be a function. Instead received: Foo (keys: a, b).'
+        'to be a function. Instead received: Foo (keys: a, b).',
     );
@@ -168,3 +166,3 @@ describe('ReactDOM', () => {
       'ReactDOM.render(...): Expected the last optional `callback` argument ' +
-      'to be a function. Instead received: string.'
+        'to be a function. Instead received: string.',
     );
@@ -172,3 +170,3 @@ describe('ReactDOM', () => {
       'ReactDOM.render(...): Expected the last optional `callback` argument ' +
-      'to be a function. Instead received: Object.'
+        'to be a function. Instead received: Object.',
     );
@@ -176,3 +174,3 @@ describe('ReactDOM', () => {
       'ReactDOM.render(...): Expected the last optional `callback` argument ' +
-      'to be a function. Instead received: Foo (keys: a, b).'
+        'to be a function. Instead received: Foo (keys: a, b).',
     );
diff --git a/src/renderers/dom/client/__tests__/ReactDOMComponentTree-test.js b/src/renderers/dom/client/__tests__/ReactDOMComponentTree-test.js
index 71733578e..f6ce6f428 100644
--- a/src/renderers/dom/client/__tests__/ReactDOMComponentTree-test.js
+++ b/src/renderers/dom/client/__tests__/ReactDOMComponentTree-test.js
@@ -90,3 +90,3 @@ describe('ReactDOMComponentTree', () => {
       return ReactDOMComponentTree.getClosestInstanceFromNode(
-        renderAndQuery(sel)
+        renderAndQuery(sel),
       );
@@ -103,3 +103,5 @@ describe('ReactDOMComponentTree', () => {
     var root = renderAndQuery(null);
-    var inst = ReactDOMComponentTree.getInstanceFromNode(root.children[0].childNodes[2]);
+    var inst = ReactDOMComponentTree.getInstanceFromNode(
+      root.children[0].childNodes[2],
+    );
     expect(inst._stringText).toBe('goodbye.');
@@ -109,3 +111,2 @@ describe('ReactDOMComponentTree', () => {
   });
-
 });
diff --git a/src/renderers/dom/client/__tests__/ReactDOMIDOperations-test.js b/src/renderers/dom/client/__tests__/ReactDOMIDOperations-test.js
index dffd62dae..1187c9bf5 100644
--- a/src/renderers/dom/client/__tests__/ReactDOMIDOperations-test.js
+++ b/src/renderers/dom/client/__tests__/ReactDOMIDOperations-test.js
@@ -25,9 +25,11 @@ describe('ReactDOMIDOperations', () => {
       stubInstance,
-      [{
-        type: 'SET_MARKUP',
-        content: html,
-        fromIndex: null,
-        toIndex: null,
-      }],
-      []
+      [
+        {
+          type: 'SET_MARKUP',
+          content: html,
+          fromIndex: null,
+          toIndex: null,
+        },
+      ],
+      [],
     );
diff --git a/src/renderers/dom/client/__tests__/ReactDOMSVG-test.js b/src/renderers/dom/client/__tests__/ReactDOMSVG-test.js
index 30760d3ae..d7904b003 100644
--- a/src/renderers/dom/client/__tests__/ReactDOMSVG-test.js
+++ b/src/renderers/dom/client/__tests__/ReactDOMSVG-test.js
@@ -17,3 +17,2 @@ var ReactDOMServer;
 describe('ReactDOMSVG', () => {
-
   beforeEach(() => {
@@ -27,3 +26,3 @@ describe('ReactDOMSVG', () => {
         <image xlinkHref="http://i.imgur.com/w7GCRPb.png" />
-      </svg>
+      </svg>,
     );
@@ -31,3 +30,2 @@ describe('ReactDOMSVG', () => {
   });
-
 });
diff --git a/src/renderers/dom/client/__tests__/ReactDOMTreeTraversal-test.js b/src/renderers/dom/client/__tests__/ReactDOMTreeTraversal-test.js
index d68855d30..ed40c8112 100644
--- a/src/renderers/dom/client/__tests__/ReactDOMTreeTraversal-test.js
+++ b/src/renderers/dom/client/__tests__/ReactDOMTreeTraversal-test.js
@@ -115,3 +115,7 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        target, target, argAggregator, ARG, ARG2
+        target,
+        target,
+        argAggregator,
+        ARG,
+        ARG2,
       );
@@ -126,3 +130,7 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave, enter, argAggregator, ARG, ARG2
+        leave,
+        enter,
+        argAggregator,
+        ARG,
+        ARG2,
       );
@@ -141,3 +149,7 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave, enter, argAggregator, ARG, ARG2
+        leave,
+        enter,
+        argAggregator,
+        ARG,
+        ARG2,
       );
@@ -154,3 +166,7 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave, enter, argAggregator, ARG, ARG2
+        leave,
+        enter,
+        argAggregator,
+        ARG,
+        ARG2,
       );
@@ -169,3 +185,7 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave, enter, argAggregator, ARG, ARG2
+        leave,
+        enter,
+        argAggregator,
+        ARG,
+        ARG2,
       );
@@ -182,3 +202,7 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave, enter, argAggregator, ARG, ARG2
+        leave,
+        enter,
+        argAggregator,
+        ARG,
+        ARG2,
       );
@@ -197,3 +221,7 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave, enter, argAggregator, ARG, ARG2
+        leave,
+        enter,
+        argAggregator,
+        ARG,
+        ARG2,
       );
@@ -212,3 +240,7 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave, enter, argAggregator, ARG, ARG2
+        leave,
+        enter,
+        argAggregator,
+        ARG,
+        ARG2,
       );
@@ -223,3 +255,4 @@ describe('ReactDOMTreeTraversal', () => {
         // Common ancestor with self is self.
-        {one: parent.refs.P_P1_C1.refs.DIV_1,
+        {
+          one: parent.refs.P_P1_C1.refs.DIV_1,
           two: parent.refs.P_P1_C1.refs.DIV_1,
@@ -265,3 +298,3 @@ describe('ReactDOMTreeTraversal', () => {
           getInst(plan.one),
-          getInst(plan.two)
+          getInst(plan.two),
         );
@@ -271,3 +304,2 @@ describe('ReactDOMTreeTraversal', () => {
   });
-
 });
diff --git a/src/renderers/dom/client/__tests__/ReactEventIndependence-test.js b/src/renderers/dom/client/__tests__/ReactEventIndependence-test.js
index 695e1927b..ed5ce813f 100644
--- a/src/renderers/dom/client/__tests__/ReactEventIndependence-test.js
+++ b/src/renderers/dom/client/__tests__/ReactEventIndependence-test.js
@@ -34,3 +34,3 @@ describe('ReactEventIndependence', () => {
         }}
-      />
+      />,
     );
@@ -46,3 +46,3 @@ describe('ReactEventIndependence', () => {
       <button onClick={() => clicks++}>click me</button>,
-      outer
+      outer,
     );
@@ -57,3 +57,3 @@ describe('ReactEventIndependence', () => {
       <button onClick={() => clicks++}>click me</button>,
-      container
+      container,
     );
@@ -68,3 +68,2 @@ describe('ReactEventIndependence', () => {
   });
-
 });
diff --git a/src/renderers/dom/client/__tests__/ReactEventListener-test.js b/src/renderers/dom/client/__tests__/ReactEventListener-test.js
index f0fc24b9b..598da2c6f 100644
--- a/src/renderers/dom/client/__tests__/ReactEventListener-test.js
+++ b/src/renderers/dom/client/__tests__/ReactEventListener-test.js
@@ -13,3 +13,2 @@
 
-
 var EVENT_TARGET_PARAM = 1;
@@ -40,15 +39,12 @@ describe('ReactEventListener', () => {
     expect(handleTopLevel.mock.calls.length).toBe(0);
-    ReactEventListener.dispatchEvent(
-      'topMouseOut',
-      {
-        type: 'mouseout',
-        fromElement: otherNode,
-        target: otherNode,
-        srcElement: otherNode,
-        toElement: ReactDOM.findDOMNode(component),
-        relatedTarget: ReactDOM.findDOMNode(component),
-        view: window,
-        path: [otherNode, otherNode],
-      },
-    );
+    ReactEventListener.dispatchEvent('topMouseOut', {
+      type: 'mouseout',
+      fromElement: otherNode,
+      target: otherNode,
+      srcElement: otherNode,
+      toElement: ReactDOM.findDOMNode(component),
+      relatedTarget: ReactDOM.findDOMNode(component),
+      view: window,
+      path: [otherNode, otherNode],
+    });
     expect(handleTopLevel.mock.calls.length).toBe(1);
@@ -63,4 +59,3 @@ describe('ReactEventListener', () => {
       childControl = ReactDOM.render(childControl, childContainer);
-      parentControl =
-        ReactDOM.render(parentControl, parentContainer);
+      parentControl = ReactDOM.render(parentControl, parentContainer);
       ReactDOM.findDOMNode(parentControl).appendChild(childContainer);
@@ -74,6 +69,8 @@ describe('ReactEventListener', () => {
       expect(calls.length).toBe(2);
-      expect(calls[0][EVENT_TARGET_PARAM])
-        .toBe(ReactDOMComponentTree.getInstanceFromNode(childControl));
-      expect(calls[1][EVENT_TARGET_PARAM])
-        .toBe(ReactDOMComponentTree.getInstanceFromNode(parentControl));
+      expect(calls[0][EVENT_TARGET_PARAM]).toBe(
+        ReactDOMComponentTree.getInstanceFromNode(childControl),
+      );
+      expect(calls[1][EVENT_TARGET_PARAM]).toBe(
+        ReactDOMComponentTree.getInstanceFromNode(parentControl),
+      );
     });
@@ -88,6 +85,7 @@ describe('ReactEventListener', () => {
       childControl = ReactDOM.render(childControl, childContainer);
-      parentControl =
-        ReactDOM.render(parentControl, parentContainer);
-      grandParentControl =
-        ReactDOM.render(grandParentControl, grandParentContainer);
+      parentControl = ReactDOM.render(parentControl, parentContainer);
+      grandParentControl = ReactDOM.render(
+        grandParentControl,
+        grandParentContainer,
+      );
       ReactDOM.findDOMNode(parentControl).appendChild(childContainer);
@@ -102,8 +100,11 @@ describe('ReactEventListener', () => {
       expect(calls.length).toBe(3);
-      expect(calls[0][EVENT_TARGET_PARAM])
-        .toBe(ReactDOMComponentTree.getInstanceFromNode(childControl));
-      expect(calls[1][EVENT_TARGET_PARAM])
-        .toBe(ReactDOMComponentTree.getInstanceFromNode(parentControl));
-      expect(calls[2][EVENT_TARGET_PARAM])
-        .toBe(ReactDOMComponentTree.getInstanceFromNode(grandParentControl));
+      expect(calls[0][EVENT_TARGET_PARAM]).toBe(
+        ReactDOMComponentTree.getInstanceFromNode(childControl),
+      );
+      expect(calls[1][EVENT_TARGET_PARAM]).toBe(
+        ReactDOMComponentTree.getInstanceFromNode(parentControl),
+      );
+      expect(calls[2][EVENT_TARGET_PARAM]).toBe(
+        ReactDOMComponentTree.getInstanceFromNode(grandParentControl),
+      );
     });
@@ -116,4 +117,3 @@ describe('ReactEventListener', () => {
       childControl = ReactDOM.render(childControl, childContainer);
-      parentControl =
-        ReactDOM.render(parentControl, parentContainer);
+      parentControl = ReactDOM.render(parentControl, parentContainer);
       ReactDOM.findDOMNode(parentControl).appendChild(childContainer);
@@ -125,9 +125,12 @@ describe('ReactEventListener', () => {
       var childNode = ReactDOM.findDOMNode(childControl);
-      handleTopLevel.mockImplementation(
-        function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
-          if (topLevelTarget === childNode) {
-            ReactDOM.unmountComponentAtNode(childContainer);
-          }
+      handleTopLevel.mockImplementation(function(
+        topLevelType,
+        topLevelTarget,
+        topLevelTargetID,
+        nativeEvent,
+      ) {
+        if (topLevelTarget === childNode) {
+          ReactDOM.unmountComponentAtNode(childContainer);
         }
-      );
+      });
 
@@ -140,6 +143,8 @@ describe('ReactEventListener', () => {
       expect(calls.length).toBe(2);
-      expect(calls[0][EVENT_TARGET_PARAM])
-        .toBe(ReactDOMComponentTree.getInstanceFromNode(childNode));
-      expect(calls[1][EVENT_TARGET_PARAM])
-        .toBe(ReactDOMComponentTree.getInstanceFromNode(parentControl));
+      expect(calls[0][EVENT_TARGET_PARAM]).toBe(
+        ReactDOMComponentTree.getInstanceFromNode(childNode),
+      );
+      expect(calls[1][EVENT_TARGET_PARAM]).toBe(
+        ReactDOMComponentTree.getInstanceFromNode(parentControl),
+      );
     });
@@ -149,10 +154,4 @@ describe('ReactEventListener', () => {
       var parentContainer = document.createElement('div');
-      var childControl = ReactDOM.render(
-        <div>Child</div>,
-        childContainer
-      );
-      var parentControl = ReactDOM.render(
-        <div>Parent</div>,
-        parentContainer
-      );
+      var childControl = ReactDOM.render(<div>Child</div>, childContainer);
+      var parentControl = ReactDOM.render(<div>Parent</div>, parentContainer);
       ReactDOM.findDOMNode(parentControl).appendChild(childContainer);
@@ -162,15 +161,20 @@ describe('ReactEventListener', () => {
       var childNode = ReactDOM.findDOMNode(childControl);
-      handleTopLevel.mockImplementation(
-        function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
-          ReactDOM.render(
-            <div>{topLevelTarget === childNode ? '1' : '2'}</div>,
-            childContainer
-          );
-          // Since we're batching, neither update should yet have gone through.
-          expect(childNode.textContent).toBe('Child');
-        }
-      );
+      handleTopLevel.mockImplementation(function(
+        topLevelType,
+        topLevelTarget,
+        topLevelTargetID,
+        nativeEvent,
+      ) {
+        ReactDOM.render(
+          <div>{topLevelTarget === childNode ? '1' : '2'}</div>,
+          childContainer,
+        );
+        // Since we're batching, neither update should yet have gone through.
+        expect(childNode.textContent).toBe('Child');
+      });
 
-      var callback =
-        ReactEventListener.dispatchEvent.bind(ReactEventListener, 'test');
+      var callback = ReactEventListener.dispatchEvent.bind(
+        ReactEventListener,
+        'test',
+      );
       callback({
@@ -206,4 +210,5 @@ describe('ReactEventListener', () => {
     expect(calls.length).toBe(1);
-    expect(calls[0][EVENT_TARGET_PARAM])
-      .toBe(ReactDOMComponentTree.getInstanceFromNode(instance.getInner()));
+    expect(calls[0][EVENT_TARGET_PARAM]).toBe(
+      ReactDOMComponentTree.getInstanceFromNode(instance.getInner()),
+    );
   });
diff --git a/src/renderers/dom/client/__tests__/ReactMount-test.js b/src/renderers/dom/client/__tests__/ReactMount-test.js
index d9d9e5eff..d83bd1108 100644
--- a/src/renderers/dom/client/__tests__/ReactMount-test.js
+++ b/src/renderers/dom/client/__tests__/ReactMount-test.js
@@ -47,3 +47,3 @@ describe('ReactMount', () => {
       }).toThrowError(
-        'unmountComponentAtNode(...): Target container is not a DOM element.'
+        'unmountComponentAtNode(...): Target container is not a DOM element.',
       );
@@ -57,3 +57,3 @@ describe('ReactMount', () => {
       'ReactDOM.render(): Invalid component element. Instead of passing a ' +
-      'string like \'div\', pass React.createElement(\'div\') or <div />.'
+        "string like 'div', pass React.createElement('div') or <div />.",
     );
@@ -72,3 +72,3 @@ describe('ReactMount', () => {
       'ReactDOM.render(): Invalid component element. Instead of passing a ' +
-      'class like Foo, pass React.createElement(Foo) or <Foo />.'
+        'class like Foo, pass React.createElement(Foo) or <Foo />.',
     );
@@ -162,3 +162,3 @@ describe('ReactMount', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Rendering components directly into document.body is discouraged'
+      'Rendering components directly into document.body is discouraged',
     );
@@ -169,3 +169,4 @@ describe('ReactMount', () => {
     var markup = ReactDOMServer.renderToString(
-      <div>This markup contains an nbsp entity: &nbsp; server text</div>);
+      <div>This markup contains an nbsp entity: &nbsp; server text</div>,
+    );
     div.innerHTML = markup;
@@ -175,3 +176,3 @@ describe('ReactMount', () => {
       <div>This markup contains an nbsp entity: &nbsp; client text</div>,
-      div
+      div,
     );
@@ -180,3 +181,3 @@ describe('ReactMount', () => {
       ' (client) nbsp entity: &nbsp; client text</div>\n' +
-      ' (server) nbsp entity: &nbsp; server text</div>'
+        ' (server) nbsp entity: &nbsp; server text</div>',
     );
@@ -225,5 +226,5 @@ describe('ReactMount', () => {
       'Warning: render(...): Replacing React-rendered children with a new ' +
-      'root component. If you intended to update the children of this node, ' +
-      'you should instead have the existing children update their state and ' +
-      'render the new components instead of calling ReactDOM.render.'
+        'root component. If you intended to update the children of this node, ' +
+        'you should instead have the existing children update their state and ' +
+        'render the new components instead of calling ReactDOM.render.',
     );
@@ -250,4 +251,4 @@ describe('ReactMount', () => {
     expect(console.error.calls.argsFor(0)[0]).toBe(
-      'Warning: unmountComponentAtNode(): The node you\'re attempting to unmount ' +
-      'was rendered by another copy of React.'
+      "Warning: unmountComponentAtNode(): The node you're attempting to unmount " +
+        'was rendered by another copy of React.',
     );
diff --git a/src/renderers/dom/client/__tests__/ReactMountDestruction-test.js b/src/renderers/dom/client/__tests__/ReactMountDestruction-test.js
index 6068d9933..37cc4f5b9 100644
--- a/src/renderers/dom/client/__tests__/ReactMountDestruction-test.js
+++ b/src/renderers/dom/client/__tests__/ReactMountDestruction-test.js
@@ -45,6 +45,7 @@ describe('ReactMount', () => {
 
-    var component =
+    var component = (
       <div>
         <div />
-      </div>;
+      </div>
+    );
     ReactDOM.render(component, mainContainerDiv);
@@ -57,6 +58,6 @@ describe('ReactMount', () => {
     expect(console.error.calls.argsFor(0)[0]).toBe(
-      'Warning: unmountComponentAtNode(): The node you\'re attempting to ' +
-      'unmount was rendered by React and is not a top-level container. You ' +
-      'may have accidentally passed in a React root node instead of its ' +
-      'container.'
+      "Warning: unmountComponentAtNode(): The node you're attempting to " +
+        'unmount was rendered by React and is not a top-level container. You ' +
+        'may have accidentally passed in a React root node instead of its ' +
+        'container.',
     );
@@ -67,3 +68,3 @@ describe('ReactMount', () => {
 
-    var component =
+    var component = (
       <div>
@@ -72,3 +73,4 @@ describe('ReactMount', () => {
         </div>
-      </div>;
+      </div>
+    );
     ReactDOM.render(component, mainContainerDiv);
@@ -81,6 +83,6 @@ describe('ReactMount', () => {
     expect(console.error.calls.argsFor(0)[0]).toBe(
-      'Warning: unmountComponentAtNode(): The node you\'re attempting to ' +
-      'unmount was rendered by React and is not a top-level container. ' +
-      'Instead, have the parent component update its state and rerender in ' +
-      'order to remove this component.'
+      "Warning: unmountComponentAtNode(): The node you're attempting to " +
+        'unmount was rendered by React and is not a top-level container. ' +
+        'Instead, have the parent component update its state and rerender in ' +
+        'order to remove this component.',
     );
diff --git a/src/renderers/dom/client/__tests__/ReactRenderDocument-test.js b/src/renderers/dom/client/__tests__/ReactRenderDocument-test.js
index 473bf9c76..8150a17f7 100644
--- a/src/renderers/dom/client/__tests__/ReactRenderDocument-test.js
+++ b/src/renderers/dom/client/__tests__/ReactRenderDocument-test.js
@@ -168,3 +168,3 @@ describe('rendering React components at document', () => {
     var markup = ReactDOMServer.renderToString(
-      <Component text="Hello world" />
+      <Component text="Hello world" />,
     );
@@ -196,3 +196,3 @@ describe('rendering React components at document', () => {
     var markup = ReactDOMServer.renderToString(
-      <Component text="Goodbye world" />
+      <Component text="Goodbye world" />,
     );
@@ -204,12 +204,12 @@ describe('rendering React components at document', () => {
     }).toThrowError(
-      'You\'re trying to render a component to the document using ' +
-      'server rendering but the checksum was invalid. This usually ' +
-      'means you rendered a different component type or props on ' +
-      'the client from the one on the server, or your render() methods ' +
-      'are impure. React cannot handle this case due to cross-browser ' +
-      'quirks by rendering at the document root. You should look for ' +
-      'environment dependent code in your components and ensure ' +
-      'the props are the same client and server side:\n' +
-      ' (client) dy data-reactid="4">Hello world</body></\n' +
-      ' (server) dy data-reactid="4">Goodbye world</body>'
+      "You're trying to render a component to the document using " +
+        'server rendering but the checksum was invalid. This usually ' +
+        'means you rendered a different component type or props on ' +
+        'the client from the one on the server, or your render() methods ' +
+        'are impure. React cannot handle this case due to cross-browser ' +
+        'quirks by rendering at the document root. You should look for ' +
+        'environment dependent code in your components and ensure ' +
+        'the props are the same client and server side:\n' +
+        ' (client) dy data-reactid="4">Hello world</body></\n' +
+        ' (server) dy data-reactid="4">Goodbye world</body>',
     );
@@ -240,6 +240,6 @@ describe('rendering React components at document', () => {
     }).toThrowError(
-      'You\'re trying to render a component to the document but you didn\'t ' +
-      'use server rendering. We can\'t do this without using server ' +
-      'rendering due to cross-browser quirks. See ' +
-      'ReactDOMServer.renderToString() for server rendering.'
+      "You're trying to render a component to the document but you didn't " +
+        "use server rendering. We can't do this without using server " +
+        'rendering due to cross-browser quirks. See ' +
+        'ReactDOMServer.renderToString() for server rendering.',
     );
@@ -248,3 +248,3 @@ describe('rendering React components at document', () => {
   it('supports findDOMNode on full-page components', () => {
-    var tree =
+    var tree = (
       <html>
@@ -256,3 +256,4 @@ describe('rendering React components at document', () => {
         </body>
-      </html>;
+      </html>
+    );
 
diff --git a/src/renderers/dom/client/__tests__/findDOMNode-test.js b/src/renderers/dom/client/__tests__/findDOMNode-test.js
index 05b76d4fb..502e24fe7 100644
--- a/src/renderers/dom/client/__tests__/findDOMNode-test.js
+++ b/src/renderers/dom/client/__tests__/findDOMNode-test.js
@@ -40,3 +40,3 @@ describe('findDOMNode', () => {
     }).toThrowError(
-      'Element appears to be neither ReactComponent nor DOMNode (keys: foo)'
+      'Element appears to be neither ReactComponent nor DOMNode (keys: foo)',
     );
@@ -56,3 +56,3 @@ describe('findDOMNode', () => {
     expect(() => ReactDOM.findDOMNode(inst)).toThrowError(
-      'findDOMNode was called on an unmounted component.'
+      'findDOMNode was called on an unmounted component.',
     );
@@ -67,3 +67,3 @@ describe('findDOMNode', () => {
       render() {
-        return <div/>;
+        return <div />;
       }
@@ -71,5 +71,4 @@ describe('findDOMNode', () => {
 
-    expect(() => ReactTestUtils.renderIntoDocument(<Bar/>)).not.toThrow();
+    expect(() => ReactTestUtils.renderIntoDocument(<Bar />)).not.toThrow();
   });
-
 });
diff --git a/src/renderers/dom/client/__tests__/inputValueTracking-test.js b/src/renderers/dom/client/__tests__/inputValueTracking-test.js
new file mode 100644
index 000000000..103964cc1
--- /dev/null
+++ b/src/renderers/dom/client/__tests__/inputValueTracking-test.js
@@ -0,0 +1,158 @@
+/**
+ * Copyright 2013-present, Facebook, Inc.
+ * All rights reserved.
+ *
+ * This source code is licensed under the BSD-style license found in the
+ * LICENSE file in the root directory of this source tree. An additional grant
+ * of patent rights can be found in the PATENTS file in the same directory.
+ *
+ * @emails react-core
+ */
+'use strict';
+
+var React = require('React');
+var ReactTestUtils = require('ReactTestUtils');
+var inputValueTracking = require('inputValueTracking');
+
+describe('inputValueTracking', function() {
+  var input, checkbox, mockComponent;
+
+  beforeEach(function() {
+    input = document.createElement('input');
+    input.type = 'text';
+    checkbox = document.createElement('input');
+    checkbox.type = 'checkbox';
+    mockComponent = {_hostNode: input, _wrapperState: {}};
+  });
+
+  it('should attach tracker to wrapper state', function() {
+    inputValueTracking.track(mockComponent);
+
+    expect(mockComponent._wrapperState.hasOwnProperty('valueTracker')).toBe(
+      true,
+    );
+  });
+
+  it('should define `value` on the instance node', function() {
+    inputValueTracking.track(mockComponent);
+
+    expect(input.hasOwnProperty('value')).toBe(true);
+  });
+
+  it('should define `checked` on the instance node', function() {
+    mockComponent._hostNode = checkbox;
+    inputValueTracking.track(mockComponent);
+
+    expect(checkbox.hasOwnProperty('checked')).toBe(true);
+  });
+
+  it('should initialize with the current value', function() {
+    input.value = 'foo';
+
+    inputValueTracking.track(mockComponent);
+
+    var tracker = mockComponent._wrapperState.valueTracker;
+
+    expect(tracker.getValue()).toEqual('foo');
+  });
+
+  it('should initialize with the current `checked`', function() {
+    mockComponent._hostNode = checkbox;
+    checkbox.checked = true;
+    inputValueTracking.track(mockComponent);
+
+    var tracker = mockComponent._wrapperState.valueTracker;
+
+    expect(tracker.getValue()).toEqual('true');
+  });
+
+  it('should track value changes', function() {
+    input.value = 'foo';
+
+    inputValueTracking.track(mockComponent);
+
+    var tracker = mockComponent._wrapperState.valueTracker;
+
+    input.value = 'bar';
+    expect(tracker.getValue()).toEqual('bar');
+  });
+
+  it('should tracked`checked` changes', function() {
+    mockComponent._hostNode = checkbox;
+    checkbox.checked = true;
+    inputValueTracking.track(mockComponent);
+
+    var tracker = mockComponent._wrapperState.valueTracker;
+
+    checkbox.checked = false;
+    expect(tracker.getValue()).toEqual('false');
+  });
+
+  it('should update value manually', function() {
+    input.value = 'foo';
+    inputValueTracking.track(mockComponent);
+
+    var tracker = mockComponent._wrapperState.valueTracker;
+
+    tracker.setValue('bar');
+    expect(tracker.getValue()).toEqual('bar');
+  });
+
+  it('should coerce value to a string', function() {
+    input.value = 'foo';
+    inputValueTracking.track(mockComponent);
+
+    var tracker = mockComponent._wrapperState.valueTracker;
+
+    tracker.setValue(500);
+    expect(tracker.getValue()).toEqual('500');
+  });
+
+  it('should update value if it changed and return result', function() {
+    inputValueTracking.track(mockComponent);
+    input.value = 'foo';
+
+    var tracker = mockComponent._wrapperState.valueTracker;
+
+    expect(inputValueTracking.updateValueIfChanged(mockComponent)).toBe(false);
+
+    tracker.setValue('bar');
+
+    expect(inputValueTracking.updateValueIfChanged(mockComponent)).toBe(true);
+
+    expect(tracker.getValue()).toEqual('foo');
+  });
+
+  it('should track value and return true when updating untracked instance', function() {
+    input.value = 'foo';
+
+    expect(inputValueTracking.updateValueIfChanged(mockComponent)).toBe(true);
+
+    var tracker = mockComponent._wrapperState.valueTracker;
+    expect(tracker.getValue()).toEqual('foo');
+  });
+
+  it('should return tracker from node', function() {
+    var node = ReactTestUtils.renderIntoDocument(
+      <input type="text" defaultValue="foo" />,
+    );
+    var tracker = inputValueTracking._getTrackerFromNode(node);
+    expect(tracker.getValue()).toEqual('foo');
+  });
+
+  it('should stop tracking', function() {
+    inputValueTracking.track(mockComponent);
+
+    expect(mockComponent._wrapperState.hasOwnProperty('valueTracker')).toBe(
+      true,
+    );
+
+    inputValueTracking.stopTracking(mockComponent);
+
+    expect(mockComponent._wrapperState.hasOwnProperty('valueTracker')).toBe(
+      false,
+    );
+
+    expect(input.hasOwnProperty('value')).toBe(false);
+  });
+});
diff --git a/src/renderers/dom/client/__tests__/validateDOMNesting-test.js b/src/renderers/dom/client/__tests__/validateDOMNesting-test.js
index 5f0afa5cb..97aac29a5 100644
--- a/src/renderers/dom/client/__tests__/validateDOMNesting-test.js
+++ b/src/renderers/dom/client/__tests__/validateDOMNesting-test.js
@@ -17,12 +17,85 @@ var validateDOMNesting;
 var specialTags = [
-  'address', 'applet', 'area', 'article', 'aside', 'base', 'basefont',
-  'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col',
-  'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset',
-  'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2',
-  'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe',
-  'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu',
-  'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol',
-  'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source',
-  'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot',
-  'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp',
+  'address',
+  'applet',
+  'area',
+  'article',
+  'aside',
+  'base',
+  'basefont',
+  'bgsound',
+  'blockquote',
+  'body',
+  'br',
+  'button',
+  'caption',
+  'center',
+  'col',
+  'colgroup',
+  'dd',
+  'details',
+  'dir',
+  'div',
+  'dl',
+  'dt',
+  'embed',
+  'fieldset',
+  'figcaption',
+  'figure',
+  'footer',
+  'form',
+  'frame',
+  'frameset',
+  'h1',
+  'h2',
+  'h3',
+  'h4',
+  'h5',
+  'h6',
+  'head',
+  'header',
+  'hgroup',
+  'hr',
+  'html',
+  'iframe',
+  'img',
+  'input',
+  'isindex',
+  'li',
+  'link',
+  'listing',
+  'main',
+  'marquee',
+  'menu',
+  'menuitem',
+  'meta',
+  'nav',
+  'noembed',
+  'noframes',
+  'noscript',
+  'object',
+  'ol',
+  'p',
+  'param',
+  'plaintext',
+  'pre',
+  'script',
+  'section',
+  'select',
+  'source',
+  'style',
+  'summary',
+  'table',
+  'tbody',
+  'td',
+  'template',
+  'textarea',
+  'tfoot',
+  'th',
+  'thead',
+  'title',
+  'tr',
+  'track',
+  'ul',
+  'wbr',
+  'xmp',
 ];
@@ -31,4 +104,16 @@ var specialTags = [
 var formattingTags = [
-  'a', 'b', 'big', 'code', 'em', 'font', 'i', 'nobr', 's', 'small', 'strike',
-  'strong', 'tt', 'u',
+  'a',
+  'b',
+  'big',
+  'code',
+  'em',
+  'font',
+  'i',
+  'nobr',
+  's',
+  'small',
+  'strike',
+  'strong',
+  'tt',
+  'u',
 ];
@@ -41,4 +126,7 @@ function isTagStackValid(stack) {
     }
-    ancestorInfo =
-      validateDOMNesting.updatedAncestorInfo(ancestorInfo, stack[i], null);
+    ancestorInfo = validateDOMNesting.updatedAncestorInfo(
+      ancestorInfo,
+      stack[i],
+      null,
+    );
   }
diff --git a/src/renderers/dom/client/eventPlugins/BeforeInputEventPlugin.js b/src/renderers/dom/client/eventPlugins/BeforeInputEventPlugin.js
index e1163835f..5f0df7e47 100644
--- a/src/renderers/dom/client/eventPlugins/BeforeInputEventPlugin.js
+++ b/src/renderers/dom/client/eventPlugins/BeforeInputEventPlugin.js
@@ -19,3 +19,3 @@ var SyntheticInputEvent = require('SyntheticInputEvent');
 
-import type { TopLevelTypes } from 'EventConstants';
+import type {TopLevelTypes} from 'EventConstants';
 
@@ -24,6 +24,4 @@ var START_KEYCODE = 229;
 
-var canUseCompositionEvent = (
-  ExecutionEnvironment.canUseDOM &&
-  'CompositionEvent' in window
-);
+var canUseCompositionEvent =
+  ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
 
@@ -37,3 +35,3 @@ if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
 // useful, so we don't use it.
-var canUseTextInputEvent = (
+var canUseTextInputEvent =
   ExecutionEnvironment.canUseDOM &&
@@ -41,4 +39,3 @@ var canUseTextInputEvent = (
   !documentMode &&
-  !isPresto()
-);
+  !isPresto();
 
@@ -47,9 +44,6 @@ var canUseTextInputEvent = (
 // spaces, for instance (\u3000) are not recorded correctly.
-var useFallbackCompositionData = (
+var useFallbackCompositionData =
   ExecutionEnvironment.canUseDOM &&
-  (
-    !canUseCompositionEvent ||
-    (documentMode && documentMode > 8 && documentMode <= 11)
-  )
-);
+  (!canUseCompositionEvent ||
+    (documentMode && documentMode > 8 && documentMode <= 11));
 
@@ -145,3 +139,2 @@ function isKeypressCommand(nativeEvent) {
 
-
 /**
@@ -172,6 +165,3 @@ function getCompositionEventType(topLevelType) {
 function isFallbackCompositionStart(topLevelType, nativeEvent) {
-  return (
-    topLevelType === 'topKeyDown' &&
-    nativeEvent.keyCode === START_KEYCODE
-  );
+  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
 }
@@ -189,3 +179,3 @@ function isFallbackCompositionEnd(topLevelType, nativeEvent) {
       // Command keys insert or clear IME input.
-      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
+      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
     case 'topKeyDown':
@@ -193,3 +183,3 @@ function isFallbackCompositionEnd(topLevelType, nativeEvent) {
       // code we must have exited earlier.
-      return (nativeEvent.keyCode !== START_KEYCODE);
+      return nativeEvent.keyCode !== START_KEYCODE;
     case 'topKeyPress':
@@ -231,3 +221,3 @@ function extractCompositionEvent(
   nativeEvent,
-  nativeEventTarget
+  nativeEventTarget,
 ) {
@@ -254,4 +244,5 @@ function extractCompositionEvent(
     if (!currentComposition && eventType === eventTypes.compositionStart) {
-      currentComposition =
-        FallbackCompositionState.getPooled(nativeEventTarget);
+      currentComposition = FallbackCompositionState.getPooled(
+        nativeEventTarget,
+      );
     } else if (eventType === eventTypes.compositionEnd) {
@@ -267,3 +258,3 @@ function extractCompositionEvent(
     nativeEvent,
-    nativeEventTarget
+    nativeEventTarget,
   );
@@ -350,5 +341,7 @@ function getFallbackBeforeInputChars(topLevelType: TopLevelTypes, nativeEvent) {
   if (currentComposition) {
-    if (topLevelType === 'topCompositionEnd'
-        || (!canUseCompositionEvent
-            && isFallbackCompositionEnd(topLevelType, nativeEvent))) {
+    if (
+      topLevelType === 'topCompositionEnd' ||
+      (!canUseCompositionEvent &&
+        isFallbackCompositionEnd(topLevelType, nativeEvent))
+    ) {
       var chars = currentComposition.getData();
@@ -404,3 +397,3 @@ function extractBeforeInputEvent(
   nativeEvent,
-  nativeEventTarget
+  nativeEventTarget,
 ) {
@@ -424,3 +417,3 @@ function extractBeforeInputEvent(
     nativeEvent,
-    nativeEventTarget
+    nativeEventTarget,
   );
@@ -451,3 +444,2 @@ function extractBeforeInputEvent(
 var BeforeInputEventPlugin = {
-
   eventTypes: eventTypes,
@@ -458,3 +450,3 @@ var BeforeInputEventPlugin = {
     nativeEvent,
-    nativeEventTarget
+    nativeEventTarget,
   ) {
@@ -465,3 +457,3 @@ var BeforeInputEventPlugin = {
         nativeEvent,
-        nativeEventTarget
+        nativeEventTarget,
       ),
@@ -471,3 +463,3 @@ var BeforeInputEventPlugin = {
         nativeEvent,
-        nativeEventTarget
+        nativeEventTarget,
       ),
diff --git a/src/renderers/dom/client/eventPlugins/ChangeEventPlugin.js b/src/renderers/dom/client/eventPlugins/ChangeEventPlugin.js
index e4a1f9b91..473aef515 100644
--- a/src/renderers/dom/client/eventPlugins/ChangeEventPlugin.js
+++ b/src/renderers/dom/client/eventPlugins/ChangeEventPlugin.js
@@ -20,2 +20,3 @@ var SyntheticEvent = require('SyntheticEvent');
 
+var inputValueTracking = require('inputValueTracking');
 var getEventTarget = require('getEventTarget');
@@ -43,2 +44,13 @@ var eventTypes = {
 
+function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
+  var event = SyntheticEvent.getPooled(
+    eventTypes.change,
+    inst,
+    nativeEvent,
+    target,
+  );
+  event.type = 'change';
+  EventPropagators.accumulateTwoPhaseDispatches(event);
+  return event;
+}
 /**
@@ -48,4 +60,2 @@ var activeElement = null;
 var activeElementInst = null;
-var activeElementValue = null;
-var activeElementValueProp = null;
 
@@ -57,4 +67,3 @@ function shouldUseChangeEvent(elem) {
   return (
-    nodeName === 'select' ||
-    (nodeName === 'input' && elem.type === 'file')
+    nodeName === 'select' || (nodeName === 'input' && elem.type === 'file')
   );
@@ -65,5 +74,5 @@ if (ExecutionEnvironment.canUseDOM) {
   // See `handleChange` comment below
-  doesChangeEventBubble = isEventSupported('change') && (
-    !document.documentMode || document.documentMode > 8
-  );
+  doesChangeEventBubble =
+    isEventSupported('change') &&
+    (!document.documentMode || document.documentMode > 8);
 }
@@ -71,9 +80,7 @@ if (ExecutionEnvironment.canUseDOM) {
 function manualDispatchChangeEvent(nativeEvent) {
-  var event = SyntheticEvent.getPooled(
-    eventTypes.change,
+  var event = createAndAccumulateChangeEvent(
     activeElementInst,
     nativeEvent,
-    getEventTarget(nativeEvent)
+    getEventTarget(nativeEvent),
   );
-  EventPropagators.accumulateTwoPhaseDispatches(event);
 
@@ -113,6 +120,14 @@ function stopWatchingForChangeEventIE8() {
 
-function getTargetInstForChangeEvent(
-  topLevelType,
-  targetInst
-) {
+function getInstIfValueChanged(targetInst, nativeEvent) {
+  var updated = inputValueTracking.updateValueIfChanged(targetInst);
+  var simulated =
+    nativeEvent.simulated === true &&
+    ChangeEventPlugin._allowSimulatedPassThrough;
+
+  if (updated || simulated) {
+    return targetInst;
+  }
+}
+
+function getTargetInstForChangeEvent(topLevelType, targetInst) {
   if (topLevelType === 'topChange') {
@@ -121,7 +136,4 @@ function getTargetInstForChangeEvent(
 }
-function handleEventsForChangeEventIE8(
-  topLevelType,
-  target,
-  targetInst
-) {
+
+function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
   if (topLevelType === 'topFocus') {
@@ -136,3 +148,2 @@ function handleEventsForChangeEventIE8(
 
-
 /**
@@ -144,26 +155,10 @@ if (ExecutionEnvironment.canUseDOM) {
   // deleting text, so we ignore its input events.
-  // IE10+ fire input events to often, such when a placeholder
-  // changes or when an input with a placeholder is focused.
-  isInputEventSupported = isEventSupported('input') && (
-    !document.documentMode || document.documentMode > 11
-  );
-}
 
-/**
- * (For IE <=11) Replacement getter/setter for the `value` property that gets
- * set on the active element.
- */
-var newValueProp = {
-  get: function() {
-    return activeElementValueProp.get.call(this);
-  },
-  set: function(val) {
-    // Cast to a string so we can do equality checks.
-    activeElementValue = '' + val;
-    activeElementValueProp.set.call(this, val);
-  },
-};
+  isInputEventSupported =
+    isEventSupported('input') &&
+    (!('documentMode' in document) || document.documentMode > 9);
+}
 
 /**
- * (For IE <=11) Starts tracking propertychange events on the passed-in element
+ * (For IE <=9) Starts tracking propertychange events on the passed-in element
  * and override the value property so that we can distinguish user events from
@@ -174,16 +169,3 @@ function startWatchingForValueChange(target, targetInst) {
   activeElementInst = targetInst;
-  activeElementValue = target.value;
-  activeElementValueProp = Object.getOwnPropertyDescriptor(
-    target.constructor.prototype,
-    'value'
-  );
-
-  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
-  // on DOM elements
-  Object.defineProperty(activeElement, 'value', newValueProp);
-  if (activeElement.attachEvent) {
-    activeElement.attachEvent('onpropertychange', handlePropertyChange);
-  } else {
-    activeElement.addEventListener('propertychange', handlePropertyChange, false);
-  }
+  activeElement.attachEvent('onpropertychange', handlePropertyChange);
 }
@@ -191,3 +173,3 @@ function startWatchingForValueChange(target, targetInst) {
 /**
- * (For IE <=11) Removes the event listeners from the currently-tracked element,
+ * (For IE <=9) Removes the event listeners from the currently-tracked element,
  * if any exists.
@@ -198,11 +180,3 @@ function stopWatchingForValueChange() {
   }
-
-  // delete restores the original property definition
-  delete activeElement.value;
-
-  if (activeElement.detachEvent) {
-    activeElement.detachEvent('onpropertychange', handlePropertyChange);
-  } else {
-    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
-  }
+  activeElement.detachEvent('onpropertychange', handlePropertyChange);
 
@@ -210,4 +184,2 @@ function stopWatchingForValueChange() {
   activeElementInst = null;
-  activeElementValue = null;
-  activeElementValueProp = null;
 }
@@ -215,3 +187,3 @@ function stopWatchingForValueChange() {
 /**
- * (For IE <=11) Handles a propertychange event, sending a `change` event if
+ * (For IE <=9) Handles a propertychange event, sending a `change` event if
  * the value of the active element has changed.
@@ -222,22 +194,4 @@ function handlePropertyChange(nativeEvent) {
   }
-  var value = nativeEvent.srcElement.value;
-  if (value === activeElementValue) {
-    return;
-  }
-  activeElementValue = value;
-
-  manualDispatchChangeEvent(nativeEvent);
-}
-
-/**
- * If a `change` event should be fired, returns the target's ID.
- */
-function getTargetInstForInputEvent(
-  topLevelType,
-  targetInst
-) {
-  if (topLevelType === 'topInput') {
-    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
-    // what we want so fall through here and trigger an abstract event
-    return targetInst;
+  if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
+    manualDispatchChangeEvent(nativeEvent);
   }
@@ -245,7 +199,3 @@ function getTargetInstForInputEvent(
 
-function handleEventsForInputEventIE(
-  topLevelType,
-  target,
-  targetInst
-) {
+function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
   if (topLevelType === 'topFocus') {
@@ -254,3 +204,3 @@ function handleEventsForInputEventIE(
     // equal to 'value'
-    // In IE9-11, propertychange fires for most input events but is buggy and
+    // In IE9, propertychange fires for most input events but is buggy and
     // doesn't fire when text is deleted, but conveniently, selectionchange
@@ -272,9 +222,12 @@ function handleEventsForInputEventIE(
 // For IE8 and IE9.
-function getTargetInstForInputEventIE(
+function getTargetInstForInputEventPolyfill(
   topLevelType,
-  targetInst
+  targetInst,
+  nativeEvent,
 ) {
-  if (topLevelType === 'topSelectionChange' ||
-      topLevelType === 'topKeyUp' ||
-      topLevelType === 'topKeyDown') {
+  if (
+    topLevelType === 'topSelectionChange' ||
+    topLevelType === 'topKeyUp' ||
+    topLevelType === 'topKeyDown'
+  ) {
     // On the selectionchange event, the target is just document which isn't
@@ -289,6 +242,3 @@ function getTargetInstForInputEventIE(
     // fire selectionchange normally.
-    if (activeElement && activeElement.value !== activeElementValue) {
-      activeElementValue = activeElement.value;
-      return activeElementInst;
-    }
+    return getInstIfValueChanged(activeElementInst, nativeEvent);
   }
@@ -296,3 +246,2 @@ function getTargetInstForInputEventIE(
 
-
 /**
@@ -304,4 +253,6 @@ function shouldUseClickEvent(elem) {
   // until `blur` in IE8.
+  var nodeName = elem.nodeName;
   return (
-    (elem.nodeName && elem.nodeName.toLowerCase() === 'input') &&
+    nodeName &&
+    nodeName.toLowerCase() === 'input' &&
     (elem.type === 'checkbox' || elem.type === 'radio')
@@ -310,8 +261,15 @@ function shouldUseClickEvent(elem) {
 
-function getTargetInstForClickEvent(
+function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
+  if (topLevelType === 'topClick') {
+    return getInstIfValueChanged(targetInst, nativeEvent);
+  }
+}
+
+function getTargetInstForInputOrChangeEvent(
   topLevelType,
-  targetInst
+  targetInst,
+  nativeEvent,
 ) {
-  if (topLevelType === 'topClick') {
-    return targetInst;
+  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
+    return getInstIfValueChanged(targetInst, nativeEvent);
   }
@@ -350,5 +308,7 @@ function handleControlledInputBlur(inst, node) {
 var ChangeEventPlugin = {
-
   eventTypes: eventTypes,
 
+  _allowSimulatedPassThrough: true,
+  _isInputEventSupported: isInputEventSupported,
+
   extractEvents: function(
@@ -357,6 +317,7 @@ var ChangeEventPlugin = {
     nativeEvent,
-    nativeEventTarget
+    nativeEventTarget,
   ) {
-    var targetNode = targetInst ?
-      ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
+    var targetNode = targetInst
+      ? ReactDOMComponentTree.getNodeFromInstance(targetInst)
+      : window;
 
@@ -371,6 +332,6 @@ var ChangeEventPlugin = {
       if (isInputEventSupported) {
-        getTargetInstFunc = getTargetInstForInputEvent;
+        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
       } else {
-        getTargetInstFunc = getTargetInstForInputEventIE;
-        handleEventFunc = handleEventsForInputEventIE;
+        getTargetInstFunc = getTargetInstForInputEventPolyfill;
+        handleEventFunc = handleEventsForInputEventPolyfill;
       }
@@ -381,12 +342,9 @@ var ChangeEventPlugin = {
     if (getTargetInstFunc) {
-      var inst = getTargetInstFunc(topLevelType, targetInst);
+      var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
       if (inst) {
-        var event = SyntheticEvent.getPooled(
-          eventTypes.change,
+        var event = createAndAccumulateChangeEvent(
           inst,
           nativeEvent,
-          nativeEventTarget
+          nativeEventTarget,
         );
-        event.type = 'change';
-        EventPropagators.accumulateTwoPhaseDispatches(event);
         return event;
@@ -396,7 +354,3 @@ var ChangeEventPlugin = {
     if (handleEventFunc) {
-      handleEventFunc(
-        topLevelType,
-        targetNode,
-        targetInst
-      );
+      handleEventFunc(topLevelType, targetNode, targetInst);
     }
@@ -408,3 +362,2 @@ var ChangeEventPlugin = {
   },
-
 };
diff --git a/src/renderers/dom/client/eventPlugins/EnterLeaveEventPlugin.js b/src/renderers/dom/client/eventPlugins/EnterLeaveEventPlugin.js
index 9c0ebc642..fa9925f14 100644
--- a/src/renderers/dom/client/eventPlugins/EnterLeaveEventPlugin.js
+++ b/src/renderers/dom/client/eventPlugins/EnterLeaveEventPlugin.js
@@ -20,6 +20,3 @@ var eventTypes = {
     registrationName: 'onMouseEnter',
-    dependencies: [
-      'topMouseOut',
-      'topMouseOver',
-    ],
+    dependencies: ['topMouseOut', 'topMouseOver'],
   },
@@ -27,6 +24,3 @@ var eventTypes = {
     registrationName: 'onMouseLeave',
-    dependencies: [
-      'topMouseOut',
-      'topMouseOver',
-    ],
+    dependencies: ['topMouseOut', 'topMouseOver'],
   },
@@ -35,3 +29,2 @@ var eventTypes = {
 var EnterLeaveEventPlugin = {
-
   eventTypes: eventTypes,
@@ -49,10 +42,11 @@ var EnterLeaveEventPlugin = {
     nativeEvent,
-    nativeEventTarget
+    nativeEventTarget,
   ) {
-    if (topLevelType === 'topMouseOver' &&
-        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
+    if (
+      topLevelType === 'topMouseOver' &&
+      (nativeEvent.relatedTarget || nativeEvent.fromElement)
+    ) {
       return null;
     }
-    if (topLevelType !== 'topMouseOut' &&
-        topLevelType !== 'topMouseOver') {
+    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
       // Must not be a mouse in or mouse out - ignoring.
@@ -80,4 +74,5 @@ var EnterLeaveEventPlugin = {
       var related = nativeEvent.relatedTarget || nativeEvent.toElement;
-      to = related ?
-        ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
+      to = related
+        ? ReactDOMComponentTree.getClosestInstanceFromNode(related)
+        : null;
     } else {
@@ -93,6 +88,8 @@ var EnterLeaveEventPlugin = {
 
-    var fromNode =
-      from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
-    var toNode =
-      to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
+    var fromNode = from == null
+      ? win
+      : ReactDOMComponentTree.getNodeFromInstance(from);
+    var toNode = to == null
+      ? win
+      : ReactDOMComponentTree.getNodeFromInstance(to);
 
@@ -102,3 +99,3 @@ var EnterLeaveEventPlugin = {
       nativeEvent,
-      nativeEventTarget
+      nativeEventTarget,
     );
@@ -112,3 +109,3 @@ var EnterLeaveEventPlugin = {
       nativeEvent,
-      nativeEventTarget
+      nativeEventTarget,
     );
@@ -122,3 +119,2 @@ var EnterLeaveEventPlugin = {
   },
-
 };
diff --git a/src/renderers/dom/client/eventPlugins/SelectEventPlugin.js b/src/renderers/dom/client/eventPlugins/SelectEventPlugin.js
index a4467c72a..8b89dc377 100644
--- a/src/renderers/dom/client/eventPlugins/SelectEventPlugin.js
+++ b/src/renderers/dom/client/eventPlugins/SelectEventPlugin.js
@@ -23,7 +23,6 @@ var shallowEqual = require('shallowEqual');
 
-var skipSelectionChangeEvent = (
+var skipSelectionChangeEvent =
   ExecutionEnvironment.canUseDOM &&
   'documentMode' in document &&
-  document.documentMode <= 11
-);
+  document.documentMode <= 11;
 
@@ -67,4 +66,6 @@ var hasListener = false;
 function getSelection(node) {
-  if ('selectionStart' in node &&
-      ReactInputSelection.hasSelectionCapabilities(node)) {
+  if (
+    'selectionStart' in node &&
+    ReactInputSelection.hasSelectionCapabilities(node)
+  ) {
     return {
@@ -103,5 +104,7 @@ function constructSelectEvent(nativeEvent, nativeEventTarget) {
   // won't dispatch.
-  if (mouseDown ||
-      activeElement == null ||
-      activeElement !== getActiveElement()) {
+  if (
+    mouseDown ||
+    activeElement == null ||
+    activeElement !== getActiveElement()
+  ) {
     return null;
@@ -118,3 +121,3 @@ function constructSelectEvent(nativeEvent, nativeEventTarget) {
       nativeEvent,
-      nativeEventTarget
+      nativeEventTarget,
     );
@@ -147,3 +150,2 @@ function constructSelectEvent(nativeEvent, nativeEventTarget) {
 var SelectEventPlugin = {
-
   eventTypes: eventTypes,
@@ -154,3 +156,3 @@ var SelectEventPlugin = {
     nativeEvent,
-    nativeEventTarget
+    nativeEventTarget,
   ) {
@@ -160,4 +162,5 @@ var SelectEventPlugin = {
 
-    var targetNode = targetInst ?
-      ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
+    var targetNode = targetInst
+      ? ReactDOMComponentTree.getNodeFromInstance(targetInst)
+      : window;
 
@@ -166,4 +169,6 @@ var SelectEventPlugin = {
       case 'topFocus':
-        if (isTextInputElement(targetNode) ||
-            targetNode.contentEditable === 'true') {
+        if (
+          isTextInputElement(targetNode) ||
+          targetNode.contentEditable === 'true'
+        ) {
           activeElement = targetNode;
@@ -178,3 +183,2 @@ var SelectEventPlugin = {
         break;
-
       // Don't fire the event while the user is dragging. This matches the
@@ -188,3 +192,2 @@ var SelectEventPlugin = {
         return constructSelectEvent(nativeEvent, nativeEventTarget);
-
       // Chrome and IE fire non-standard event when selection is changed (and
@@ -202,3 +205,3 @@ var SelectEventPlugin = {
         }
-        // falls through
+      // falls through
       case 'topKeyDown':
diff --git a/src/renderers/dom/client/eventPlugins/SimpleEventPlugin.js b/src/renderers/dom/client/eventPlugins/SimpleEventPlugin.js
index 4479b4476..6acaf74a5 100644
--- a/src/renderers/dom/client/eventPlugins/SimpleEventPlugin.js
+++ b/src/renderers/dom/client/eventPlugins/SimpleEventPlugin.js
@@ -39,6 +39,3 @@ import type {
 import type {ReactInstance} from 'ReactInstanceType';
-import type {
-  EventTypes,
-  PluginModule,
-} from 'PluginModuleType';
+import type {EventTypes, PluginModule} from 'PluginModuleType';
 
@@ -153,4 +150,6 @@ function isInteractive(tag) {
   return (
-    tag === 'button' || tag === 'input' ||
-    tag === 'select' || tag === 'textarea'
+    tag === 'button' ||
+    tag === 'input' ||
+    tag === 'select' ||
+    tag === 'textarea'
   );
@@ -159,3 +158,2 @@ function isInteractive(tag) {
 var SimpleEventPlugin: PluginModule<MouseEvent> = {
-
   eventTypes: eventTypes,
@@ -213,3 +211,3 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
         }
-        /* falls through */
+      /* falls through */
       case 'topKeyDown':
@@ -228,3 +226,3 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
         }
-        /* falls through */
+      /* falls through */
       case 'topDoubleClick':
@@ -233,4 +231,4 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
       case 'topMouseUp':
-        // TODO: Disabled elements should not respond to mouse events
-        /* falls through */
+      // TODO: Disabled elements should not respond to mouse events
+      /* falls through */
       case 'topMouseOut':
@@ -279,3 +277,3 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
       'SimpleEventPlugin: Unhandled event type, `%s`.',
-      topLevelType
+      topLevelType,
     );
@@ -285,3 +283,3 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
       nativeEvent,
-      nativeEventTarget
+      nativeEventTarget,
     );
@@ -308,3 +306,3 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
           'click',
-          emptyFunction
+          emptyFunction,
         );
@@ -324,3 +322,2 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
   },
-
 };
diff --git a/src/renderers/dom/client/eventPlugins/TapEventPlugin.js b/src/renderers/dom/client/eventPlugins/TapEventPlugin.js
index 2bf0c2fa3..a5b46a07e 100644
--- a/src/renderers/dom/client/eventPlugins/TapEventPlugin.js
+++ b/src/renderers/dom/client/eventPlugins/TapEventPlugin.js
@@ -23,6 +23,3 @@ var isEndish = EventPluginUtils.isEndish;
 
-import type {
-  EventTypes,
-  PluginModule,
-} from 'PluginModuleType';
+import type {EventTypes, PluginModule} from 'PluginModuleType';
 import type {ReactInstance} from 'ReactInstanceType';
@@ -37,10 +34,6 @@ import type {TopLevelTypes} from 'EventConstants';
  */
-type TouchPropertyKey =
-  'clientX' |
-  'clientY' |
-  'pageX' |
-  'pageY';
+type TouchPropertyKey = 'clientX' | 'clientY' | 'pageX' | 'pageY';
 
 declare class _Touch extends Touch {
-  [key: TouchPropertyKey]: number;
+  [key: TouchPropertyKey]: number,
 }
@@ -83,11 +76,8 @@ function getAxisCoordOfEvent(
   }
-  return axis.page in nativeEvent ?
-    nativeEvent[axis.page] :
-    nativeEvent[axis.client] + ViewportMetrics[axis.envScroll];
+  return axis.page in nativeEvent
+    ? nativeEvent[axis.page]
+    : nativeEvent[axis.client] + ViewportMetrics[axis.envScroll];
 }
 
-function getDistance(
-  coords: CoordinatesType,
-  nativeEvent: _Touch,
-): number {
+function getDistance(coords: CoordinatesType, nativeEvent: _Touch): number {
   var pageX = getAxisCoordOfEvent(Axis.x, nativeEvent);
@@ -96,3 +86,3 @@ function getDistance(
     Math.pow(pageX - coords.x, 2) + Math.pow(pageY - coords.y, 2),
-    0.5
+    0.5,
   );
@@ -107,7 +97,5 @@ var touchEvents = [
 
-var dependencies = [
-  'topMouseDown',
-  'topMouseMove',
-  'topMouseUp',
-].concat(touchEvents);
+var dependencies = ['topMouseDown', 'topMouseMove', 'topMouseUp'].concat(
+  touchEvents,
+);
 
@@ -128,3 +116,2 @@ var TOUCH_DELAY = 1000;
 var TapEventPlugin: PluginModule<_Touch> = {
-
   tapMoveThreshold: tapMoveThreshold,
@@ -149,3 +136,3 @@ var TapEventPlugin: PluginModule<_Touch> = {
     } else {
-      if (usedTouch && (Date.now() - usedTouchTime < TOUCH_DELAY)) {
+      if (usedTouch && Date.now() - usedTouchTime < TOUCH_DELAY) {
         return null;
@@ -160,3 +147,3 @@ var TapEventPlugin: PluginModule<_Touch> = {
         nativeEvent,
-        nativeEventTarget
+        nativeEventTarget,
       );
@@ -173,3 +160,2 @@ var TapEventPlugin: PluginModule<_Touch> = {
   },
-
 };
diff --git a/src/renderers/dom/client/eventPlugins/__tests__/BeforeInputEventPlugin-test.js b/src/renderers/dom/client/eventPlugins/__tests__/BeforeInputEventPlugin-test.js
index 5d2ec7ab8..265ca820b 100644
--- a/src/renderers/dom/client/eventPlugins/__tests__/BeforeInputEventPlugin-test.js
+++ b/src/renderers/dom/client/eventPlugins/__tests__/BeforeInputEventPlugin-test.js
@@ -17,8 +17,8 @@ var ReactTestUtils = require('ReactTestUtils');
 var EventMapping = {
-  compositionstart : 'topCompositionStart',
-  compositionend   : 'topCompositionEnd',
-  keyup            : 'topKeyUp',
-  keydown          : 'topKeyDown',
-  textInput        : 'topTextInput',
-  textinput        : null, // Not defined now
+  compositionstart: 'topCompositionStart',
+  compositionend: 'topCompositionEnd',
+  keyup: 'topKeyUp',
+  keydown: 'topKeyDown',
+  textInput: 'topTextInput',
+  textinput: null, // Not defined now
 };
@@ -64,3 +64,3 @@ describe('BeforeInputEventPlugin', function() {
       evt,
-      node
+      node,
     );
@@ -69,3 +69,3 @@ describe('BeforeInputEventPlugin', function() {
   function setElementText(node) {
-    return (args) => node.innerHTML = args;
+    return args => (node.innerHTML = args);
   }
@@ -96,4 +96,6 @@ describe('BeforeInputEventPlugin', function() {
           throw new EventMismatchError(idx, 'Expected not to be null');
-        } else if (expected.type === null
-                 || !(actual instanceof expected.type)) {
+        } else if (
+          expected.type === null ||
+          !(actual instanceof expected.type)
+        ) {
           throw new EventMismatchError(idx, 'Unexpected type: ' + actual);
@@ -105,4 +107,6 @@ describe('BeforeInputEventPlugin', function() {
             } else if (actual[expectedKey] !== expected.data[expectedKey]) {
-              throw new EventMismatchError(idx,
-                'ValueMismatch: ' + actual[expectedKey]);
+              throw new EventMismatchError(
+                idx,
+                'ValueMismatch: ' + actual[expectedKey],
+              );
             }
@@ -144,12 +148,22 @@ describe('BeforeInputEventPlugin', function() {
   var Expected_Webkit = () => [
-    {type: ModuleCache.SyntheticCompositionEvent, data: {}}, {type: null},
-    {type: null}, {type: ModuleCache.SyntheticInputEvent, data: {data: 'A'}},
-    {type: null}, {type: null}, // textinput of A
-    {type: null}, {type: null}, // keyUp of 65
-    {type: null}, {type: ModuleCache.SyntheticInputEvent, data: {data: 'abc'}},
-    {type: null}, {type: null}, // textinput of abc
-    {type: null}, {type: null}, // keyUp of 32
-    {type: null}, {type: ModuleCache.SyntheticInputEvent, data: {data: 'xyz'}},
-    {type: null}, {type: null}, // textinput of xyz
-    {type: null}, {type: null}, // keyUp of 32
+    {type: ModuleCache.SyntheticCompositionEvent, data: {}},
+    {type: null},
+    {type: null},
+    {type: ModuleCache.SyntheticInputEvent, data: {data: 'A'}},
+    {type: null},
+    {type: null}, // textinput of A
+    {type: null},
+    {type: null}, // keyUp of 65
+    {type: null},
+    {type: ModuleCache.SyntheticInputEvent, data: {data: 'abc'}},
+    {type: null},
+    {type: null}, // textinput of abc
+    {type: null},
+    {type: null}, // keyUp of 32
+    {type: null},
+    {type: ModuleCache.SyntheticInputEvent, data: {data: 'xyz'}},
+    {type: null},
+    {type: null}, // textinput of xyz
+    {type: null},
+    {type: null}, // keyUp of 32
     {type: ModuleCache.SyntheticCompositionEvent, data: {data: 'Hello'}},
@@ -163,15 +177,25 @@ describe('BeforeInputEventPlugin', function() {
   var Expected_IE11 = () => [
-    {type: ModuleCache.SyntheticCompositionEvent, data: {}}, {type: null},
-    {type: null}, {type: null}, // textInput of A
-    {type: null}, {type: null}, // textinput of A
-    {type: null}, {type: null}, // keyUp of 65
-    {type: null}, {type: null}, // textInput of abc
-    {type: null}, {type: null}, // textinput of abc
+    {type: ModuleCache.SyntheticCompositionEvent, data: {}},
+    {type: null},
+    {type: null},
+    {type: null}, // textInput of A
+    {type: null},
+    {type: null}, // textinput of A
+    {type: null},
+    {type: null}, // keyUp of 65
+    {type: null},
+    {type: null}, // textInput of abc
+    {type: null},
+    {type: null}, // textinput of abc
 
     // fallbackData should NOT be set at keyUp with any of END_KEYCODES
-    {type: null}, {type: null}, // keyUp of 32
+    {type: null},
+    {type: null}, // keyUp of 32
 
-    {type: null}, {type: null}, // textInput of xyz
-    {type: null}, {type: null}, // textinput of xyz
-    {type: null}, {type: null}, // keyUp of 32
+    {type: null},
+    {type: null}, // textInput of xyz
+    {type: null},
+    {type: null}, // textinput of xyz
+    {type: null},
+    {type: null}, // keyUp of 32
 
@@ -196,4 +220,3 @@ describe('BeforeInputEventPlugin', function() {
 
-    Scenario.forEach((el) =>
-        el.run.call(this, node, events).apply(this, el.arg));
+    Scenario.forEach(el => el.run.call(this, node, events).apply(this, el.arg));
     verifyEvents(events, ExpectedResult());
@@ -203,3 +226,6 @@ describe('BeforeInputEventPlugin', function() {
     TestEditableReactComponent(
-      simulateWebkit, Scenario_Composition, Expected_Webkit);
+      simulateWebkit,
+      Scenario_Composition,
+      Expected_Webkit,
+    );
   });
@@ -208,3 +234,6 @@ describe('BeforeInputEventPlugin', function() {
     TestEditableReactComponent(
-      simulateIE11, Scenario_Composition, Expected_IE11);
+      simulateIE11,
+      Scenario_Composition,
+      Expected_IE11,
+    );
   });
diff --git a/src/renderers/dom/client/eventPlugins/__tests__/ChangeEventPlugin-test.js b/src/renderers/dom/client/eventPlugins/__tests__/ChangeEventPlugin-test.js
index bd6a904e6..d85970cec 100644
--- a/src/renderers/dom/client/eventPlugins/__tests__/ChangeEventPlugin-test.js
+++ b/src/renderers/dom/client/eventPlugins/__tests__/ChangeEventPlugin-test.js
@@ -14,5 +14,38 @@
 var React = require('React');
+var ReactDOM = require('ReactDOM');
 var ReactTestUtils = require('ReactTestUtils');
+var ChangeEventPlugin = require('ChangeEventPlugin');
+var inputValueTracking = require('inputValueTracking');
+
+function getTrackedValue(elem) {
+  var tracker = inputValueTracking._getTrackerFromNode(elem);
+  return tracker.getValue();
+}
+
+function setTrackedValue(elem, value) {
+  var tracker = inputValueTracking._getTrackerFromNode(elem);
+  tracker.setValue(value);
+}
+
+function setUntrackedValue(elem, value) {
+  var tracker = inputValueTracking._getTrackerFromNode(elem);
+  var current = tracker.getValue();
+
+  if (elem.type === 'checkbox' || elem.type === 'radio') {
+    elem.checked = value;
+  } else {
+    elem.value = value;
+  }
+  tracker.setValue(current);
+}
 
 describe('ChangeEventPlugin', () => {
+  beforeEach(() => {
+    ChangeEventPlugin._allowSimulatedPassThrough = false;
+  });
+
+  afterEach(() => {
+    ChangeEventPlugin._allowSimulatedPassThrough = true;
+  });
+
   it('should fire change for checkbox input', () => {
@@ -25,6 +58,174 @@ describe('ChangeEventPlugin', () => {
 
-    var input = ReactTestUtils.renderIntoDocument(<input type="checkbox" onChange={cb}/>);
+    var input = ReactTestUtils.renderIntoDocument(
+      <input type="checkbox" onChange={cb} />,
+    );
+
+    setUntrackedValue(input, true);
+    ReactTestUtils.SimulateNative.click(input);
+
+    expect(called).toBe(1);
+  });
+
+  it('should catch setting the value programmatically', function() {
+    var input = ReactTestUtils.renderIntoDocument(
+      <input type="text" defaultValue="foo" />,
+    );
+
+    input.value = 'bar';
+    expect(getTrackedValue(input)).toBe('bar');
+  });
+
+  it('should not fire change when setting the value programmatically', function() {
+    var called = 0;
+
+    function cb(e) {
+      called += 1;
+      expect(e.type).toBe('change');
+    }
+
+    var input = ReactTestUtils.renderIntoDocument(
+      <input type="text" onChange={cb} defaultValue="foo" />,
+    );
+
+    input.value = 'bar';
+    ReactTestUtils.SimulateNative.change(input);
+    expect(called).toBe(0);
+
+    setUntrackedValue(input, 'foo');
+    ReactTestUtils.SimulateNative.change(input);
+
+    expect(called).toBe(1);
+  });
+
+  it('should not fire change when setting checked programmatically', function() {
+    var called = 0;
+
+    function cb(e) {
+      called += 1;
+      expect(e.type).toBe('change');
+    }
+
+    var input = ReactTestUtils.renderIntoDocument(
+      <input type="checkbox" onChange={cb} defaultChecked={true} />,
+    );
+
+    input.checked = true;
     ReactTestUtils.SimulateNative.click(input);
+    expect(called).toBe(0);
+
+    input.checked = false;
+    setTrackedValue(input, undefined);
+    ReactTestUtils.SimulateNative.click(input);
+
     expect(called).toBe(1);
   });
+
+  it('should unmount', function() {
+    var container = document.createElement('div');
+    var input = ReactDOM.render(<input />, container);
+
+    ReactDOM.unmountComponentAtNode(container);
+  });
+
+  it('should only fire change for checked radio button once', function() {
+    var called = 0;
+
+    function cb(e) {
+      called += 1;
+    }
+
+    var input = ReactTestUtils.renderIntoDocument(
+      <input type="radio" onChange={cb} />,
+    );
+    setUntrackedValue(input, true);
+    ReactTestUtils.SimulateNative.click(input);
+    ReactTestUtils.SimulateNative.click(input);
+    expect(called).toBe(1);
+  });
+
+  it('should deduplicate input value change events', function() {
+    var input;
+    var called = 0;
+
+    function cb(e) {
+      called += 1;
+      expect(e.type).toBe('change');
+    }
+
+    [
+      <input type="text" onChange={cb} />,
+      <input type="number" onChange={cb} />,
+      <input type="range" onChange={cb} />,
+    ].forEach(function(element) {
+      called = 0;
+      input = ReactTestUtils.renderIntoDocument(element);
+
+      setUntrackedValue(input, '40');
+      ReactTestUtils.SimulateNative.change(input);
+      ReactTestUtils.SimulateNative.change(input);
+      expect(called).toBe(1);
+
+      called = 0;
+      input = ReactTestUtils.renderIntoDocument(element);
+      setUntrackedValue(input, '40');
+      ReactTestUtils.SimulateNative.input(input);
+      ReactTestUtils.SimulateNative.input(input);
+      expect(called).toBe(1);
+
+      called = 0;
+      input = ReactTestUtils.renderIntoDocument(element);
+      setUntrackedValue(input, '40');
+      ReactTestUtils.SimulateNative.input(input);
+      ReactTestUtils.SimulateNative.change(input);
+      expect(called).toBe(1);
+    });
+  });
+
+  it('should listen for both change and input events when supported', function() {
+    var called = 0;
+
+    function cb(e) {
+      called += 1;
+      expect(e.type).toBe('change');
+    }
+
+    if (!ChangeEventPlugin._isInputEventSupported) {
+      return;
+    }
+
+    var input = ReactTestUtils.renderIntoDocument(
+      <input type="range" onChange={cb} />,
+    );
+    setUntrackedValue(input, 'bar');
+
+    ReactTestUtils.SimulateNative.input(input);
+
+    setUntrackedValue(input, 'foo');
+
+    ReactTestUtils.SimulateNative.change(input);
+
+    expect(called).toBe(2);
+  });
+
+  it('should only fire events when the value changes for range inputs', function() {
+    var called = 0;
+
+    function cb(e) {
+      called += 1;
+      expect(e.type).toBe('change');
+    }
+
+    var input = ReactTestUtils.renderIntoDocument(
+      <input type="range" onChange={cb} />,
+    );
+    setUntrackedValue(input, '40');
+    ReactTestUtils.SimulateNative.input(input);
+    ReactTestUtils.SimulateNative.change(input);
+
+    setUntrackedValue(input, 'foo');
+
+    ReactTestUtils.SimulateNative.input(input);
+    ReactTestUtils.SimulateNative.change(input);
+    expect(called).toBe(2);
+  });
 });
diff --git a/src/renderers/dom/client/eventPlugins/__tests__/EnterLeaveEventPlugin-test.js b/src/renderers/dom/client/eventPlugins/__tests__/EnterLeaveEventPlugin-test.js
index f856cf320..5fbf06893 100644
--- a/src/renderers/dom/client/eventPlugins/__tests__/EnterLeaveEventPlugin-test.js
+++ b/src/renderers/dom/client/eventPlugins/__tests__/EnterLeaveEventPlugin-test.js
@@ -35,3 +35,3 @@ describe('EnterLeaveEventPlugin', () => {
     iframeDocument.write(
-      '<!DOCTYPE html><html><head></head><body><div></div></body></html>'
+      '<!DOCTYPE html><html><head></head><body><div></div></body></html>',
     );
@@ -39,3 +39,6 @@ describe('EnterLeaveEventPlugin', () => {
 
-    var component = ReactDOM.render(<div />, iframeDocument.body.getElementsByTagName('div')[0]);
+    var component = ReactDOM.render(
+      <div />,
+      iframeDocument.body.getElementsByTagName('div')[0],
+    );
     var div = ReactDOM.findDOMNode(component);
@@ -46,3 +49,3 @@ describe('EnterLeaveEventPlugin', () => {
       {target: div},
-      div
+      div,
     );
diff --git a/src/renderers/dom/client/eventPlugins/__tests__/SelectEventPlugin-test.js b/src/renderers/dom/client/eventPlugins/__tests__/SelectEventPlugin-test.js
index d8d79f708..41707da4f 100644
--- a/src/renderers/dom/client/eventPlugins/__tests__/SelectEventPlugin-test.js
+++ b/src/renderers/dom/client/eventPlugins/__tests__/SelectEventPlugin-test.js
@@ -25,3 +25,3 @@ describe('SelectEventPlugin', () => {
       {target: node},
-      node
+      node,
     );
@@ -65,3 +65,3 @@ describe('SelectEventPlugin', () => {
     var rendered = ReactTestUtils.renderIntoDocument(
-      <WithSelect onSelect={cb} />
+      <WithSelect onSelect={cb} />,
     );
diff --git a/src/renderers/dom/client/eventPlugins/__tests__/SimpleEventPlugin-test.js b/src/renderers/dom/client/eventPlugins/__tests__/SimpleEventPlugin-test.js
index 5f4a533ea..09dbea866 100644
--- a/src/renderers/dom/client/eventPlugins/__tests__/SimpleEventPlugin-test.js
+++ b/src/renderers/dom/client/eventPlugins/__tests__/SimpleEventPlugin-test.js
@@ -13,3 +13,2 @@
 
-
 describe('SimpleEventPlugin', function() {
@@ -45,3 +44,3 @@ describe('SimpleEventPlugin', function() {
   it('A non-interactive tags click when disabled', function() {
-    var element = (<div onClick={ onClick } />);
+    var element = <div onClick={onClick} />;
     expectClickThru(mounted(element));
@@ -51,3 +50,3 @@ describe('SimpleEventPlugin', function() {
     var element = ReactTestUtils.renderIntoDocument(
-      <div onClick={onClick}><div /></div>
+      <div onClick={onClick}><div /></div>,
     );
@@ -61,3 +60,3 @@ describe('SimpleEventPlugin', function() {
     var element = ReactTestUtils.renderIntoDocument(
-      <button onClick={onClick} disabled={true}><span /></button>
+      <button onClick={onClick} disabled={true}><span /></button>,
     );
@@ -71,3 +70,3 @@ describe('SimpleEventPlugin', function() {
     var element = ReactTestUtils.renderIntoDocument(
-      <button disabled={true}><span onClick={onClick} /></button>
+      <button disabled={true}><span onClick={onClick} /></button>,
     );
@@ -83,3 +82,3 @@ describe('SimpleEventPlugin', function() {
         <button disabled={true}><span /></button>
-      </div>
+      </div>,
     );
@@ -93,3 +92,3 @@ describe('SimpleEventPlugin', function() {
     var element = ReactTestUtils.renderIntoDocument(
-      <button disabled={true}><span onClickCapture={onClick} /></button>
+      <button disabled={true}><span onClickCapture={onClick} /></button>,
     );
@@ -102,5 +101,3 @@ describe('SimpleEventPlugin', function() {
   ['button', 'input', 'select', 'textarea'].forEach(function(tagName) {
-
     describe(tagName, function() {
-
       it('should forward clicks when it starts out not disabled', () => {
@@ -125,8 +122,8 @@ describe('SimpleEventPlugin', function() {
         var element = ReactDOM.render(
-          React.createElement(tagName, { onClick: onClick, disabled: true }),
-          container
+          React.createElement(tagName, {onClick: onClick, disabled: true}),
+          container,
         );
         element = ReactDOM.render(
-          React.createElement(tagName, { onClick: onClick }),
-          container
+          React.createElement(tagName, {onClick: onClick}),
+          container,
         );
@@ -138,8 +135,8 @@ describe('SimpleEventPlugin', function() {
         var element = ReactDOM.render(
-          React.createElement(tagName, { onClick: onClick }),
-          container
+          React.createElement(tagName, {onClick: onClick}),
+          container,
         );
         element = ReactDOM.render(
-          React.createElement(tagName, { onClick: onClick, disabled: true }),
-          container
+          React.createElement(tagName, {onClick: onClick, disabled: true}),
+          container,
         );
@@ -151,8 +148,8 @@ describe('SimpleEventPlugin', function() {
         var element = ReactDOM.render(
-          React.createElement(tagName, { onClick: onClick, disabled: true }),
-          container
+          React.createElement(tagName, {onClick: onClick, disabled: true}),
+          container,
         );
         element = ReactDOM.render(
-          React.createElement(tagName, { onClick: onClick, disabled: false }),
-          container
+          React.createElement(tagName, {onClick: onClick, disabled: false}),
+          container,
         );
@@ -163,3 +160,2 @@ describe('SimpleEventPlugin', function() {
 
-
   describe('iOS bubbling click fix', function() {
@@ -170,3 +166,3 @@ describe('SimpleEventPlugin', function() {
 
-      ReactDOM.render(<button onClick={ onClick } />, container);
+      ReactDOM.render(<button onClick={onClick} />, container);
 
@@ -182,3 +178,3 @@ describe('SimpleEventPlugin', function() {
 
-      ReactDOM.render(<div onClick={ onClick } />, container);
+      ReactDOM.render(<div onClick={onClick} />, container);
 
diff --git a/src/renderers/dom/client/findDOMNode.js b/src/renderers/dom/client/findDOMNode.js
index 238b5938d..9af446e20 100644
--- a/src/renderers/dom/client/findDOMNode.js
+++ b/src/renderers/dom/client/findDOMNode.js
@@ -36,7 +36,7 @@ function findDOMNode(componentOrElement) {
         '%s is accessing findDOMNode inside its render(). ' +
-        'render() should be a pure function of props and state. It should ' +
-        'never access something that requires stale data from the previous ' +
-        'render, such as refs. Move this logic to componentDidMount and ' +
-        'componentDidUpdate instead.',
-        owner.getName() || 'A component'
+          'render() should be a pure function of props and state. It should ' +
+          'never access something that requires stale data from the previous ' +
+          'render, such as refs. Move this logic to componentDidMount and ' +
+          'componentDidUpdate instead.',
+        owner.getName() || 'A component',
       );
@@ -59,6 +59,3 @@ function findDOMNode(componentOrElement) {
   if (typeof componentOrElement.render === 'function') {
-    invariant(
-      false,
-      'findDOMNode was called on an unmounted component.'
-    );
+    invariant(false, 'findDOMNode was called on an unmounted component.');
   } else {
@@ -67,3 +64,3 @@ function findDOMNode(componentOrElement) {
       'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
-      Object.keys(componentOrElement)
+      Object.keys(componentOrElement),
     );
diff --git a/src/renderers/dom/client/inputValueTracking.js b/src/renderers/dom/client/inputValueTracking.js
new file mode 100644
index 000000000..f5fa806e3
--- /dev/null
+++ b/src/renderers/dom/client/inputValueTracking.js
@@ -0,0 +1,130 @@
+/**
+ * Copyright 2013-present, Facebook, Inc.
+ * All rights reserved.
+ *
+ * This source code is licensed under the BSD-style license found in the
+ * LICENSE file in the root directory of this source tree. An additional grant
+ * of patent rights can be found in the PATENTS file in the same directory.
+ *
+ * @providesModule inputValueTracking
+ */
+
+'use strict';
+var ReactDOMComponentTree = require('ReactDOMComponentTree');
+
+function isCheckable(elem) {
+  var type = elem.type;
+  var nodeName = elem.nodeName;
+  return (
+    nodeName &&
+    nodeName.toLowerCase() === 'input' &&
+    (type === 'checkbox' || type === 'radio')
+  );
+}
+
+function getTracker(inst) {
+  return inst._wrapperState.valueTracker;
+}
+
+function attachTracker(inst, tracker) {
+  inst._wrapperState.valueTracker = tracker;
+}
+
+function detachTracker(inst) {
+  delete inst._wrapperState.valueTracker;
+}
+
+function getValueFromNode(node) {
+  var value;
+  if (node) {
+    value = isCheckable(node) ? '' + node.checked : node.value;
+  }
+  return value;
+}
+
+var inputValueTracking = {
+  // exposed for testing
+  _getTrackerFromNode(node) {
+    return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
+  },
+
+  track: function(inst) {
+    if (getTracker(inst)) {
+      return;
+    }
+
+    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
+    var valueField = isCheckable(node) ? 'checked' : 'value';
+    var descriptor = Object.getOwnPropertyDescriptor(
+      node.constructor.prototype,
+      valueField,
+    );
+
+    var currentValue = '' + node[valueField];
+
+    // if someone has already defined a value bail and don't track value
+    // will cause over reporting of changes, but it's better then a hard failure
+    // (needed for certain tests that spyOn input values)
+    if (node.hasOwnProperty(valueField)) {
+      return;
+    }
+
+    Object.defineProperty(node, valueField, {
+      enumerable: descriptor.enumerable,
+      configurable: true,
+      get: function() {
+        return descriptor.get.call(this);
+      },
+      set: function(value) {
+        currentValue = '' + value;
+        descriptor.set.call(this, value);
+      },
+    });
+
+    attachTracker(inst, {
+      getValue() {
+        return currentValue;
+      },
+      setValue(value) {
+        currentValue = '' + value;
+      },
+      stopTracking() {
+        detachTracker(inst);
+        delete node[valueField];
+      },
+    });
+  },
+
+  updateValueIfChanged(inst) {
+    if (!inst) {
+      return false;
+    }
+    var tracker = getTracker(inst);
+
+    if (!tracker) {
+      inputValueTracking.track(inst);
+      return true;
+    }
+
+    var lastValue = tracker.getValue();
+    var nextValue = getValueFromNode(
+      ReactDOMComponentTree.getNodeFromInstance(inst),
+    );
+
+    if (nextValue !== lastValue) {
+      tracker.setValue(nextValue);
+      return true;
+    }
+
+    return false;
+  },
+
+  stopTracking(inst) {
+    var tracker = getTracker(inst);
+    if (tracker) {
+      tracker.stopTracking();
+    }
+  },
+};
+
+module.exports = inputValueTracking;
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticAnimationEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticAnimationEvent.js
index 17b6f368b..1a6925a11 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticAnimationEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticAnimationEvent.js
@@ -36,11 +36,14 @@ function SyntheticAnimationEvent(
   nativeEvent,
-  nativeEventTarget
+  nativeEventTarget,
 ) {
-  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+  return SyntheticEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
 
-SyntheticEvent.augmentClass(
-  SyntheticAnimationEvent,
-  AnimationEventInterface
-);
+SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
 
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticClipboardEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticClipboardEvent.js
index cd0d4b226..e277334b6 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticClipboardEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticClipboardEvent.js
@@ -21,7 +21,5 @@ var ClipboardEventInterface = {
   clipboardData: function(event) {
-    return (
-      'clipboardData' in event ?
-        event.clipboardData :
-        window.clipboardData
-    );
+    return 'clipboardData' in event
+      ? event.clipboardData
+      : window.clipboardData;
   },
@@ -35,4 +33,15 @@ var ClipboardEventInterface = {
  */
-function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
-  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+function SyntheticClipboardEvent(
+  dispatchConfig,
+  dispatchMarker,
+  nativeEvent,
+  nativeEventTarget,
+) {
+  return SyntheticEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticCompositionEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticCompositionEvent.js
index 35b7f7ce1..77c53c5c9 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticCompositionEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticCompositionEvent.js
@@ -33,5 +33,11 @@ function SyntheticCompositionEvent(
   nativeEvent,
-  nativeEventTarget
+  nativeEventTarget,
 ) {
-  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+  return SyntheticEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
@@ -40,3 +46,3 @@ SyntheticEvent.augmentClass(
   SyntheticCompositionEvent,
-  CompositionEventInterface
+  CompositionEventInterface,
 );
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticDragEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticDragEvent.js
index f5d97420b..3f74638f9 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticDragEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticDragEvent.js
@@ -29,4 +29,15 @@ var DragEventInterface = {
  */
-function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
-  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+function SyntheticDragEvent(
+  dispatchConfig,
+  dispatchMarker,
+  nativeEvent,
+  nativeEventTarget,
+) {
+  return SyntheticMouseEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticFocusEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticFocusEvent.js
index e145b8a43..de0616834 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticFocusEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticFocusEvent.js
@@ -29,4 +29,15 @@ var FocusEventInterface = {
  */
-function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
-  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+function SyntheticFocusEvent(
+  dispatchConfig,
+  dispatchMarker,
+  nativeEvent,
+  nativeEventTarget,
+) {
+  return SyntheticUIEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticInputEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticInputEvent.js
index ba99c7c89..2639d3b53 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticInputEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticInputEvent.js
@@ -34,11 +34,14 @@ function SyntheticInputEvent(
   nativeEvent,
-  nativeEventTarget
+  nativeEventTarget,
 ) {
-  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+  return SyntheticEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
 
-SyntheticEvent.augmentClass(
-  SyntheticInputEvent,
-  InputEventInterface
-);
+SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
 
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticKeyboardEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticKeyboardEvent.js
index ce71c17ca..8cc554b93 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticKeyboardEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticKeyboardEvent.js
@@ -77,4 +77,15 @@ var KeyboardEventInterface = {
  */
-function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
-  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+function SyntheticKeyboardEvent(
+  dispatchConfig,
+  dispatchMarker,
+  nativeEvent,
+  nativeEventTarget,
+) {
+  return SyntheticUIEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticMouseEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticMouseEvent.js
index e8962b9ad..786d20c79 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticMouseEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticMouseEvent.js
@@ -48,6 +48,7 @@ var MouseEventInterface = {
   relatedTarget: function(event) {
-    return event.relatedTarget || (
-      event.fromElement === event.srcElement ?
-        event.toElement :
-        event.fromElement
+    return (
+      event.relatedTarget ||
+      (event.fromElement === event.srcElement
+        ? event.toElement
+        : event.fromElement)
     );
@@ -56,10 +57,10 @@ var MouseEventInterface = {
   pageX: function(event) {
-    return 'pageX' in event ?
-      event.pageX :
-      event.clientX + ViewportMetrics.currentScrollLeft;
+    return 'pageX' in event
+      ? event.pageX
+      : event.clientX + ViewportMetrics.currentScrollLeft;
   },
   pageY: function(event) {
-    return 'pageY' in event ?
-      event.pageY :
-      event.clientY + ViewportMetrics.currentScrollTop;
+    return 'pageY' in event
+      ? event.pageY
+      : event.clientY + ViewportMetrics.currentScrollTop;
   },
@@ -73,4 +74,15 @@ var MouseEventInterface = {
  */
-function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
-  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+function SyntheticMouseEvent(
+  dispatchConfig,
+  dispatchMarker,
+  nativeEvent,
+  nativeEventTarget,
+) {
+  return SyntheticUIEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticTouchEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticTouchEvent.js
index 38078a732..a954c9fec 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticTouchEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticTouchEvent.js
@@ -38,4 +38,15 @@ var TouchEventInterface = {
  */
-function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
-  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+function SyntheticTouchEvent(
+  dispatchConfig,
+  dispatchMarker,
+  nativeEvent,
+  nativeEventTarget,
+) {
+  return SyntheticUIEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticTransitionEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticTransitionEvent.js
index 982410f78..4b9087a1c 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticTransitionEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticTransitionEvent.js
@@ -36,11 +36,14 @@ function SyntheticTransitionEvent(
   nativeEvent,
-  nativeEventTarget
+  nativeEventTarget,
 ) {
-  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+  return SyntheticEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
 
-SyntheticEvent.augmentClass(
-  SyntheticTransitionEvent,
-  TransitionEventInterface
-);
+SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
 
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticUIEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticUIEvent.js
index 16b5907e9..308d19048 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticUIEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticUIEvent.js
@@ -52,4 +52,15 @@ var UIEventInterface = {
  */
-function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
-  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+function SyntheticUIEvent(
+  dispatchConfig,
+  dispatchMarker,
+  nativeEvent,
+  nativeEventTarget,
+) {
+  return SyntheticEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticWheelEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticWheelEvent.js
index eea628e33..e1359a250 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticWheelEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticWheelEvent.js
@@ -21,16 +21,15 @@ var WheelEventInterface = {
   deltaX: function(event) {
-    return (
-      'deltaX' in event ? event.deltaX :
-      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
-      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
-    );
+    return 'deltaX' in event
+      ? event.deltaX
+      : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
+        'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
   },
   deltaY: function(event) {
-    return (
-      'deltaY' in event ? event.deltaY :
-      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
-      'wheelDeltaY' in event ? -event.wheelDeltaY :
-      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
-      'wheelDelta' in event ? -event.wheelDelta : 0
-    );
+    return 'deltaY' in event
+      ? event.deltaY
+      : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
+        'wheelDeltaY' in event
+        ? -event.wheelDeltaY
+        : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
+          'wheelDelta' in event ? -event.wheelDelta : 0;
   },
@@ -51,4 +50,15 @@ var WheelEventInterface = {
  */
-function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
-  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+function SyntheticWheelEvent(
+  dispatchConfig,
+  dispatchMarker,
+  nativeEvent,
+  nativeEventTarget,
+) {
+  return SyntheticMouseEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
diff --git a/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticClipboardEvent-test.js b/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticClipboardEvent-test.js
index 8d8241545..97f1a47f0 100644
--- a/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticClipboardEvent-test.js
+++ b/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticClipboardEvent-test.js
@@ -31,8 +31,11 @@ describe('SyntheticClipboardEvent', () => {
           // Mock clipboardData since native implementation doesn't have a constructor
-          var clipboardData = jasmine.createSpyObj(
-            'clipboardData',
-            ['dropEffect', 'effectAllowed', 'files', 'items', 'types']
-          );
+          var clipboardData = jasmine.createSpyObj('clipboardData', [
+            'dropEffect',
+            'effectAllowed',
+            'files',
+            'items',
+            'types',
+          ]);
           var clipboardEvent = createEvent({clipboardData: clipboardData});
-          
+
           expect(clipboardEvent.clipboardData).toBe(clipboardData);
diff --git a/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticEvent-test.js b/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticEvent-test.js
index f54d45411..d5c678201 100644
--- a/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticEvent-test.js
+++ b/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticEvent-test.js
@@ -55,5 +55,5 @@ describe('SyntheticEvent', () => {
   it('should be prevented if nativeEvent is prevented', () => {
-    expect(
-      createEvent({defaultPrevented: true}).isDefaultPrevented()
-    ).toBe(true);
+    expect(createEvent({defaultPrevented: true}).isDefaultPrevented()).toBe(
+      true,
+    );
     expect(createEvent({returnValue: false}).isDefaultPrevented()).toBe(true);
@@ -93,6 +93,6 @@ describe('SyntheticEvent', () => {
       'Warning: This synthetic event is reused for performance reasons. If ' +
-      'you\'re seeing this, you\'re accessing the property `type` on a ' +
-      'released/nullified synthetic event. This is set to null. If you must ' +
-      'keep the original synthetic event around, use event.persist(). ' +
-      'See https://fb.me/react-event-pooling for more information.'
+        "you're seeing this, you're accessing the property `type` on a " +
+        'released/nullified synthetic event. This is set to null. If you must ' +
+        'keep the original synthetic event around, use event.persist(). ' +
+        'See https://fb.me/react-event-pooling for more information.',
     );
@@ -105,3 +105,3 @@ describe('SyntheticEvent', () => {
     syntheticEvent.destructor();
-    expect(syntheticEvent.type = 'MouseEvent').toBe('MouseEvent');
+    expect((syntheticEvent.type = 'MouseEvent')).toBe('MouseEvent');
     expect(console.error.calls.count()).toBe(1);
@@ -109,6 +109,6 @@ describe('SyntheticEvent', () => {
       'Warning: This synthetic event is reused for performance reasons. If ' +
-      'you\'re seeing this, you\'re setting the property `type` on a ' +
-      'released/nullified synthetic event. This is effectively a no-op. If you must ' +
-      'keep the original synthetic event around, use event.persist(). ' +
-      'See https://fb.me/react-event-pooling for more information.'
+        "you're seeing this, you're setting the property `type` on a " +
+        'released/nullified synthetic event. This is effectively a no-op. If you must ' +
+        'keep the original synthetic event around, use event.persist(). ' +
+        'See https://fb.me/react-event-pooling for more information.',
     );
@@ -124,6 +124,6 @@ describe('SyntheticEvent', () => {
       'Warning: This synthetic event is reused for performance reasons. If ' +
-      'you\'re seeing this, you\'re accessing the method `preventDefault` on a ' +
-      'released/nullified synthetic event. This is a no-op function. If you must ' +
-      'keep the original synthetic event around, use event.persist(). ' +
-      'See https://fb.me/react-event-pooling for more information.'
+        "you're seeing this, you're accessing the method `preventDefault` on a " +
+        'released/nullified synthetic event. This is a no-op function. If you must ' +
+        'keep the original synthetic event around, use event.persist(). ' +
+        'See https://fb.me/react-event-pooling for more information.',
     );
@@ -139,6 +139,6 @@ describe('SyntheticEvent', () => {
       'Warning: This synthetic event is reused for performance reasons. If ' +
-      'you\'re seeing this, you\'re accessing the method `stopPropagation` on a ' +
-      'released/nullified synthetic event. This is a no-op function. If you must ' +
-      'keep the original synthetic event around, use event.persist(). ' +
-      'See https://fb.me/react-event-pooling for more information.'
+        "you're seeing this, you're accessing the method `stopPropagation` on a " +
+        'released/nullified synthetic event. This is a no-op function. If you must ' +
+        'keep the original synthetic event around, use event.persist(). ' +
+        'See https://fb.me/react-event-pooling for more information.',
     );
@@ -149,25 +149,28 @@ describe('SyntheticEvent', () => {
   // way we simulate events.
-  xit('should properly log warnings when events simulated with rendered components', () => {
-    spyOn(console, 'error');
-    var event;
-    var element = document.createElement('div');
-    function assignEvent(e) {
-      event = e;
-    }
-    var instance = ReactDOM.render(<div onClick={assignEvent} />, element);
-    ReactTestUtils.Simulate.click(ReactDOM.findDOMNode(instance));
-    expect(console.error.calls.count()).toBe(0);
+  xit(
+    'should properly log warnings when events simulated with rendered components',
+    () => {
+      spyOn(console, 'error');
+      var event;
+      var element = document.createElement('div');
+      function assignEvent(e) {
+        event = e;
+      }
+      var instance = ReactDOM.render(<div onClick={assignEvent} />, element);
+      ReactTestUtils.Simulate.click(ReactDOM.findDOMNode(instance));
+      expect(console.error.calls.count()).toBe(0);
 
-    // access a property to cause the warning
-    event.nativeEvent; // eslint-disable-line no-unused-expressions
+      // access a property to cause the warning
+      event.nativeEvent; // eslint-disable-line no-unused-expressions
 
-    expect(console.error.calls.count()).toBe(1);
-    expect(console.error.calls.argsFor(0)[0]).toBe(
-      'Warning: This synthetic event is reused for performance reasons. If ' +
-      'you\'re seeing this, you\'re accessing the property `nativeEvent` on a ' +
-      'released/nullified synthetic event. This is set to null. If you must ' +
-      'keep the original synthetic event around, use event.persist(). ' +
-      'See https://fb.me/react-event-pooling for more information.'
-    );
-  });
+      expect(console.error.calls.count()).toBe(1);
+      expect(console.error.calls.argsFor(0)[0]).toBe(
+        'Warning: This synthetic event is reused for performance reasons. If ' +
+          "you're seeing this, you're accessing the property `nativeEvent` on a " +
+          'released/nullified synthetic event. This is set to null. If you must ' +
+          'keep the original synthetic event around, use event.persist(). ' +
+          'See https://fb.me/react-event-pooling for more information.',
+      );
+    },
+  );
 
@@ -183,5 +186,5 @@ describe('SyntheticEvent', () => {
         'Warning: This synthetic event is reused for performance reasons. If ' +
-        'you\'re seeing this, you\'re adding a new property in the synthetic ' +
-        'event object. The property is never released. ' +
-        'See https://fb.me/react-event-pooling for more information.'
+          "you're seeing this, you're adding a new property in the synthetic " +
+          'event object. The property is never released. ' +
+          'See https://fb.me/react-event-pooling for more information.',
       );
diff --git a/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticWheelEvent-test.js b/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticWheelEvent-test.js
index 74cc43120..393ccf3fc 100644
--- a/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticWheelEvent-test.js
+++ b/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticWheelEvent-test.js
@@ -69,3 +69,2 @@ describe('SyntheticWheelEvent', () => {
   });
-
 });
diff --git a/src/renderers/dom/client/utils/DOMChildrenOperations.js b/src/renderers/dom/client/utils/DOMChildrenOperations.js
index 2200f2529..b7e4e1e10 100644
--- a/src/renderers/dom/client/utils/DOMChildrenOperations.js
+++ b/src/renderers/dom/client/utils/DOMChildrenOperations.js
@@ -39,10 +39,12 @@ function getNodeAfter(parentNode, node) {
  */
-var insertChildAt = createMicrosoftUnsafeLocalFunction(
-  function(parentNode, childNode, referenceNode) {
-    // We rely exclusively on `insertBefore(node, null)` instead of also using
-    // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
-    // we are careful to use `null`.)
-    parentNode.insertBefore(childNode, referenceNode);
-  }
-);
+var insertChildAt = createMicrosoftUnsafeLocalFunction(function(
+  parentNode,
+  childNode,
+  referenceNode,
+) {
+  // We rely exclusively on `insertBefore(node, null)` instead of also using
+  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
+  // we are careful to use `null`.)
+  parentNode.insertBefore(childNode, referenceNode);
+});
 
@@ -74,3 +76,3 @@ function moveDelimitedText(
   closingComment,
-  referenceNode
+  referenceNode,
 ) {
@@ -109,3 +111,3 @@ function replaceDelimitedText(openingComment, closingComment, stringText) {
         document.createTextNode(stringText),
-        nodeAfterComment
+        nodeAfterComment,
       );
@@ -125,3 +127,4 @@ function replaceDelimitedText(openingComment, closingComment, stringText) {
     ReactInstrumentation.debugTool.onHostOperation({
-      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
+      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)
+        ._debugID,
       type: 'replace text',
@@ -159,3 +162,2 @@ if (__DEV__) {
 var DOMChildrenOperations = {
-
   dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
@@ -173,4 +175,5 @@ var DOMChildrenOperations = {
     if (__DEV__) {
-      var parentNodeDebugID =
-        ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
+      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(
+        parentNode,
+      )._debugID;
     }
@@ -184,3 +187,3 @@ var DOMChildrenOperations = {
             update.content,
-            getNodeAfter(parentNode, update.afterNode)
+            getNodeAfter(parentNode, update.afterNode),
           );
@@ -190,3 +193,6 @@ var DOMChildrenOperations = {
               type: 'insert child',
-              payload: {toIndex: update.toIndex, content: update.content.toString()},
+              payload: {
+                toIndex: update.toIndex,
+                content: update.content.toString(),
+              },
             });
@@ -198,3 +204,3 @@ var DOMChildrenOperations = {
             update.fromNode,
-            getNodeAfter(parentNode, update.afterNode)
+            getNodeAfter(parentNode, update.afterNode),
           );
@@ -209,6 +215,3 @@ var DOMChildrenOperations = {
         case 'SET_MARKUP':
-          setInnerHTML(
-            parentNode,
-            update.content
-          );
+          setInnerHTML(parentNode, update.content);
           if (__DEV__) {
@@ -222,6 +225,3 @@ var DOMChildrenOperations = {
         case 'TEXT_CONTENT':
-          setTextContent(
-            parentNode,
-            update.content
-          );
+          setTextContent(parentNode, update.content);
           if (__DEV__) {
@@ -247,3 +247,2 @@ var DOMChildrenOperations = {
   },
-
 };
diff --git a/src/renderers/dom/client/utils/DOMLazyTree.js b/src/renderers/dom/client/utils/DOMLazyTree.js
index c6c0b98f9..b9401c28b 100644
--- a/src/renderers/dom/client/utils/DOMLazyTree.js
+++ b/src/renderers/dom/client/utils/DOMLazyTree.js
@@ -33,10 +33,8 @@ var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
  */
-var enableLazy = (
-  typeof document !== 'undefined' &&
-  typeof document.documentMode === 'number'
-  ||
-  typeof navigator !== 'undefined' &&
-  typeof navigator.userAgent === 'string' &&
-  /\bEdge\/\d/.test(navigator.userAgent)
-);
+var enableLazy =
+  (typeof document !== 'undefined' &&
+    typeof document.documentMode === 'number') ||
+  (typeof navigator !== 'undefined' &&
+    typeof navigator.userAgent === 'string' &&
+    /\bEdge\/\d/.test(navigator.userAgent));
 
@@ -59,24 +57,27 @@ function insertTreeChildren(tree) {
 
-var insertTreeBefore = createMicrosoftUnsafeLocalFunction(
-  function(parentNode, tree, referenceNode) {
-    // DocumentFragments aren't actually part of the DOM after insertion so
-    // appending children won't update the DOM. We need to ensure the fragment
-    // is properly populated first, breaking out of our lazy approach for just
-    // this level. Also, some <object> plugins (like Flash Player) will read
-    // <param> nodes immediately upon insertion into the DOM, so <object>
-    // must also be populated prior to insertion into the DOM.
-    if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE
-        ||
-        tree.node.nodeType === ELEMENT_NODE_TYPE &&
-        tree.node.nodeName.toLowerCase() === 'object' &&
-        (tree.node.namespaceURI == null ||
-         tree.node.namespaceURI === DOMNamespaces.html)) {
-      insertTreeChildren(tree);
-      parentNode.insertBefore(tree.node, referenceNode);
-    } else {
-      parentNode.insertBefore(tree.node, referenceNode);
-      insertTreeChildren(tree);
-    }
+var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function(
+  parentNode,
+  tree,
+  referenceNode,
+) {
+  // DocumentFragments aren't actually part of the DOM after insertion so
+  // appending children won't update the DOM. We need to ensure the fragment
+  // is properly populated first, breaking out of our lazy approach for just
+  // this level. Also, some <object> plugins (like Flash Player) will read
+  // <param> nodes immediately upon insertion into the DOM, so <object>
+  // must also be populated prior to insertion into the DOM.
+  if (
+    tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE ||
+    (tree.node.nodeType === ELEMENT_NODE_TYPE &&
+      tree.node.nodeName.toLowerCase() === 'object' &&
+      (tree.node.namespaceURI == null ||
+        tree.node.namespaceURI === DOMNamespaces.html))
+  ) {
+    insertTreeChildren(tree);
+    parentNode.insertBefore(tree.node, referenceNode);
+  } else {
+    parentNode.insertBefore(tree.node, referenceNode);
+    insertTreeChildren(tree);
   }
-);
+});
 
diff --git a/src/renderers/dom/client/utils/ViewportMetrics.js b/src/renderers/dom/client/utils/ViewportMetrics.js
index d5508e001..c23d0275c 100644
--- a/src/renderers/dom/client/utils/ViewportMetrics.js
+++ b/src/renderers/dom/client/utils/ViewportMetrics.js
@@ -14,3 +14,2 @@
 var ViewportMetrics = {
-
   currentScrollLeft: 0,
@@ -23,3 +22,2 @@ var ViewportMetrics = {
   },
-
 };
diff --git a/src/renderers/dom/client/utils/__tests__/getEventCharCode-test.js b/src/renderers/dom/client/utils/__tests__/getEventCharCode-test.js
index 64ed9214d..f619093b8 100644
--- a/src/renderers/dom/client/utils/__tests__/getEventCharCode-test.js
+++ b/src/renderers/dom/client/utils/__tests__/getEventCharCode-test.js
@@ -19,5 +19,6 @@ describe('getEventCharCode', () => {
       it('returns 13', () => {
-        var nativeEvent = new KeyboardEvent(
-          'keypress', {charCode: 0, keyCode: 13}
-        );
+        var nativeEvent = new KeyboardEvent('keypress', {
+          charCode: 0,
+          keyCode: 13,
+        });
 
@@ -64,3 +65,3 @@ describe('getEventCharCode', () => {
       it('returns keyCode', () => {
-        var nativeEvent = {'keyCode': 32};
+        var nativeEvent = {keyCode: 32};
 
@@ -73,3 +74,3 @@ describe('getEventCharCode', () => {
         it('returns 13', () => {
-          var nativeEvent = {'keyCode': 13};
+          var nativeEvent = {keyCode: 13};
 
@@ -81,3 +82,3 @@ describe('getEventCharCode', () => {
         it('returns 0', () => {
-          var nativeEvent = {'keyCode': 31};
+          var nativeEvent = {keyCode: 31};
 
diff --git a/src/renderers/dom/client/utils/__tests__/getNodeForCharacterOffset-test.js b/src/renderers/dom/client/utils/__tests__/getNodeForCharacterOffset-test.js
index 170b65cc8..27c7d1cd2 100644
--- a/src/renderers/dom/client/utils/__tests__/getNodeForCharacterOffset-test.js
+++ b/src/renderers/dom/client/utils/__tests__/getNodeForCharacterOffset-test.js
@@ -50,12 +50,12 @@ describe('getNodeForCharacterOffset', () => {
         '<i>' +
-          '<i>' +
-            '<i>2</i>' +
-            '<i></i>' +
-          '</i>' +
+        '<i>' +
+        '<i>2</i>' +
+        '<i></i>' +
+        '</i>' +
         '</i>' +
         '<i>' +
-          '3' +
-          '<i>45</i>' +
+        '3' +
+        '<i>45</i>' +
         '</i>' +
-      '</i>'
+        '</i>',
     );
diff --git a/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js b/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js
index 750f918fd..e89f9f142 100644
--- a/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js
+++ b/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js
@@ -39,4 +39,8 @@ describe('setInnerHTML', () => {
 
-      expect(node.appendChild.calls.argsFor(0)[0].outerHTML).toBe('<circle></circle>');
-      expect(node.appendChild.calls.argsFor(1)[0].outerHTML).toBe('<rect></rect>');
+      expect(node.appendChild.calls.argsFor(0)[0].outerHTML).toBe(
+        '<circle></circle>',
+      );
+      expect(node.appendChild.calls.argsFor(1)[0].outerHTML).toBe(
+        '<rect></rect>',
+      );
     });
diff --git a/src/renderers/dom/client/utils/getEventKey.js b/src/renderers/dom/client/utils/getEventKey.js
index 6a33da9ca..19786e778 100644
--- a/src/renderers/dom/client/utils/getEventKey.js
+++ b/src/renderers/dom/client/utils/getEventKey.js
@@ -20,14 +20,14 @@ var getEventCharCode = require('getEventCharCode');
 var normalizeKey = {
-  'Esc': 'Escape',
-  'Spacebar': ' ',
-  'Left': 'ArrowLeft',
-  'Up': 'ArrowUp',
-  'Right': 'ArrowRight',
-  'Down': 'ArrowDown',
-  'Del': 'Delete',
-  'Win': 'OS',
-  'Menu': 'ContextMenu',
-  'Apps': 'ContextMenu',
-  'Scroll': 'ScrollLock',
-  'MozPrintableKey': 'Unidentified',
+  Esc: 'Escape',
+  Spacebar: ' ',
+  Left: 'ArrowLeft',
+  Up: 'ArrowUp',
+  Right: 'ArrowRight',
+  Down: 'ArrowDown',
+  Del: 'Delete',
+  Win: 'OS',
+  Menu: 'ContextMenu',
+  Apps: 'ContextMenu',
+  Scroll: 'ScrollLock',
+  MozPrintableKey: 'Unidentified',
 };
@@ -61,4 +61,14 @@ var translateToKey = {
   46: 'Delete',
-  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
-  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
+  112: 'F1',
+  113: 'F2',
+  114: 'F3',
+  115: 'F4',
+  116: 'F5',
+  117: 'F6',
+  118: 'F7',
+  119: 'F8',
+  120: 'F9',
+  121: 'F10',
+  122: 'F11',
+  123: 'F12',
   144: 'NumLock',
diff --git a/src/renderers/dom/client/utils/getEventModifierState.js b/src/renderers/dom/client/utils/getEventModifierState.js
index 16c6e2b54..cafcf69e4 100644
--- a/src/renderers/dom/client/utils/getEventModifierState.js
+++ b/src/renderers/dom/client/utils/getEventModifierState.js
@@ -19,6 +19,6 @@
 var modifierKeyToProp = {
-  'Alt': 'altKey',
-  'Control': 'ctrlKey',
-  'Meta': 'metaKey',
-  'Shift': 'shiftKey',
+  Alt: 'altKey',
+  Control: 'ctrlKey',
+  Meta: 'metaKey',
+  Shift: 'shiftKey',
 };
diff --git a/src/renderers/dom/client/utils/getTextContentAccessor.js b/src/renderers/dom/client/utils/getTextContentAccessor.js
index 198e6bbb6..7f79f013a 100644
--- a/src/renderers/dom/client/utils/getTextContentAccessor.js
+++ b/src/renderers/dom/client/utils/getTextContentAccessor.js
@@ -27,5 +27,5 @@ function getTextContentAccessor() {
     // SVG <text> elements don't support innerText even when <div> does.
-    contentKey = 'textContent' in document.documentElement ?
-      'textContent' :
-      'innerText';
+    contentKey = 'textContent' in document.documentElement
+      ? 'textContent'
+      : 'innerText';
   }
diff --git a/src/renderers/dom/client/utils/getVendorPrefixedEventName.js b/src/renderers/dom/client/utils/getVendorPrefixedEventName.js
index 25fa2aed8..dc3f518de 100644
--- a/src/renderers/dom/client/utils/getVendorPrefixedEventName.js
+++ b/src/renderers/dom/client/utils/getVendorPrefixedEventName.js
@@ -85,3 +85,2 @@ function getVendorPrefixedEventName(eventName) {
     return prefixedEventNames[eventName];
-
   } else if (!vendorPrefixes[eventName]) {
@@ -94,3 +93,3 @@ function getVendorPrefixedEventName(eventName) {
     if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
-      return prefixedEventNames[eventName] = prefixMap[styleProp];
+      return (prefixedEventNames[eventName] = prefixMap[styleProp]);
     }
diff --git a/src/renderers/dom/client/utils/isEventSupported.js b/src/renderers/dom/client/utils/isEventSupported.js
index f73857641..ad3436a65 100644
--- a/src/renderers/dom/client/utils/isEventSupported.js
+++ b/src/renderers/dom/client/utils/isEventSupported.js
@@ -40,4 +40,6 @@ if (ExecutionEnvironment.canUseDOM) {
 function isEventSupported(eventNameSuffix, capture) {
-  if (!ExecutionEnvironment.canUseDOM ||
-      capture && !('addEventListener' in document)) {
+  if (
+    !ExecutionEnvironment.canUseDOM ||
+    (capture && !('addEventListener' in document))
+  ) {
     return false;
diff --git a/src/renderers/dom/client/utils/setInnerHTML.js b/src/renderers/dom/client/utils/setInnerHTML.js
index 616d37fc3..c4da196e6 100644
--- a/src/renderers/dom/client/utils/setInnerHTML.js
+++ b/src/renderers/dom/client/utils/setInnerHTML.js
@@ -32,19 +32,18 @@ var reusableSVGContainer;
  */
-var setInnerHTML = createMicrosoftUnsafeLocalFunction(
-  function(node, html) {
-    // IE does not have innerHTML for SVG nodes, so instead we inject the
-    // new markup in a temp node and then move the child nodes across into
-    // the target node
-    if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
-      reusableSVGContainer = reusableSVGContainer || document.createElement('div');
-      reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
-      var svgNode = reusableSVGContainer.firstChild;
-      while (svgNode.firstChild) {
-        node.appendChild(svgNode.firstChild);
-      }
-    } else {
-      node.innerHTML = html;
+var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
+  // IE does not have innerHTML for SVG nodes, so instead we inject the
+  // new markup in a temp node and then move the child nodes across into
+  // the target node
+  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
+    reusableSVGContainer =
+      reusableSVGContainer || document.createElement('div');
+    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
+    var svgNode = reusableSVGContainer.firstChild;
+    while (svgNode.firstChild) {
+      node.appendChild(svgNode.firstChild);
     }
+  } else {
+    node.innerHTML = html;
   }
-);
+});
 
@@ -74,4 +73,6 @@ if (ExecutionEnvironment.canUseDOM) {
       // and simply check if any non-visible tags appear in the source.
-      if (WHITESPACE_TEST.test(html) ||
-          html[0] === '<' && NONVISIBLE_TEST.test(html)) {
+      if (
+        WHITESPACE_TEST.test(html) ||
+        (html[0] === '<' && NONVISIBLE_TEST.test(html))
+      ) {
         // Recover leading whitespace by temporarily prepending any character.
@@ -82,3 +83,3 @@ if (ExecutionEnvironment.canUseDOM) {
         // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
-        node.innerHTML = String.fromCharCode(0xFEFF) + html;
+        node.innerHTML = String.fromCharCode(0xfeff) + html;
 
diff --git a/src/renderers/dom/client/utils/setTextContent.js b/src/renderers/dom/client/utils/setTextContent.js
index 843284618..833256601 100644
--- a/src/renderers/dom/client/utils/setTextContent.js
+++ b/src/renderers/dom/client/utils/setTextContent.js
@@ -30,4 +30,8 @@ var setTextContent = function(node, text) {
     var firstChild = node.firstChild;
-    
-    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
+
+    if (
+      firstChild &&
+      firstChild === node.lastChild &&
+      firstChild.nodeType === 3
+    ) {
       firstChild.nodeValue = text;
diff --git a/src/renderers/dom/client/validateDOMNesting.js b/src/renderers/dom/client/validateDOMNesting.js
index 4b31c2c93..9cca776e8 100644
--- a/src/renderers/dom/client/validateDOMNesting.js
+++ b/src/renderers/dom/client/validateDOMNesting.js
@@ -32,12 +32,84 @@ if (__DEV__) {
   var specialTags = [
-    'address', 'applet', 'area', 'article', 'aside', 'base', 'basefont',
-    'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col',
-    'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset',
-    'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2',
-    'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe',
-    'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee',
-    'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript',
-    'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section',
-    'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template',
-    'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr',
+    'address',
+    'applet',
+    'area',
+    'article',
+    'aside',
+    'base',
+    'basefont',
+    'bgsound',
+    'blockquote',
+    'body',
+    'br',
+    'button',
+    'caption',
+    'center',
+    'col',
+    'colgroup',
+    'dd',
+    'details',
+    'dir',
+    'div',
+    'dl',
+    'dt',
+    'embed',
+    'fieldset',
+    'figcaption',
+    'figure',
+    'footer',
+    'form',
+    'frame',
+    'frameset',
+    'h1',
+    'h2',
+    'h3',
+    'h4',
+    'h5',
+    'h6',
+    'head',
+    'header',
+    'hgroup',
+    'hr',
+    'html',
+    'iframe',
+    'img',
+    'input',
+    'isindex',
+    'li',
+    'link',
+    'listing',
+    'main',
+    'marquee',
+    'menu',
+    'menuitem',
+    'meta',
+    'nav',
+    'noembed',
+    'noframes',
+    'noscript',
+    'object',
+    'ol',
+    'p',
+    'param',
+    'plaintext',
+    'pre',
+    'script',
+    'section',
+    'select',
+    'source',
+    'style',
+    'summary',
+    'table',
+    'tbody',
+    'td',
+    'template',
+    'textarea',
+    'tfoot',
+    'th',
+    'thead',
+    'title',
+    'tr',
+    'track',
+    'ul',
+    'wbr',
     'xmp',
@@ -47,3 +119,10 @@ if (__DEV__) {
   var inScopeTags = [
-    'applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object',
+    'applet',
+    'caption',
+    'html',
+    'table',
+    'td',
+    'th',
+    'marquee',
+    'object',
     'template',
@@ -53,3 +132,5 @@ if (__DEV__) {
     // errs on the side of fewer warnings
-    'foreignObject', 'desc', 'title',
+    'foreignObject',
+    'desc',
+    'title',
   ];
@@ -60,4 +141,12 @@ if (__DEV__) {
   // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
-  var impliedEndTags =
-    ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
+  var impliedEndTags = [
+    'dd',
+    'dt',
+    'li',
+    'option',
+    'optgroup',
+    'p',
+    'rp',
+    'rt',
+  ];
 
@@ -93,3 +182,5 @@ if (__DEV__) {
       specialTags.indexOf(tag) !== -1 &&
-      tag !== 'address' && tag !== 'div' && tag !== 'p'
+      tag !== 'address' &&
+      tag !== 'div' &&
+      tag !== 'p'
     ) {
@@ -141,3 +232,2 @@ if (__DEV__) {
         return tag === '#text';
-
       // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
@@ -150,6 +240,8 @@ if (__DEV__) {
         return (
-          tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' ||
+          tag === 'th' ||
+          tag === 'td' ||
+          tag === 'style' ||
+          tag === 'script' ||
           tag === 'template'
         );
-
       // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
@@ -159,6 +251,7 @@ if (__DEV__) {
         return (
-          tag === 'tr' || tag === 'style' || tag === 'script' ||
+          tag === 'tr' ||
+          tag === 'style' ||
+          tag === 'script' ||
           tag === 'template'
         );
-
       // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
@@ -166,3 +259,2 @@ if (__DEV__) {
         return tag === 'col' || tag === 'template';
-
       // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
@@ -170,7 +262,11 @@ if (__DEV__) {
         return (
-          tag === 'caption' || tag === 'colgroup' || tag === 'tbody' ||
-          tag === 'tfoot' || tag === 'thead' || tag === 'style' ||
-          tag === 'script' || tag === 'template'
+          tag === 'caption' ||
+          tag === 'colgroup' ||
+          tag === 'tbody' ||
+          tag === 'tfoot' ||
+          tag === 'thead' ||
+          tag === 'style' ||
+          tag === 'script' ||
+          tag === 'template'
         );
-
       // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
@@ -178,8 +274,14 @@ if (__DEV__) {
         return (
-          tag === 'base' || tag === 'basefont' || tag === 'bgsound' ||
-          tag === 'link' || tag === 'meta' || tag === 'title' ||
-          tag === 'noscript' || tag === 'noframes' || tag === 'style' ||
-          tag === 'script' || tag === 'template'
+          tag === 'base' ||
+          tag === 'basefont' ||
+          tag === 'bgsound' ||
+          tag === 'link' ||
+          tag === 'meta' ||
+          tag === 'title' ||
+          tag === 'noscript' ||
+          tag === 'noframes' ||
+          tag === 'style' ||
+          tag === 'script' ||
+          tag === 'template'
         );
-
       // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
@@ -202,4 +304,8 @@ if (__DEV__) {
         return (
-          parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' &&
-          parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6'
+          parentTag !== 'h1' &&
+          parentTag !== 'h2' &&
+          parentTag !== 'h3' &&
+          parentTag !== 'h4' &&
+          parentTag !== 'h5' &&
+          parentTag !== 'h6'
         );
@@ -323,3 +429,3 @@ if (__DEV__) {
     childInstance,
-    ancestorInfo
+    ancestorInfo,
   ) {
@@ -332,3 +438,3 @@ if (__DEV__) {
         childTag == null,
-        'validateDOMNesting: when childText is passed, childTag should be null'
+        'validateDOMNesting: when childText is passed, childTag should be null',
       );
@@ -337,6 +443,8 @@ if (__DEV__) {
 
-    var invalidParent =
-      isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
-    var invalidAncestor =
-      invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
+    var invalidParent = isTagValidWithParent(childTag, parentTag)
+      ? null
+      : parentInfo;
+    var invalidAncestor = invalidParent
+      ? null
+      : findInvalidAncestorForTag(childTag, ancestorInfo);
     var problematic = invalidParent || invalidAncestor;
@@ -367,21 +475,23 @@ if (__DEV__) {
       var UNKNOWN = '(unknown)';
-      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(
-        (inst) => inst.getName() || UNKNOWN
-      );
-      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(
-        (inst) => inst.getName() || UNKNOWN
-      );
-      var ownerInfo = [].concat(
-        // If the parent and child instances have a common owner ancestor, start
-        // with that -- otherwise we just start with the parent's owners.
-        deepestCommon !== -1 ?
-          childOwners[deepestCommon].getName() || UNKNOWN :
-          [],
-        ancestorOwnerNames,
-        ancestorTag,
-        // If we're warning about an invalid (non-parent) ancestry, add '...'
-        invalidAncestor ? ['...'] : [],
-        childOwnerNames,
-        childTag
-      ).join(' > ');
+      var childOwnerNames = childOwners
+        .slice(deepestCommon + 1)
+        .map(inst => inst.getName() || UNKNOWN);
+      var ancestorOwnerNames = ancestorOwners
+        .slice(deepestCommon + 1)
+        .map(inst => inst.getName() || UNKNOWN);
+      var ownerInfo = []
+        .concat(
+          // If the parent and child instances have a common owner ancestor, start
+          // with that -- otherwise we just start with the parent's owners.
+          deepestCommon !== -1
+            ? childOwners[deepestCommon].getName() || UNKNOWN
+            : [],
+          ancestorOwnerNames,
+          ancestorTag,
+          // If we're warning about an invalid (non-parent) ancestry, add '...'
+          invalidAncestor ? ['...'] : [],
+          childOwnerNames,
+          childTag,
+        )
+        .join(' > ');
 
@@ -402,3 +512,3 @@ if (__DEV__) {
           whitespaceInfo =
-            ' Make sure you don\'t have any extra whitespace between tags on ' +
+            " Make sure you don't have any extra whitespace between tags on " +
             'each line of your source code.';
@@ -419,3 +529,3 @@ if (__DEV__) {
           'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' +
-          'See %s.%s',
+            'See %s.%s',
           tagDisplayName,
@@ -424,3 +534,3 @@ if (__DEV__) {
           ownerInfo,
-          info
+          info,
         );
@@ -430,6 +540,6 @@ if (__DEV__) {
           'validateDOMNesting(...): %s cannot appear as a descendant of ' +
-          '<%s>. See %s.',
+            '<%s>. See %s.',
           tagDisplayName,
           ancestorTag,
-          ownerInfo
+          ownerInfo,
         );
diff --git a/src/renderers/dom/client/wrappers/LinkedValueUtils.js b/src/renderers/dom/client/wrappers/LinkedValueUtils.js
index 9d1ae8ed3..00e0af6f7 100644
--- a/src/renderers/dom/client/wrappers/LinkedValueUtils.js
+++ b/src/renderers/dom/client/wrappers/LinkedValueUtils.js
@@ -23,9 +23,9 @@ var warning = require('warning');
 var hasReadOnlyValue = {
-  'button': true,
-  'checkbox': true,
-  'image': true,
-  'hidden': true,
-  'radio': true,
-  'reset': true,
-  'submit': true,
+  button: true,
+  checkbox: true,
+  image: true,
+  hidden: true,
+  radio: true,
+  reset: true,
+  submit: true,
 };
@@ -36,3 +36,3 @@ function _assertSingleLink(inputProps) {
     'Cannot provide a checkedLink and a valueLink. If you want to use ' +
-    'checkedLink, you probably don\'t want to use valueLink and vice versa.'
+      "checkedLink, you probably don't want to use valueLink and vice versa.",
   );
@@ -44,3 +44,3 @@ function _assertValueLink(inputProps) {
     'Cannot provide a valueLink and a value or onChange event. If you want ' +
-    'to use value or onChange, you probably don\'t want to use valueLink.'
+      "to use value or onChange, you probably don't want to use valueLink.",
   );
@@ -53,4 +53,4 @@ function _assertCheckedLink(inputProps) {
     'Cannot provide a checkedLink and a checked property or onChange event. ' +
-    'If you want to use checked or onChange, you probably don\'t want to ' +
-    'use checkedLink'
+      "If you want to use checked or onChange, you probably don't want to " +
+      'use checkedLink',
   );
@@ -60,7 +60,9 @@ var propTypes = {
   value: function(props, propName, componentName) {
-    if (!props[propName] ||
-        hasReadOnlyValue[props.type] ||
-        props.onChange ||
-        props.readOnly ||
-        props.disabled) {
+    if (
+      !props[propName] ||
+      hasReadOnlyValue[props.type] ||
+      props.onChange ||
+      props.readOnly ||
+      props.disabled
+    ) {
       return null;
@@ -69,5 +71,5 @@ var propTypes = {
       'You provided a `value` prop to a form field without an ' +
-      '`onChange` handler. This will render a read-only field. If ' +
-      'the field should be mutable use `defaultValue`. Otherwise, ' +
-      'set either `onChange` or `readOnly`.'
+        '`onChange` handler. This will render a read-only field. If ' +
+        'the field should be mutable use `defaultValue`. Otherwise, ' +
+        'set either `onChange` or `readOnly`.',
     );
@@ -75,6 +77,8 @@ var propTypes = {
   checked: function(props, propName, componentName) {
-    if (!props[propName] ||
-        props.onChange ||
-        props.readOnly ||
-        props.disabled) {
+    if (
+      !props[propName] ||
+      props.onChange ||
+      props.readOnly ||
+      props.disabled
+    ) {
       return null;
@@ -83,5 +87,5 @@ var propTypes = {
       'You provided a `checked` prop to a form field without an ' +
-      '`onChange` handler. This will render a read-only field. If ' +
-      'the field should be mutable use `defaultChecked`. Otherwise, ' +
-      'set either `onChange` or `readOnly`.'
+        '`onChange` handler. This will render a read-only field. If ' +
+        'the field should be mutable use `defaultChecked`. Otherwise, ' +
+        'set either `onChange` or `readOnly`.',
     );
@@ -116,3 +120,3 @@ var LinkedValueUtils = {
           null,
-          ReactPropTypesSecret
+          ReactPropTypesSecret,
         );
diff --git a/src/renderers/dom/client/wrappers/ReactDOMInput.js b/src/renderers/dom/client/wrappers/ReactDOMInput.js
index 07061ef32..73ae197dc 100644
--- a/src/renderers/dom/client/wrappers/ReactDOMInput.js
+++ b/src/renderers/dom/client/wrappers/ReactDOMInput.js
@@ -61,20 +61,24 @@ var ReactDOMInput = {
 
-    var hostProps = Object.assign({
-      // Make sure we set .type before any other properties (setting .value
-      // before .type means .value is lost in IE11 and below)
-      type: undefined,
-      // Make sure we set .step before .value (setting .value before .step
-      // means .value is rounded on mount, based upon step precision)
-      step: undefined,
-      // Make sure we set .min & .max before .value (to ensure proper order
-      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
-      min: undefined,
-      max: undefined,
-    }, props, {
-      defaultChecked: undefined,
-      defaultValue: undefined,
-      value: value != null ? value : inst._wrapperState.initialValue,
-      checked: checked != null ? checked : inst._wrapperState.initialChecked,
-      onChange: inst._wrapperState.onChange,
-    });
+    var hostProps = Object.assign(
+      {
+        // Make sure we set .type before any other properties (setting .value
+        // before .type means .value is lost in IE11 and below)
+        type: undefined,
+        // Make sure we set .step before .value (setting .value before .step
+        // means .value is rounded on mount, based upon step precision)
+        step: undefined,
+        // Make sure we set .min & .max before .value (to ensure proper order
+        // in corner cases such as min or max deriving from value, e.g. Issue #7170)
+        min: undefined,
+        max: undefined,
+      },
+      props,
+      {
+        defaultChecked: undefined,
+        defaultValue: undefined,
+        value: value != null ? value : inst._wrapperState.initialValue,
+        checked: checked != null ? checked : inst._wrapperState.initialChecked,
+        onChange: inst._wrapperState.onChange,
+      },
+    );
 
@@ -88,3 +92,3 @@ var ReactDOMInput = {
         props,
-        inst._currentElement._owner
+        inst._currentElement._owner,
       );
@@ -96,3 +100,3 @@ var ReactDOMInput = {
           false,
-          '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.'
+          '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.',
         );
@@ -103,3 +107,3 @@ var ReactDOMInput = {
           false,
-          '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.'
+          '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.',
         );
@@ -115,9 +119,9 @@ var ReactDOMInput = {
           '%s contains an input of type %s with both checked and defaultChecked props. ' +
-          'Input elements must be either controlled or uncontrolled ' +
-          '(specify either the checked prop, or the defaultChecked prop, but not ' +
-          'both). Decide between using a controlled or uncontrolled input ' +
-          'element and remove one of these props. More info: ' +
-          'https://fb.me/react-controlled-components',
-          owner && owner.getName() || 'A component',
-          props.type
+            'Input elements must be either controlled or uncontrolled ' +
+            '(specify either the checked prop, or the defaultChecked prop, but not ' +
+            'both). Decide between using a controlled or uncontrolled input ' +
+            'element and remove one of these props. More info: ' +
+            'https://fb.me/react-controlled-components',
+          (owner && owner.getName()) || 'A component',
+          props.type,
         );
@@ -133,9 +137,9 @@ var ReactDOMInput = {
           '%s contains an input of type %s with both value and defaultValue props. ' +
-          'Input elements must be either controlled or uncontrolled ' +
-          '(specify either the value prop, or the defaultValue prop, but not ' +
-          'both). Decide between using a controlled or uncontrolled input ' +
-          'element and remove one of these props. More info: ' +
-          'https://fb.me/react-controlled-components',
-          owner && owner.getName() || 'A component',
-          props.type
+            'Input elements must be either controlled or uncontrolled ' +
+            '(specify either the value prop, or the defaultValue prop, but not ' +
+            'both). Decide between using a controlled or uncontrolled input ' +
+            'element and remove one of these props. More info: ' +
+            'https://fb.me/react-controlled-components',
+          (owner && owner.getName()) || 'A component',
+          props.type,
         );
@@ -147,3 +151,5 @@ var ReactDOMInput = {
     inst._wrapperState = {
-      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
+      initialChecked: props.checked != null
+        ? props.checked
+        : props.defaultChecked,
       initialValue: props.value != null ? props.value : defaultValue,
@@ -162,3 +168,7 @@ var ReactDOMInput = {
 
-      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
+      if (
+        !inst._wrapperState.controlled &&
+        controlled &&
+        !didWarnUncontrolledToControlled
+      ) {
         warning(
@@ -166,7 +176,7 @@ var ReactDOMInput = {
           '%s is changing an uncontrolled input of type %s to be controlled. ' +
-          'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-          'Decide between using a controlled or uncontrolled input ' +
-          'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
-          owner && owner.getName() || 'A component',
-          props.type
+            'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+            'Decide between using a controlled or uncontrolled input ' +
+            'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+          (owner && owner.getName()) || 'A component',
+          props.type,
         );
@@ -174,3 +184,7 @@ var ReactDOMInput = {
       }
-      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
+      if (
+        inst._wrapperState.controlled &&
+        !controlled &&
+        !didWarnControlledToUncontrolled
+      ) {
         warning(
@@ -178,7 +192,7 @@ var ReactDOMInput = {
           '%s is changing a controlled input of type %s to be uncontrolled. ' +
-          'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-          'Decide between using a controlled or uncontrolled input ' +
-          'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
-          owner && owner.getName() || 'A component',
-          props.type
+            'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+            'Decide between using a controlled or uncontrolled input ' +
+            'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+          (owner && owner.getName()) || 'A component',
+          props.type,
         );
@@ -194,3 +208,3 @@ var ReactDOMInput = {
         'checked',
-        checked || false
+        checked || false,
       );
@@ -208,4 +222,8 @@ var ReactDOMInput = {
 
-        // eslint-disable-next-line
-        if (value != valueAsNumber) {
+        if (
+          // eslint-disable-next-line
+          value != valueAsNumber ||
+          // eslint-disable-next-line
+          (value == valueAsNumber && node.value != value)
+        ) {
           // Cast `value` to a string to ensure the value is set correctly. While
@@ -214,4 +232,3 @@ var ReactDOMInput = {
         }
-        // eslint-disable-next-line
-      } else if (value != node.value) {
+      } else if (node.value !== '' + value) {
         // Cast `value` to a string to ensure the value is set correctly. While
@@ -317,3 +334,4 @@ function _handleChange(event) {
     var group = queryRoot.querySelectorAll(
-      'input[name=' + JSON.stringify('' + name) + '][type="radio"]');
+      'input[name=' + JSON.stringify('' + name) + '][type="radio"]',
+    );
 
@@ -321,4 +339,3 @@ function _handleChange(event) {
       var otherNode = group[i];
-      if (otherNode === rootNode ||
-          otherNode.form !== rootNode.form) {
+      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
         continue;
@@ -333,3 +350,3 @@ function _handleChange(event) {
         'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
-        'same `name` is not supported.'
+          'same `name` is not supported.',
       );
diff --git a/src/renderers/dom/client/wrappers/ReactDOMOption.js b/src/renderers/dom/client/wrappers/ReactDOMOption.js
index 2a2a28a18..d8f48d404 100644
--- a/src/renderers/dom/client/wrappers/ReactDOMOption.js
+++ b/src/renderers/dom/client/wrappers/ReactDOMOption.js
@@ -35,3 +35,3 @@ function flattenChildren(children) {
         false,
-        'Only strings and numbers are supported as <option> children.'
+        'Only strings and numbers are supported as <option> children.',
       );
@@ -53,3 +53,3 @@ var ReactDOMOption = {
         'Use the `defaultValue` or `value` props on <select> instead of ' +
-        'setting `selected` on <option>.'
+          'setting `selected` on <option>.',
       );
@@ -91,3 +91,3 @@ var ReactDOMOption = {
       } else {
-        selected = ('' + selectValue === value);
+        selected = '' + selectValue === value;
       }
@@ -108,3 +108,6 @@ var ReactDOMOption = {
   getHostProps: function(inst, props) {
-    var hostProps = Object.assign({selected: undefined, children: undefined}, props);
+    var hostProps = Object.assign(
+      {selected: undefined, children: undefined},
+      props,
+    );
 
@@ -124,3 +127,2 @@ var ReactDOMOption = {
   },
-
 };
diff --git a/src/renderers/dom/client/wrappers/ReactDOMSelect.js b/src/renderers/dom/client/wrappers/ReactDOMSelect.js
index cb19c89fc..e0b9f6a89 100644
--- a/src/renderers/dom/client/wrappers/ReactDOMSelect.js
+++ b/src/renderers/dom/client/wrappers/ReactDOMSelect.js
@@ -53,7 +53,3 @@ function checkSelectPropTypes(inst, props) {
   var owner = inst._currentElement._owner;
-  LinkedValueUtils.checkPropTypes(
-    'select',
-    props,
-    owner
-  );
+  LinkedValueUtils.checkPropTypes('select', props, owner);
 
@@ -62,3 +58,3 @@ function checkSelectPropTypes(inst, props) {
       false,
-      '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.'
+      '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.',
     );
@@ -77,5 +73,5 @@ function checkSelectPropTypes(inst, props) {
         'The `%s` prop supplied to <select> must be an array if ' +
-        '`multiple` is true.%s',
+          '`multiple` is true.%s',
         propName,
-        getDeclarationErrorAddendum(owner)
+        getDeclarationErrorAddendum(owner),
       );
@@ -85,5 +81,5 @@ function checkSelectPropTypes(inst, props) {
         'The `%s` prop supplied to <select> must be a scalar ' +
-        'value if `multiple` is false.%s',
+          'value if `multiple` is false.%s',
         propName,
-        getDeclarationErrorAddendum(owner)
+        getDeclarationErrorAddendum(owner),
       );
@@ -175,6 +171,6 @@ var ReactDOMSelect = {
         'Select elements must be either controlled or uncontrolled ' +
-        '(specify either the value prop, or the defaultValue prop, but not ' +
-        'both). Decide between using a controlled or uncontrolled select ' +
-        'element and remove one of these props. More info: ' +
-        'https://fb.me/react-controlled-components'
+          '(specify either the value prop, or the defaultValue prop, but not ' +
+          'both). Decide between using a controlled or uncontrolled select ' +
+          'element and remove one of these props. More info: ' +
+          'https://fb.me/react-controlled-components',
       );
diff --git a/src/renderers/dom/client/wrappers/ReactDOMTextarea.js b/src/renderers/dom/client/wrappers/ReactDOMTextarea.js
index 3dbff23a6..c528bb3aa 100644
--- a/src/renderers/dom/client/wrappers/ReactDOMTextarea.js
+++ b/src/renderers/dom/client/wrappers/ReactDOMTextarea.js
@@ -49,3 +49,3 @@ var ReactDOMTextarea = {
       props.dangerouslySetInnerHTML == null,
-      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
+      '`dangerouslySetInnerHTML` does not make sense on <textarea>.',
     );
@@ -72,3 +72,3 @@ var ReactDOMTextarea = {
         props,
-        inst._currentElement._owner
+        inst._currentElement._owner,
       );
@@ -77,3 +77,3 @@ var ReactDOMTextarea = {
           false,
-          '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.'
+          '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.',
         );
@@ -89,6 +89,6 @@ var ReactDOMTextarea = {
           'Textarea elements must be either controlled or uncontrolled ' +
-          '(specify either the value prop, or the defaultValue prop, but not ' +
-          'both). Decide between using a controlled or uncontrolled textarea ' +
-          'and remove one of these props. More info: ' +
-          'https://fb.me/react-controlled-components'
+            '(specify either the value prop, or the defaultValue prop, but not ' +
+            'both). Decide between using a controlled or uncontrolled textarea ' +
+            'and remove one of these props. More info: ' +
+            'https://fb.me/react-controlled-components',
         );
@@ -98,3 +98,2 @@ var ReactDOMTextarea = {
 
-
     var value = LinkedValueUtils.getValue(props);
@@ -112,3 +111,3 @@ var ReactDOMTextarea = {
             'Use the `defaultValue` or `value` props instead of setting ' +
-            'children on <textarea>.'
+              'children on <textarea>.',
           );
@@ -117,3 +116,3 @@ var ReactDOMTextarea = {
           defaultValue == null,
-          'If you supply `defaultValue` on a <textarea>, do not pass children.'
+          'If you supply `defaultValue` on a <textarea>, do not pass children.',
         );
@@ -122,3 +121,3 @@ var ReactDOMTextarea = {
             children.length <= 1,
-            '<textarea> can only have at most one child.'
+            '<textarea> can only have at most one child.',
           );
diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js
index 8ee2478bb..4c099ee9d 100644
--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js
+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js
@@ -13,3 +13,2 @@
 
-
 var emptyFunction = require('emptyFunction');
@@ -35,2 +34,73 @@ describe('ReactDOMInput', () => {
 
+  describe('switching text inputs between numeric and string numbers', () => {
+    it('does change the number 2 to "2.0" with no change handler', () => {
+      var stub = <input type="text" value={2} onChange={jest.fn()} />;
+      stub = ReactTestUtils.renderIntoDocument(stub);
+      var node = ReactDOM.findDOMNode(stub);
+
+      node.value = '2.0';
+
+      ReactTestUtils.Simulate.change(stub);
+
+      expect(node.getAttribute('value')).toBe('2');
+      expect(node.value).toBe('2');
+    });
+
+    it('does change the string "2" to "2.0" with no change handler', () => {
+      var stub = <input type="text" value={'2'} onChange={jest.fn()} />;
+      stub = ReactTestUtils.renderIntoDocument(stub);
+      var node = ReactDOM.findDOMNode(stub);
+
+      node.value = '2.0';
+
+      ReactTestUtils.Simulate.change(stub);
+
+      expect(node.getAttribute('value')).toBe('2');
+      expect(node.value).toBe('2');
+    });
+
+    it('changes the number 2 to "2.0" using a change handler', () => {
+      class Stub extends React.Component {
+        state = {
+          value: 2,
+        };
+        onChange = event => {
+          this.setState({value: event.target.value});
+        };
+        render() {
+          const {value} = this.state;
+
+          return <input type="text" value={value} onChange={this.onChange} />;
+        }
+      }
+
+      var stub = ReactTestUtils.renderIntoDocument(<Stub />);
+      var node = ReactDOM.findDOMNode(stub);
+
+      node.value = '2.0';
+
+      ReactTestUtils.Simulate.change(node);
+
+      expect(node.getAttribute('value')).toBe('2.0');
+      expect(node.value).toBe('2.0');
+    });
+  });
+
+  it('does change the string ".98" to "0.98" with no change handler', () => {
+    class Stub extends React.Component {
+      state = {
+        value: '.98',
+      };
+      render() {
+        return <input type="number" value={this.state.value} />;
+      }
+    }
+
+    var stub = ReactTestUtils.renderIntoDocument(<Stub />);
+    var node = ReactDOM.findDOMNode(stub);
+    stub.setState({value: '0.98'});
+
+    expect(node.value).toEqual('0.98');
+  });
+
   it('should display `defaultValue` of number 0', () => {
@@ -47,3 +117,3 @@ describe('ReactDOMInput', () => {
       render() {
-        return (<input defaultValue="0" />);
+        return <input defaultValue="0" />;
       }
@@ -59,3 +129,5 @@ describe('ReactDOMInput', () => {
       set(value) {
-        throw new Error(`defaultValue was assigned ${value}, but it did not change!`);
+        throw new Error(
+          `defaultValue was assigned ${value}, but it did not change!`,
+        );
       },
@@ -85,3 +157,6 @@ describe('ReactDOMInput', () => {
 
-    var node = ReactDOM.render(<input type="text" defaultValue="0" />, container);
+    var node = ReactDOM.render(
+      <input type="text" defaultValue="0" />,
+      container,
+    );
 
@@ -98,3 +173,6 @@ describe('ReactDOMInput', () => {
 
-    var node = ReactDOM.render(<input type="date" defaultValue="1980-01-01" />, container);
+    var node = ReactDOM.render(
+      <input type="date" defaultValue="1980-01-01" />,
+      container,
+    );
 
@@ -113,3 +191,6 @@ describe('ReactDOMInput', () => {
 
-    var node = ReactDOM.render(<input type="text" value="0" readOnly="true" />, container);
+    var node = ReactDOM.render(
+      <input type="text" value="0" readOnly="true" />,
+      container,
+    );
 
@@ -123,3 +204,5 @@ describe('ReactDOMInput', () => {
   it('should render defaultValue for SSR', () => {
-    var markup = ReactDOMServer.renderToString(<input type="text" defaultValue="1" />);
+    var markup = ReactDOMServer.renderToString(
+      <input type="text" defaultValue="1" />,
+    );
     var div = document.createElement('div');
@@ -199,3 +282,3 @@ describe('ReactDOMInput', () => {
       <input type="text" value={true} onChange={emptyFunction} />,
-      container
+      container,
     );
@@ -213,3 +296,3 @@ describe('ReactDOMInput', () => {
       <input type="text" value={false} onChange={emptyFunction} />,
-      container
+      container,
     );
@@ -232,3 +315,3 @@ describe('ReactDOMInput', () => {
       <input type="text" value={objToString} onChange={emptyFunction} />,
-      container
+      container,
     );
@@ -256,3 +339,3 @@ describe('ReactDOMInput', () => {
 
-    ReactDOM.render(<input value="b"/>, container);
+    ReactDOM.render(<input value="b" />, container);
     expect(nodeValueSetter.mock.calls.length).toBe(1);
@@ -260,2 +343,42 @@ describe('ReactDOMInput', () => {
 
+  it('should not incur unnecessary DOM mutations for numeric type conversion', () => {
+    var container = document.createElement('div');
+    ReactDOM.render(<input value="0" />, container);
+
+    var node = container.firstChild;
+    var nodeValue = '0';
+    var nodeValueSetter = jest.genMockFn();
+    Object.defineProperty(node, 'value', {
+      get: function() {
+        return nodeValue;
+      },
+      set: nodeValueSetter.mockImplementation(function(newValue) {
+        nodeValue = newValue;
+      }),
+    });
+
+    ReactDOM.render(<input value={0} />, container);
+    expect(nodeValueSetter.mock.calls.length).toBe(0);
+  });
+
+  it('should not incur unnecessary DOM mutations for the boolean type conversion', () => {
+    var container = document.createElement('div');
+    ReactDOM.render(<input value="true" />, container);
+
+    var node = container.firstChild;
+    var nodeValue = 'true';
+    var nodeValueSetter = jest.genMockFn();
+    Object.defineProperty(node, 'value', {
+      get: function() {
+        return nodeValue;
+      },
+      set: nodeValueSetter.mockImplementation(function(newValue) {
+        nodeValue = newValue;
+      }),
+    });
+
+    ReactDOM.render(<input value={true} />, container);
+    expect(nodeValueSetter.mock.calls.length).toBe(0);
+  });
+
   it('should properly control a value of number `0`', () => {
@@ -277,3 +400,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.Simulate.change(node, {target: {value: '0.0'}});
-    expect(node.value).toBe('0.0');
+    expect(node.value).toBe('0');
   });
@@ -327,7 +450,3 @@ describe('ReactDOMInput', () => {
     fakeNativeEvent.path = [node, container];
-    ReactTestUtils.simulateNativeEventOnNode(
-      'topInput',
-      node,
-      fakeNativeEvent
-    );
+    ReactTestUtils.simulateNativeEventOnNode('topInput', node, fakeNativeEvent);
 
@@ -346,3 +465,3 @@ describe('ReactDOMInput', () => {
     expect(
-      !node.hasAttribute('value') || node.getAttribute('value').length > 0
+      !node.hasAttribute('value') || node.getAttribute('value').length > 0,
     ).toBe(true);
@@ -361,9 +480,6 @@ describe('ReactDOMInput', () => {
               onChange={emptyFunction}
-            />A
-            <input
-              ref="b"
-              type="radio"
-              name="fruit"
-              onChange={emptyFunction}
-            />B
+            />
+            A
+            <input ref="b" type="radio" name="fruit" onChange={emptyFunction} />
+            B
 
@@ -430,3 +546,3 @@ describe('ReactDOMInput', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.'
+      '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.',
     );
@@ -434,3 +550,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="text" value="zoink" onChange={jest.fn()} />
+      <input type="text" value="zoink" onChange={jest.fn()} />,
     );
@@ -443,3 +559,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="text" value="zoink" readOnly={true} />
+      <input type="text" value="zoink" readOnly={true} />,
     );
@@ -448,3 +564,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="text" value="zoink" readOnly={false} />
+      <input type="text" value="zoink" readOnly={false} />,
     );
@@ -471,3 +587,3 @@ describe('ReactDOMInput', () => {
 
-    instance =
+    instance = (
       <input
@@ -477,3 +593,4 @@ describe('ReactDOMInput', () => {
         onChange={emptyFunction}
-      />;
+      />
+    );
     expect(() => ReactDOM.render(instance, node)).toThrow();
@@ -482,3 +599,2 @@ describe('ReactDOMInput', () => {
     expect(() => ReactDOM.render(instance, node)).toThrow();
-
   });
@@ -508,3 +624,3 @@ describe('ReactDOMInput', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.'
+      '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.',
     );
@@ -512,7 +628,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input
-        type="checkbox"
-        checked="false"
-        onChange={jest.fn()}
-      />
+      <input type="checkbox" checked="false" onChange={jest.fn()} />,
     );
@@ -521,3 +633,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="checkbox" checked="false" readOnly={true} />
+      <input type="checkbox" checked="false" readOnly={true} />,
     );
@@ -525,3 +637,5 @@ describe('ReactDOMInput', () => {
 
-    ReactTestUtils.renderIntoDocument(<input type="checkbox" checked="false" />);
+    ReactTestUtils.renderIntoDocument(
+      <input type="checkbox" checked="false" />,
+    );
     expect(console.error.calls.count()).toBe(2);
@@ -531,3 +645,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="checkbox" checked="false" readOnly={true} />
+      <input type="checkbox" checked="false" readOnly={true} />,
     );
@@ -536,3 +650,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="checkbox" checked="false" readOnly={false} />
+      <input type="checkbox" checked="false" readOnly={false} />,
     );
@@ -548,3 +662,3 @@ describe('ReactDOMInput', () => {
 
-    instance =
+    instance = (
       <input
@@ -554,9 +668,10 @@ describe('ReactDOMInput', () => {
         onChange={emptyFunction}
-      />;
+      />
+    );
     expect(() => ReactDOM.render(instance, node)).toThrow();
 
-    instance =
-      <input type="checkbox" checkedLink={link} onChange={emptyFunction} />;
+    instance = (
+      <input type="checkbox" checkedLink={link} onChange={emptyFunction} />
+    );
     expect(() => ReactDOM.render(instance, node)).toThrow();
-
   });
@@ -580,4 +695,5 @@ describe('ReactDOMInput', () => {
 
-    instance =
-      <input type="checkbox" checkedLink={link} valueLink={emptyFunction} />;
+    instance = (
+      <input type="checkbox" checkedLink={link} valueLink={emptyFunction} />
+    );
     expect(() => ReactDOM.render(instance, node)).toThrow();
@@ -589,4 +705,4 @@ describe('ReactDOMInput', () => {
       '`value` prop on `input` should not be null. ' +
-      'Consider using the empty string to clear the component or `undefined` ' +
-      'for uncontrolled components.'
+        'Consider using the empty string to clear the component or `undefined` ' +
+        'for uncontrolled components.',
     );
@@ -599,3 +715,8 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="radio" checked={true} defaultChecked={true} readOnly={true} />
+      <input
+        type="radio"
+        checked={true}
+        defaultChecked={true}
+        readOnly={true}
+      />,
     );
@@ -603,7 +724,7 @@ describe('ReactDOMInput', () => {
       'A component contains an input of type radio with both checked and defaultChecked props. ' +
-      'Input elements must be either controlled or uncontrolled ' +
-      '(specify either the checked prop, or the defaultChecked prop, but not ' +
-      'both). Decide between using a controlled or uncontrolled input ' +
-      'element and remove one of these props. More info: ' +
-      'https://fb.me/react-controlled-components'
+        'Input elements must be either controlled or uncontrolled ' +
+        '(specify either the checked prop, or the defaultChecked prop, but not ' +
+        'both). Decide between using a controlled or uncontrolled input ' +
+        'element and remove one of these props. More info: ' +
+        'https://fb.me/react-controlled-components',
     );
@@ -611,3 +732,8 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="radio" checked={true} defaultChecked={true} readOnly={true} />
+      <input
+        type="radio"
+        checked={true}
+        defaultChecked={true}
+        readOnly={true}
+      />,
     );
@@ -618,3 +744,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="text" value="foo" defaultValue="bar" readOnly={true} />
+      <input type="text" value="foo" defaultValue="bar" readOnly={true} />,
     );
@@ -622,7 +748,7 @@ describe('ReactDOMInput', () => {
       'A component contains an input of type text with both value and defaultValue props. ' +
-      'Input elements must be either controlled or uncontrolled ' +
-      '(specify either the value prop, or the defaultValue prop, but not ' +
-      'both). Decide between using a controlled or uncontrolled input ' +
-      'element and remove one of these props. More info: ' +
-      'https://fb.me/react-controlled-components'
+        'Input elements must be either controlled or uncontrolled ' +
+        '(specify either the value prop, or the defaultValue prop, but not ' +
+        'both). Decide between using a controlled or uncontrolled input ' +
+        'element and remove one of these props. More info: ' +
+        'https://fb.me/react-controlled-components',
     );
@@ -630,3 +756,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="text" value="foo" defaultValue="bar" readOnly={true} />
+      <input type="text" value="foo" defaultValue="bar" readOnly={true} />,
     );
@@ -636,3 +762,5 @@ describe('ReactDOMInput', () => {
   it('should warn if controlled input switches to uncontrolled (value is undefined)', () => {
-    var stub = <input type="text" value="controlled" onChange={emptyFunction} />;
+    var stub = (
+      <input type="text" value="controlled" onChange={emptyFunction} />
+    );
     var container = document.createElement('div');
@@ -643,5 +771,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type text to be uncontrolled. ' +
-      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -650,3 +778,5 @@ describe('ReactDOMInput', () => {
   it('should warn if controlled input switches to uncontrolled (value is null)', () => {
-    var stub = <input type="text" value="controlled" onChange={emptyFunction} />;
+    var stub = (
+      <input type="text" value="controlled" onChange={emptyFunction} />
+    );
     var container = document.createElement('div');
@@ -657,5 +787,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type text to be uncontrolled. ' +
-      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -664,6 +794,11 @@ describe('ReactDOMInput', () => {
   it('should warn if controlled input switches to uncontrolled with defaultValue', () => {
-    var stub = <input type="text" value="controlled" onChange={emptyFunction} />;
+    var stub = (
+      <input type="text" value="controlled" onChange={emptyFunction} />
+    );
     var container = document.createElement('div');
     ReactDOM.render(stub, container);
-    ReactDOM.render(<input type="text" defaultValue="uncontrolled" />, container);
+    ReactDOM.render(
+      <input type="text" defaultValue="uncontrolled" />,
+      container,
+    );
     expect(console.error.calls.count()).toBe(1);
@@ -671,5 +806,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type text to be uncontrolled. ' +
-      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -685,5 +820,5 @@ describe('ReactDOMInput', () => {
       'A component is changing an uncontrolled input of type text to be controlled. ' +
-      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -699,5 +834,5 @@ describe('ReactDOMInput', () => {
       'A component is changing an uncontrolled input of type text to be controlled. ' +
-      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -706,3 +841,5 @@ describe('ReactDOMInput', () => {
   it('should warn if controlled checkbox switches to uncontrolled (checked is undefined)', () => {
-    var stub = <input type="checkbox" checked={true} onChange={emptyFunction} />;
+    var stub = (
+      <input type="checkbox" checked={true} onChange={emptyFunction} />
+    );
     var container = document.createElement('div');
@@ -713,5 +850,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type checkbox to be uncontrolled. ' +
-      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -720,3 +857,5 @@ describe('ReactDOMInput', () => {
   it('should warn if controlled checkbox switches to uncontrolled (checked is null)', () => {
-    var stub = <input type="checkbox" checked={true} onChange={emptyFunction} />;
+    var stub = (
+      <input type="checkbox" checked={true} onChange={emptyFunction} />
+    );
     var container = document.createElement('div');
@@ -727,5 +866,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type checkbox to be uncontrolled. ' +
-      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -734,3 +873,5 @@ describe('ReactDOMInput', () => {
   it('should warn if controlled checkbox switches to uncontrolled with defaultChecked', () => {
-    var stub = <input type="checkbox" checked={true} onChange={emptyFunction} />;
+    var stub = (
+      <input type="checkbox" checked={true} onChange={emptyFunction} />
+    );
     var container = document.createElement('div');
@@ -741,5 +882,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type checkbox to be uncontrolled. ' +
-      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -755,5 +896,5 @@ describe('ReactDOMInput', () => {
       'A component is changing an uncontrolled input of type checkbox to be controlled. ' +
-      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -769,5 +910,5 @@ describe('ReactDOMInput', () => {
       'A component is changing an uncontrolled input of type checkbox to be controlled. ' +
-      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -783,5 +924,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type radio to be uncontrolled. ' +
-      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -797,5 +938,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type radio to be uncontrolled. ' +
-      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -811,5 +952,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type radio to be uncontrolled. ' +
-      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -825,5 +966,5 @@ describe('ReactDOMInput', () => {
       'A component is changing an uncontrolled input of type radio to be controlled. ' +
-      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -839,5 +980,5 @@ describe('ReactDOMInput', () => {
       'A component is changing an uncontrolled input of type radio to be controlled. ' +
-      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -849,4 +990,10 @@ describe('ReactDOMInput', () => {
     ReactDOM.render(<input type="radio" />, container);
-    ReactDOM.render(<input type="radio" value="value" defaultChecked={true} />, container);
-    ReactDOM.render(<input type="radio" value="value" onChange={() => null} />, container);
+    ReactDOM.render(
+      <input type="radio" value="value" defaultChecked={true} />,
+      container,
+    );
+    ReactDOM.render(
+      <input type="radio" value="value" onChange={() => null} />,
+      container,
+    );
     ReactDOM.render(<input type="radio" />, container);
@@ -857,3 +1004,6 @@ describe('ReactDOMInput', () => {
     var container = document.createElement('div');
-    ReactDOM.render(<input type="radio" checked={false} onChange={() => null} />, container);
+    ReactDOM.render(
+      <input type="radio" checked={false} onChange={() => null} />,
+      container,
+    );
     ReactDOM.render(
@@ -865,3 +1015,5 @@ describe('ReactDOMInput', () => {
         onChange={() => null}
-      />, container);
+      />,
+      container,
+    );
     expect(console.error.calls.count()).toBe(0);
@@ -871,3 +1023,11 @@ describe('ReactDOMInput', () => {
     var container = document.createElement('div');
-    ReactDOM.render(<input type="radio" value="value" checked={false} onChange={() => null} />, container);
+    ReactDOM.render(
+      <input
+        type="radio"
+        value="value"
+        checked={false}
+        onChange={() => null}
+      />,
+      container,
+    );
     ReactDOM.render(<input type="radio" value="value" />, container);
@@ -875,5 +1035,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type radio to be uncontrolled. ' +
-      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-      'Decide between using a controlled or uncontrolled input ' +
-      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
+        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+        'Decide between using a controlled or uncontrolled input ' +
+        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
     );
@@ -903,3 +1063,5 @@ describe('ReactDOMInput', () => {
 
-    ReactTestUtils.renderIntoDocument(<input value="0" type="range" min="0" max="100" step="1" />);
+    ReactTestUtils.renderIntoDocument(
+      <input value="0" type="range" min="0" max="100" step="1" />,
+    );
     expect(log).toEqual([
@@ -919,3 +1081,3 @@ describe('ReactDOMInput', () => {
     var input = ReactTestUtils.renderIntoDocument(
-      <input value="hi" type="radio" />
+      <input value="hi" type="radio" />,
     );
@@ -926,7 +1088,7 @@ describe('ReactDOMInput', () => {
     class Input extends React.Component {
-      state = { type: 'number', value: 1000 };
+      state = {type: 'number', value: 1000};
 
       render() {
-        var { value, type } = this.state;
-        return (<input onChange={() => {}} type={type} value={value} />);
+        var {value, type} = this.state;
+        return <input onChange={() => {}} type={type} value={value} />;
       }
@@ -939,3 +1101,3 @@ describe('ReactDOMInput', () => {
     // the value will not be assigned.
-    input.setState({ type: 'text', value: 'Test' });
+    input.setState({type: 'text', value: 'Test'});
     expect(node.value).toEqual('Test');
@@ -970,3 +1132,5 @@ describe('ReactDOMInput', () => {
 
-    ReactTestUtils.renderIntoDocument(<input type="date" defaultValue="1980-01-01" />);
+    ReactTestUtils.renderIntoDocument(
+      <input type="date" defaultValue="1980-01-01" />,
+    );
     expect(log).toEqual([
@@ -984,12 +1148,10 @@ describe('ReactDOMInput', () => {
     function getTestInput() {
-      return React.createClass({
-        getInitialState: function() {
-          return {
-            value: this.props.value == null ? '' : this.props.value,
-          };
-        },
-        onChange: function(event) {
+      return class extends React.Component {
+        state = {
+          value: this.props.value == null ? '' : this.props.value,
+        };
+        onChange = event => {
           this.setState({value: event.target.value});
-        },
-        render: function() {
+        };
+        render() {
           var type = this.props.type;
@@ -998,4 +1160,4 @@ describe('ReactDOMInput', () => {
           return <input type={type} value={value} onChange={this.onChange} />;
-        },
-      });
+        }
+      };
     }
diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMOption-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMOption-test.js
index 952217dfb..924df9d96 100644
--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMOption-test.js
+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMOption-test.js
@@ -13,3 +13,2 @@
 
-
 describe('ReactDOMOption', () => {
@@ -42,3 +41,5 @@ describe('ReactDOMOption', () => {
     expect(console.error.calls.count()).toBe(1);
-    expect(console.error.calls.argsFor(0)[0]).toContain('Only strings and numbers are supported as <option> children.');
+    expect(console.error.calls.argsFor(0)[0]).toContain(
+      'Only strings and numbers are supported as <option> children.',
+    );
   });
@@ -57,3 +58,3 @@ describe('ReactDOMOption', () => {
   it('should be able to use dangerouslySetInnerHTML on option', () => {
-    var stub = <option dangerouslySetInnerHTML={{ __html: 'foobar' }} />;
+    var stub = <option dangerouslySetInnerHTML={{__html: 'foobar'}} />;
     stub = ReactTestUtils.renderIntoDocument(stub);
@@ -77,3 +78,3 @@ describe('ReactDOMOption', () => {
     var a = 'a';
-    var stub =
+    var stub = (
       <select value="giraffe" onChange={() => {}}>
@@ -82,3 +83,4 @@ describe('ReactDOMOption', () => {
         <option>gorill{a}</option>
-      </select>;
+      </select>
+    );
     var options = stub.props.children;
@@ -90,6 +92,3 @@ describe('ReactDOMOption', () => {
 
-    ReactDOM.render(
-      <select value="gorilla">{options}</select>,
-      container
-    );
+    ReactDOM.render(<select value="gorilla">{options}</select>, container);
     expect(node.selectedIndex).toEqual(2);
diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js
index 455a05a29..c3c7f98e8 100644
--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js
+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js
@@ -13,3 +13,2 @@
 
-
 describe('ReactDOMSelect', () => {
@@ -32,3 +31,3 @@ describe('ReactDOMSelect', () => {
   it('should allow setting `defaultValue`', () => {
-    var stub =
+    var stub = (
       <select defaultValue="giraffe">
@@ -37,3 +36,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var options = stub.props.children;
@@ -48,3 +48,3 @@ describe('ReactDOMSelect', () => {
       <select defaultValue="gorilla">{options}</select>,
-      container
+      container,
     );
@@ -62,3 +62,3 @@ describe('ReactDOMSelect', () => {
   it('should not control when using `defaultValue`', () => {
-    var el =
+    var el = (
       <select defaultValue="giraffe">
@@ -67,3 +67,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var container = document.createElement('div');
@@ -81,3 +82,3 @@ describe('ReactDOMSelect', () => {
   it('should allow setting `defaultValue` with multiple', () => {
-    var stub =
+    var stub = (
       <select multiple={true} defaultValue={['giraffe', 'gorilla']}>
@@ -86,3 +87,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var options = stub.props.children;
@@ -92,5 +94,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(true);  // giraffe
-    expect(node.options[2].selected).toBe(true);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(true); // giraffe
+    expect(node.options[2].selected).toBe(true); // gorilla
 
@@ -99,8 +101,8 @@ describe('ReactDOMSelect', () => {
       <select multiple={true} defaultValue={['monkey']}>{options}</select>,
-      container
+      container,
     );
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(true);  // giraffe
-    expect(node.options[2].selected).toBe(true);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(true); // giraffe
+    expect(node.options[2].selected).toBe(true); // gorilla
   });
@@ -108,3 +110,3 @@ describe('ReactDOMSelect', () => {
   it('should allow setting `value`', () => {
-    var stub =
+    var stub = (
       <select value="giraffe" onChange={noop}>
@@ -113,3 +115,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var options = stub.props.children;
@@ -124,3 +127,3 @@ describe('ReactDOMSelect', () => {
       <select value="gorilla" onChange={noop}>{options}</select>,
-      container
+      container,
     );
@@ -138,3 +141,3 @@ describe('ReactDOMSelect', () => {
   it('should allow setting `value` with multiple', () => {
-    var stub =
+    var stub = (
       <select multiple={true} value={['giraffe', 'gorilla']} onChange={noop}>
@@ -143,3 +146,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var options = stub.props.children;
@@ -149,5 +153,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(true);  // giraffe
-    expect(node.options[2].selected).toBe(true);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(true); // giraffe
+    expect(node.options[2].selected).toBe(true); // gorilla
 
@@ -158,8 +162,8 @@ describe('ReactDOMSelect', () => {
       </select>,
-      container
+      container,
     );
 
-    expect(node.options[0].selected).toBe(true);  // monkey
-    expect(node.options[1].selected).toBe(false);  // giraffe
-    expect(node.options[2].selected).toBe(false);  // gorilla
+    expect(node.options[0].selected).toBe(true); // monkey
+    expect(node.options[1].selected).toBe(false); // giraffe
+    expect(node.options[2].selected).toBe(false); // gorilla
   });
@@ -167,3 +171,3 @@ describe('ReactDOMSelect', () => {
   it('should not select other options automatically', () => {
-    var stub =
+    var stub = (
       <select multiple={true} value={['12']} onChange={noop}>
@@ -172,3 +176,4 @@ describe('ReactDOMSelect', () => {
         <option value="12">twelve</option>
-      </select>;
+      </select>
+    );
     stub = ReactTestUtils.renderIntoDocument(stub);
@@ -176,5 +181,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false);  // one
-    expect(node.options[1].selected).toBe(false);  // two
-    expect(node.options[2].selected).toBe(true);  // twelve
+    expect(node.options[0].selected).toBe(false); // one
+    expect(node.options[1].selected).toBe(false); // two
+    expect(node.options[2].selected).toBe(true); // twelve
   });
@@ -192,3 +197,3 @@ describe('ReactDOMSelect', () => {
       </select>,
-      container
+      container,
     );
@@ -197,5 +202,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(true);  // a
-    expect(node.options[1].selected).toBe(true);  // b
-    expect(node.options[2].selected).toBe(false);  // c
+    expect(node.options[0].selected).toBe(true); // a
+    expect(node.options[1].selected).toBe(true); // b
+    expect(node.options[2].selected).toBe(false); // c
   });
@@ -210,3 +215,3 @@ describe('ReactDOMSelect', () => {
 
-    var el =
+    var el = (
       <select multiple={true} value={[objectToString]} onChange={noop}>
@@ -215,3 +220,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var container = document.createElement('div');
@@ -220,5 +226,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(true);  // giraffe
-    expect(node.options[2].selected).toBe(false);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(true); // giraffe
+    expect(node.options[2].selected).toBe(false); // gorilla
 
@@ -227,3 +233,3 @@ describe('ReactDOMSelect', () => {
 
-    var el2 =
+    var el2 = (
       <select multiple={true} value={[objectToString]}>
@@ -232,8 +238,9 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     ReactDOM.render(el2, container);
 
-    expect(node.options[0].selected).toBe(true);  // monkey
-    expect(node.options[1].selected).toBe(false);  // giraffe
-    expect(node.options[2].selected).toBe(false);  // gorilla
+    expect(node.options[0].selected).toBe(true); // monkey
+    expect(node.options[1].selected).toBe(false); // giraffe
+    expect(node.options[2].selected).toBe(false); // gorilla
   });
@@ -241,3 +248,3 @@ describe('ReactDOMSelect', () => {
   it('should allow switching to multiple', () => {
-    var stub =
+    var stub = (
       <select defaultValue="giraffe">
@@ -246,3 +253,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var options = stub.props.children;
@@ -252,5 +260,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(true);  // giraffe
-    expect(node.options[2].selected).toBe(false);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(true); // giraffe
+    expect(node.options[2].selected).toBe(false); // gorilla
 
@@ -261,8 +269,8 @@ describe('ReactDOMSelect', () => {
       </select>,
-      container
+      container,
     );
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(true);  // giraffe
-    expect(node.options[2].selected).toBe(true);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(true); // giraffe
+    expect(node.options[2].selected).toBe(true); // gorilla
   });
@@ -270,3 +278,3 @@ describe('ReactDOMSelect', () => {
   it('should allow switching from multiple', () => {
-    var stub =
+    var stub = (
       <select multiple={true} defaultValue={['giraffe', 'gorilla']}>
@@ -275,3 +283,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var options = stub.props.children;
@@ -281,5 +290,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(true);  // giraffe
-    expect(node.options[2].selected).toBe(true);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(true); // giraffe
+    expect(node.options[2].selected).toBe(true); // gorilla
 
@@ -289,9 +298,8 @@ describe('ReactDOMSelect', () => {
       <select defaultValue="gorilla">{options}</select>,
-      container
+      container,
     );
 
-
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(false);  // giraffe
-    expect(node.options[2].selected).toBe(true);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(false); // giraffe
+    expect(node.options[2].selected).toBe(true); // gorilla
   });
@@ -299,3 +307,3 @@ describe('ReactDOMSelect', () => {
   it('should remember value when switching to uncontrolled', () => {
-    var stub =
+    var stub = (
       <select value={'giraffe'} onChange={noop}>
@@ -304,3 +312,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var options = stub.props.children;
@@ -310,5 +319,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(true);  // giraffe
-    expect(node.options[2].selected).toBe(false);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(true); // giraffe
+    expect(node.options[2].selected).toBe(false); // gorilla
 
@@ -316,5 +325,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(true);  // giraffe
-    expect(node.options[2].selected).toBe(false);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(true); // giraffe
+    expect(node.options[2].selected).toBe(false); // gorilla
   });
@@ -322,3 +331,3 @@ describe('ReactDOMSelect', () => {
   it('should remember updated value when switching to uncontrolled', () => {
-    var stub =
+    var stub = (
       <select value={'giraffe'} onChange={noop}>
@@ -327,3 +336,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var options = stub.props.children;
@@ -335,8 +345,8 @@ describe('ReactDOMSelect', () => {
       <select value="gorilla" onChange={noop}>{options}</select>,
-      container
+      container,
     );
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(false);  // giraffe
-    expect(node.options[2].selected).toBe(true);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(false); // giraffe
+    expect(node.options[2].selected).toBe(true); // gorilla
 
@@ -344,5 +354,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(false);  // giraffe
-    expect(node.options[2].selected).toBe(true);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(false); // giraffe
+    expect(node.options[2].selected).toBe(true); // gorilla
   });
@@ -351,3 +361,3 @@ describe('ReactDOMSelect', () => {
     var link = new ReactLink('giraffe', jest.fn());
-    var stub =
+    var stub = (
       <select valueLink={link}>
@@ -356,3 +366,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
 
@@ -364,3 +375,3 @@ describe('ReactDOMSelect', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.'
+      '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.',
     );
@@ -369,5 +380,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(true);  // giraffe
-    expect(node.options[2].selected).toBe(false);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(true); // giraffe
+    expect(node.options[2].selected).toBe(false); // gorilla
     expect(link.requestChange.mock.calls.length).toBe(0);
@@ -380,3 +391,2 @@ describe('ReactDOMSelect', () => {
     expect(link.requestChange.mock.calls[0][0]).toEqual('gorilla');
-
   });
@@ -384,3 +394,3 @@ describe('ReactDOMSelect', () => {
   it('should support server-side rendering', () => {
-    var stub =
+    var stub = (
       <select value="giraffe" onChange={noop}>
@@ -389,3 +399,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var markup = ReactDOMServer.renderToString(stub);
@@ -397,3 +408,3 @@ describe('ReactDOMSelect', () => {
   it('should support server-side rendering with defaultValue', () => {
-    var stub =
+    var stub = (
       <select defaultValue="giraffe">
@@ -402,3 +413,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var markup = ReactDOMServer.renderToString(stub);
@@ -410,3 +422,3 @@ describe('ReactDOMSelect', () => {
   it('should support server-side rendering with multiple', () => {
-    var stub =
+    var stub = (
       <select multiple={true} value={['giraffe', 'gorilla']} onChange={noop}>
@@ -415,3 +427,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     var markup = ReactDOMServer.renderToString(stub);
@@ -431,3 +444,3 @@ describe('ReactDOMSelect', () => {
       </select>,
-      container
+      container,
     );
@@ -435,5 +448,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(true);  // giraffe
-    expect(node.options[2].selected).toBe(false);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(true); // giraffe
+    expect(node.options[2].selected).toBe(false); // gorilla
 
@@ -444,7 +457,7 @@ describe('ReactDOMSelect', () => {
       </select>,
-      container
+      container,
     );
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(false);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(false); // gorilla
 
@@ -456,8 +469,8 @@ describe('ReactDOMSelect', () => {
       </select>,
-      container
+      container,
     );
 
-    expect(node.options[0].selected).toBe(false);  // monkey
-    expect(node.options[1].selected).toBe(false);  // giraffe
-    expect(node.options[2].selected).toBe(false);  // gorilla
+    expect(node.options[0].selected).toBe(false); // monkey
+    expect(node.options[1].selected).toBe(false); // giraffe
+    expect(node.options[2].selected).toBe(false); // gorilla
   });
@@ -467,10 +480,14 @@ describe('ReactDOMSelect', () => {
 
-    ReactTestUtils.renderIntoDocument(<select value={null}><option value="test"/></select>);
+    ReactTestUtils.renderIntoDocument(
+      <select value={null}><option value="test" /></select>,
+    );
     expect(console.error.calls.argsFor(0)[0]).toContain(
       '`value` prop on `select` should not be null. ' +
-      'Consider using the empty string to clear the component or `undefined` ' +
-      'for uncontrolled components.'
+        'Consider using the empty string to clear the component or `undefined` ' +
+        'for uncontrolled components.',
     );
 
-    ReactTestUtils.renderIntoDocument(<select value={null}><option value="test"/></select>);
+    ReactTestUtils.renderIntoDocument(
+      <select value={null}><option value="test" /></select>,
+    );
     expect(console.error.calls.count()).toBe(1);
@@ -479,3 +496,3 @@ describe('ReactDOMSelect', () => {
   it('should refresh state on change', () => {
-    var stub =
+    var stub = (
       <select value="giraffe" onChange={noop}>
@@ -484,3 +501,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     stub = ReactTestUtils.renderIntoDocument(stub);
@@ -500,3 +518,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
+      </select>,
     );
@@ -504,6 +522,6 @@ describe('ReactDOMSelect', () => {
       'Select elements must be either controlled or uncontrolled ' +
-      '(specify either the value prop, or the defaultValue prop, but not ' +
-      'both). Decide between using a controlled or uncontrolled select ' +
-      'element and remove one of these props. More info: ' +
-      'https://fb.me/react-controlled-components'
+        '(specify either the value prop, or the defaultValue prop, but not ' +
+        'both). Decide between using a controlled or uncontrolled select ' +
+        'element and remove one of these props. More info: ' +
+        'https://fb.me/react-controlled-components',
     );
@@ -515,3 +533,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
+      </select>,
     );
@@ -526,3 +544,3 @@ describe('ReactDOMSelect', () => {
     var container = document.createElement('div');
-    var stub =
+    var stub = (
       <select value="giraffe" onChange={changeView}>
@@ -531,3 +549,4 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>;
+      </select>
+    );
     stub = ReactDOM.render(stub, container);
@@ -536,3 +555,3 @@ describe('ReactDOMSelect', () => {
     expect(() => ReactTestUtils.Simulate.change(node)).not.toThrow(
-      "Cannot set property 'pendingUpdate' of null"
+      "Cannot set property 'pendingUpdate' of null",
     );
@@ -541,3 +560,3 @@ describe('ReactDOMSelect', () => {
   it('should select grandchild options nested inside an optgroup', () => {
-    var stub =
+    var stub = (
       <select value="b" onChange={noop}>
@@ -548,3 +567,4 @@ describe('ReactDOMSelect', () => {
         </optgroup>
-      </select>;
+      </select>
+    );
     var container = document.createElement('div');
@@ -552,5 +572,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false);  // a
-    expect(node.options[1].selected).toBe(true);   // b
-    expect(node.options[2].selected).toBe(false);  // c
+    expect(node.options[0].selected).toBe(false); // a
+    expect(node.options[1].selected).toBe(true); // b
+    expect(node.options[2].selected).toBe(false); // c
   });
diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js
index 613b9debf..a4bfa8807 100644
--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js
+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js
@@ -125,3 +125,3 @@ describe('ReactDOMTextarea', () => {
       <textarea value="gorilla" onChange={emptyFunction} />,
-      container
+      container,
     );
@@ -156,3 +156,3 @@ describe('ReactDOMTextarea', () => {
       <textarea value={true} onChange={emptyFunction} />,
-      container
+      container,
     );
@@ -170,3 +170,3 @@ describe('ReactDOMTextarea', () => {
       <textarea value={false} onChange={emptyFunction} />,
-      container
+      container,
     );
@@ -189,3 +189,3 @@ describe('ReactDOMTextarea', () => {
       <textarea value={objToString} onChange={emptyFunction} />,
-      container
+      container,
     );
@@ -270,3 +270,6 @@ describe('ReactDOMTextarea', () => {
 
-    var node = renderTextarea(<textarea value="kitten" onChange={emptyFunction} />, container);
+    var node = renderTextarea(
+      <textarea value="kitten" onChange={emptyFunction} />,
+      container,
+    );
 
@@ -282,3 +285,6 @@ describe('ReactDOMTextarea', () => {
 
-    var node = renderTextarea(<textarea value="kitten" onChange={emptyFunction} />, container);
+    var node = renderTextarea(
+      <textarea value="kitten" onChange={emptyFunction} />,
+      container,
+    );
 
@@ -286,3 +292,6 @@ describe('ReactDOMTextarea', () => {
 
-    ReactDOM.render(<textarea value="puppies" onChange={emptyFunction} />, container);
+    ReactDOM.render(
+      <textarea value="puppies" onChange={emptyFunction} />,
+      container,
+    );
 
@@ -326,3 +335,3 @@ describe('ReactDOMTextarea', () => {
       ReactTestUtils.renderIntoDocument(
-        <textarea>{'hello'}{'there'}</textarea>
+        <textarea>{'hello'}{'there'}</textarea>,
       );
@@ -350,6 +359,5 @@ describe('ReactDOMTextarea', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.'
+      '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.',
     );
 
-
     expect(instance.value).toBe('yolo');
@@ -377,4 +385,4 @@ describe('ReactDOMTextarea', () => {
       '`value` prop on `textarea` should not be null. ' +
-      'Consider using the empty string to clear the component or `undefined` ' +
-      'for uncontrolled components.'
+        'Consider using the empty string to clear the component or `undefined` ' +
+        'for uncontrolled components.',
     );
@@ -388,3 +396,3 @@ describe('ReactDOMTextarea', () => {
     ReactTestUtils.renderIntoDocument(
-      <textarea value="foo" defaultValue="bar" readOnly={true} />
+      <textarea value="foo" defaultValue="bar" readOnly={true} />,
     );
@@ -392,6 +400,6 @@ describe('ReactDOMTextarea', () => {
       'Textarea elements must be either controlled or uncontrolled ' +
-      '(specify either the value prop, or the defaultValue prop, but not ' +
-      'both). Decide between using a controlled or uncontrolled textarea ' +
-      'and remove one of these props. More info: ' +
-      'https://fb.me/react-controlled-components'
+        '(specify either the value prop, or the defaultValue prop, but not ' +
+        'both). Decide between using a controlled or uncontrolled textarea ' +
+        'and remove one of these props. More info: ' +
+        'https://fb.me/react-controlled-components',
     );
@@ -399,3 +407,3 @@ describe('ReactDOMTextarea', () => {
     ReactTestUtils.renderIntoDocument(
-      <textarea value="foo" defaultValue="bar" readOnly={true} />
+      <textarea value="foo" defaultValue="bar" readOnly={true} />,
     );
@@ -403,3 +411,2 @@ describe('ReactDOMTextarea', () => {
   });
-
 });
diff --git a/src/renderers/dom/fiber/ReactDOMFiber.js b/src/renderers/dom/fiber/ReactDOMFiber.js
index d4b9c7584..88a6b0cdb 100644
--- a/src/renderers/dom/fiber/ReactDOMFiber.js
+++ b/src/renderers/dom/fiber/ReactDOMFiber.js
@@ -14,3 +14,3 @@
 
-import type { HostChildren } from 'ReactFiberReconciler';
+import type {HostChildren} from 'ReactFiberReconciler';
 
@@ -20,9 +20,12 @@ var warning = require('warning');
 
-type DOMContainerElement = Element & { _reactRootContainer: ?Object };
+type DOMContainerElement = Element & {_reactRootContainer: ?Object};
 
 type Container = Element;
-type Props = { };
+type Props = {};
 type Instance = Element;
 
-function recursivelyAppendChildren(parent : Element, child : HostChildren<Instance>) {
+function recursivelyAppendChildren(
+  parent: Element,
+  child: HostChildren<Instance>,
+) {
   if (!child) {
@@ -36,6 +39,6 @@ function recursivelyAppendChildren(parent : Element, child : HostChildren<Instan
     /* As a result of the refinement issue this type isn't known. */
-    let node : any = child;
+    let node: any = child;
     do {
       recursivelyAppendChildren(parent, node.output);
-    } while (node = node.sibling);
+    } while ((node = node.sibling));
   }
@@ -44,4 +47,6 @@ function recursivelyAppendChildren(parent : Element, child : HostChildren<Instan
 var DOMRenderer = ReactFiberReconciler({
-
-  updateContainer(container : Container, children : HostChildren<Instance>) : void {
+  updateContainer(
+    container: Container,
+    children: HostChildren<Instance>,
+  ): void {
     container.innerHTML = '';
@@ -50,3 +55,7 @@ var DOMRenderer = ReactFiberReconciler({
 
-  createInstance(type : string, props : Props, children : HostChildren<Instance>) : Instance {
+  createInstance(
+    type: string,
+    props: Props,
+    children: HostChildren<Instance>,
+  ): Instance {
     const domElement = document.createElement(type);
@@ -60,7 +69,7 @@ var DOMRenderer = ReactFiberReconciler({
   prepareUpdate(
-    domElement : Instance,
-    oldProps : Props,
-    newProps : Props,
-    children : HostChildren<Instance>
-  ) : boolean {
+    domElement: Instance,
+    oldProps: Props,
+    newProps: Props,
+    children: HostChildren<Instance>,
+  ): boolean {
     return true;
@@ -68,3 +77,8 @@ var DOMRenderer = ReactFiberReconciler({
 
-  commitUpdate(domElement : Instance, oldProps : Props, newProps : Props, children : HostChildren<Instance>) : void {
+  commitUpdate(
+    domElement: Instance,
+    oldProps: Props,
+    newProps: Props,
+    children: HostChildren<Instance>,
+  ): void {
     domElement.innerHTML = '';
@@ -76,3 +90,3 @@ var DOMRenderer = ReactFiberReconciler({
 
-  deleteInstance(instance : Instance) : void {
+  deleteInstance(instance: Instance): void {
     // Noop
@@ -83,3 +97,2 @@ var DOMRenderer = ReactFiberReconciler({
   scheduleDeferredCallback: window.requestIdleCallback,
-
 });
@@ -92,3 +105,3 @@ function warnAboutUnstableUse() {
     'You are using React DOM Fiber which is an experimental renderer. ' +
-    'It is likely to have bugs, breaking changes and is unsupported.'
+      'It is likely to have bugs, breaking changes and is unsupported.',
   );
@@ -98,7 +111,9 @@ function warnAboutUnstableUse() {
 var ReactDOM = {
-
-  render(element : ReactElement<any>, container : DOMContainerElement) {
+  render(element: ReactElement<any>, container: DOMContainerElement) {
     warnAboutUnstableUse();
     if (!container._reactRootContainer) {
-      container._reactRootContainer = DOMRenderer.mountContainer(element, container);
+      container._reactRootContainer = DOMRenderer.mountContainer(
+        element,
+        container,
+      );
     } else {
@@ -108,3 +123,3 @@ var ReactDOM = {
 
-  unmountComponentAtNode(container : DOMContainerElement) {
+  unmountComponentAtNode(container: DOMContainerElement) {
     warnAboutUnstableUse();
@@ -118,3 +133,2 @@ var ReactDOM = {
   },
-
 };
diff --git a/src/renderers/dom/server/ReactMarkupChecksum.js b/src/renderers/dom/server/ReactMarkupChecksum.js
index 8d0265426..09e477c47 100644
--- a/src/renderers/dom/server/ReactMarkupChecksum.js
+++ b/src/renderers/dom/server/ReactMarkupChecksum.js
@@ -18,3 +18,2 @@ var COMMENT_START = /^<\!\-\-/;
 
-
 var ReactMarkupChecksum = {
@@ -35,3 +34,3 @@ var ReactMarkupChecksum = {
         TAG_END,
-        ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&'
+        ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&',
       );
@@ -47,3 +46,3 @@ var ReactMarkupChecksum = {
     var existingChecksum = element.getAttribute(
-      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
+      ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
     );
diff --git a/src/renderers/dom/server/ReactServerRendering.js b/src/renderers/dom/server/ReactServerRendering.js
index ff08fe8ff..2c7b7b5d0 100644
--- a/src/renderers/dom/server/ReactServerRendering.js
+++ b/src/renderers/dom/server/ReactServerRendering.js
@@ -19,4 +19,3 @@ var ReactReconciler = require('ReactReconciler');
 var ReactServerBatchingStrategy = require('ReactServerBatchingStrategy');
-var ReactServerRenderingTransaction =
-  require('ReactServerRenderingTransaction');
+var ReactServerRenderingTransaction = require('ReactServerRenderingTransaction');
 var ReactUpdates = require('ReactUpdates');
@@ -50,3 +49,3 @@ function renderToStringImpl(element, makeStaticMarkup) {
         emptyObject,
-        0 /* parentDebugID */
+        0 /* parentDebugID */,
       );
@@ -54,3 +53,3 @@ function renderToStringImpl(element, makeStaticMarkup) {
         ReactInstrumentation.debugTool.onUnmountComponent(
-          componentInstance._debugID
+          componentInstance._debugID,
         );
@@ -69,3 +68,3 @@ function renderToStringImpl(element, makeStaticMarkup) {
       ReactUpdates.injection.injectBatchingStrategy(
-        ReactDefaultBatchingStrategy
+        ReactDefaultBatchingStrategy,
       );
@@ -83,3 +82,3 @@ function renderToString(element) {
     React.isValidElement(element),
-    'renderToString(): You must pass a valid ReactElement.'
+    'renderToString(): You must pass a valid ReactElement.',
   );
@@ -96,3 +95,3 @@ function renderToStaticMarkup(element) {
     React.isValidElement(element),
-    'renderToStaticMarkup(): You must pass a valid ReactElement.'
+    'renderToStaticMarkup(): You must pass a valid ReactElement.',
   );
diff --git a/src/renderers/dom/server/ReactServerRenderingTransaction.js b/src/renderers/dom/server/ReactServerRenderingTransaction.js
index 0a8936bbb..2fa930cc4 100644
--- a/src/renderers/dom/server/ReactServerRenderingTransaction.js
+++ b/src/renderers/dom/server/ReactServerRenderingTransaction.js
@@ -18,3 +18,2 @@ var ReactServerUpdateQueue = require('ReactServerUpdateQueue');
 
-
 /**
@@ -77,18 +76,10 @@ var Mixin = {
    */
-  destructor: function() {
-  },
+  destructor: function() {},
 
-  checkpoint: function() {
-  },
+  checkpoint: function() {},
 
-  rollback: function() {
-  },
+  rollback: function() {},
 };
 
-
-Object.assign(
-  ReactServerRenderingTransaction.prototype,
-  Transaction,
-  Mixin
-);
+Object.assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);
 
diff --git a/src/renderers/dom/server/ReactServerUpdateQueue.js b/src/renderers/dom/server/ReactServerUpdateQueue.js
index b1e6a54c2..30ebd5bf7 100644
--- a/src/renderers/dom/server/ReactServerUpdateQueue.js
+++ b/src/renderers/dom/server/ReactServerUpdateQueue.js
@@ -18,5 +18,8 @@ var warning = require('warning');
 
-import type { Transaction } from 'Transaction';
+import type {Transaction} from 'Transaction';
 
-function warnNoop(publicInstance: ReactComponent<any, any, any>, callerName: string) {
+function warnNoop(
+  publicInstance: ReactComponent<any, any, any>,
+  callerName: string,
+) {
   if (__DEV__) {
@@ -26,7 +29,8 @@ function warnNoop(publicInstance: ReactComponent<any, any, any>, callerName: str
       '%s(...): Can only update a mounting component. ' +
-      'This usually means you called %s() outside componentWillMount() on the server. ' +
-      'This is a no-op. Please check the code for the %s component.',
+        'This usually means you called %s() outside componentWillMount() on the server. ' +
+        'This is a no-op. Please check the code for the %s component.',
       callerName,
       callerName,
-      constructor && (constructor.displayName || constructor.name) || 'ReactClass'
+      (constructor && (constructor.displayName || constructor.name)) ||
+        'ReactClass',
     );
@@ -68,3 +72,7 @@ class ReactServerUpdateQueue {
    */
-  enqueueCallback(publicInstance: ReactComponent<any, any, any>, callback?: Function, callerName?: string) {
+  enqueueCallback(
+    publicInstance: ReactComponent<any, any, any>,
+    callback?: Function,
+    callerName?: string,
+  ) {
     if (this.transaction.isInTransaction()) {
@@ -106,3 +114,6 @@ class ReactServerUpdateQueue {
    */
-  enqueueReplaceState(publicInstance: ReactComponent<any, any, any>, completeState: Object|Function) {
+  enqueueReplaceState(
+    publicInstance: ReactComponent<any, any, any>,
+    completeState: Object | Function,
+  ) {
     if (this.transaction.isInTransaction()) {
@@ -124,3 +135,6 @@ class ReactServerUpdateQueue {
    */
-  enqueueSetState(publicInstance: ReactComponent<any, any, any>, partialState: Object|Function) {
+  enqueueSetState(
+    publicInstance: ReactComponent<any, any, any>,
+    partialState: Object | Function,
+  ) {
     if (this.transaction.isInTransaction()) {
diff --git a/src/renderers/dom/server/__tests__/ReactServerRendering-test.js b/src/renderers/dom/server/__tests__/ReactServerRendering-test.js
index af931eb40..50e3be5c8 100644
--- a/src/renderers/dom/server/__tests__/ReactServerRendering-test.js
+++ b/src/renderers/dom/server/__tests__/ReactServerRendering-test.js
@@ -45,9 +45,15 @@ describe('ReactServerRendering', () => {
       var response = ReactServerRendering.renderToString(
-        <span>hello world</span>
+        <span>hello world</span>,
+      );
+      expect(response).toMatch(
+        new RegExp(
+          '<span ' +
+            ROOT_ATTRIBUTE_NAME +
+            '="" ' +
+            ID_ATTRIBUTE_NAME +
+            '="[^"]+" ' +
+            ReactMarkupChecksum.CHECKSUM_ATTR_NAME +
+            '="[^"]+">hello world</span>',
+        ),
       );
-      expect(response).toMatch(new RegExp(
-        '<span ' + ROOT_ATTRIBUTE_NAME + '="" ' +
-          ID_ATTRIBUTE_NAME + '="[^"]+" ' +
-          ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="[^"]+">hello world</span>'
-      ));
     });
@@ -55,10 +61,14 @@ describe('ReactServerRendering', () => {
     it('should generate simple markup for self-closing tags', () => {
-      var response = ReactServerRendering.renderToString(
-        <img />
+      var response = ReactServerRendering.renderToString(<img />);
+      expect(response).toMatch(
+        new RegExp(
+          '<img ' +
+            ROOT_ATTRIBUTE_NAME +
+            '="" ' +
+            ID_ATTRIBUTE_NAME +
+            '="[^"]+" ' +
+            ReactMarkupChecksum.CHECKSUM_ATTR_NAME +
+            '="[^"]+"/>',
+        ),
       );
-      expect(response).toMatch(new RegExp(
-        '<img ' + ROOT_ATTRIBUTE_NAME + '="" ' +
-          ID_ATTRIBUTE_NAME + '="[^"]+" ' +
-          ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="[^"]+"/>'
-      ));
     });
@@ -66,10 +76,14 @@ describe('ReactServerRendering', () => {
     it('should generate simple markup for attribute with `>` symbol', () => {
-      var response = ReactServerRendering.renderToString(
-        <img data-attr=">" />
+      var response = ReactServerRendering.renderToString(<img data-attr=">" />);
+      expect(response).toMatch(
+        new RegExp(
+          '<img data-attr="&gt;" ' +
+            ROOT_ATTRIBUTE_NAME +
+            '="" ' +
+            ID_ATTRIBUTE_NAME +
+            '="[^"]+" ' +
+            ReactMarkupChecksum.CHECKSUM_ATTR_NAME +
+            '="[^"]+"/>',
+        ),
       );
-      expect(response).toMatch(new RegExp(
-        '<img data-attr="&gt;" ' + ROOT_ATTRIBUTE_NAME + '="" ' +
-          ID_ATTRIBUTE_NAME + '="[^"]+" ' +
-          ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="[^"]+"/>'
-      ));
     });
@@ -92,3 +106,3 @@ describe('ReactServerRendering', () => {
       ReactServerRendering.renderToString(
-        <span onClick={cb}>hello world</span>
+        <span onClick={cb}>hello world</span>,
       );
@@ -110,15 +124,21 @@ describe('ReactServerRendering', () => {
 
-      var response = ReactServerRendering.renderToString(
-        <Parent />
-      );
-      expect(response).toMatch(new RegExp(
-        '<div ' + ROOT_ATTRIBUTE_NAME + '="" ' +
-          ID_ATTRIBUTE_NAME + '="[^"]+" ' +
-          ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="[^"]+">' +
-          '<span ' + ID_ATTRIBUTE_NAME + '="[^"]+">' +
+      var response = ReactServerRendering.renderToString(<Parent />);
+      expect(response).toMatch(
+        new RegExp(
+          '<div ' +
+            ROOT_ATTRIBUTE_NAME +
+            '="" ' +
+            ID_ATTRIBUTE_NAME +
+            '="[^"]+" ' +
+            ReactMarkupChecksum.CHECKSUM_ATTR_NAME +
+            '="[^"]+">' +
+            '<span ' +
+            ID_ATTRIBUTE_NAME +
+            '="[^"]+">' +
             '<!-- react-text: [0-9]+ -->My name is <!-- /react-text -->' +
             '<!-- react-text: [0-9]+ -->child<!-- /react-text -->' +
-          '</span>' +
-        '</div>'
-      ));
+            '</span>' +
+            '</div>',
+        ),
+      );
     });
@@ -170,17 +190,23 @@ describe('ReactServerRendering', () => {
 
-        var response = ReactServerRendering.renderToString(
-          <TestComponent />
-        );
-
-        expect(response).toMatch(new RegExp(
-          '<span ' + ROOT_ATTRIBUTE_NAME + '="" ' +
-            ID_ATTRIBUTE_NAME + '="[^"]+" ' +
-            ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="[^"]+">' +
-            '<!-- react-text: [0-9]+ -->Component name: <!-- /react-text -->' +
-            '<!-- react-text: [0-9]+ -->TestComponent<!-- /react-text -->' +
-          '</span>'
-        ));
-        expect(lifecycle).toEqual(
-          ['getInitialState', 'componentWillMount', 'render']
+        var response = ReactServerRendering.renderToString(<TestComponent />);
+
+        expect(response).toMatch(
+          new RegExp(
+            '<span ' +
+              ROOT_ATTRIBUTE_NAME +
+              '="" ' +
+              ID_ATTRIBUTE_NAME +
+              '="[^"]+" ' +
+              ReactMarkupChecksum.CHECKSUM_ATTR_NAME +
+              '="[^"]+">' +
+              '<!-- react-text: [0-9]+ -->Component name: <!-- /react-text -->' +
+              '<!-- react-text: [0-9]+ -->TestComponent<!-- /react-text -->' +
+              '</span>',
+          ),
         );
+        expect(lifecycle).toEqual([
+          'getInitialState',
+          'componentWillMount',
+          'render',
+        ]);
       }
@@ -244,3 +270,3 @@ describe('ReactServerRendering', () => {
       lastMarkup = ReactServerRendering.renderToString(
-        <TestComponent name="x" />
+        <TestComponent name="x" />,
       );
@@ -281,7 +307,5 @@ describe('ReactServerRendering', () => {
           ReactServerRendering,
-          'not a component'
-        )
-      ).toThrowError(
-        'renderToString(): You must pass a valid ReactElement.'
-      );
+          'not a component',
+        ),
+      ).toThrowError('renderToString(): You must pass a valid ReactElement.');
     });
@@ -304,3 +328,3 @@ describe('ReactServerRendering', () => {
       var response = ReactServerRendering.renderToStaticMarkup(
-        <TestComponent />
+        <TestComponent />,
       );
@@ -318,3 +342,3 @@ describe('ReactServerRendering', () => {
       var response = ReactServerRendering.renderToStaticMarkup(
-        <TestComponent />
+        <TestComponent />,
       );
@@ -329,3 +353,3 @@ describe('ReactServerRendering', () => {
       ReactServerRendering.renderToStaticMarkup(
-        <span onClick={cb}>hello world</span>
+        <span onClick={cb}>hello world</span>,
       );
@@ -380,3 +404,3 @@ describe('ReactServerRendering', () => {
         var response = ReactServerRendering.renderToStaticMarkup(
-          <TestComponent />
+          <TestComponent />,
         );
@@ -384,5 +408,7 @@ describe('ReactServerRendering', () => {
         expect(response).toBe('<span>Component name: TestComponent</span>');
-        expect(lifecycle).toEqual(
-          ['getInitialState', 'componentWillMount', 'render']
-        );
+        expect(lifecycle).toEqual([
+          'getInitialState',
+          'componentWillMount',
+          'render',
+        ]);
       }
@@ -400,6 +426,6 @@ describe('ReactServerRendering', () => {
           ReactServerRendering,
-          'not a component'
-        )
+          'not a component',
+        ),
       ).toThrowError(
-        'renderToStaticMarkup(): You must pass a valid ReactElement.'
+        'renderToStaticMarkup(): You must pass a valid ReactElement.',
       );
@@ -422,5 +448,3 @@ describe('ReactServerRendering', () => {
       };
-      var markup = ReactServerRendering.renderToString(
-        <Component />
-      );
+      var markup = ReactServerRendering.renderToString(<Component />);
       expect(markup.indexOf('hello, world') >= 0).toBe(true);
@@ -434,3 +458,3 @@ describe('ReactServerRendering', () => {
               <img src="foo-bar.jpg" />
-            </div>
+            </div>,
           );
@@ -456,4 +480,4 @@ describe('ReactServerRendering', () => {
             <Component />
-          </div>
-        )
+          </div>,
+        ),
       ).not.toThrow();
@@ -481,4 +505,4 @@ describe('ReactServerRendering', () => {
       'Warning: setState(...): Can only update a mounting component.' +
-      ' This usually means you called setState() outside componentWillMount() on the server.' +
-      ' This is a no-op. Please check the code for the Foo component.'
+        ' This usually means you called setState() outside componentWillMount() on the server.' +
+        ' This is a no-op. Please check the code for the Foo component.',
     );
@@ -508,4 +532,4 @@ describe('ReactServerRendering', () => {
       'Warning: forceUpdate(...): Can only update a mounting component. ' +
-      'This usually means you called forceUpdate() outside componentWillMount() on the server. ' +
-      'This is a no-op. Please check the code for the Baz component.'
+        'This usually means you called forceUpdate() outside componentWillMount() on the server. ' +
+        'This is a no-op. Please check the code for the Baz component.',
     );
@@ -524,6 +548,6 @@ describe('ReactServerRendering', () => {
         <Wrapper>
-          <span key={0}/>
-          <span key={1}/>
-          <span key={2}/>
-        </Wrapper>
+          <span key={0} />
+          <span key={1} />
+          <span key={2} />
+        </Wrapper>,
       );
diff --git a/src/renderers/dom/shared/CSSProperty.js b/src/renderers/dom/shared/CSSProperty.js
index fa0645c98..609175152 100644
--- a/src/renderers/dom/shared/CSSProperty.js
+++ b/src/renderers/dom/shared/CSSProperty.js
@@ -32,3 +32,9 @@ var isUnitlessNumber = {
   gridRow: true,
+  gridRowEnd: true,
+  gridRowSpan: true,
+  gridRowStart: true,
   gridColumn: true,
+  gridColumnEnd: true,
+  gridColumnSpan: true,
+  gridColumnStart: true,
   fontWeight: true,
diff --git a/src/renderers/dom/shared/CSSPropertyOperations.js b/src/renderers/dom/shared/CSSPropertyOperations.js
index 81c531995..2bc2ae174 100644
--- a/src/renderers/dom/shared/CSSPropertyOperations.js
+++ b/src/renderers/dom/shared/CSSPropertyOperations.js
@@ -65,3 +65,3 @@ if (__DEV__) {
       camelizeStyleName(name),
-      checkRenderMessage(owner)
+      checkRenderMessage(owner),
     );
@@ -80,3 +80,3 @@ if (__DEV__) {
       name.charAt(0).toUpperCase() + name.slice(1),
-      checkRenderMessage(owner)
+      checkRenderMessage(owner),
     );
@@ -92,7 +92,7 @@ if (__DEV__) {
       false,
-      'Style property values shouldn\'t contain a semicolon.%s ' +
-      'Try "%s: %s" instead.',
+      "Style property values shouldn't contain a semicolon.%s " +
+        'Try "%s: %s" instead.',
       checkRenderMessage(owner),
       name,
-      value.replace(badStyleValueWithSemicolonPattern, '')
+      value.replace(badStyleValueWithSemicolonPattern, ''),
     );
@@ -110,3 +110,3 @@ if (__DEV__) {
       name,
-      checkRenderMessage(owner)
+      checkRenderMessage(owner),
     );
@@ -130,2 +130,6 @@ if (__DEV__) {
   var warnValidStyle = function(name, value, component) {
+    // Don't warn for CSS variables
+    if (name.indexOf('--') === 0) {
+      return;
+    }
     var owner;
@@ -152,3 +156,2 @@ if (__DEV__) {
 var CSSPropertyOperations = {
-
   /**
@@ -213,3 +216,3 @@ var CSSPropertyOperations = {
         styles[styleName],
-        component
+        component,
       );
@@ -218,3 +221,5 @@ var CSSPropertyOperations = {
       }
-      if (styleValue) {
+      if (styleName.indexOf('--') === 0) {
+        style.setProperty(styleName, styleValue);
+      } else if (styleValue) {
         style[styleName] = styleValue;
@@ -236,3 +241,2 @@ var CSSPropertyOperations = {
   },
-
 };
diff --git a/src/renderers/dom/shared/DOMProperty.js b/src/renderers/dom/shared/DOMProperty.js
index 8496fb7ac..3d2e36cfa 100644
--- a/src/renderers/dom/shared/DOMProperty.js
+++ b/src/renderers/dom/shared/DOMProperty.js
@@ -68,3 +68,3 @@ var DOMPropertyInjection = {
       DOMProperty._isCustomAttributeFunctions.push(
-        domPropertyConfig.isCustomAttribute
+        domPropertyConfig.isCustomAttribute,
       );
@@ -75,7 +75,7 @@ var DOMPropertyInjection = {
         !DOMProperty.properties.hasOwnProperty(propName),
-        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
-        '\'%s\' which has already been injected. You may be accidentally ' +
-        'injecting the same DOM property config twice, or you may be ' +
-        'injecting two configs that have conflicting property names.',
-        propName
+        "injectDOMPropertyConfig(...): You're trying to inject DOM property " +
+          "'%s' which has already been injected. You may be accidentally " +
+          'injecting the same DOM property config twice, or you may be ' +
+          'injecting two configs that have conflicting property names.',
+        propName,
       );
@@ -94,13 +94,19 @@ var DOMPropertyInjection = {
         hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
-        hasPositiveNumericValue:
-          checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
-        hasOverloadedBooleanValue:
-          checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE),
+        hasPositiveNumericValue: checkMask(
+          propConfig,
+          Injection.HAS_POSITIVE_NUMERIC_VALUE,
+        ),
+        hasOverloadedBooleanValue: checkMask(
+          propConfig,
+          Injection.HAS_OVERLOADED_BOOLEAN_VALUE,
+        ),
       };
       invariant(
-        propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue +
-          propertyInfo.hasOverloadedBooleanValue <= 1,
+        propertyInfo.hasBooleanValue +
+          propertyInfo.hasNumericValue +
+          propertyInfo.hasOverloadedBooleanValue <=
+          1,
         'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +
-        'numeric value, but not a combination: %s',
-        propName
+          'numeric value, but not a combination: %s',
+        propName,
       );
@@ -137,6 +143,6 @@ var DOMPropertyInjection = {
 /* eslint-disable max-len */
-var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
+var ATTRIBUTE_NAME_START_CHAR =
+  ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
 /* eslint-enable max-len */
 
-
 /**
@@ -155,3 +161,2 @@ var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\
 var DOMProperty = {
-
   ID_ATTRIBUTE_NAME: 'data-reactid',
@@ -160,3 +165,4 @@ var DOMProperty = {
   ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
-  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
+  ATTRIBUTE_NAME_CHAR:
+    ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
 
diff --git a/src/renderers/dom/shared/DOMPropertyOperations.js b/src/renderers/dom/shared/DOMPropertyOperations.js
index 895a7ec71..524b6f5a1 100644
--- a/src/renderers/dom/shared/DOMPropertyOperations.js
+++ b/src/renderers/dom/shared/DOMPropertyOperations.js
@@ -21,3 +21,7 @@ var warning = require('warning');
 var VALID_ATTRIBUTE_NAME_REGEX = new RegExp(
-  '^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$'
+  '^[' +
+    DOMProperty.ATTRIBUTE_NAME_START_CHAR +
+    '][' +
+    DOMProperty.ATTRIBUTE_NAME_CHAR +
+    ']*$',
 );
@@ -38,7 +42,3 @@ function isAttributeNameSafe(attributeName) {
   illegalAttributeNameCache[attributeName] = true;
-  warning(
-    false,
-    'Invalid attribute name: `%s`',
-    attributeName
-  );
+  warning(false, 'Invalid attribute name: `%s`', attributeName);
   return false;
@@ -47,7 +47,9 @@ function isAttributeNameSafe(attributeName) {
 function shouldIgnoreValue(propertyInfo, value) {
-  return value == null ||
+  return (
+    value == null ||
     (propertyInfo.hasBooleanValue && !value) ||
     (propertyInfo.hasNumericValue && isNaN(value)) ||
-    (propertyInfo.hasPositiveNumericValue && (value < 1)) ||
-    (propertyInfo.hasOverloadedBooleanValue && value === false);
+    (propertyInfo.hasPositiveNumericValue && value < 1) ||
+    (propertyInfo.hasOverloadedBooleanValue && value === false)
+  );
 }
@@ -58,3 +60,2 @@ function shouldIgnoreValue(propertyInfo, value) {
 var DOMPropertyOperations = {
-
   /**
@@ -66,4 +67,5 @@ var DOMPropertyOperations = {
   createMarkupForID: function(id) {
-    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +
-      quoteAttributeValueForBrowser(id);
+    return (
+      DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id)
+    );
   },
@@ -90,4 +92,5 @@ var DOMPropertyOperations = {
   createMarkupForProperty: function(name, value) {
-    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ?
-        DOMProperty.properties[name] : null;
+    var propertyInfo = DOMProperty.properties.hasOwnProperty(name)
+      ? DOMProperty.properties[name]
+      : null;
     if (propertyInfo) {
@@ -97,4 +100,6 @@ var DOMPropertyOperations = {
       var attributeName = propertyInfo.attributeName;
-      if (propertyInfo.hasBooleanValue ||
-          (propertyInfo.hasOverloadedBooleanValue && value === true)) {
+      if (
+        propertyInfo.hasBooleanValue ||
+        (propertyInfo.hasOverloadedBooleanValue && value === true)
+      ) {
         return attributeName + '=""';
@@ -133,4 +138,5 @@ var DOMPropertyOperations = {
   setValueForProperty: function(node, name, value) {
-    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ?
-        DOMProperty.properties[name] : null;
+    var propertyInfo = DOMProperty.properties.hasOwnProperty(name)
+      ? DOMProperty.properties[name]
+      : null;
     if (propertyInfo) {
@@ -153,4 +159,6 @@ var DOMPropertyOperations = {
           node.setAttributeNS(namespace, attributeName, '' + value);
-        } else if (propertyInfo.hasBooleanValue ||
-                   (propertyInfo.hasOverloadedBooleanValue && value === true)) {
+        } else if (
+          propertyInfo.hasBooleanValue ||
+          (propertyInfo.hasOverloadedBooleanValue && value === true)
+        ) {
           node.setAttribute(attributeName, '');
@@ -221,4 +229,5 @@ var DOMPropertyOperations = {
   deleteValueForProperty: function(node, name) {
-    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ?
-        DOMProperty.properties[name] : null;
+    var propertyInfo = DOMProperty.properties.hasOwnProperty(name)
+      ? DOMProperty.properties[name]
+      : null;
     if (propertyInfo) {
@@ -249,3 +258,2 @@ var DOMPropertyOperations = {
   },
-
 };
diff --git a/src/renderers/dom/shared/Danger.js b/src/renderers/dom/shared/Danger.js
index 94f7ae4c5..b16b96adf 100644
--- a/src/renderers/dom/shared/Danger.js
+++ b/src/renderers/dom/shared/Danger.js
@@ -21,3 +21,2 @@ var invariant = require('invariant');
 var Danger = {
-
   /**
@@ -34,5 +33,5 @@ var Danger = {
       'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
-      'worker thread. Make sure `window` and `document` are available ' +
-      'globally before requiring React when unit testing or use ' +
-      'ReactDOMServer.renderToString() for server rendering.'
+        'worker thread. Make sure `window` and `document` are available ' +
+        'globally before requiring React when unit testing or use ' +
+        'ReactDOMServer.renderToString() for server rendering.',
     );
@@ -42,5 +41,5 @@ var Danger = {
       'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +
-      '<html> node. This is because browser quirks make this unreliable ' +
-      'and/or slow. If you want to render to the root you must use ' +
-      'server rendering. See ReactDOMServer.renderToString().'
+        '<html> node. This is because browser quirks make this unreliable ' +
+        'and/or slow. If you want to render to the root you must use ' +
+        'server rendering. See ReactDOMServer.renderToString().',
     );
@@ -54,3 +53,2 @@ var Danger = {
   },
-
 };
diff --git a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js
index ef0eda5e2..1ec812427 100644
--- a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js
+++ b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js
@@ -25,3 +25,3 @@ var HTMLDOMPropertyConfig = {
   isCustomAttribute: RegExp.prototype.test.bind(
-    new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')
+    new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$'),
   ),
diff --git a/src/renderers/dom/shared/ReactComponentBrowserEnvironment.js b/src/renderers/dom/shared/ReactComponentBrowserEnvironment.js
index c55233e39..13226723b 100644
--- a/src/renderers/dom/shared/ReactComponentBrowserEnvironment.js
+++ b/src/renderers/dom/shared/ReactComponentBrowserEnvironment.js
@@ -22,3 +22,2 @@ var ReactDOMIDOperations = require('ReactDOMIDOperations');
 var ReactComponentBrowserEnvironment = {
-
   processChildrenUpdates:
@@ -26,5 +25,3 @@ var ReactComponentBrowserEnvironment = {
 
-  replaceNodeWithMarkup:
-    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,
-
+  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,
 };
diff --git a/src/renderers/dom/shared/ReactDOMComponent.js b/src/renderers/dom/shared/ReactDOMComponent.js
index 02759e1e2..6c7a1ca8b 100644
--- a/src/renderers/dom/shared/ReactDOMComponent.js
+++ b/src/renderers/dom/shared/ReactDOMComponent.js
@@ -39,2 +39,3 @@ var isEventSupported = require('isEventSupported');
 var shallowEqual = require('shallowEqual');
+var inputValueTracking = require('inputValueTracking');
 var validateDOMNesting = require('validateDOMNesting');
@@ -49,3 +50,3 @@ var registrationNameModules = EventPluginRegistry.registrationNameModules;
 // For quickly matching children type, to test if can be treated as content.
-var CONTENT_TYPES = {'string': true, 'number': true};
+var CONTENT_TYPES = {string: true, number: true};
 
@@ -62,3 +63,2 @@ var DOC_FRAGMENT_TYPE = 11;
 
-
 function getDeclarationErrorAddendum(internalInstance) {
@@ -84,5 +84,5 @@ function friendlyStringify(obj) {
         if (Object.prototype.hasOwnProperty.call(obj, key)) {
-          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ?
-            key :
-            JSON.stringify(key);
+          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key)
+            ? key
+            : JSON.stringify(key);
           pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
@@ -130,4 +130,4 @@ function checkAndWarnForMutatedStyle(style1, style2, component) {
     '`%s` was passed a style object that has previously been mutated. ' +
-    'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' +
-    'the `render` %s. Previous style: %s. Mutated style: %s.',
+      'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' +
+      'the `render` %s. Previous style: %s. Mutated style: %s.',
     componentName,
@@ -135,3 +135,3 @@ function checkAndWarnForMutatedStyle(style1, style2, component) {
     friendlyStringify(style1),
-    friendlyStringify(style2)
+    friendlyStringify(style2),
   );
@@ -152,8 +152,9 @@ function assertValidProps(component, props) {
       '%s is a void element tag and must neither have `children` nor ' +
-      'use `dangerouslySetInnerHTML`.%s',
+        'use `dangerouslySetInnerHTML`.%s',
       component._tag,
-      component._currentElement._owner ?
-        ' Check the render method of ' +
-        component._currentElement._owner.getName() + '.' :
-        ''
+      component._currentElement._owner
+        ? ' Check the render method of ' +
+            component._currentElement._owner.getName() +
+            '.'
+        : '',
     );
@@ -163,3 +164,3 @@ function assertValidProps(component, props) {
       props.children == null,
-      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
+      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
     );
@@ -167,6 +168,6 @@ function assertValidProps(component, props) {
       typeof props.dangerouslySetInnerHTML === 'object' &&
-      HTML in props.dangerouslySetInnerHTML,
+        HTML in props.dangerouslySetInnerHTML,
       '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +
-      'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +
-      'for more information.'
+        'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +
+        'for more information.',
     );
@@ -177,3 +178,3 @@ function assertValidProps(component, props) {
       'Directly setting property `innerHTML` is not permitted. ' +
-      'For more information, lookup documentation on `dangerouslySetInnerHTML`.'
+        'For more information, lookup documentation on `dangerouslySetInnerHTML`.',
     );
@@ -181,15 +182,14 @@ function assertValidProps(component, props) {
       props.suppressContentEditableWarning ||
-      !props.contentEditable ||
-      props.children == null,
+        !props.contentEditable ||
+        props.children == null,
       'A component is `contentEditable` and contains `children` managed by ' +
-      'React. It is now your responsibility to guarantee that none of ' +
-      'those nodes are unexpectedly modified or duplicated. This is ' +
-      'probably not intentional.'
+        'React. It is now your responsibility to guarantee that none of ' +
+        'those nodes are unexpectedly modified or duplicated. This is ' +
+        'probably not intentional.',
     );
     warning(
-      props.onFocusIn == null &&
-      props.onFocusOut == null,
+      props.onFocusIn == null && props.onFocusOut == null,
       'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' +
-      'All React events are normalized to bubble, so onFocusIn and onFocusOut ' +
-      'are not needed/supported by React.'
+        'All React events are normalized to bubble, so onFocusIn and onFocusOut ' +
+        'are not needed/supported by React.',
     );
@@ -199,5 +199,5 @@ function assertValidProps(component, props) {
     'The `style` prop expects a mapping from style properties to values, ' +
-    'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' +
-    'using JSX.%s',
-     getDeclarationErrorAddendum(component)
+      "not a string. For example, style={{marginRight: spacing + 'em'}} when " +
+      'using JSX.%s',
+    getDeclarationErrorAddendum(component),
   );
@@ -214,3 +214,3 @@ function enqueuePutListener(inst, registrationName, listener, transaction) {
       registrationName !== 'onScroll' || isEventSupported('scroll', true),
-      'This browser doesn\'t support the `onScroll` event'
+      "This browser doesn't support the `onScroll` event",
     );
@@ -218,4 +218,7 @@ function enqueuePutListener(inst, registrationName, listener, transaction) {
   var containerInfo = inst._hostContainerInfo;
-  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
-  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
+  var isDocumentFragment =
+    containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
+  var doc = isDocumentFragment
+    ? containerInfo._node
+    : containerInfo._ownerDocument;
   listenTo(registrationName, doc);
@@ -233,3 +236,3 @@ function putListener() {
     listenerToPut.registrationName,
-    listenerToPut.listener
+    listenerToPut.listener,
   );
@@ -271,6 +274,13 @@ if (__DEV__) {
     if (hasExistingContent) {
-      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
+      ReactInstrumentation.debugTool.onBeforeUpdateComponent(
+        contentDebugID,
+        content,
+      );
       ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
     } else {
-      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
+      ReactInstrumentation.debugTool.onBeforeMountComponent(
+        contentDebugID,
+        content,
+        debugID,
+      );
       ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
@@ -309,2 +319,6 @@ var mediaEvents = {
 
+function trackInputValue() {
+  inputValueTracking.track(this);
+}
+
 function trapBubbledEventsLocal() {
@@ -315,6 +329,3 @@ function trapBubbledEventsLocal() {
   var node = getNode(inst);
-  invariant(
-    node,
-    'trapBubbledEvent(...): Requires node to be rendered.'
-  );
+  invariant(node, 'trapBubbledEvent(...): Requires node to be rendered.');
 
@@ -324,7 +335,3 @@ function trapBubbledEventsLocal() {
       inst._wrapperState.listeners = [
-        ReactBrowserEventEmitter.trapBubbledEvent(
-          'topLoad',
-          'load',
-          node
-        ),
+        ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node),
       ];
@@ -333,3 +340,2 @@ function trapBubbledEventsLocal() {
     case 'audio':
-
       inst._wrapperState.listeners = [];
@@ -342,4 +348,4 @@ function trapBubbledEventsLocal() {
               mediaEvents[event],
-              node
-            )
+              node,
+            ),
           );
@@ -350,7 +356,3 @@ function trapBubbledEventsLocal() {
       inst._wrapperState.listeners = [
-        ReactBrowserEventEmitter.trapBubbledEvent(
-          'topError',
-          'error',
-          node
-        ),
+        ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node),
       ];
@@ -359,12 +361,4 @@ function trapBubbledEventsLocal() {
       inst._wrapperState.listeners = [
-        ReactBrowserEventEmitter.trapBubbledEvent(
-          'topError',
-          'error',
-          node
-        ),
-        ReactBrowserEventEmitter.trapBubbledEvent(
-          'topLoad',
-          'load',
-          node
-        ),
+        ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node),
+        ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node),
       ];
@@ -373,12 +367,4 @@ function trapBubbledEventsLocal() {
       inst._wrapperState.listeners = [
-        ReactBrowserEventEmitter.trapBubbledEvent(
-          'topReset',
-          'reset',
-          node
-        ),
-        ReactBrowserEventEmitter.trapBubbledEvent(
-          'topSubmit',
-          'submit',
-          node
-        ),
+        ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node),
+        ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node),
       ];
@@ -392,3 +378,3 @@ function trapBubbledEventsLocal() {
           'invalid',
-          node
+          node,
         ),
@@ -407,17 +393,17 @@ function postUpdateSelectWrapper() {
 var omittedCloseTags = {
-  'area': true,
-  'base': true,
-  'br': true,
-  'col': true,
-  'embed': true,
-  'hr': true,
-  'img': true,
-  'input': true,
-  'keygen': true,
-  'link': true,
-  'meta': true,
-  'param': true,
-  'source': true,
-  'track': true,
-  'wbr': true,
+  area: true,
+  base: true,
+  br: true,
+  col: true,
+  embed: true,
+  hr: true,
+  img: true,
+  input: true,
+  keygen: true,
+  link: true,
+  meta: true,
+  param: true,
+  source: true,
+  track: true,
+  wbr: true,
   // NOTE: menuitem's close tag should be omitted, but that causes problems.
@@ -426,5 +412,5 @@ var omittedCloseTags = {
 var newlineEatingTags = {
-  'listing': true,
-  'pre': true,
-  'textarea': true,
+  listing: true,
+  pre: true,
+  textarea: true,
 };
@@ -434,5 +420,8 @@ var newlineEatingTags = {
 
-var voidElementTags = Object.assign({
-  'menuitem': true,
-}, omittedCloseTags);
+var voidElementTags = Object.assign(
+  {
+    menuitem: true,
+  },
+  omittedCloseTags,
+);
 
@@ -499,3 +488,2 @@ ReactDOMComponent.displayName = 'ReactDOMComponent';
 ReactDOMComponent.Mixin = {
-
   /**
@@ -515,3 +503,3 @@ ReactDOMComponent.Mixin = {
     hostContainerInfo,
-    context
+    context,
   ) {
@@ -541,2 +529,3 @@ ReactDOMComponent.Mixin = {
         props = ReactDOMInput.getHostProps(this, props);
+        transaction.getReactMountReady().enqueue(trackInputValue, this);
         transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
@@ -555,2 +544,3 @@ ReactDOMComponent.Mixin = {
         props = ReactDOMTextarea.getHostProps(this, props);
+        transaction.getReactMountReady().enqueue(trackInputValue, this);
         transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
@@ -572,4 +562,6 @@ ReactDOMComponent.Mixin = {
     }
-    if (namespaceURI == null ||
-        namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
+    if (
+      namespaceURI == null ||
+      (namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject')
+    ) {
       namespaceURI = DOMNamespaces.html;
@@ -597,4 +589,7 @@ ReactDOMComponent.Mixin = {
       }
-      this._ancestorInfo =
-        validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
+      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(
+        parentInfo,
+        this._tag,
+        this,
+      );
     }
@@ -624,3 +619,3 @@ ReactDOMComponent.Mixin = {
           namespaceURI,
-          this._currentElement.type
+          this._currentElement.type,
         );
@@ -637,3 +632,6 @@ ReactDOMComponent.Mixin = {
     } else {
-      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
+      var tagOpen = this._createOpenTagMarkupAndPutListeners(
+        transaction,
+        props,
+      );
       var tagContent = this._createContentMarkup(transaction, props, context);
@@ -649,11 +647,7 @@ ReactDOMComponent.Mixin = {
       case 'input':
-        transaction.getReactMountReady().enqueue(
-          inputPostMount,
-          this
-        );
+        transaction.getReactMountReady().enqueue(inputPostMount, this);
         if (props.autoFocus) {
-          transaction.getReactMountReady().enqueue(
-            AutoFocusUtils.focusDOMComponent,
-            this
-          );
+          transaction
+            .getReactMountReady()
+            .enqueue(AutoFocusUtils.focusDOMComponent, this);
         }
@@ -661,11 +655,7 @@ ReactDOMComponent.Mixin = {
       case 'textarea':
-        transaction.getReactMountReady().enqueue(
-          textareaPostMount,
-          this
-        );
+        transaction.getReactMountReady().enqueue(textareaPostMount, this);
         if (props.autoFocus) {
-          transaction.getReactMountReady().enqueue(
-            AutoFocusUtils.focusDOMComponent,
-            this
-          );
+          transaction
+            .getReactMountReady()
+            .enqueue(AutoFocusUtils.focusDOMComponent, this);
         }
@@ -674,6 +664,5 @@ ReactDOMComponent.Mixin = {
         if (props.autoFocus) {
-          transaction.getReactMountReady().enqueue(
-            AutoFocusUtils.focusDOMComponent,
-            this
-          );
+          transaction
+            .getReactMountReady()
+            .enqueue(AutoFocusUtils.focusDOMComponent, this);
         }
@@ -682,6 +671,5 @@ ReactDOMComponent.Mixin = {
         if (props.autoFocus) {
-          transaction.getReactMountReady().enqueue(
-            AutoFocusUtils.focusDOMComponent,
-            this
-          );
+          transaction
+            .getReactMountReady()
+            .enqueue(AutoFocusUtils.focusDOMComponent, this);
         }
@@ -689,6 +677,3 @@ ReactDOMComponent.Mixin = {
       case 'option':
-        transaction.getReactMountReady().enqueue(
-          optionPostMount,
-          this
-        );
+        transaction.getReactMountReady().enqueue(optionPostMount, this);
         break;
@@ -734,5 +719,11 @@ ReactDOMComponent.Mixin = {
             }
-            propValue = this._previousStyleCopy = Object.assign({}, props.style);
+            propValue = this._previousStyleCopy = Object.assign(
+              {},
+              props.style,
+            );
           }
-          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
+          propValue = CSSPropertyOperations.createMarkupForStyles(
+            propValue,
+            this,
+          );
         }
@@ -741,6 +732,12 @@ ReactDOMComponent.Mixin = {
           if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
-            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
+            markup = DOMPropertyOperations.createMarkupForCustomAttribute(
+              propKey,
+              propValue,
+            );
           }
         } else {
-          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
+          markup = DOMPropertyOperations.createMarkupForProperty(
+            propKey,
+            propValue,
+          );
         }
@@ -784,4 +781,5 @@ ReactDOMComponent.Mixin = {
     } else {
-      var contentToUse =
-        CONTENT_TYPES[typeof props.children] ? props.children : null;
+      var contentToUse = CONTENT_TYPES[typeof props.children]
+        ? props.children
+        : null;
       var childrenToUse = contentToUse != null ? null : props.children;
@@ -797,3 +795,3 @@ ReactDOMComponent.Mixin = {
           transaction,
-          context
+          context,
         );
@@ -827,4 +825,5 @@ ReactDOMComponent.Mixin = {
     } else {
-      var contentToUse =
-        CONTENT_TYPES[typeof props.children] ? props.children : null;
+      var contentToUse = CONTENT_TYPES[typeof props.children]
+        ? props.children
+        : null;
       var childrenToUse = contentToUse != null ? null : props.children;
@@ -846,3 +845,3 @@ ReactDOMComponent.Mixin = {
           transaction,
-          context
+          context,
         );
@@ -904,8 +903,3 @@ ReactDOMComponent.Mixin = {
     this._updateDOMProperties(lastProps, nextProps, transaction);
-    this._updateDOMChildren(
-      lastProps,
-      nextProps,
-      transaction,
-      context
-    );
+    this._updateDOMChildren(lastProps, nextProps, transaction, context);
 
@@ -950,5 +944,7 @@ ReactDOMComponent.Mixin = {
     for (propKey in lastProps) {
-      if (nextProps.hasOwnProperty(propKey) ||
-         !lastProps.hasOwnProperty(propKey) ||
-         lastProps[propKey] == null) {
+      if (
+        nextProps.hasOwnProperty(propKey) ||
+        !lastProps.hasOwnProperty(propKey) ||
+        lastProps[propKey] == null
+      ) {
         continue;
@@ -973,10 +969,8 @@ ReactDOMComponent.Mixin = {
         if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
-          DOMPropertyOperations.deleteValueForAttribute(
-            getNode(this),
-            propKey
-          );
+          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
         }
       } else if (
-          DOMProperty.properties[propKey] ||
-          DOMProperty.isCustomAttribute(propKey)) {
+        DOMProperty.properties[propKey] ||
+        DOMProperty.isCustomAttribute(propKey)
+      ) {
         DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
@@ -986,8 +980,10 @@ ReactDOMComponent.Mixin = {
       var nextProp = nextProps[propKey];
-      var lastProp =
-        propKey === STYLE ? this._previousStyleCopy :
-        lastProps != null ? lastProps[propKey] : undefined;
-      if (!nextProps.hasOwnProperty(propKey) ||
-          nextProp === lastProp ||
-          nextProp == null && lastProp == null) {
+      var lastProp = propKey === STYLE
+        ? this._previousStyleCopy
+        : lastProps != null ? lastProps[propKey] : undefined;
+      if (
+        !nextProps.hasOwnProperty(propKey) ||
+        nextProp === lastProp ||
+        (nextProp == null && lastProp == null)
+      ) {
         continue;
@@ -1000,3 +996,3 @@ ReactDOMComponent.Mixin = {
               this._previousStyle,
-              this
+              this,
             );
@@ -1011,4 +1007,6 @@ ReactDOMComponent.Mixin = {
           for (styleName in lastProp) {
-            if (lastProp.hasOwnProperty(styleName) &&
-                (!nextProp || !nextProp.hasOwnProperty(styleName))) {
+            if (
+              lastProp.hasOwnProperty(styleName) &&
+              (!nextProp || !nextProp.hasOwnProperty(styleName))
+            ) {
               styleUpdates = styleUpdates || {};
@@ -1019,4 +1017,6 @@ ReactDOMComponent.Mixin = {
           for (styleName in nextProp) {
-            if (nextProp.hasOwnProperty(styleName) &&
-                lastProp[styleName] !== nextProp[styleName]) {
+            if (
+              nextProp.hasOwnProperty(styleName) &&
+              lastProp[styleName] !== nextProp[styleName]
+            ) {
               styleUpdates = styleUpdates || {};
@@ -1040,3 +1040,3 @@ ReactDOMComponent.Mixin = {
             propKey,
-            nextProp
+            nextProp,
           );
@@ -1044,4 +1044,5 @@ ReactDOMComponent.Mixin = {
       } else if (
-          DOMProperty.properties[propKey] ||
-          DOMProperty.isCustomAttribute(propKey)) {
+        DOMProperty.properties[propKey] ||
+        DOMProperty.isCustomAttribute(propKey)
+      ) {
         var node = getNode(this);
@@ -1061,3 +1062,3 @@ ReactDOMComponent.Mixin = {
         styleUpdates,
-        this
+        this,
       );
@@ -1076,6 +1077,8 @@ ReactDOMComponent.Mixin = {
   _updateDOMChildren: function(lastProps, nextProps, transaction, context) {
-    var lastContent =
-      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
-    var nextContent =
-      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
+    var lastContent = CONTENT_TYPES[typeof lastProps.children]
+      ? lastProps.children
+      : null;
+    var nextContent = CONTENT_TYPES[typeof nextProps.children]
+      ? nextProps.children
+      : null;
 
@@ -1155,2 +1158,6 @@ ReactDOMComponent.Mixin = {
         break;
+      case 'input':
+      case 'textarea':
+        inputValueTracking.stopTracking(this);
+        break;
       case 'html':
@@ -1167,7 +1174,7 @@ ReactDOMComponent.Mixin = {
           '<%s> tried to unmount. Because of cross-browser quirks it is ' +
-          'impossible to unmount some top-level components (eg <html>, ' +
-          '<head>, and <body>) reliably and efficiently. To fix this, have a ' +
-          'single top-level component that never unmounts render these ' +
-          'elements.',
-          this._tag
+            'impossible to unmount some top-level components (eg <html>, ' +
+            '<head>, and <body>) reliably and efficiently. To fix this, have a ' +
+            'single top-level component that never unmounts render these ' +
+            'elements.',
+          this._tag,
         );
@@ -1191,3 +1198,2 @@ ReactDOMComponent.Mixin = {
   },
-
 };
@@ -1197,3 +1203,3 @@ Object.assign(
   ReactDOMComponent.Mixin,
-  ReactMultiChild.Mixin
+  ReactMultiChild.Mixin,
 );
diff --git a/src/renderers/dom/shared/ReactDOMContainerInfo.js b/src/renderers/dom/shared/ReactDOMContainerInfo.js
index 0f74f733a..263c42c76 100644
--- a/src/renderers/dom/shared/ReactDOMContainerInfo.js
+++ b/src/renderers/dom/shared/ReactDOMContainerInfo.js
@@ -21,5 +21,5 @@ function ReactDOMContainerInfo(topLevelWrapper, node) {
     _idCounter: 1,
-    _ownerDocument: node ?
-      node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument :
-      null,
+    _ownerDocument: node
+      ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument
+      : null,
     _node: node,
@@ -29,4 +29,5 @@ function ReactDOMContainerInfo(topLevelWrapper, node) {
   if (__DEV__) {
-    info._ancestorInfo = node ?
-      validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
+    info._ancestorInfo = node
+      ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null)
+      : null;
   }
diff --git a/src/renderers/dom/shared/ReactDOMEmptyComponent.js b/src/renderers/dom/shared/ReactDOMEmptyComponent.js
index 0a7b8c6b2..bbc631634 100644
--- a/src/renderers/dom/shared/ReactDOMEmptyComponent.js
+++ b/src/renderers/dom/shared/ReactDOMEmptyComponent.js
@@ -16,3 +16,2 @@ var ReactDOMComponentTree = require('ReactDOMComponentTree');
 
-
 var ReactDOMEmptyComponent = function(instantiate) {
@@ -31,3 +30,3 @@ Object.assign(ReactDOMEmptyComponent.prototype, {
     hostContainerInfo,
-    context
+    context,
   ) {
@@ -54,4 +53,3 @@ Object.assign(ReactDOMEmptyComponent.prototype, {
   },
-  receiveComponent: function() {
-  },
+  receiveComponent: function() {},
   getHostNode: function() {
diff --git a/src/renderers/dom/shared/ReactDOMTextComponent.js b/src/renderers/dom/shared/ReactDOMTextComponent.js
index 860bc3349..c305207a9 100644
--- a/src/renderers/dom/shared/ReactDOMTextComponent.js
+++ b/src/renderers/dom/shared/ReactDOMTextComponent.js
@@ -52,3 +52,2 @@ var ReactDOMTextComponent = function(text) {
 Object.assign(ReactDOMTextComponent.prototype, {
-
   /**
@@ -65,3 +64,3 @@ Object.assign(ReactDOMTextComponent.prototype, {
     hostContainerInfo,
-    context
+    context,
   ) {
@@ -95,3 +94,3 @@ Object.assign(ReactDOMTextComponent.prototype, {
           lazyTree,
-          DOMLazyTree(ownerDocument.createTextNode(this._stringText))
+          DOMLazyTree(ownerDocument.createTextNode(this._stringText)),
         );
@@ -113,4 +112,9 @@ Object.assign(ReactDOMTextComponent.prototype, {
       return (
-        '<!--' + openingValue + '-->' + escapedText +
-        '<!--' + closingValue + '-->'
+        '<!--' +
+        openingValue +
+        '-->' +
+        escapedText +
+        '<!--' +
+        closingValue +
+        '-->'
       );
@@ -139,3 +143,3 @@ Object.assign(ReactDOMTextComponent.prototype, {
           commentNodes[1],
-          nextStringText
+          nextStringText,
         );
@@ -157,3 +161,3 @@ Object.assign(ReactDOMTextComponent.prototype, {
           'Missing closing comment for text component %s',
-          this._domID
+          this._domID,
         );
@@ -176,3 +180,2 @@ Object.assign(ReactDOMTextComponent.prototype, {
   },
-
 });
diff --git a/src/renderers/dom/shared/ReactDefaultInjection.js b/src/renderers/dom/shared/ReactDefaultInjection.js
index 20b89c8c9..277052c25 100644
--- a/src/renderers/dom/shared/ReactDefaultInjection.js
+++ b/src/renderers/dom/shared/ReactDefaultInjection.js
@@ -19,4 +19,3 @@ var EnterLeaveEventPlugin = require('EnterLeaveEventPlugin');
 var HTMLDOMPropertyConfig = require('HTMLDOMPropertyConfig');
-var ReactComponentBrowserEnvironment =
-  require('ReactComponentBrowserEnvironment');
+var ReactComponentBrowserEnvironment = require('ReactComponentBrowserEnvironment');
 var ReactDOMComponent = require('ReactDOMComponent');
@@ -45,5 +44,3 @@ function inject() {
 
-  ReactInjection.EventEmitter.injectReactEventListener(
-    ReactEventListener
-  );
+  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
 
@@ -68,9 +65,5 @@ function inject() {
 
-  ReactInjection.HostComponent.injectGenericComponentClass(
-    ReactDOMComponent
-  );
+  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
 
-  ReactInjection.HostComponent.injectTextComponentClass(
-    ReactDOMTextComponent
-  );
+  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
 
@@ -80,14 +73,10 @@ function inject() {
 
-  ReactInjection.EmptyComponent.injectEmptyComponentFactory(
-    function(instantiate) {
-      return new ReactDOMEmptyComponent(instantiate);
-    }
-  );
+  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function(
+    instantiate,
+  ) {
+    return new ReactDOMEmptyComponent(instantiate);
+  });
 
-  ReactInjection.Updates.injectReconcileTransaction(
-    ReactReconcileTransaction
-  );
-  ReactInjection.Updates.injectBatchingStrategy(
-    ReactDefaultBatchingStrategy
-  );
+  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
+  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
 
diff --git a/src/renderers/dom/shared/SVGDOMPropertyConfig.js b/src/renderers/dom/shared/SVGDOMPropertyConfig.js
index d2ae11d8c..dbb9da3be 100644
--- a/src/renderers/dom/shared/SVGDOMPropertyConfig.js
+++ b/src/renderers/dom/shared/SVGDOMPropertyConfig.js
@@ -294,3 +294,3 @@ var SVGDOMPropertyConfig = {
 
-Object.keys(ATTRS).forEach((key) => {
+Object.keys(ATTRS).forEach(key => {
   SVGDOMPropertyConfig.Properties[key] = 0;
diff --git a/src/renderers/dom/shared/__tests__/CSSProperty-test.js b/src/renderers/dom/shared/__tests__/CSSProperty-test.js
index 331d38fc2..711a9c387 100644
--- a/src/renderers/dom/shared/__tests__/CSSProperty-test.js
+++ b/src/renderers/dom/shared/__tests__/CSSProperty-test.js
@@ -27,5 +27,10 @@ describe('CSSProperty', () => {
     expect(CSSProperty.isUnitlessNumber.msGridRow).toBeTruthy();
+    expect(CSSProperty.isUnitlessNumber.msGridRowEnd).toBeTruthy();
+    expect(CSSProperty.isUnitlessNumber.msGridRowSpan).toBeTruthy();
+    expect(CSSProperty.isUnitlessNumber.msGridRowStart).toBeTruthy();
     expect(CSSProperty.isUnitlessNumber.msGridColumn).toBeTruthy();
+    expect(CSSProperty.isUnitlessNumber.msGridColumnEnd).toBeTruthy();
+    expect(CSSProperty.isUnitlessNumber.msGridColumnSpan).toBeTruthy();
+    expect(CSSProperty.isUnitlessNumber.msGridColumnStart).toBeTruthy();
   });
-
 });
diff --git a/src/renderers/dom/shared/__tests__/CSSPropertyOperations-test.js b/src/renderers/dom/shared/__tests__/CSSPropertyOperations-test.js
index b35f8a1b9..e383549ec 100644
--- a/src/renderers/dom/shared/__tests__/CSSPropertyOperations-test.js
+++ b/src/renderers/dom/shared/__tests__/CSSPropertyOperations-test.js
@@ -26,6 +26,8 @@ describe('CSSPropertyOperations', () => {
   it('should create markup for simple styles', () => {
-    expect(CSSPropertyOperations.createMarkupForStyles({
-      backgroundColor: '#3b5998',
-      display: 'none',
-    })).toBe('background-color:#3b5998;display:none;');
+    expect(
+      CSSPropertyOperations.createMarkupForStyles({
+        backgroundColor: '#3b5998',
+        display: 'none',
+      }),
+    ).toBe('background-color:#3b5998;display:none;');
   });
@@ -33,6 +35,8 @@ describe('CSSPropertyOperations', () => {
   it('should ignore undefined styles', () => {
-    expect(CSSPropertyOperations.createMarkupForStyles({
-      backgroundColor: undefined,
-      display: 'none',
-    })).toBe('display:none;');
+    expect(
+      CSSPropertyOperations.createMarkupForStyles({
+        backgroundColor: undefined,
+        display: 'none',
+      }),
+    ).toBe('display:none;');
   });
@@ -40,6 +44,8 @@ describe('CSSPropertyOperations', () => {
   it('should ignore null styles', () => {
-    expect(CSSPropertyOperations.createMarkupForStyles({
-      backgroundColor: null,
-      display: 'none',
-    })).toBe('display:none;');
+    expect(
+      CSSPropertyOperations.createMarkupForStyles({
+        backgroundColor: null,
+        display: 'none',
+      }),
+    ).toBe('display:none;');
   });
@@ -47,6 +53,8 @@ describe('CSSPropertyOperations', () => {
   it('should return null for no styles', () => {
-    expect(CSSPropertyOperations.createMarkupForStyles({
-      backgroundColor: null,
-      display: null,
-    })).toBe(null);
+    expect(
+      CSSPropertyOperations.createMarkupForStyles({
+        backgroundColor: null,
+        display: null,
+      }),
+    ).toBe(null);
   });
@@ -54,8 +62,10 @@ describe('CSSPropertyOperations', () => {
   it('should automatically append `px` to relevant styles', () => {
-    expect(CSSPropertyOperations.createMarkupForStyles({
-      left: 0,
-      margin: 16,
-      opacity: 0.5,
-      padding: '4px',
-    })).toBe('left:0;margin:16px;opacity:0.5;padding:4px;');
+    expect(
+      CSSPropertyOperations.createMarkupForStyles({
+        left: 0,
+        margin: 16,
+        opacity: 0.5,
+        padding: '4px',
+      }),
+    ).toBe('left:0;margin:16px;opacity:0.5;padding:4px;');
   });
@@ -63,7 +73,9 @@ describe('CSSPropertyOperations', () => {
   it('should trim values so `px` will be appended correctly', () => {
-    expect(CSSPropertyOperations.createMarkupForStyles({
-      margin: '16 ',
-      opacity: 0.5,
-      padding: ' 4 ',
-    })).toBe('margin:16px;opacity:0.5;padding:4px;');
+    expect(
+      CSSPropertyOperations.createMarkupForStyles({
+        margin: '16 ',
+        opacity: 0.5,
+        padding: ' 4 ',
+      }),
+    ).toBe('margin:16px;opacity:0.5;padding:4px;');
   });
@@ -76,4 +88,5 @@ describe('CSSPropertyOperations', () => {
       styles[property] = 1;
-      expect(CSSPropertyOperations.createMarkupForStyles(styles))
-        .toMatch(/:1;$/);
+      expect(CSSPropertyOperations.createMarkupForStyles(styles)).toMatch(
+        /:1;$/,
+      );
     });
@@ -82,6 +95,8 @@ describe('CSSPropertyOperations', () => {
   it('should create vendor-prefixed markup correctly', () => {
-    expect(CSSPropertyOperations.createMarkupForStyles({
-      msTransition: 'none',
-      MozTransition: 'none',
-    })).toBe('-ms-transition:none;-moz-transition:none;');
+    expect(
+      CSSPropertyOperations.createMarkupForStyles({
+        msTransition: 'none',
+        MozTransition: 'none',
+      }),
+    ).toBe('-ms-transition:none;-moz-transition:none;');
   });
@@ -114,3 +129,3 @@ describe('CSSPropertyOperations', () => {
       render() {
-        return <div style={{ 'background-color': 'crimson' }}/>;
+        return <div style={{'background-color': 'crimson'}} />;
       }
@@ -124,3 +139,3 @@ describe('CSSPropertyOperations', () => {
       'Warning: Unsupported style property background-color. Did you mean backgroundColor? ' +
-      'Check the render method of `Comp`.'
+        'Check the render method of `Comp`.',
     );
@@ -149,3 +164,3 @@ describe('CSSPropertyOperations', () => {
       'Warning: Unsupported style property -ms-transform. Did you mean msTransform? ' +
-      'Check the render method of `Comp`.'
+        'Check the render method of `Comp`.',
     );
@@ -153,3 +168,3 @@ describe('CSSPropertyOperations', () => {
       'Warning: Unsupported style property -webkit-transform. Did you mean WebkitTransform? ' +
-      'Check the render method of `Comp`.'
+        'Check the render method of `Comp`.',
     );
@@ -162,7 +177,11 @@ describe('CSSPropertyOperations', () => {
       render() {
-        return (<div style={{
-          msTransform: 'translate3d(0, 0, 0)',
-          oTransform: 'translate3d(0, 0, 0)',
-          webkitTransform: 'translate3d(0, 0, 0)',
-        }} />);
+        return (
+          <div
+            style={{
+              msTransform: 'translate3d(0, 0, 0)',
+              oTransform: 'translate3d(0, 0, 0)',
+              webkitTransform: 'translate3d(0, 0, 0)',
+            }}
+          />
+        );
       }
@@ -177,3 +196,3 @@ describe('CSSPropertyOperations', () => {
       'Warning: Unsupported vendor-prefixed style property oTransform. ' +
-      'Did you mean OTransform? Check the render method of `Comp`.'
+        'Did you mean OTransform? Check the render method of `Comp`.',
     );
@@ -181,3 +200,3 @@ describe('CSSPropertyOperations', () => {
       'Warning: Unsupported vendor-prefixed style property webkitTransform. ' +
-      'Did you mean WebkitTransform? Check the render method of `Comp`.'
+        'Did you mean WebkitTransform? Check the render method of `Comp`.',
     );
@@ -190,8 +209,12 @@ describe('CSSPropertyOperations', () => {
       render() {
-        return (<div style={{
-          fontFamily: 'Helvetica, arial',
-          backgroundImage: 'url(foo;bar)',
-          backgroundColor: 'blue;',
-          color: 'red;   ',
-        }} />);
+        return (
+          <div
+            style={{
+              fontFamily: 'Helvetica, arial',
+              backgroundImage: 'url(foo;bar)',
+              backgroundColor: 'blue;',
+              color: 'red;   ',
+            }}
+          />
+        );
       }
@@ -204,8 +227,8 @@ describe('CSSPropertyOperations', () => {
     expect(console.error.calls.argsFor(0)[0]).toEqual(
-      'Warning: Style property values shouldn\'t contain a semicolon. ' +
-      'Check the render method of `Comp`. Try "backgroundColor: blue" instead.',
+      "Warning: Style property values shouldn't contain a semicolon. " +
+        'Check the render method of `Comp`. Try "backgroundColor: blue" instead.',
     );
     expect(console.error.calls.argsFor(1)[0]).toEqual(
-      'Warning: Style property values shouldn\'t contain a semicolon. ' +
-      'Check the render method of `Comp`. Try "color: red" instead.',
+      "Warning: Style property values shouldn't contain a semicolon. " +
+        'Check the render method of `Comp`. Try "color: red" instead.',
     );
@@ -218,3 +241,3 @@ describe('CSSPropertyOperations', () => {
       render() {
-        return <div style={{ fontSize: NaN }}/>;
+        return <div style={{fontSize: NaN}} />;
       }
@@ -229,5 +252,19 @@ describe('CSSPropertyOperations', () => {
       'Warning: `NaN` is an invalid value for the `fontSize` css style property. ' +
-      'Check the render method of `Comp`.'
+        'Check the render method of `Comp`.',
     );
   });
+
+  it('should not warn when setting CSS variables', () => {
+    class Comp extends React.Component {
+      render() {
+        return <div style={{'--foo-primary': 'red', backgroundColor: 'red'}} />;
+      }
+    }
+
+    spyOn(console, 'error');
+    var root = document.createElement('div');
+    ReactDOM.render(<Comp />, root);
+
+    expect(console.error.calls.count()).toBe(0);
+  });
 });
diff --git a/src/renderers/dom/shared/__tests__/DOMPropertyOperations-test.js b/src/renderers/dom/shared/__tests__/DOMPropertyOperations-test.js
index d5e755fbd..9e440956e 100644
--- a/src/renderers/dom/shared/__tests__/DOMPropertyOperations-test.js
+++ b/src/renderers/dom/shared/__tests__/DOMPropertyOperations-test.js
@@ -29,18 +29,14 @@ describe('DOMPropertyOperations', () => {
   describe('createMarkupForProperty', () => {
-
     it('should create markup for simple properties', () => {
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'name',
-        'simple'
-      )).toBe('name="simple"');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'name',
-        false
-      )).toBe('name="false"');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'name',
-        null
-      )).toBe('');
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('name', 'simple'),
+      ).toBe('name="simple"');
+
+      expect(DOMPropertyOperations.createMarkupForProperty('name', false)).toBe(
+        'name="false"',
+      );
+
+      expect(DOMPropertyOperations.createMarkupForProperty('name', null)).toBe(
+        '',
+      );
     });
@@ -48,6 +44,5 @@ describe('DOMPropertyOperations', () => {
     it('should work with the id attribute', () => {
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'id',
-        'simple'
-      )).toBe('id="simple"');
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('id', 'simple'),
+      ).toBe('id="simple"');
     });
@@ -55,21 +50,17 @@ describe('DOMPropertyOperations', () => {
     it('should create markup for boolean properties', () => {
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'checked',
-        'simple'
-      )).toBe('checked=""');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'checked',
-        true
-      )).toBe('checked=""');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'checked',
-        false
-      )).toBe('');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'scoped',
-        true
-      )).toBe('scoped=""');
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('checked', 'simple'),
+      ).toBe('checked=""');
+
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('checked', true),
+      ).toBe('checked=""');
+
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('checked', false),
+      ).toBe('');
+
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('scoped', true),
+      ).toBe('scoped=""');
     });
@@ -77,41 +68,33 @@ describe('DOMPropertyOperations', () => {
     it('should create markup for booleanish properties', () => {
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'download',
-        'simple'
-      )).toBe('download="simple"');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'download',
-        true
-      )).toBe('download=""');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'download',
-        'true'
-      )).toBe('download="true"');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'download',
-        false
-      )).toBe('');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'download',
-        'false'
-      )).toBe('download="false"');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'download',
-        undefined
-      )).toBe('');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'download',
-        null
-      )).toBe('');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'download',
-        0
-      )).toBe('download="0"');
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('download', 'simple'),
+      ).toBe('download="simple"');
+
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('download', true),
+      ).toBe('download=""');
+
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('download', 'true'),
+      ).toBe('download="true"');
+
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('download', false),
+      ).toBe('');
+
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('download', 'false'),
+      ).toBe('download="false"');
+
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('download', undefined),
+      ).toBe('');
+
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('download', null),
+      ).toBe('');
+
+      expect(DOMPropertyOperations.createMarkupForProperty('download', 0)).toBe(
+        'download="0"',
+      );
     });
@@ -119,16 +102,13 @@ describe('DOMPropertyOperations', () => {
     it('should create markup for custom attributes', () => {
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'aria-label',
-        'simple'
-      )).toBe('aria-label="simple"');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'aria-label',
-        false
-      )).toBe('aria-label="false"');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'aria-label',
-        null
-      )).toBe('');
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('aria-label', 'simple'),
+      ).toBe('aria-label="simple"');
+
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('aria-label', false),
+      ).toBe('aria-label="false"');
+
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('aria-label', null),
+      ).toBe('');
     });
@@ -136,23 +116,16 @@ describe('DOMPropertyOperations', () => {
     it('should create markup for numeric properties', () => {
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'start',
-        5
-      )).toBe('start="5"');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'start',
-        0
-      )).toBe('start="0"');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'size',
-        0
-      )).toBe('');
-
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'size',
-        1
-      )).toBe('size="1"');
-    });
+      expect(DOMPropertyOperations.createMarkupForProperty('start', 5)).toBe(
+        'start="5"',
+      );
+
+      expect(DOMPropertyOperations.createMarkupForProperty('start', 0)).toBe(
+        'start="0"',
+      );
+
+      expect(DOMPropertyOperations.createMarkupForProperty('size', 0)).toBe('');
 
+      expect(DOMPropertyOperations.createMarkupForProperty('size', 1)).toBe(
+        'size="1"',
+      );
+    });
   });
@@ -160,13 +133,10 @@ describe('DOMPropertyOperations', () => {
   describe('createMarkupForProperty', () => {
-
     it('should allow custom properties on web components', () => {
-      expect(DOMPropertyOperations.createMarkupForCustomAttribute(
-        'awesomeness',
-        5
-      )).toBe('awesomeness="5"');
-
-      expect(DOMPropertyOperations.createMarkupForCustomAttribute(
-        'dev',
-        'jim'
-      )).toBe('dev="jim"');
+      expect(
+        DOMPropertyOperations.createMarkupForCustomAttribute('awesomeness', 5),
+      ).toBe('awesomeness="5"');
+
+      expect(
+        DOMPropertyOperations.createMarkupForCustomAttribute('dev', 'jim'),
+      ).toBe('dev="jim"');
     });
@@ -200,7 +170,10 @@ describe('DOMPropertyOperations', () => {
         'xlinkHref',
-        'about:blank'
+        'about:blank',
       );
       expect(stubNode.setAttributeNS.calls.count()).toBe(1);
-      expect(stubNode.setAttributeNS.calls.argsFor(0))
-        .toEqual(['http://www.w3.org/1999/xlink', 'xlink:href', 'about:blank']);
+      expect(stubNode.setAttributeNS.calls.argsFor(0)).toEqual([
+        'http://www.w3.org/1999/xlink',
+        'xlink:href',
+        'about:blank',
+      ]);
     });
@@ -208,3 +181,7 @@ describe('DOMPropertyOperations', () => {
     it('should set values as boolean properties', () => {
-      DOMPropertyOperations.setValueForProperty(stubNode, 'disabled', 'disabled');
+      DOMPropertyOperations.setValueForProperty(
+        stubNode,
+        'disabled',
+        'disabled',
+      );
       expect(stubNode.getAttribute('disabled')).toBe('');
@@ -242,3 +219,3 @@ describe('DOMPropertyOperations', () => {
         'allowFullScreen',
-        false
+        false,
       );
@@ -248,13 +225,5 @@ describe('DOMPropertyOperations', () => {
     it('should remove when setting custom attr to null', () => {
-      DOMPropertyOperations.setValueForProperty(
-        stubNode,
-        'data-foo',
-        'bar'
-      );
+      DOMPropertyOperations.setValueForProperty(stubNode, 'data-foo', 'bar');
       expect(stubNode.hasAttribute('data-foo')).toBe(true);
-      DOMPropertyOperations.setValueForProperty(
-        stubNode,
-        'data-foo',
-        null
-      );
+      DOMPropertyOperations.setValueForProperty(stubNode, 'data-foo', null);
       expect(stubNode.hasAttribute('data-foo')).toBe(false);
@@ -275,3 +244,3 @@ describe('DOMPropertyOperations', () => {
         'foobar',
-        'cows say moo'
+        'cows say moo',
       );
@@ -287,3 +256,3 @@ describe('DOMPropertyOperations', () => {
         'className',
-        'selected'
+        'selected',
       );
@@ -291,7 +260,3 @@ describe('DOMPropertyOperations', () => {
 
-      DOMPropertyOperations.setValueForProperty(
-        stubNode,
-        'className',
-        null
-      );
+      DOMPropertyOperations.setValueForProperty(stubNode, 'className', null);
       // className should be '', not 'null' or null (which becomes 'null' in
@@ -303,14 +268,6 @@ describe('DOMPropertyOperations', () => {
     it('should remove property properly for boolean properties', () => {
-      DOMPropertyOperations.setValueForProperty(
-        stubNode,
-        'hidden',
-        true
-      );
+      DOMPropertyOperations.setValueForProperty(stubNode, 'hidden', true);
       expect(stubNode.hasAttribute('hidden')).toBe(true);
 
-      DOMPropertyOperations.setValueForProperty(
-        stubNode,
-        'hidden',
-        false
-      );
+      DOMPropertyOperations.setValueForProperty(stubNode, 'hidden', false);
       expect(stubNode.hasAttribute('hidden')).toBe(false);
@@ -331,14 +288,6 @@ describe('DOMPropertyOperations', () => {
 
-      DOMPropertyOperations.setValueForProperty(
-        stubNode,
-        'foobar',
-        'selected'
-      );
+      DOMPropertyOperations.setValueForProperty(stubNode, 'foobar', 'selected');
       expect(stubNode.className).toBe('selected');
 
-      DOMPropertyOperations.setValueForProperty(
-        stubNode,
-        'foobar',
-        null
-      );
+      DOMPropertyOperations.setValueForProperty(stubNode, 'foobar', null);
       // className should be '', not 'null' or null (which becomes 'null' in
@@ -347,3 +296,2 @@ describe('DOMPropertyOperations', () => {
     });
-
   });
@@ -426,6 +374,5 @@ describe('DOMPropertyOperations', () => {
 
-      expect(
-        stubNode.options[0].selected &&
-        stubNode.options[1].selected
-      ).toBe(false);
+      expect(stubNode.options[0].selected && stubNode.options[1].selected).toBe(
+        false,
+      );
     });
@@ -436,12 +383,10 @@ describe('DOMPropertyOperations', () => {
       // foobar does not exist yet
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'foobar',
-        'simple'
-      )).toBe(null);
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('foobar', 'simple'),
+      ).toBe(null);
 
       // foo-* does not exist yet
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'foo-xyz',
-        'simple'
-      )).toBe(null);
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('foo-xyz', 'simple'),
+      ).toBe(null);
 
@@ -456,22 +401,18 @@ describe('DOMPropertyOperations', () => {
       // Ensure old attributes still work
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'name',
-        'simple'
-      )).toBe('name="simple"');
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'data-name',
-        'simple'
-      )).toBe('data-name="simple"');
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('name', 'simple'),
+      ).toBe('name="simple"');
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('data-name', 'simple'),
+      ).toBe('data-name="simple"');
 
       // foobar should work
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'foobar',
-        'simple'
-      )).toBe('foobar="simple"');
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('foobar', 'simple'),
+      ).toBe('foobar="simple"');
 
       // foo-* should work
-      expect(DOMPropertyOperations.createMarkupForProperty(
-        'foo-xyz',
-        'simple'
-      )).toBe('foo-xyz="simple"');
+      expect(
+        DOMPropertyOperations.createMarkupForProperty('foo-xyz', 'simple'),
+      ).toBe('foo-xyz="simple"');
 
@@ -479,5 +420,5 @@ describe('DOMPropertyOperations', () => {
       expect(function() {
-        DOMProperty.injection.injectDOMPropertyConfig(
-          {Properties: {foobar: null}}
-        );
+        DOMProperty.injection.injectDOMPropertyConfig({
+          Properties: {foobar: null},
+        });
       }).toThrow();
diff --git a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js
index 71bb4cb18..1cf818de2 100644
--- a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js
+++ b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js
@@ -13,3 +13,2 @@
 
-
 describe('ReactDOMComponent', () => {
@@ -19,2 +18,3 @@ describe('ReactDOMComponent', () => {
   var ReactDOMServer;
+  var inputValueTracking;
 
@@ -30,2 +30,3 @@ describe('ReactDOMComponent', () => {
     ReactDOMServer = require('ReactDOMServer');
+    inputValueTracking = require('inputValueTracking');
   });
@@ -131,6 +132,6 @@ describe('ReactDOMComponent', () => {
         'Warning: `div` was passed a style object that has previously been ' +
-        'mutated. Mutating `style` is deprecated. Consider cloning it ' +
-        'beforehand. Check the `render` of `App`. Previous style: ' +
-        '{border: "1px solid black"}. Mutated style: ' +
-        '{border: "1px solid black", position: "absolute"}.'
+          'mutated. Mutating `style` is deprecated. Consider cloning it ' +
+          'beforehand. Check the `render` of `App`. Previous style: ' +
+          '{border: "1px solid black"}. Mutated style: ' +
+          '{border: "1px solid black", position: "absolute"}.',
       );
@@ -159,3 +160,3 @@ describe('ReactDOMComponent', () => {
         'Warning: Unknown prop `foo` on <div> tag. Remove this prop from the element. ' +
-        'For details, see https://fb.me/react-unknown-prop\n    in div (at **)'
+          'For details, see https://fb.me/react-unknown-prop\n    in div (at **)',
       );
@@ -170,3 +171,3 @@ describe('ReactDOMComponent', () => {
         'Warning: Unknown props `foo`, `baz` on <div> tag. Remove these props from the element. ' +
-        'For details, see https://fb.me/react-unknown-prop\n    in div (at **)'
+          'For details, see https://fb.me/react-unknown-prop\n    in div (at **)',
       );
@@ -180,3 +181,3 @@ describe('ReactDOMComponent', () => {
       expect(normalizeCodeLocInfo(console.error.calls.argsFor(0)[0])).toBe(
-        'Warning: Unknown event handler property onDblClick. Did you mean `onDoubleClick`?\n    in div (at **)'
+        'Warning: Unknown event handler property onDblClick. Did you mean `onDoubleClick`?\n    in div (at **)',
       );
@@ -184,3 +185,2 @@ describe('ReactDOMComponent', () => {
 
-
     it('should warn about styles with numeric string values for non-unitless properties', function() {
@@ -190,5 +190,5 @@ describe('ReactDOMComponent', () => {
       function One(props) {
-        return props.inline ?
-          <span style={{fontSize: '1'}} /> :
-          <div style={{fontSize: '1'}} />;
+        return props.inline
+          ? <span style={{fontSize: '1'}} />
+          : <div style={{fontSize: '1'}} />;
       }
@@ -201,4 +201,4 @@ describe('ReactDOMComponent', () => {
         'Warning: a `div` tag (owner: `One`) was passed a numeric string value ' +
-        'for CSS property `fontSize` (value: `1`) which will be treated ' +
-        'as a unitless number in a future version of React.'
+          'for CSS property `fontSize` (value: `1`) which will be treated ' +
+          'as a unitless number in a future version of React.',
       );
@@ -214,4 +214,4 @@ describe('ReactDOMComponent', () => {
         'Warning: a `div` tag (owner: `Two`) was passed a numeric string value ' +
-        'for CSS property `fontSize` (value: `1`) which will be treated ' +
-        'as a unitless number in a future version of React.'
+          'for CSS property `fontSize` (value: `1`) which will be treated ' +
+          'as a unitless number in a future version of React.',
       );
@@ -292,3 +292,3 @@ describe('ReactDOMComponent', () => {
         />,
-        container
+        container,
       );
@@ -296,3 +296,3 @@ describe('ReactDOMComponent', () => {
       expect(
-        container.firstChild.hasAttribute('suppressContentEditableWarning')
+        container.firstChild.hasAttribute('suppressContentEditableWarning'),
       ).toBe(false);
@@ -304,3 +304,3 @@ describe('ReactDOMComponent', () => {
         />,
-        container
+        container,
       );
@@ -308,3 +308,3 @@ describe('ReactDOMComponent', () => {
       expect(
-        container.firstChild.hasAttribute('suppressContentEditableWarning')
+        container.firstChild.hasAttribute('suppressContentEditableWarning'),
       ).toBe(false);
@@ -317,7 +317,7 @@ describe('ReactDOMComponent', () => {
         <my-component dangerouslySetInnerHTML={{__html: 'hi'}} />,
-        container
+        container,
+      );
+      expect(container.firstChild.hasAttribute('dangerouslySetInnerHTML')).toBe(
+        false,
       );
-      expect(
-        container.firstChild.hasAttribute('dangerouslySetInnerHTML')
-      ).toBe(false);
 
@@ -325,7 +325,7 @@ describe('ReactDOMComponent', () => {
         <my-component dangerouslySetInnerHTML={{__html: 'bye'}} />,
-        container
+        container,
+      );
+      expect(container.firstChild.hasAttribute('dangerouslySetInnerHTML')).toBe(
+        false,
       );
-      expect(
-        container.firstChild.hasAttribute('dangerouslySetInnerHTML')
-      ).toBe(false);
     });
@@ -352,4 +352,4 @@ describe('ReactDOMComponent', () => {
       var container = document.createElement('div');
-      ReactDOM.render(<some-custom-element foo="bar"/>, container);
-      ReactDOM.render(<some-custom-element bar="buzz"/>, container);
+      ReactDOM.render(<some-custom-element foo="bar" />, container);
+      ReactDOM.render(<some-custom-element bar="buzz" />, container);
       var node = container.firstChild;
@@ -379,3 +379,3 @@ describe('ReactDOMComponent', () => {
           {'blah" onclick="beevil" noise="hi': 'selected'},
-          null
+          null,
         );
@@ -385,3 +385,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(0)[0]).toEqual(
-        'Warning: Invalid attribute name: `blah" onclick="beevil" noise="hi`'
+        'Warning: Invalid attribute name: `blah" onclick="beevil" noise="hi`',
       );
@@ -399,3 +399,3 @@ describe('ReactDOMComponent', () => {
           {'blah" onclick="beevil" noise="hi': 'selected'},
-          null
+          null,
         );
@@ -405,3 +405,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(0)[0]).toEqual(
-        'Warning: Invalid attribute name: `blah" onclick="beevil" noise="hi`'
+        'Warning: Invalid attribute name: `blah" onclick="beevil" noise="hi`',
       );
@@ -446,3 +446,6 @@ describe('ReactDOMComponent', () => {
       var container = document.createElement('div');
-      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: ':)'}} />, container);
+      ReactDOM.render(
+        <div dangerouslySetInnerHTML={{__html: ':)'}} />,
+        container,
+      );
 
@@ -460,3 +463,3 @@ describe('ReactDOMComponent', () => {
         <div dangerouslySetInnerHTML={{__html: 'goodbye'}} />,
-        container
+        container,
       );
@@ -469,3 +472,3 @@ describe('ReactDOMComponent', () => {
         <div dangerouslySetInnerHTML={{__html: 'bonjour'}} />,
-        container
+        container,
       );
@@ -481,3 +484,3 @@ describe('ReactDOMComponent', () => {
         <div><div dangerouslySetInnerHTML={{__html: 'bonjour'}} /></div>,
-        container
+        container,
       );
@@ -496,3 +499,3 @@ describe('ReactDOMComponent', () => {
         <div><div dangerouslySetInnerHTML={{__html: 'bonjour'}} /></div>,
-        container
+        container,
       );
@@ -603,3 +606,3 @@ describe('ReactDOMComponent', () => {
       var container = document.createElement('div');
-      ReactDOM.render(<button is="test" cowabunga="chevynova"/>, container);
+      ReactDOM.render(<button is="test" cowabunga="chevynova" />, container);
       expect(container.firstChild.hasAttribute('cowabunga')).toBe(true);
@@ -638,3 +641,3 @@ describe('ReactDOMComponent', () => {
         </div>,
-        container
+        container,
       );
@@ -650,3 +653,3 @@ describe('ReactDOMComponent', () => {
         </div>,
-        container
+        container,
       );
@@ -679,5 +682,5 @@ describe('ReactDOMComponent', () => {
         var transaction = new ReactReconcileTransaction();
-        return (new NodeStub(props))._createOpenTagMarkupAndPutListeners(
+        return new NodeStub(props)._createOpenTagMarkupAndPutListeners(
           transaction,
-          props
+          props,
         );
@@ -695,3 +698,3 @@ describe('ReactDOMComponent', () => {
               return {
-                pass: (new RegExp(re)).test(actual),
+                pass: new RegExp(re).test(actual),
               };
@@ -710,5 +713,7 @@ describe('ReactDOMComponent', () => {
     it('should escape style names and values', () => {
-      expect(genMarkup({
-        style: {'b&ckground': '<3'},
-      })).toHaveAttribute(['style', 'b&amp;ckground:&lt;3;']);
+      expect(
+        genMarkup({
+          style: {'b&ckground': '<3'},
+        }),
+      ).toHaveAttribute(['style', 'b&amp;ckground:&lt;3;']);
     });
@@ -735,7 +740,3 @@ describe('ReactDOMComponent', () => {
         var transaction = new ReactReconcileTransaction();
-        return (new NodeStub(props))._createContentMarkup(
-          transaction,
-          props,
-          {}
-        );
+        return new NodeStub(props)._createContentMarkup(transaction, props, {});
       };
@@ -748,3 +749,3 @@ describe('ReactDOMComponent', () => {
               return {
-                pass: (new RegExp(re)).test(actual),
+                pass: new RegExp(re).test(actual),
               };
@@ -758,5 +759,5 @@ describe('ReactDOMComponent', () => {
       var innerHTML = {__html: 'testContent'};
-      expect(
-        genMarkup({dangerouslySetInnerHTML: innerHTML})
-      ).toHaveInnerhtml('testContent');
+      expect(genMarkup({dangerouslySetInnerHTML: innerHTML})).toHaveInnerhtml(
+        'testContent',
+      );
     });
@@ -779,5 +780,9 @@ describe('ReactDOMComponent', () => {
         <video>
-          <source src="http://example.org/video" type="video/mp4" onError={(e) => console.error('onError called')} />
+          <source
+            src="http://example.org/video"
+            type="video/mp4"
+            onError={e => console.error('onError called')}
+          />
         </video>,
-        container
+        container,
       );
@@ -789,5 +794,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.count()).toBe(1);
-      expect(console.error.calls.argsFor(0)[0]).toContain(
-        'onError called'
-      );
+      expect(console.error.calls.argsFor(0)[0]).toContain('onError called');
     });
@@ -801,3 +804,3 @@ describe('ReactDOMComponent', () => {
 
-      var returnedValue = ReactDOMServer.renderToString(<Container/>);
+      var returnedValue = ReactDOMServer.renderToString(<Container />);
       expect(returnedValue).not.toContain('</BR>');
@@ -812,3 +815,3 @@ describe('ReactDOMComponent', () => {
         'input is a void element tag and must neither have `children` nor ' +
-        'use `dangerouslySetInnerHTML`.'
+          'use `dangerouslySetInnerHTML`.',
       );
@@ -822,3 +825,3 @@ describe('ReactDOMComponent', () => {
           <input dangerouslySetInnerHTML={{__html: 'content'}} />,
-          container
+          container,
         );
@@ -826,3 +829,3 @@ describe('ReactDOMComponent', () => {
         'input is a void element tag and must neither have `children` nor use ' +
-        '`dangerouslySetInnerHTML`.'
+          '`dangerouslySetInnerHTML`.',
       );
@@ -833,3 +836,5 @@ describe('ReactDOMComponent', () => {
 
-      var returnedValue = ReactDOMServer.renderToString(<menu><menuitem /></menu>);
+      var returnedValue = ReactDOMServer.renderToString(
+        <menu><menuitem /></menu>,
+      );
 
@@ -841,5 +846,4 @@ describe('ReactDOMComponent', () => {
         'menuitem is a void element tag and must neither have `children` nor use ' +
-        '`dangerouslySetInnerHTML`.'
+          '`dangerouslySetInnerHTML`.',
       );
-
     });
@@ -850,3 +854,3 @@ describe('ReactDOMComponent', () => {
       }).toThrowError(
-        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
+        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
       );
@@ -855,3 +859,2 @@ describe('ReactDOMComponent', () => {
     it('should validate against use of innerHTML', () => {
-
       spyOn(console, 'error');
@@ -860,3 +863,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(0)[0]).toContain(
-        'Directly setting property `innerHTML` is not permitted. '
+        'Directly setting property `innerHTML` is not permitted. ',
       );
@@ -869,3 +872,3 @@ describe('ReactDOMComponent', () => {
         '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +
-        'Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.'
+          'Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.',
       );
@@ -875,6 +878,6 @@ describe('ReactDOMComponent', () => {
       expect(function() {
-        mountComponent({dangerouslySetInnerHTML: {foo: 'bar'} });
+        mountComponent({dangerouslySetInnerHTML: {foo: 'bar'}});
       }).toThrowError(
         '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +
-        'Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.'
+          'Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.',
       );
@@ -884,3 +887,3 @@ describe('ReactDOMComponent', () => {
       expect(function() {
-        mountComponent({dangerouslySetInnerHTML: {__html: null} });
+        mountComponent({dangerouslySetInnerHTML: {__html: null}});
       }).not.toThrow();
@@ -897,3 +900,7 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      mountComponent({contentEditable: true, children: '', suppressContentEditableWarning: true});
+      mountComponent({
+        contentEditable: true,
+        children: '',
+        suppressContentEditableWarning: true,
+      });
       expect(console.error.calls.count()).toBe(0);
@@ -906,8 +913,29 @@ describe('ReactDOMComponent', () => {
         'The `style` prop expects a mapping from style properties to values, ' +
-        'not a string. For example, style={{marginRight: spacing + \'em\'}} ' +
-        'when using JSX.'
+          "not a string. For example, style={{marginRight: spacing + 'em'}} " +
+          'when using JSX.',
+      );
+    });
+
+    it('should track input values', function() {
+      var container = document.createElement('div');
+      var inst = ReactDOM.render(
+        <input type="text" defaultValue="foo" />,
+        container,
       );
+
+      var tracker = inputValueTracking._getTrackerFromNode(inst);
+
+      expect(tracker.getValue()).toEqual('foo');
+    });
+
+    it('should track textarea values', function() {
+      var container = document.createElement('div');
+      var inst = ReactDOM.render(<textarea defaultValue="foo" />, container);
+
+      var tracker = inputValueTracking._getTrackerFromNode(inst);
+
+      expect(tracker.getValue()).toEqual('foo');
     });
 
-    it('should execute custom event plugin listening behavior', () => {
+    it('should execute custom event plugin listening behavior', function() {
       var SimpleEventPlugin = require('SimpleEventPlugin');
@@ -918,6 +946,3 @@ describe('ReactDOMComponent', () => {
       var container = document.createElement('div');
-      ReactDOM.render(
-        <div onClick={() => true} />,
-        container
-      );
+      ReactDOM.render(<div onClick={() => true} />, container);
 
@@ -978,3 +1003,3 @@ describe('ReactDOMComponent', () => {
         'input is a void element tag and must neither have `children` ' +
-        'nor use `dangerouslySetInnerHTML`. Check the render method of X.'
+          'nor use `dangerouslySetInnerHTML`. Check the render method of X.',
       );
@@ -987,5 +1012,10 @@ describe('ReactDOMComponent', () => {
         ReactDOM.render(<div is="custom-div" />, container);
-        expect(document.createElement).toHaveBeenCalledWith('div', 'custom-div');
+        expect(document.createElement).toHaveBeenCalledWith(
+          'div',
+          'custom-div',
+        );
       } else {
-        expect(ReactDOMServer.renderToString(<div is="custom-div" />)).toContain('is="custom-div"');
+        expect(
+          ReactDOMServer.renderToString(<div is="custom-div" />),
+        ).toContain('is="custom-div"');
       }
@@ -1008,3 +1038,3 @@ describe('ReactDOMComponent', () => {
         'input is a void element tag and must neither have `children` nor use ' +
-        '`dangerouslySetInnerHTML`.'
+          '`dangerouslySetInnerHTML`.',
       );
@@ -1018,3 +1048,3 @@ describe('ReactDOMComponent', () => {
           <input dangerouslySetInnerHTML={{__html: 'content'}} />,
-          container
+          container,
         );
@@ -1022,3 +1052,3 @@ describe('ReactDOMComponent', () => {
         'input is a void element tag and must neither have `children` nor use ' +
-        '`dangerouslySetInnerHTML`.'
+          '`dangerouslySetInnerHTML`.',
       );
@@ -1032,6 +1062,6 @@ describe('ReactDOMComponent', () => {
           <div children="" dangerouslySetInnerHTML={{__html: ''}} />,
-          container
+          container,
         );
       }).toThrowError(
-        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
+        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
       );
@@ -1041,6 +1071,3 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactDOM.render(
-        <div contentEditable={true}><div /></div>,
-        container
-      );
+      ReactDOM.render(<div contentEditable={true}><div /></div>, container);
       expect(console.error.calls.count()).toBe(1);
@@ -1056,4 +1083,4 @@ describe('ReactDOMComponent', () => {
         'The `style` prop expects a mapping from style properties to values, ' +
-        'not a string. For example, style={{marginRight: spacing + \'em\'}} ' +
-        'when using JSX.'
+          "not a string. For example, style={{marginRight: spacing + 'em'}} " +
+          'when using JSX.',
       );
@@ -1069,7 +1096,7 @@ describe('ReactDOMComponent', () => {
       expect(function() {
-        ReactDOM.render(<Animal/>, container);
+        ReactDOM.render(<Animal />, container);
       }).toThrowError(
         'The `style` prop expects a mapping from style properties to values, ' +
-        'not a string. For example, style={{marginRight: spacing + \'em\'}} ' +
-        'when using JSX. This DOM node was rendered by `Animal`.'
+          "not a string. For example, style={{marginRight: spacing + 'em'}} " +
+          'when using JSX. This DOM node was rendered by `Animal`.',
       );
@@ -1080,9 +1107,13 @@ describe('ReactDOMComponent', () => {
         ReactDOMServer.renderToStaticMarkup(
-          React.DOM.div({
-            title: '\'"<>&',
-            style: {
-              textAlign: '\'"<>&',
+          React.createElement(
+            'div',
+            {
+              title: '\'"<>&',
+              style: {
+                textAlign: '\'"<>&',
+              },
             },
-          }, '\'"<>&')
-        )
+            '\'"<>&',
+          ),
+        ),
       ).toBe(
@@ -1090,3 +1121,3 @@ describe('ReactDOMComponent', () => {
           '&#x27;&quot;&lt;&gt;&amp;' +
-        '</div>'
+          '</div>',
       );
@@ -1109,5 +1140,3 @@ describe('ReactDOMComponent', () => {
       var inst = ReactDOMComponentTree.getInstanceFromNode(rootNode);
-      expect(
-        EventPluginHub.getListener(inst, 'onClick')
-      ).toBe(callback);
+      expect(EventPluginHub.getListener(inst, 'onClick')).toBe(callback);
       expect(rootNode).toBe(ReactDOM.findDOMNode(instance));
@@ -1116,8 +1145,33 @@ describe('ReactDOMComponent', () => {
 
-      expect(
-        EventPluginHub.getListener(inst, 'onClick')
-      ).toBe(undefined);
+      expect(EventPluginHub.getListener(inst, 'onClick')).toBe(undefined);
     });
 
-    it('unmounts children before unsetting DOM node info', () => {
+    it('should clean up input value tracking', function() {
+      var container = document.createElement('div');
+      var node = ReactDOM.render(
+        <input type="text" defaultValue="foo" />,
+        container,
+      );
+      var tracker = inputValueTracking._getTrackerFromNode(node);
+
+      spyOn(tracker, 'stopTracking');
+
+      ReactDOM.unmountComponentAtNode(container);
+
+      expect(tracker.stopTracking.calls.count()).toBe(1);
+    });
+
+    it('should clean up input textarea tracking', function() {
+      var container = document.createElement('div');
+      var node = ReactDOM.render(<textarea defaultValue="foo" />, container);
+      var tracker = inputValueTracking._getTrackerFromNode(node);
+
+      spyOn(tracker, 'stopTracking');
+
+      ReactDOM.unmountComponentAtNode(container);
+
+      expect(tracker.stopTracking.calls.count()).toBe(1);
+    });
+
+    it('unmounts children before unsetting DOM node info', function() {
       class Inner extends React.Component {
@@ -1143,4 +1197,3 @@ describe('ReactDOMComponent', () => {
       // before React so it's pre-mocked before React would require it.
-      jest.resetModuleRegistry()
-        .mock('isEventSupported');
+      jest.resetModuleRegistry().mock('isEventSupported');
       var isEventSupported = require('isEventSupported');
@@ -1154,3 +1207,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(0)[0]).toBe(
-        'Warning: This browser doesn\'t support the `onScroll` event'
+        "Warning: This browser doesn't support the `onScroll` event",
       );
@@ -1160,3 +1213,3 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactDOMServer.renderToString(<div onScroll={() => {}}/>);
+      ReactDOMServer.renderToString(<div onScroll={() => {}} />);
       expect(console.error).not.toHaveBeenCalled();
@@ -1169,6 +1222,4 @@ describe('ReactDOMComponent', () => {
       var hackzor = React.createElement('script tag');
-      expect(
-        () => ReactTestUtils.renderIntoDocument(hackzor)
-      ).toThrowError(
-        'Invalid tag: script tag'
+      expect(() => ReactTestUtils.renderIntoDocument(hackzor)).toThrowError(
+        'Invalid tag: script tag',
       );
@@ -1179,6 +1230,4 @@ describe('ReactDOMComponent', () => {
       var hackzor = React.createElement('div><img /><div');
-      expect(
-        () => ReactTestUtils.renderIntoDocument(hackzor)
-      ).toThrowError(
-        'Invalid tag: div><img /><div'
+      expect(() => ReactTestUtils.renderIntoDocument(hackzor)).toThrowError(
+        'Invalid tag: div><img /><div',
       );
@@ -1201,3 +1250,3 @@ describe('ReactDOMComponent', () => {
         'Warning: validateDOMNesting(...): <tr> cannot appear as a child of ' +
-        '<div>. See div > tr.'
+          '<div>. See div > tr.',
       );
@@ -1213,3 +1262,3 @@ describe('ReactDOMComponent', () => {
         'Warning: validateDOMNesting(...): <p> cannot appear as a descendant ' +
-        'of <p>. See p > ... > p.'
+          'of <p>. See p > ... > p.',
       );
@@ -1237,4 +1286,4 @@ describe('ReactDOMComponent', () => {
         'Warning: validateDOMNesting(...): <tr> cannot appear as a child of ' +
-        '<table>. See Foo > table > Row > tr. Add a <tbody> to your code to ' +
-        'match the DOM tree generated by the browser.'
+          '<table>. See Foo > table > Row > tr. Add a <tbody> to your code to ' +
+          'match the DOM tree generated by the browser.',
       );
@@ -1242,3 +1291,3 @@ describe('ReactDOMComponent', () => {
         'Warning: validateDOMNesting(...): Text nodes cannot appear as a ' +
-        'child of <tr>. See Row > tr > #text.'
+          'child of <tr>. See Row > tr > #text.',
       );
@@ -1246,5 +1295,5 @@ describe('ReactDOMComponent', () => {
         'Warning: validateDOMNesting(...): Whitespace text nodes cannot ' +
-        'appear as a child of <table>. Make sure you don\'t have any extra ' +
-        'whitespace between tags on each line of your source code. See Foo > ' +
-        'table > #text.'
+          "appear as a child of <table>. Make sure you don't have any extra " +
+          'whitespace between tags on each line of your source code. See Foo > ' +
+          'table > #text.',
       );
@@ -1282,3 +1331,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(0)[0]).toContain(
-        'See Viz1 > table > FancyRow > Row > tr.'
+        'See Viz1 > table > FancyRow > Row > tr.',
       );
@@ -1294,3 +1343,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(1)[0]).toContain(
-        'See Viz2 > FancyTable > Table > table > FancyRow > Row > tr.'
+        'See Viz2 > FancyTable > Table > table > FancyRow > Row > tr.',
       );
@@ -1300,3 +1349,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(2)[0]).toContain(
-        'See FancyTable > Table > table > FancyRow > Row > tr.'
+        'See FancyTable > Table > table > FancyRow > Row > tr.',
       );
@@ -1306,3 +1355,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(3)[0]).toContain(
-        'See table > FancyRow > Row > tr.'
+        'See table > FancyRow > Row > tr.',
       );
@@ -1312,3 +1361,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(4)[0]).toContain(
-        'See FancyTable > Table > table > tr.'
+        'See FancyTable > Table > table > tr.',
       );
@@ -1324,3 +1373,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(5)[0]).toContain(
-        'See Link > a > ... > Link > a.'
+        'See Link > a > ... > Link > a.',
       );
@@ -1330,3 +1379,5 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactDOMServer.renderToString(React.createElement('input', {type: 'text', tabindex: '1'}));
+      ReactDOMServer.renderToString(
+        React.createElement('input', {type: 'text', tabindex: '1'}),
+      );
       expect(console.error.calls.count()).toBe(1);
@@ -1337,4 +1388,8 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactDOMServer.renderToString(React.createElement('input', {type: 'text', onclick: '1'}));
-      ReactDOMServer.renderToString(React.createElement('input', {type: 'text', onKeydown: '1'}));
+      ReactDOMServer.renderToString(
+        React.createElement('input', {type: 'text', onclick: '1'}),
+      );
+      ReactDOMServer.renderToString(
+        React.createElement('input', {type: 'text', onKeydown: '1'}),
+      );
       expect(console.error.calls.count()).toBe(2);
@@ -1346,3 +1401,5 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactTestUtils.renderIntoDocument(React.createElement('input', {type: 'text', tabindex: '1'}));
+      ReactTestUtils.renderIntoDocument(
+        React.createElement('input', {type: 'text', tabindex: '1'}),
+      );
       expect(console.error.calls.count()).toBe(1);
@@ -1353,4 +1410,8 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactTestUtils.renderIntoDocument(React.createElement('input', {type: 'text', onclick: '1'}));
-      ReactTestUtils.renderIntoDocument(React.createElement('input', {type: 'text', onKeydown: '1'}));
+      ReactTestUtils.renderIntoDocument(
+        React.createElement('input', {type: 'text', onclick: '1'}),
+      );
+      ReactTestUtils.renderIntoDocument(
+        React.createElement('input', {type: 'text', onKeydown: '1'}),
+      );
       expect(console.error.calls.count()).toBe(2);
@@ -1362,3 +1423,5 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactDOMServer.renderToString(React.createElement('div', {class: 'muffins'}));
+      ReactDOMServer.renderToString(
+        React.createElement('div', {class: 'muffins'}),
+      );
       expect(console.error.calls.count()).toBe(1);
@@ -1381,15 +1444,11 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactDOMServer.renderToString(<div class="paladin"/>);
-      ReactDOMServer.renderToString(<input type="text" onclick="1"/>);
+      ReactDOMServer.renderToString(<div class="paladin" />);
+      ReactDOMServer.renderToString(<input type="text" onclick="1" />);
       expect(console.error.calls.count()).toBe(2);
-      expect(
-        normalizeCodeLocInfo(console.error.calls.argsFor(0)[0])
-      ).toBe(
-        'Warning: Unknown DOM property class. Did you mean className?\n    in div (at **)'
+      expect(normalizeCodeLocInfo(console.error.calls.argsFor(0)[0])).toBe(
+        'Warning: Unknown DOM property class. Did you mean className?\n    in div (at **)',
       );
-      expect(
-        normalizeCodeLocInfo(console.error.calls.argsFor(1)[0])
-      ).toBe(
+      expect(normalizeCodeLocInfo(console.error.calls.argsFor(1)[0])).toBe(
         'Warning: Unknown event handler property onclick. Did you mean ' +
-        '`onClick`?\n    in input (at **)'
+          '`onClick`?\n    in input (at **)',
       );
@@ -1406,8 +1465,5 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.count()).toBe(1);
-      expect(
-        normalizeCodeLocInfo(console.error.calls.argsFor(0)[0])
-      ).toBe(
-        'Warning: Unknown DOM property class. Did you mean className?\n    in div (at **)'
+      expect(normalizeCodeLocInfo(console.error.calls.argsFor(0)[0])).toBe(
+        'Warning: Unknown DOM property class. Did you mean className?\n    in div (at **)',
       );
-
     });
@@ -1419,8 +1475,8 @@ describe('ReactDOMComponent', () => {
         <div className="foo1">
-        <div class="foo2"/>
-        <div onClick="foo3"/>
-        <div onclick="foo4"/>
-        <div className="foo5"/>
-        <div className="foo6"/>
-        </div>
+          <div class="foo2" />
+          <div onClick="foo3" />
+          <div onclick="foo4" />
+          <div className="foo5" />
+          <div className="foo6" />
+        </div>,
       );
@@ -1496,4 +1552,8 @@ describe('ReactDOMComponent', () => {
 
-      ReactTestUtils.renderIntoDocument(React.createElement('label', {for: 'test'}));
-      ReactTestUtils.renderIntoDocument(React.createElement('input', {type: 'text', autofocus: true}));
+      ReactTestUtils.renderIntoDocument(
+        React.createElement('label', {for: 'test'}),
+      );
+      ReactTestUtils.renderIntoDocument(
+        React.createElement('input', {type: 'text', autofocus: true}),
+      );
 
@@ -1502,3 +1562,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(0)[0]).toBe(
-        'Warning: Unknown DOM property for. Did you mean htmlFor?\n    in label'
+        'Warning: Unknown DOM property for. Did you mean htmlFor?\n    in label',
       );
@@ -1506,3 +1566,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(1)[0]).toBe(
-        'Warning: Unknown DOM property autofocus. Did you mean autoFocus?\n    in input'
+        'Warning: Unknown DOM property autofocus. Did you mean autoFocus?\n    in input',
       );
diff --git a/src/renderers/dom/shared/__tests__/ReactDOMInvalidARIAHook-test.js b/src/renderers/dom/shared/__tests__/ReactDOMInvalidARIAHook-test.js
index 3be7d6127..1fae95ffe 100644
--- a/src/renderers/dom/shared/__tests__/ReactDOMInvalidARIAHook-test.js
+++ b/src/renderers/dom/shared/__tests__/ReactDOMInvalidARIAHook-test.js
@@ -40,3 +40,3 @@ describe('ReactDOMInvalidARIAHook', () => {
         'Warning: Invalid aria prop `aria-badprop` on <div> tag. ' +
-        'For details, see https://fb.me/invalid-aria-prop'
+          'For details, see https://fb.me/invalid-aria-prop',
       );
@@ -45,8 +45,6 @@ describe('ReactDOMInvalidARIAHook', () => {
       spyOn(console, 'error');
-      mountComponent(
-        {
-          'aria-badprop': 'Very tall trees',
-          'aria-malprop': 'Turbulent seas',
-        }
-      );
+      mountComponent({
+        'aria-badprop': 'Very tall trees',
+        'aria-malprop': 'Turbulent seas',
+      });
       expect(console.error.calls.count()).toBe(1);
@@ -54,3 +52,3 @@ describe('ReactDOMInvalidARIAHook', () => {
         'Warning: Invalid aria props `aria-badprop`, `aria-malprop` on <div> ' +
-        'tag. For details, see https://fb.me/invalid-aria-prop'
+          'tag. For details, see https://fb.me/invalid-aria-prop',
       );
@@ -64,3 +62,3 @@ describe('ReactDOMInvalidARIAHook', () => {
         'Warning: Unknown ARIA attribute aria-hasPopup. ' +
-        'Did you mean aria-haspopup?'
+          'Did you mean aria-haspopup?',
       );
diff --git a/src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js b/src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js
index 0d42152d8..8dc2b9792 100644
--- a/src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js
+++ b/src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js
@@ -14,3 +14,2 @@
 describe('escapeTextContentForBrowser', () => {
-
   var escapeTextContentForBrowser = require('escapeTextContentForBrowser');
@@ -37,7 +36,9 @@ describe('escapeTextContentForBrowser', () => {
   it('should escape string', () => {
-    var escaped = escapeTextContentForBrowser('<script type=\'\' src=""></script>');
+    var escaped = escapeTextContentForBrowser(
+      '<script type=\'\' src=""></script>',
+    );
     expect(escaped).not.toContain('<');
     expect(escaped).not.toContain('>');
-    expect(escaped).not.toContain('\'');
-    expect(escaped).not.toContain('\"');
+    expect(escaped).not.toContain("'");
+    expect(escaped).not.toContain('"');
 
@@ -46,3 +47,2 @@ describe('escapeTextContentForBrowser', () => {
   });
-
 });
diff --git a/src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js b/src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js
index aeba0bc4f..884fc322c 100644
--- a/src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js
+++ b/src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js
@@ -14,3 +14,2 @@
 describe('quoteAttributeValueForBrowser', () => {
-
   var quoteAttributeValueForBrowser = require('quoteAttributeValueForBrowser');
@@ -37,7 +36,9 @@ describe('quoteAttributeValueForBrowser', () => {
   it('should escape string', () => {
-    var escaped = quoteAttributeValueForBrowser('<script type=\'\' src=""></script>');
+    var escaped = quoteAttributeValueForBrowser(
+      '<script type=\'\' src=""></script>',
+    );
     expect(escaped).not.toContain('<');
     expect(escaped).not.toContain('>');
-    expect(escaped).not.toContain('\'');
-    expect(escaped.substr(1, -1)).not.toContain('\"');
+    expect(escaped).not.toContain("'");
+    expect(escaped.substr(1, -1)).not.toContain('"');
 
@@ -46,3 +47,2 @@ describe('quoteAttributeValueForBrowser', () => {
   });
-
 });
diff --git a/src/renderers/dom/shared/dangerousStyleValue.js b/src/renderers/dom/shared/dangerousStyleValue.js
index 8b5424cc8..287a91f40 100644
--- a/src/renderers/dom/shared/dangerousStyleValue.js
+++ b/src/renderers/dom/shared/dangerousStyleValue.js
@@ -46,4 +46,7 @@ function dangerousStyleValue(name, value, component) {
   var isNonNumeric = isNaN(value);
-  if (isNonNumeric || value === 0 ||
-      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
+  if (
+    isNonNumeric ||
+    value === 0 ||
+    (isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])
+  ) {
     return '' + value; // cast to string
@@ -73,4 +76,4 @@ function dangerousStyleValue(name, value, component) {
             'a `%s` tag (owner: `%s`) was passed a numeric string value ' +
-            'for CSS property `%s` (value: `%s`) which will be treated ' +
-            'as a unitless number in a future version of React.',
+              'for CSS property `%s` (value: `%s`) which will be treated ' +
+              'as a unitless number in a future version of React.',
             component._currentElement.type,
@@ -78,3 +81,3 @@ function dangerousStyleValue(name, value, component) {
             name,
-            value
+            value,
           );
diff --git a/src/renderers/dom/shared/escapeTextContentForBrowser.js b/src/renderers/dom/shared/escapeTextContentForBrowser.js
index 3735627f8..9a7a2f10d 100644
--- a/src/renderers/dom/shared/escapeTextContentForBrowser.js
+++ b/src/renderers/dom/shared/escapeTextContentForBrowser.js
@@ -76,3 +76,3 @@ function escapeHtml(string) {
       case 39: // '
-        escape = '&#x27;';  // modified from escape-html; used to be '&#39'
+        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
         break;
@@ -96,5 +96,3 @@ function escapeHtml(string) {
 
-  return lastIndex !== index
-    ? html + str.substring(lastIndex, index)
-    : html;
+  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
 }
@@ -102,3 +100,2 @@ function escapeHtml(string) {
 
-
 /**
diff --git a/src/renderers/dom/shared/hooks/ReactDOMInvalidARIAHook.js b/src/renderers/dom/shared/hooks/ReactDOMInvalidARIAHook.js
index 6e2fdcfa3..9f06f149f 100644
--- a/src/renderers/dom/shared/hooks/ReactDOMInvalidARIAHook.js
+++ b/src/renderers/dom/shared/hooks/ReactDOMInvalidARIAHook.js
@@ -22,6 +22,3 @@ var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
 function validateProperty(tagName, name, debugID) {
-  if (
-    warnedProperties.hasOwnProperty(name)
-    && warnedProperties[name]
-  ) {
+  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
     return true;
@@ -31,6 +28,7 @@ function validateProperty(tagName, name, debugID) {
     var lowerCasedName = name.toLowerCase();
-    var standardName =
-      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
-        DOMProperty.getPossibleStandardName[lowerCasedName] :
-        null;
+    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(
+      lowerCasedName,
+    )
+      ? DOMProperty.getPossibleStandardName[lowerCasedName]
+      : null;
 
@@ -49,3 +47,3 @@ function validateProperty(tagName, name, debugID) {
         standardName,
-        ReactComponentTreeHook.getStackAddendumByID(debugID)
+        ReactComponentTreeHook.getStackAddendumByID(debugID),
       );
@@ -77,6 +75,6 @@ function warnInvalidARIAProps(debugID, element) {
       'Invalid aria prop %s on <%s> tag. ' +
-      'For details, see https://fb.me/invalid-aria-prop%s',
+        'For details, see https://fb.me/invalid-aria-prop%s',
       unknownPropString,
       element.type,
-      ReactComponentTreeHook.getStackAddendumByID(debugID)
+      ReactComponentTreeHook.getStackAddendumByID(debugID),
     );
@@ -86,6 +84,6 @@ function warnInvalidARIAProps(debugID, element) {
       'Invalid aria props %s on <%s> tag. ' +
-      'For details, see https://fb.me/invalid-aria-prop%s',
+        'For details, see https://fb.me/invalid-aria-prop%s',
       unknownPropString,
       element.type,
-      ReactComponentTreeHook.getStackAddendumByID(debugID)
+      ReactComponentTreeHook.getStackAddendumByID(debugID),
     );
diff --git a/src/renderers/dom/shared/hooks/ReactDOMNullInputValuePropHook.js b/src/renderers/dom/shared/hooks/ReactDOMNullInputValuePropHook.js
index 959db6bf2..21cbae338 100644
--- a/src/renderers/dom/shared/hooks/ReactDOMNullInputValuePropHook.js
+++ b/src/renderers/dom/shared/hooks/ReactDOMNullInputValuePropHook.js
@@ -23,6 +23,14 @@ function handleElement(debugID, element) {
   }
-  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
+  if (
+    element.type !== 'input' &&
+    element.type !== 'textarea' &&
+    element.type !== 'select'
+  ) {
     return;
   }
-  if (element.props != null && element.props.value === null && !didWarnValueNull) {
+  if (
+    element.props != null &&
+    element.props.value === null &&
+    !didWarnValueNull
+  ) {
     warning(
@@ -30,6 +38,6 @@ function handleElement(debugID, element) {
       '`value` prop on `%s` should not be null. ' +
-      'Consider using the empty string to clear the component or `undefined` ' +
-      'for uncontrolled components.%s',
+        'Consider using the empty string to clear the component or `undefined` ' +
+        'for uncontrolled components.%s',
       element.type,
-      ReactComponentTreeHook.getStackAddendumByID(debugID)
+      ReactComponentTreeHook.getStackAddendumByID(debugID),
     );
diff --git a/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js b/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js
index ef0937a7f..6720bc7f0 100644
--- a/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js
+++ b/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js
@@ -39,7 +39,12 @@ if (__DEV__) {
   var validateProperty = function(tagName, name, debugID) {
-    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
+    if (
+      DOMProperty.properties.hasOwnProperty(name) ||
+      DOMProperty.isCustomAttribute(name)
+    ) {
       return true;
     }
-    if (reactProps.hasOwnProperty(name) && reactProps[name] ||
-        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
+    if (
+      (reactProps.hasOwnProperty(name) && reactProps[name]) ||
+      (warnedProperties.hasOwnProperty(name) && warnedProperties[name])
+    ) {
       return true;
@@ -53,17 +58,13 @@ if (__DEV__) {
     // data-* attributes should be lowercase; suggest the lowercase version
-    var standardName = (
-      DOMProperty.isCustomAttribute(lowerCasedName) ?
-        lowerCasedName :
-      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
-        DOMProperty.getPossibleStandardName[lowerCasedName] :
-        null
-    );
+    var standardName = DOMProperty.isCustomAttribute(lowerCasedName)
+      ? lowerCasedName
+      : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName)
+        ? DOMProperty.getPossibleStandardName[lowerCasedName]
+        : null;
 
-    var registrationName = (
-      EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(
-        lowerCasedName
-      ) ?
-      EventPluginRegistry.possibleRegistrationNames[lowerCasedName] :
-      null
-    );
+    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(
+      lowerCasedName,
+    )
+      ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName]
+      : null;
 
@@ -75,3 +76,3 @@ if (__DEV__) {
         standardName,
-        ReactComponentTreeHook.getStackAddendumByID(debugID)
+        ReactComponentTreeHook.getStackAddendumByID(debugID),
       );
@@ -84,3 +85,3 @@ if (__DEV__) {
         registrationName,
-        ReactComponentTreeHook.getStackAddendumByID(debugID)
+        ReactComponentTreeHook.getStackAddendumByID(debugID),
       );
@@ -106,5 +107,3 @@ var warnUnknownProperties = function(debugID, element) {
 
-  var unknownPropString = unknownProps
-    .map(prop => '`' + prop + '`')
-    .join(', ');
+  var unknownPropString = unknownProps.map(prop => '`' + prop + '`').join(', ');
 
@@ -114,6 +113,6 @@ var warnUnknownProperties = function(debugID, element) {
       'Unknown prop %s on <%s> tag. Remove this prop from the element. ' +
-      'For details, see https://fb.me/react-unknown-prop%s',
+        'For details, see https://fb.me/react-unknown-prop%s',
       unknownPropString,
       element.type,
-      ReactComponentTreeHook.getStackAddendumByID(debugID)
+      ReactComponentTreeHook.getStackAddendumByID(debugID),
     );
@@ -123,6 +122,6 @@ var warnUnknownProperties = function(debugID, element) {
       'Unknown props %s on <%s> tag. Remove these props from the element. ' +
-      'For details, see https://fb.me/react-unknown-prop%s',
+        'For details, see https://fb.me/react-unknown-prop%s',
       unknownPropString,
       element.type,
-      ReactComponentTreeHook.getStackAddendumByID(debugID)
+      ReactComponentTreeHook.getStackAddendumByID(debugID),
     );
diff --git a/src/renderers/native/NativeMethodsMixin.js b/src/renderers/native/NativeMethodsMixin.js
index 5bc75fc33..1ad5dc00b 100644
--- a/src/renderers/native/NativeMethodsMixin.js
+++ b/src/renderers/native/NativeMethodsMixin.js
@@ -26,4 +26,4 @@ type MeasureOnSuccessCallback = (
   pageX: number,
-  pageY: number
-) => void
+  pageY: number,
+) => void;
 
@@ -34,3 +34,3 @@ type MeasureInWindowOnSuccessCallback = (
   height: number,
-) => void
+) => void;
 
@@ -40,4 +40,4 @@ type MeasureLayoutOnSuccessCallback = (
   width: number,
-  height: number
-) => void
+  height: number,
+) => void;
 
@@ -47,5 +47,9 @@ function warnForStyleProps(props, validAttributes) {
       console.error(
-        'You are setting the style `{ ' + key + ': ... }` as a prop. You ' +
-        'should nest it in a style object. ' +
-        'E.g. `{ style: { ' + key + ': ... } }`'
+        'You are setting the style `{ ' +
+          key +
+          ': ... }` as a prop. You ' +
+          'should nest it in a style object. ' +
+          'E.g. `{ style: { ' +
+          key +
+          ': ... } }`',
       );
@@ -86,6 +90,3 @@ var NativeMethodsMixin = {
   measure: function(callback: MeasureOnSuccessCallback) {
-    UIManager.measure(
-      findNodeHandle(this),
-      mountSafeCallback(this, callback)
-    );
+    UIManager.measure(findNodeHandle(this), mountSafeCallback(this, callback));
   },
@@ -110,3 +111,3 @@ var NativeMethodsMixin = {
       findNodeHandle(this),
-      mountSafeCallback(this, callback)
+      mountSafeCallback(this, callback),
     );
@@ -125,3 +126,3 @@ var NativeMethodsMixin = {
     onSuccess: MeasureLayoutOnSuccessCallback,
-    onFail: () => void /* currently unused */
+    onFail: () => void /* currently unused */,
   ) {
@@ -131,3 +132,3 @@ var NativeMethodsMixin = {
       mountSafeCallback(this, onFail),
-      mountSafeCallback(this, onSuccess)
+      mountSafeCallback(this, onSuccess),
     );
@@ -148,3 +149,3 @@ var NativeMethodsMixin = {
       nativeProps,
-      this.viewConfig.validAttributes
+      this.viewConfig.validAttributes,
     );
@@ -154,3 +155,3 @@ var NativeMethodsMixin = {
       this.viewConfig.uiViewClassName,
-      updatePayload
+      updatePayload,
     );
@@ -178,6 +179,12 @@ function throwOnStylesProp(component, props) {
     var name = component.constructor.displayName;
-    var msg = '`styles` is not a supported property of `' + name + '`, did ' +
+    var msg =
+      '`styles` is not a supported property of `' +
+      name +
+      '`, did ' +
       'you mean `style` (singular)?';
     if (owner && owner.constructor && owner.constructor.displayName) {
-      msg += '\n\nCheck the `' + owner.constructor.displayName + '` parent ' +
+      msg +=
+        '\n\nCheck the `' +
+        owner.constructor.displayName +
+        '` parent ' +
         ' component.';
@@ -194,4 +201,4 @@ if (__DEV__) {
     !NativeMethodsMixin_DEV.componentWillMount &&
-    !NativeMethodsMixin_DEV.componentWillReceiveProps,
-    'Do not override existing functions.'
+      !NativeMethodsMixin_DEV.componentWillReceiveProps,
+    'Do not override existing functions.',
   );
@@ -211,6 +218,9 @@ function mountSafeCallback(
   context: ReactComponent<any, any, any>,
-  callback: ?Function
+  callback: ?Function,
 ): any {
   return function() {
-    if (!callback || (typeof context.isMounted === 'function' && !context.isMounted())) {
+    if (
+      !callback ||
+      (typeof context.isMounted === 'function' && !context.isMounted())
+    ) {
       return undefined;
diff --git a/src/renderers/native/ReactNative.js b/src/renderers/native/ReactNative.js
index 23648da92..218defb7f 100644
--- a/src/renderers/native/ReactNative.js
+++ b/src/renderers/native/ReactNative.js
@@ -28,3 +28,3 @@ var render = function(
   mountInto: number,
-  callback?: ?(() => void)
+  callback?: ?() => void,
 ): ?ReactComponent<any, any, any> {
@@ -43,3 +43,4 @@ var ReactNative = {
 
-  unmountComponentAtNodeAndRemoveContainer: ReactNativeMount.unmountComponentAtNodeAndRemoveContainer,
+  unmountComponentAtNodeAndRemoveContainer:
+    ReactNativeMount.unmountComponentAtNodeAndRemoveContainer,
 };
@@ -51,3 +52,4 @@ if (
   typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
-  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'
+) {
   __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
diff --git a/src/renderers/native/ReactNativeAttributePayload.js b/src/renderers/native/ReactNativeAttributePayload.js
index 6c6e4f9da..13a0aa52f 100644
--- a/src/renderers/native/ReactNativeAttributePayload.js
+++ b/src/renderers/native/ReactNativeAttributePayload.js
@@ -33,10 +33,11 @@ type AttributePreprocessor = (nextProp: mixed) => mixed;
 type CustomAttributeConfiguration =
-  { diff: AttributeDiffer, process: AttributePreprocessor } |
-  { diff: AttributeDiffer } |
-  { process: AttributePreprocessor };
-
-type AttributeConfiguration =
-  { [key: string]: (
-    CustomAttributeConfiguration | AttributeConfiguration /*| boolean*/
-  ) };
+  | {diff: AttributeDiffer, process: AttributePreprocessor}
+  | {diff: AttributeDiffer}
+  | {process: AttributePreprocessor};
+
+type AttributeConfiguration = {
+  [key: string]:
+    | CustomAttributeConfiguration
+    | AttributeConfiguration /*| boolean*/,
+};
 
@@ -48,3 +49,3 @@ var removedKeyCount = 0;
 
-function defaultDiffer(prevProp: mixed, nextProp: mixed) : boolean {
+function defaultDiffer(prevProp: mixed, nextProp: mixed): boolean {
   if (typeof nextProp !== 'object' || nextProp === null) {
@@ -58,3 +59,3 @@ function defaultDiffer(prevProp: mixed, nextProp: mixed) : boolean {
 
-function resolveObject(idOrObject: number | Object) : Object {
+function resolveObject(idOrObject: number | Object): Object {
   if (typeof idOrObject === 'number') {
@@ -68,3 +69,3 @@ function restoreDeletedValuesInNestedArray(
   node: NestedNode,
-  validAttributes: AttributeConfiguration
+  validAttributes: AttributeConfiguration,
 ) {
@@ -76,3 +77,3 @@ function restoreDeletedValuesInNestedArray(
         node[i],
-        validAttributes
+        validAttributes,
       );
@@ -105,8 +106,10 @@ function restoreDeletedValuesInNestedArray(
         updatePayload[propKey] = nextProp;
-      } else if (typeof attributeConfig.diff === 'function' ||
-                 typeof attributeConfig.process === 'function') {
+      } else if (
+        typeof attributeConfig.diff === 'function' ||
+        typeof attributeConfig.process === 'function'
+      ) {
         // case: CustomAttributeConfiguration
-        var nextValue = typeof attributeConfig.process === 'function' ?
-                        attributeConfig.process(nextProp) :
-                        nextProp;
+        var nextValue = typeof attributeConfig.process === 'function'
+          ? attributeConfig.process(nextProp)
+          : nextProp;
         updatePayload[propKey] = nextValue;
@@ -120,10 +123,10 @@ function restoreDeletedValuesInNestedArray(
 function diffNestedArrayProperty(
-  updatePayload:? Object,
+  updatePayload: ?Object,
   prevArray: Array<NestedNode>,
   nextArray: Array<NestedNode>,
-  validAttributes: AttributeConfiguration
-) : ?Object {
-  var minLength = prevArray.length < nextArray.length ?
-                  prevArray.length :
-                  nextArray.length;
+  validAttributes: AttributeConfiguration,
+): ?Object {
+  var minLength = prevArray.length < nextArray.length
+    ? prevArray.length
+    : nextArray.length;
   var i;
@@ -136,3 +139,3 @@ function diffNestedArrayProperty(
       nextArray[i],
-      validAttributes
+      validAttributes,
     );
@@ -144,3 +147,3 @@ function diffNestedArrayProperty(
       prevArray[i],
-      validAttributes
+      validAttributes,
     );
@@ -152,3 +155,3 @@ function diffNestedArrayProperty(
       nextArray[i],
-      validAttributes
+      validAttributes,
     );
@@ -159,8 +162,7 @@ function diffNestedArrayProperty(
 function diffNestedProperty(
-  updatePayload:? Object,
+  updatePayload: ?Object,
   prevProp: NestedNode,
   nextProp: NestedNode,
-  validAttributes: AttributeConfiguration
-) : ?Object {
-
+  validAttributes: AttributeConfiguration,
+): ?Object {
   if (!updatePayload && prevProp === nextProp) {
@@ -173,14 +175,6 @@ function diffNestedProperty(
     if (nextProp) {
-      return addNestedProperty(
-        updatePayload,
-        nextProp,
-        validAttributes
-      );
+      return addNestedProperty(updatePayload, nextProp, validAttributes);
     }
     if (prevProp) {
-      return clearNestedProperty(
-        updatePayload,
-        prevProp,
-        validAttributes
-      );
+      return clearNestedProperty(updatePayload, prevProp, validAttributes);
     }
@@ -195,3 +189,3 @@ function diffNestedProperty(
       resolveObject(nextProp),
-      validAttributes
+      validAttributes,
     );
@@ -205,3 +199,3 @@ function diffNestedProperty(
       nextProp,
-      validAttributes
+      validAttributes,
     );
@@ -216,3 +210,3 @@ function diffNestedProperty(
       resolveObject(nextProp),
-      validAttributes
+      validAttributes,
     );
@@ -223,5 +217,5 @@ function diffNestedProperty(
     resolveObject(prevProp),
-      // $FlowFixMe - We know that this is always an object when the input is.
+    // $FlowFixMe - We know that this is always an object when the input is.
     flattenStyle(nextProp),
-    validAttributes
+    validAttributes,
   );
@@ -235,5 +229,5 @@ function diffNestedProperty(
 function addNestedProperty(
-  updatePayload:? Object,
+  updatePayload: ?Object,
   nextProp: NestedNode,
-  validAttributes: AttributeConfiguration
+  validAttributes: AttributeConfiguration,
 ) {
@@ -248,3 +242,3 @@ function addNestedProperty(
       resolveObject(nextProp),
-      validAttributes
+      validAttributes,
     );
@@ -257,3 +251,3 @@ function addNestedProperty(
       nextProp[i],
-      validAttributes
+      validAttributes,
     );
@@ -269,6 +263,6 @@ function addNestedProperty(
 function clearNestedProperty(
-  updatePayload:? Object,
+  updatePayload: ?Object,
   prevProp: NestedNode,
-  validAttributes: AttributeConfiguration
-) : ?Object {
+  validAttributes: AttributeConfiguration,
+): ?Object {
   if (!prevProp) {
@@ -282,3 +276,3 @@ function clearNestedProperty(
       resolveObject(prevProp),
-      validAttributes
+      validAttributes,
     );
@@ -291,3 +285,3 @@ function clearNestedProperty(
       prevProp[i],
-      validAttributes
+      validAttributes,
     );
@@ -307,5 +301,5 @@ function diffProperties(
   nextProps: Object,
-  validAttributes: AttributeConfiguration
+  validAttributes: AttributeConfiguration,
 ): ?Object {
-  var attributeConfig : ?(CustomAttributeConfiguration | AttributeConfiguration);
+  var attributeConfig: ?(CustomAttributeConfiguration | AttributeConfiguration);
   var nextProp;
@@ -325,3 +319,3 @@ function diffProperties(
     if (typeof nextProp === 'function') {
-      nextProp = (true : any);
+      nextProp = (true: any);
       // If nextProp is not a function, then don't bother changing prevProp
@@ -329,3 +323,3 @@ function diffProperties(
       if (typeof prevProp === 'function') {
-        prevProp = (true : any);
+        prevProp = (true: any);
       }
@@ -336,5 +330,5 @@ function diffProperties(
     if (typeof nextProp === 'undefined') {
-      nextProp = (null : any);
+      nextProp = (null: any);
       if (typeof prevProp === 'undefined') {
-        prevProp = (null : any);
+        prevProp = (null: any);
       }
@@ -356,8 +350,10 @@ function diffProperties(
         updatePayload[propKey] = nextProp;
-      } else if (typeof attributeConfig.diff === 'function' ||
-                 typeof attributeConfig.process === 'function') {
+      } else if (
+        typeof attributeConfig.diff === 'function' ||
+        typeof attributeConfig.process === 'function'
+      ) {
         // case: CustomAttributeConfiguration
-        var nextValue = typeof attributeConfig.process === 'function' ?
-                        attributeConfig.process(nextProp) :
-                        nextProp;
+        var nextValue = typeof attributeConfig.process === 'function'
+          ? attributeConfig.process(nextProp)
+          : nextProp;
         updatePayload[propKey] = nextValue;
@@ -378,14 +374,16 @@ function diffProperties(
       }
-    } else if (typeof attributeConfig.diff === 'function' ||
-               typeof attributeConfig.process === 'function') {
+    } else if (
+      typeof attributeConfig.diff === 'function' ||
+      typeof attributeConfig.process === 'function'
+    ) {
       // case: CustomAttributeConfiguration
-      var shouldUpdate = prevProp === undefined || (
-        typeof attributeConfig.diff === 'function' ?
-        attributeConfig.diff(prevProp, nextProp) :
-        defaultDiffer(prevProp, nextProp)
-      );
+      var shouldUpdate =
+        prevProp === undefined ||
+        (typeof attributeConfig.diff === 'function'
+          ? attributeConfig.diff(prevProp, nextProp)
+          : defaultDiffer(prevProp, nextProp));
       if (shouldUpdate) {
-        nextValue = typeof attributeConfig.process === 'function' ?
-                    attributeConfig.process(nextProp) :
-                    nextProp;
+        nextValue = typeof attributeConfig.process === 'function'
+          ? attributeConfig.process(nextProp)
+          : nextProp;
         (updatePayload || (updatePayload = {}))[propKey] = nextValue;
@@ -402,3 +400,3 @@ function diffProperties(
         nextProp,
-        ((attributeConfig : any) : AttributeConfiguration)
+        ((attributeConfig: any): AttributeConfiguration),
       );
@@ -408,3 +406,3 @@ function diffProperties(
           nextProp,
-          ((attributeConfig : any) : AttributeConfiguration)
+          ((attributeConfig: any): AttributeConfiguration),
         );
@@ -437,6 +435,7 @@ function diffProperties(
     // Pattern match on: attributeConfig
-    if (typeof attributeConfig !== 'object' ||
-        typeof attributeConfig.diff === 'function' ||
-        typeof attributeConfig.process === 'function') {
-
+    if (
+      typeof attributeConfig !== 'object' ||
+      typeof attributeConfig.diff === 'function' ||
+      typeof attributeConfig.process === 'function'
+    ) {
       // case: CustomAttributeConfiguration | !Object
@@ -458,3 +457,3 @@ function diffProperties(
         prevProp,
-        ((attributeConfig : any) : AttributeConfiguration)
+        ((attributeConfig: any): AttributeConfiguration),
       );
@@ -471,4 +470,4 @@ function addProperties(
   props: Object,
-  validAttributes: AttributeConfiguration
-) : ?Object {
+  validAttributes: AttributeConfiguration,
+): ?Object {
   // TODO: Fast path
@@ -484,4 +483,4 @@ function clearProperties(
   prevProps: Object,
-  validAttributes: AttributeConfiguration
-) :? Object {
+  validAttributes: AttributeConfiguration,
+): ?Object {
   // TODO: Fast path
@@ -491,7 +490,6 @@ function clearProperties(
 var ReactNativeAttributePayload = {
-
   create: function(
     props: Object,
-    validAttributes: AttributeConfiguration
-  ) : ?Object {
+    validAttributes: AttributeConfiguration,
+  ): ?Object {
     return addProperties(
@@ -499,3 +497,3 @@ var ReactNativeAttributePayload = {
       props,
-      validAttributes
+      validAttributes,
     );
@@ -506,4 +504,4 @@ var ReactNativeAttributePayload = {
     nextProps: Object,
-    validAttributes: AttributeConfiguration
-  ) : ?Object {
+    validAttributes: AttributeConfiguration,
+  ): ?Object {
     return diffProperties(
@@ -512,6 +510,5 @@ var ReactNativeAttributePayload = {
       nextProps,
-      validAttributes
+      validAttributes,
     );
   },
-
 };
diff --git a/src/renderers/native/ReactNativeBaseComponent.js b/src/renderers/native/ReactNativeBaseComponent.js
index 06306a753..37de96770 100644
--- a/src/renderers/native/ReactNativeBaseComponent.js
+++ b/src/renderers/native/ReactNativeBaseComponent.js
@@ -31,3 +31,3 @@ type ReactNativeBaseComponentViewConfig = {
   uiViewClassName: string,
-}
+};
 
@@ -42,3 +42,3 @@ type ReactNativeBaseComponentViewConfig = {
 var ReactNativeBaseComponent = function(
-  viewConfig: ReactNativeBaseComponentViewConfig
+  viewConfig: ReactNativeBaseComponentViewConfig,
 ) {
@@ -78,3 +78,2 @@ ReactNativeBaseComponent.Mixin = {
     if (mountImages.length) {
-
       // TODO: Pool these per platform view class. Reusing the `mountImages`
@@ -114,3 +113,3 @@ ReactNativeBaseComponent.Mixin = {
       nextElement.props,
-      this.viewConfig.validAttributes
+      this.viewConfig.validAttributes,
     );
@@ -121,3 +120,3 @@ ReactNativeBaseComponent.Mixin = {
         this.viewConfig.uiViewClassName,
-        updatePayload
+        updatePayload,
       );
@@ -125,6 +124,3 @@ ReactNativeBaseComponent.Mixin = {
 
-    this._reconcileListenersUponUpdate(
-      prevElement.props,
-      nextElement.props
-    );
+    this._reconcileListenersUponUpdate(prevElement.props, nextElement.props);
     this.updateChildren(nextElement.props.children, transaction, context);
@@ -153,3 +149,3 @@ ReactNativeBaseComponent.Mixin = {
     for (var key in nextProps) {
-      if (registrationNames[key] && (nextProps[key] !== prevProps[key])) {
+      if (registrationNames[key] && nextProps[key] !== prevProps[key]) {
         if (nextProps[key]) {
@@ -179,3 +175,8 @@ ReactNativeBaseComponent.Mixin = {
    */
-  mountComponent: function(transaction, hostParent, hostContainerInfo, context) {
+  mountComponent: function(
+    transaction,
+    hostParent,
+    hostContainerInfo,
+    context,
+  ) {
     var tag = ReactNativeTagHandles.allocateTag();
@@ -196,3 +197,3 @@ ReactNativeBaseComponent.Mixin = {
       this._currentElement.props,
-      this.viewConfig.validAttributes
+      this.viewConfig.validAttributes,
     );
@@ -204,3 +205,3 @@ ReactNativeBaseComponent.Mixin = {
       nativeTopRootTag,
-      updatePayload
+      updatePayload,
     );
@@ -214,3 +215,3 @@ ReactNativeBaseComponent.Mixin = {
       transaction,
-      context
+      context,
     );
@@ -228,3 +229,3 @@ Object.assign(
   ReactNativeBaseComponent.Mixin,
-  NativeMethodsMixin
+  NativeMethodsMixin,
 );
diff --git a/src/renderers/native/ReactNativeBridgeEventPlugin.js b/src/renderers/native/ReactNativeBridgeEventPlugin.js
index 1e5f4ee7a..35c2dad39 100644
--- a/src/renderers/native/ReactNativeBridgeEventPlugin.js
+++ b/src/renderers/native/ReactNativeBridgeEventPlugin.js
@@ -25,3 +25,4 @@ var allTypesByEventName = {};
 for (var bubblingTypeName in customBubblingEventTypes) {
-  allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];
+  allTypesByEventName[bubblingTypeName] =
+    customBubblingEventTypes[bubblingTypeName];
 }
@@ -32,3 +33,3 @@ for (var directTypeName in customDirectEventTypes) {
     'Event cannot be both direct and bubbling: %s',
-    directTypeName
+    directTypeName,
   );
@@ -38,4 +39,3 @@ for (var directTypeName in customDirectEventTypes) {
 var ReactNativeBridgeEventPlugin = {
-
-  eventTypes: { ...customBubblingEventTypes, ...customDirectEventTypes },
+  eventTypes: {...customBubblingEventTypes, ...customDirectEventTypes},
 
@@ -48,3 +48,3 @@ var ReactNativeBridgeEventPlugin = {
     nativeEvent: Event,
-    nativeEventTarget: Object
+    nativeEventTarget: Object,
   ): ?Object {
@@ -56,3 +56,3 @@ var ReactNativeBridgeEventPlugin = {
       nativeEvent,
-      nativeEventTarget
+      nativeEventTarget,
     );
diff --git a/src/renderers/native/ReactNativeComponentEnvironment.js b/src/renderers/native/ReactNativeComponentEnvironment.js
index 64e0c9371..041b7bac5 100644
--- a/src/renderers/native/ReactNativeComponentEnvironment.js
+++ b/src/renderers/native/ReactNativeComponentEnvironment.js
@@ -17,6 +17,7 @@ var ReactNativeReconcileTransaction = require('ReactNativeReconcileTransaction')
 var ReactNativeComponentEnvironment = {
+  processChildrenUpdates:
+    ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,
 
-  processChildrenUpdates: ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,
-
-  replaceNodeWithMarkup: ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,
+  replaceNodeWithMarkup:
+    ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,
 
@@ -25,5 +26,3 @@ var ReactNativeComponentEnvironment = {
    */
-  clearNode: function(/*containerView*/) {
-
-  },
+  clearNode: function(/*containerView*/) {},
 
diff --git a/src/renderers/native/ReactNativeDOMIDOperations.js b/src/renderers/native/ReactNativeDOMIDOperations.js
index 4c38f3c57..c008373f6 100644
--- a/src/renderers/native/ReactNativeDOMIDOperations.js
+++ b/src/renderers/native/ReactNativeDOMIDOperations.js
@@ -61,3 +61,3 @@ var dangerouslyProcessChildrenUpdates = function(inst, childrenUpdates) {
     addAtIndices,
-    removeAtIndices
+    removeAtIndices,
   );
diff --git a/src/renderers/native/ReactNativeDefaultInjection.js b/src/renderers/native/ReactNativeDefaultInjection.js
index 4d15ab577..3deef3b0e 100644
--- a/src/renderers/native/ReactNativeDefaultInjection.js
+++ b/src/renderers/native/ReactNativeDefaultInjection.js
@@ -57,3 +57,3 @@ function inject() {
   ResponderEventPlugin.injection.injectGlobalResponderHandler(
-    ReactNativeGlobalResponderHandler
+    ReactNativeGlobalResponderHandler,
   );
@@ -65,4 +65,4 @@ function inject() {
   EventPluginHub.injection.injectEventPluginsByName({
-    'ResponderEventPlugin': ResponderEventPlugin,
-    'ReactNativeBridgeEventPlugin': ReactNativeBridgeEventPlugin,
+    ResponderEventPlugin: ResponderEventPlugin,
+    ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin,
   });
@@ -70,14 +70,12 @@ function inject() {
   ReactUpdates.injection.injectReconcileTransaction(
-    ReactNativeComponentEnvironment.ReactReconcileTransaction
+    ReactNativeComponentEnvironment.ReactReconcileTransaction,
   );
 
-  ReactUpdates.injection.injectBatchingStrategy(
-    ReactDefaultBatchingStrategy
-  );
+  ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
 
   ReactComponentEnvironment.injection.injectEnvironment(
-    ReactNativeComponentEnvironment
+    ReactNativeComponentEnvironment,
   );
 
-  var EmptyComponent = (instantiate) => {
+  var EmptyComponent = instantiate => {
     // Can't import View at the top because it depends on React to make its composite
@@ -87,5 +85,5 @@ function inject() {
         collapsable: true,
-        style: { position: 'absolute' },
+        style: {position: 'absolute'},
       }),
-      instantiate
+      instantiate,
     );
@@ -96,3 +94,3 @@ function inject() {
   ReactHostComponent.injection.injectTextComponentClass(
-    ReactNativeTextComponent
+    ReactNativeTextComponent,
   );
diff --git a/src/renderers/native/ReactNativeEventEmitter.js b/src/renderers/native/ReactNativeEventEmitter.js
index 0c4c3a7da..95011989c 100644
--- a/src/renderers/native/ReactNativeEventEmitter.js
+++ b/src/renderers/native/ReactNativeEventEmitter.js
@@ -58,3 +58,3 @@ var removeTouchesAtIndices = function(
   touches: Array<Object>,
-  indices: Array<number>
+  indices: Array<number>,
 ): Array<Object> {
@@ -90,3 +90,2 @@ var removeTouchesAtIndices = function(
 var ReactNativeEventEmitter = {
-
   ...ReactEventEmitterMixin,
@@ -116,3 +115,3 @@ var ReactNativeEventEmitter = {
     topLevelType: string,
-    nativeEventParam: Object
+    nativeEventParam: Object,
   ) {
@@ -130,3 +129,3 @@ var ReactNativeEventEmitter = {
         nativeEvent,
-        nativeEvent.target
+        nativeEvent.target,
       );
@@ -145,3 +144,3 @@ var ReactNativeEventEmitter = {
     topLevelType: string,
-    nativeEventParam: Object
+    nativeEventParam: Object,
   ) {
@@ -151,3 +150,3 @@ var ReactNativeEventEmitter = {
       topLevelType,
-      nativeEventParam
+      nativeEventParam,
     );
@@ -182,9 +181,8 @@ var ReactNativeEventEmitter = {
     touches: Array<Object>,
-    changedIndices: Array<number>
+    changedIndices: Array<number>,
   ) {
-    var changedTouches =
-      eventTopLevelType === 'topTouchEnd' ||
-      eventTopLevelType === 'topTouchCancel' ?
-      removeTouchesAtIndices(touches, changedIndices) :
-      touchSubsequence(touches, changedIndices);
+    var changedTouches = eventTopLevelType === 'topTouchEnd' ||
+      eventTopLevelType === 'topTouchCancel'
+      ? removeTouchesAtIndices(touches, changedIndices)
+      : touchSubsequence(touches, changedIndices);
 
@@ -204,3 +202,3 @@ var ReactNativeEventEmitter = {
               false,
-              'A view is reporting that a touch occured on tag zero.'
+              'A view is reporting that a touch occured on tag zero.',
             );
@@ -214,3 +212,3 @@ var ReactNativeEventEmitter = {
         eventTopLevelType,
-        nativeEvent
+        nativeEvent,
       );
diff --git a/src/renderers/native/ReactNativeGlobalResponderHandler.js b/src/renderers/native/ReactNativeGlobalResponderHandler.js
index 84bd45fb6..26bf46d87 100644
--- a/src/renderers/native/ReactNativeGlobalResponderHandler.js
+++ b/src/renderers/native/ReactNativeGlobalResponderHandler.js
@@ -17,6 +17,3 @@ var ReactNativeGlobalResponderHandler = {
     if (to !== null) {
-      UIManager.setJSResponder(
-        to._rootNodeID,
-        blockNativeResponder
-      );
+      UIManager.setJSResponder(to._rootNodeID, blockNativeResponder);
     } else {
diff --git a/src/renderers/native/ReactNativeMount.js b/src/renderers/native/ReactNativeMount.js
index 2d508631a..8654fbcec 100644
--- a/src/renderers/native/ReactNativeMount.js
+++ b/src/renderers/native/ReactNativeMount.js
@@ -49,6 +49,3 @@ TopLevelWrapper.isReactTopLevelWrapper = true;
  */
-function mountComponentIntoNode(
-    componentInstance,
-    containerTag,
-    transaction) {
+function mountComponentIntoNode(componentInstance, containerTag, transaction) {
   var markup = ReactReconciler.mountComponent(
@@ -59,3 +56,3 @@ function mountComponentIntoNode(
     emptyObject,
-    0 /* parentDebugID */
+    0 /* parentDebugID */,
   );
@@ -72,5 +69,3 @@ function mountComponentIntoNode(
  */
-function batchedMountComponentIntoNode(
-    componentInstance,
-    containerTag) {
+function batchedMountComponentIntoNode(componentInstance, containerTag) {
   var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
@@ -81,3 +76,3 @@ function batchedMountComponentIntoNode(
     containerTag,
-    transaction
+    transaction,
   );
@@ -103,8 +98,7 @@ var ReactNativeMount = {
     containerTag: number,
-    callback?: ?(() => void)
+    callback?: ?() => void,
   ): ?ReactComponent<any, any, any> {
-    var nextWrappedElement = React.createElement(
-      TopLevelWrapper,
-      { child: nextElement }
-    );
+    var nextWrappedElement = React.createElement(TopLevelWrapper, {
+      child: nextElement,
+    });
 
@@ -116,3 +110,7 @@ var ReactNativeMount = {
       if (shouldUpdateReactComponent(prevElement, nextElement)) {
-        ReactUpdateQueue.enqueueElementInternal(prevComponent, nextWrappedElement, emptyObject);
+        ReactUpdateQueue.enqueueElementInternal(
+          prevComponent,
+          nextWrappedElement,
+          emptyObject,
+        );
         if (callback) {
@@ -143,3 +141,3 @@ var ReactNativeMount = {
       instance,
-      containerTag
+      containerTag,
     );
@@ -156,3 +154,3 @@ var ReactNativeMount = {
    */
-  _mountImageIntoNode: function(mountImage : number, containerID : number) {
+  _mountImageIntoNode: function(mountImage: number, containerID: number) {
     // Since we now know that the `mountImage` has been mounted, we can
@@ -160,6 +158,3 @@ var ReactNativeMount = {
     var childTag = mountImage;
-    UIManager.setChildren(
-      containerID,
-      [childTag]
-    );
+    UIManager.setChildren(containerID, [childTag]);
   },
@@ -174,5 +169,3 @@ var ReactNativeMount = {
    */
-  unmountComponentAtNodeAndRemoveContainer: function(
-    containerTag: number
-  ) {
+  unmountComponentAtNodeAndRemoveContainer: function(containerTag: number) {
     ReactNativeMount.unmountComponentAtNode(containerTag);
@@ -219,3 +212,3 @@ var ReactNativeMount = {
     instance: ReactComponent<any, any, any>,
-    containerID: number
+    containerID: number,
   ) {
@@ -225,3 +218,2 @@ var ReactNativeMount = {
   },
-
 };
diff --git a/src/renderers/native/ReactNativeReconcileTransaction.js b/src/renderers/native/ReactNativeReconcileTransaction.js
index de34a657b..9ee4fc981 100644
--- a/src/renderers/native/ReactNativeReconcileTransaction.js
+++ b/src/renderers/native/ReactNativeReconcileTransaction.js
@@ -126,3 +126,3 @@ Object.assign(
   ReactNativeReconcileTransaction,
-  Mixin
+  Mixin,
 );
diff --git a/src/renderers/native/ReactNativeTagHandles.js b/src/renderers/native/ReactNativeTagHandles.js
index d0c7bb268..6b878dbdb 100644
--- a/src/renderers/native/ReactNativeTagHandles.js
+++ b/src/renderers/native/ReactNativeTagHandles.js
@@ -46,3 +46,4 @@ var ReactNativeTagHandles = {
       this.reactTagIsNativeTopRootID(tag),
-      'Expect a native root tag, instead got %s', tag
+      'Expect a native root tag, instead got %s',
+      tag,
     );
diff --git a/src/renderers/native/ReactNativeTextComponent.js b/src/renderers/native/ReactNativeTextComponent.js
index 8e815f9ef..bc98cabf2 100644
--- a/src/renderers/native/ReactNativeTextComponent.js
+++ b/src/renderers/native/ReactNativeTextComponent.js
@@ -28,4 +28,8 @@ var ReactNativeTextComponent = function(text) {
 Object.assign(ReactNativeTextComponent.prototype, {
-
-  mountComponent: function(transaction, hostParent, hostContainerInfo, context) {
+  mountComponent: function(
+    transaction,
+    hostParent,
+    hostContainerInfo,
+    context,
+  ) {
     // TODO: hostParent should have this context already. Stop abusing context.
@@ -34,3 +38,3 @@ Object.assign(ReactNativeTextComponent.prototype, {
       'RawText "%s" must be wrapped in an explicit <Text> component.',
-      this._stringText
+      this._stringText,
     );
@@ -40,8 +44,5 @@ Object.assign(ReactNativeTextComponent.prototype, {
     var nativeTopRootTag = hostContainerInfo._tag;
-    UIManager.createView(
-      tag,
-      'RCTRawText',
-      nativeTopRootTag,
-      {text: this._stringText}
-    );
+    UIManager.createView(tag, 'RCTRawText', nativeTopRootTag, {
+      text: this._stringText,
+    });
 
@@ -62,7 +63,5 @@ Object.assign(ReactNativeTextComponent.prototype, {
         this._stringText = nextStringText;
-        UIManager.updateView(
-          this._rootNodeID,
-          'RCTRawText',
-          {text: this._stringText}
-        );
+        UIManager.updateView(this._rootNodeID, 'RCTRawText', {
+          text: this._stringText,
+        });
       }
@@ -77,3 +76,2 @@ Object.assign(ReactNativeTextComponent.prototype, {
   },
-
 });
diff --git a/src/renderers/native/ReactNativeTreeTraversal.js b/src/renderers/native/ReactNativeTreeTraversal.js
index 4e98fa895..80c6f5ddf 100644
--- a/src/renderers/native/ReactNativeTreeTraversal.js
+++ b/src/renderers/native/ReactNativeTreeTraversal.js
@@ -83,3 +83,3 @@ function traverseTwoPhase(inst, fn, arg) {
   var i;
-  for (i = path.length; i-- > 0;) {
+  for (i = path.length; i-- > 0; ) {
     fn(path[i], 'captured', arg);
@@ -114,3 +114,3 @@ function traverseEnterLeave(from, to, fn, argFrom, argTo) {
   }
-  for (i = pathTo.length; i-- > 0;) {
+  for (i = pathTo.length; i-- > 0; ) {
     fn(pathTo[i], 'captured', argTo);
diff --git a/src/renderers/native/__mocks__/InitializeJavaScriptAppEngine.js b/src/renderers/native/__mocks__/InitializeJavaScriptAppEngine.js
index bc540c10d..9df419b05 100644
--- a/src/renderers/native/__mocks__/InitializeJavaScriptAppEngine.js
+++ b/src/renderers/native/__mocks__/InitializeJavaScriptAppEngine.js
@@ -14 +14,2 @@
 // TODO #10932517: Move all initialization callers back into react-native
+
diff --git a/src/renderers/native/__mocks__/deepDiffer.js b/src/renderers/native/__mocks__/deepDiffer.js
index 34e4da74a..313565af4 100644
--- a/src/renderers/native/__mocks__/deepDiffer.js
+++ b/src/renderers/native/__mocks__/deepDiffer.js
@@ -18,3 +18,3 @@ var deepDiffer = function(one: any, two: any): boolean {
   }
-  if ((typeof one === 'function') && (typeof two === 'function')) {
+  if (typeof one === 'function' && typeof two === 'function') {
     // We consider all functions equal
@@ -22,3 +22,3 @@ var deepDiffer = function(one: any, two: any): boolean {
   }
-  if ((typeof one !== 'object') || (one === null)) {
+  if (typeof one !== 'object' || one === null) {
     // Primitives can be directly compared
@@ -26,3 +26,3 @@ var deepDiffer = function(one: any, two: any): boolean {
   }
-  if ((typeof two !== 'object') || (two === null)) {
+  if (typeof two !== 'object' || two === null) {
     // We know they are different because the previous case would have triggered
diff --git a/src/renderers/native/__mocks__/deepFreezeAndThrowOnMutationInDev.js b/src/renderers/native/__mocks__/deepFreezeAndThrowOnMutationInDev.js
index ebb81c333..8d8ceb859 100644
--- a/src/renderers/native/__mocks__/deepFreezeAndThrowOnMutationInDev.js
+++ b/src/renderers/native/__mocks__/deepFreezeAndThrowOnMutationInDev.js
@@ -13,3 +13,3 @@
 
-var deepFreezeAndThrowOnMutationInDev = function() { };
+var deepFreezeAndThrowOnMutationInDev = function() {};
 
diff --git a/src/renderers/native/__mocks__/flattenStyle.js b/src/renderers/native/__mocks__/flattenStyle.js
index a766c705f..d9b46a98a 100644
--- a/src/renderers/native/__mocks__/flattenStyle.js
+++ b/src/renderers/native/__mocks__/flattenStyle.js
@@ -13,3 +13,3 @@
 
-var flattenStyle = function() { };
+var flattenStyle = function() {};
 
diff --git a/src/renderers/native/__tests__/ReactNativeAttributePayload-test.js b/src/renderers/native/__tests__/ReactNativeAttributePayload-test.js
index 568764dc0..77c8ae799 100644
--- a/src/renderers/native/__tests__/ReactNativeAttributePayload-test.js
+++ b/src/renderers/native/__tests__/ReactNativeAttributePayload-test.js
@@ -17,9 +17,7 @@ var diff = ReactNativeAttributePayload.diff;
 describe('ReactNativeAttributePayload', () => {
-
   it('should work with simple example', () => {
-    expect(diff(
-      {a: 1, c: 3},
-      {b: 2, c: 3},
-      {a: true, b: true}
-    )).toEqual({a: null, b: 2});
+    expect(diff({a: 1, c: 3}, {b: 2, c: 3}, {a: true, b: true})).toEqual({
+      a: null,
+      b: 2,
+    });
   });
@@ -27,7 +25,9 @@ describe('ReactNativeAttributePayload', () => {
   it('should skip fields that are equal', () => {
-    expect(diff(
-      {a: 1, b: 'two', c: true, d: false, e: undefined, f: 0},
-      {a: 1, b: 'two', c: true, d: false, e: undefined, f: 0},
-      {a: true, b: true, c: true, d: true, e: true, f: true}
-    )).toEqual(null);
+    expect(
+      diff(
+        {a: 1, b: 'two', c: true, d: false, e: undefined, f: 0},
+        {a: 1, b: 'two', c: true, d: false, e: undefined, f: 0},
+        {a: true, b: true, c: true, d: true, e: true, f: true},
+      ),
+    ).toEqual(null);
   });
@@ -35,7 +35,3 @@ describe('ReactNativeAttributePayload', () => {
   it('should remove fields', () => {
-    expect(diff(
-      {a: 1},
-      {},
-      {a: true}
-    )).toEqual({a: null});
+    expect(diff({a: 1}, {}, {a: true})).toEqual({a: null});
   });
@@ -43,7 +39,3 @@ describe('ReactNativeAttributePayload', () => {
   it('should remove fields that are set to undefined', () => {
-    expect(diff(
-      {a: 1},
-      {a: undefined},
-      {a: true}
-    )).toEqual({a: null});
+    expect(diff({a: 1}, {a: undefined}, {a: true})).toEqual({a: null});
   });
@@ -51,7 +43,3 @@ describe('ReactNativeAttributePayload', () => {
   it('should ignore invalid fields', () => {
-    expect(diff(
-      {a: 1},
-      {b: 2},
-      {}
-    )).toEqual(null);
+    expect(diff({a: 1}, {b: 2}, {})).toEqual(null);
   });
@@ -61,7 +49,9 @@ describe('ReactNativeAttributePayload', () => {
     var diffB = jest.fn((a, b) => false);
-    expect(diff(
-      {a: [1], b: [3]},
-      {a: [2], b: [4]},
-      {a: {diff: diffA}, b: {diff: diffB}}
-    )).toEqual({a: [2]});
+    expect(
+      diff(
+        {a: [1], b: [3]},
+        {a: [2], b: [4]},
+        {a: {diff: diffA}, b: {diff: diffB}},
+      ),
+    ).toEqual({a: [2]});
     expect(diffA).toBeCalledWith([1], [2]);
@@ -73,7 +63,5 @@ describe('ReactNativeAttributePayload', () => {
     var diffB = jest.fn();
-    expect(diff(
-      {a: [1]},
-      {b: [2]},
-      {a: {diff: diffA}, b: {diff: diffB}}
-    )).toEqual({a: null, b: [2]});
+    expect(
+      diff({a: [1]}, {b: [2]}, {a: {diff: diffA}, b: {diff: diffB}}),
+    ).toEqual({a: null, b: [2]});
     expect(diffA).not.toBeCalled();
@@ -83,7 +71,9 @@ describe('ReactNativeAttributePayload', () => {
   it('should do deep diffs of Objects by default', () => {
-    expect(diff(
-      {a: [1], b: {k: [3, 4]}, c: {k: [4, 4]} },
-      {a: [2], b: {k: [3, 4]}, c: {k: [4, 5]} },
-      {a: true, b: true, c: true}
-    )).toEqual({a: [2], c: {k: [4, 5]}});
+    expect(
+      diff(
+        {a: [1], b: {k: [3, 4]}, c: {k: [4, 4]}},
+        {a: [2], b: {k: [3, 4]}, c: {k: [4, 5]}},
+        {a: true, b: true, c: true},
+      ),
+    ).toEqual({a: [2], c: {k: [4, 5]}});
   });
@@ -91,17 +81,19 @@ describe('ReactNativeAttributePayload', () => {
   it('should work with undefined styles', () => {
-    expect(diff(
-      { style: { a: '#ffffff', b: 1 } },
-      { style: undefined },
-      { style: { b: true } }
-    )).toEqual({ b: null });
-    expect(diff(
-      { style: undefined },
-      { style: { a: '#ffffff', b: 1 } },
-      { style: { b: true } }
-    )).toEqual({ b: 1 });
-    expect(diff(
-      { style: undefined },
-      { style: undefined },
-      { style: { b: true } }
-    )).toEqual(null);
+    expect(
+      diff(
+        {style: {a: '#ffffff', b: 1}},
+        {style: undefined},
+        {style: {b: true}},
+      ),
+    ).toEqual({b: null});
+    expect(
+      diff(
+        {style: undefined},
+        {style: {a: '#ffffff', b: 1}},
+        {style: {b: true}},
+      ),
+    ).toEqual({b: 1});
+    expect(
+      diff({style: undefined}, {style: undefined}, {style: {b: true}}),
+    ).toEqual(null);
   });
@@ -109,17 +101,5 @@ describe('ReactNativeAttributePayload', () => {
   it('should work with empty styles', () => {
-    expect(diff(
-      {a: 1, c: 3},
-      {},
-      {a: true, b: true}
-    )).toEqual({a: null});
-    expect(diff(
-      {},
-      {a: 1, c: 3},
-      {a: true, b: true}
-    )).toEqual({a: 1});
-    expect(diff(
-      {},
-      {},
-      {a: true, b: true}
-    )).toEqual(null);
+    expect(diff({a: 1, c: 3}, {}, {a: true, b: true})).toEqual({a: null});
+    expect(diff({}, {a: 1, c: 3}, {a: true, b: true})).toEqual({a: 1});
+    expect(diff({}, {}, {a: true, b: true})).toEqual(null);
   });
@@ -127,15 +107,11 @@ describe('ReactNativeAttributePayload', () => {
   it('should flatten nested styles and predefined styles', () => {
-    var validStyleAttribute = { someStyle: { foo: true, bar: true } };
+    var validStyleAttribute = {someStyle: {foo: true, bar: true}};
 
-    expect(diff(
-      {},
-      { someStyle: [{ foo: 1 }, { bar: 2 }]},
-      validStyleAttribute
-    )).toEqual({ foo: 1, bar: 2 });
+    expect(
+      diff({}, {someStyle: [{foo: 1}, {bar: 2}]}, validStyleAttribute),
+    ).toEqual({foo: 1, bar: 2});
 
-    expect(diff(
-      { someStyle: [{ foo: 1 }, { bar: 2 }]},
-      {},
-      validStyleAttribute
-    )).toEqual({ foo: null, bar: null });
+    expect(
+      diff({someStyle: [{foo: 1}, {bar: 2}]}, {}, validStyleAttribute),
+    ).toEqual({foo: null, bar: null});
 
@@ -145,7 +121,9 @@ describe('ReactNativeAttributePayload', () => {
 
-    expect(diff(
-      {},
-      { someStyle: [[{ foo: 1 }, { foo: 2 }], barStyle]},
-      validStyleAttribute
-    )).toEqual({ foo: 2, bar: 3 });
+    expect(
+      diff(
+        {},
+        {someStyle: [[{foo: 1}, {foo: 2}], barStyle]},
+        validStyleAttribute,
+      ),
+    ).toEqual({foo: 2, bar: 3});
   });
@@ -153,9 +131,11 @@ describe('ReactNativeAttributePayload', () => {
   it('should reset a value to a previous if it is removed', () => {
-    var validStyleAttribute = { someStyle: { foo: true, bar: true } };
-
-    expect(diff(
-      { someStyle: [{ foo: 1 }, { foo: 3 }]},
-      { someStyle: [{ foo: 1 }, { bar: 2 }]},
-      validStyleAttribute
-    )).toEqual({ foo: 1, bar: 2 });
+    var validStyleAttribute = {someStyle: {foo: true, bar: true}};
+
+    expect(
+      diff(
+        {someStyle: [{foo: 1}, {foo: 3}]},
+        {someStyle: [{foo: 1}, {bar: 2}]},
+        validStyleAttribute,
+      ),
+    ).toEqual({foo: 1, bar: 2});
   });
@@ -163,15 +143,19 @@ describe('ReactNativeAttributePayload', () => {
   it('should not clear removed props if they are still in another slot', () => {
-    var validStyleAttribute = { someStyle: { foo: true, bar: true } };
-
-    expect(diff(
-      { someStyle: [{}, { foo: 3, bar: 2 }]},
-      { someStyle: [{ foo: 3 }, { bar: 2 }]},
-      validStyleAttribute
-    )).toEqual({ foo: 3 }); // this should ideally be null. heuristic tradeoff.
-
-    expect(diff(
-      { someStyle: [{}, { foo: 3, bar: 2 }]},
-      { someStyle: [{ foo: 1, bar: 1 }, { bar: 2 }]},
-      validStyleAttribute
-    )).toEqual({ bar: 2, foo: 1 });
+    var validStyleAttribute = {someStyle: {foo: true, bar: true}};
+
+    expect(
+      diff(
+        {someStyle: [{}, {foo: 3, bar: 2}]},
+        {someStyle: [{foo: 3}, {bar: 2}]},
+        validStyleAttribute,
+      ),
+    ).toEqual({foo: 3}); // this should ideally be null. heuristic tradeoff.
+
+    expect(
+      diff(
+        {someStyle: [{}, {foo: 3, bar: 2}]},
+        {someStyle: [{foo: 1, bar: 1}, {bar: 2}]},
+        validStyleAttribute,
+      ),
+    ).toEqual({bar: 2, foo: 1});
   });
@@ -179,20 +163,26 @@ describe('ReactNativeAttributePayload', () => {
   it('should clear a prop if a later style is explicit null/undefined', () => {
-    var validStyleAttribute = { someStyle: { foo: true, bar: true } };
-    expect(diff(
-      { someStyle: [{}, { foo: 3, bar: 2 }]},
-      { someStyle: [{ foo: 1 }, { bar: 2, foo: null }]},
-      validStyleAttribute
-    )).toEqual({ foo: null });
-
-    expect(diff(
-      { someStyle: [{ foo: 3 }, { foo: null, bar: 2 }]},
-      { someStyle: [{ foo: null }, { bar: 2 }]},
-      validStyleAttribute
-    )).toEqual({ foo: null });
-
-    expect(diff(
-      { someStyle: [{ foo: 1 }, { foo: null }]},
-      { someStyle: [{ foo: 2 }, { foo: null }]},
-      validStyleAttribute
-    )).toEqual({ foo: null }); // this should ideally be null. heuristic.
+    var validStyleAttribute = {someStyle: {foo: true, bar: true}};
+    expect(
+      diff(
+        {someStyle: [{}, {foo: 3, bar: 2}]},
+        {someStyle: [{foo: 1}, {bar: 2, foo: null}]},
+        validStyleAttribute,
+      ),
+    ).toEqual({foo: null});
+
+    expect(
+      diff(
+        {someStyle: [{foo: 3}, {foo: null, bar: 2}]},
+        {someStyle: [{foo: null}, {bar: 2}]},
+        validStyleAttribute,
+      ),
+    ).toEqual({foo: null});
+
+    expect(
+      diff(
+        {someStyle: [{foo: 1}, {foo: null}]},
+        {someStyle: [{foo: 2}, {foo: null}]},
+        validStyleAttribute,
+      ),
+    ).toEqual({foo: null}); // this should ideally be null. heuristic.
 
@@ -200,14 +190,18 @@ describe('ReactNativeAttributePayload', () => {
     // work in this case.
-    var fooObj = { foo: 3 };
-    expect(diff(
-      { someStyle: [{ foo: 1 }, fooObj]},
-      { someStyle: [{ foo: 2 }, fooObj]},
-      validStyleAttribute
-    )).toEqual({ foo: 3 }); // this should ideally be null. heuristic.
-
-    expect(diff(
-      { someStyle: [{ foo: 1 }, { foo: 3 }]},
-      { someStyle: [{ foo: 2 }, { foo: undefined }]},
-      validStyleAttribute
-    )).toEqual({ foo: null }); // this should ideally be null. heuristic.
+    var fooObj = {foo: 3};
+    expect(
+      diff(
+        {someStyle: [{foo: 1}, fooObj]},
+        {someStyle: [{foo: 2}, fooObj]},
+        validStyleAttribute,
+      ),
+    ).toEqual({foo: 3}); // this should ideally be null. heuristic.
+
+    expect(
+      diff(
+        {someStyle: [{foo: 1}, {foo: 3}]},
+        {someStyle: [{foo: 2}, {foo: undefined}]},
+        validStyleAttribute,
+      ),
+    ).toEqual({foo: null}); // this should ideally be null. heuristic.
   });
@@ -218,24 +212,25 @@ describe('ReactNativeAttributePayload', () => {
     // need to send an update.
-    expect(diff(
-      {
-        a: function() {
-          return 1;
+    expect(
+      diff(
+        {
+          a: function() {
+            return 1;
+          },
+          b: function() {
+            return 2;
+          },
+          c: 3,
         },
-        b: function() {
-          return 2;
+        {
+          b: function() {
+            return 9;
+          },
+          c: function() {
+            return 3;
+          },
         },
-        c: 3,
-      },
-      {
-        b: function() {
-          return 9;
-        },
-        c: function() {
-          return 3;
-        },
-      },
-      {a: true, b: true, c: true}
-    )).toEqual({a: null, c: true});
+        {a: true, b: true, c: true},
+      ),
+    ).toEqual({a: null, c: true});
   });
-
 });
diff --git a/src/renderers/native/__tests__/ReactNativeEvents-test.js b/src/renderers/native/__tests__/ReactNativeEvents-test.js
index 8110dcff2..40543e92f 100644
--- a/src/renderers/native/__tests__/ReactNativeEvents-test.js
+++ b/src/renderers/native/__tests__/ReactNativeEvents-test.js
@@ -40,3 +40,3 @@ it('handles events', () => {
   var View = createReactNativeComponentClass({
-    validAttributes: { foo: true },
+    validAttributes: {foo: true},
     uiViewClassName: 'View',
@@ -44,3 +44,2 @@ it('handles events', () => {
 
-
   var log = [];
@@ -61,3 +60,3 @@ it('handles events', () => {
     </View>,
-    1
+    1,
   );
@@ -70,3 +69,3 @@ it('handles events', () => {
     [{target: innerTag, identifier: 17}],
-    [0]
+    [0],
   );
@@ -75,3 +74,3 @@ it('handles events', () => {
     [{target: innerTag, identifier: 17}],
-    [0]
+    [0],
   );
diff --git a/src/renderers/native/__tests__/ReactNativeMount-test.js b/src/renderers/native/__tests__/ReactNativeMount-test.js
index aa433e45e..bf479384a 100644
--- a/src/renderers/native/__tests__/ReactNativeMount-test.js
+++ b/src/renderers/native/__tests__/ReactNativeMount-test.js
@@ -28,3 +28,3 @@ describe('ReactNative', () => {
     var View = createReactNativeComponentClass({
-      validAttributes: { foo: true },
+      validAttributes: {foo: true},
       uiViewClassName: 'View',
@@ -41,3 +41,3 @@ describe('ReactNative', () => {
     var View = createReactNativeComponentClass({
-      validAttributes: { foo: true },
+      validAttributes: {foo: true},
       uiViewClassName: 'View',
@@ -57,5 +57,4 @@ describe('ReactNative', () => {
     expect(UIManager.manageChildren).not.toBeCalled();
-    expect(UIManager.updateView).toBeCalledWith(3, 'View', { foo: 'bar' });
+    expect(UIManager.updateView).toBeCalledWith(3, 'View', {foo: 'bar'});
   });
-
 });
diff --git a/src/renderers/native/createReactNativeComponentClass.js b/src/renderers/native/createReactNativeComponentClass.js
index e5f113bf0..4d4e0d03f 100644
--- a/src/renderers/native/createReactNativeComponentClass.js
+++ b/src/renderers/native/createReactNativeComponentClass.js
@@ -21,3 +21,3 @@ type ReactNativeBaseComponentViewConfig = {
   propTypes?: Object,
-}
+};
 
@@ -28,3 +28,3 @@ type ReactNativeBaseComponentViewConfig = {
 var createReactNativeComponentClass = function(
-  viewConfig: ReactNativeBaseComponentViewConfig
+  viewConfig: ReactNativeBaseComponentViewConfig,
 ): ReactClass<any> {
diff --git a/src/renderers/native/findNodeHandle.js b/src/renderers/native/findNodeHandle.js
index 0c30a344e..3226c2e93 100644
--- a/src/renderers/native/findNodeHandle.js
+++ b/src/renderers/native/findNodeHandle.js
@@ -57,7 +57,7 @@ function findNodeHandle(componentOrHandle: any): ?number {
         '%s is accessing findNodeHandle inside its render(). ' +
-        'render() should be a pure function of props and state. It should ' +
-        'never access something that requires stale data from the previous ' +
-        'render, such as refs. Move this logic to componentDidMount and ' +
-        'componentDidUpdate instead.',
-        owner.getName() || 'A component'
+          'render() should be a pure function of props and state. It should ' +
+          'never access something that requires stale data from the previous ' +
+          'render, such as refs. Move this logic to componentDidMount and ' +
+          'componentDidUpdate instead.',
+        owner.getName() || 'A component',
       );
@@ -87,15 +87,10 @@ function findNodeHandle(componentOrHandle: any): ?number {
       invariant(
-        (
-          // Native
-          typeof component === 'object' &&
-          '_rootNodeID' in component
-        ) || (
+        // Native
+        (typeof component === 'object' && '_rootNodeID' in component) ||
           // Composite
-          component.render != null &&
-          typeof component.render === 'function'
-        ),
+          (component.render != null && typeof component.render === 'function'),
         'findNodeHandle(...): Argument is not a component ' +
-        '(type: %s, keys: %s)',
+          '(type: %s, keys: %s)',
         typeof component,
-        Object.keys(component)
+        Object.keys(component),
       );
@@ -104,3 +99,3 @@ function findNodeHandle(componentOrHandle: any): ?number {
         'findNodeHandle(...): Unable to find node handle for unmounted ' +
-        'component.'
+          'component.',
       );
diff --git a/src/renderers/noop/ReactNoop.js b/src/renderers/noop/ReactNoop.js
index ff316945e..3f420e9f0 100644
--- a/src/renderers/noop/ReactNoop.js
+++ b/src/renderers/noop/ReactNoop.js
@@ -21,10 +21,8 @@
 
-import type { Fiber } from 'ReactFiber';
-import type { UpdateQueue } from 'ReactFiberUpdateQueue';
-import type { HostChildren } from 'ReactFiberReconciler';
+import type {Fiber} from 'ReactFiber';
+import type {UpdateQueue} from 'ReactFiberUpdateQueue';
+import type {HostChildren} from 'ReactFiberReconciler';
 
 var ReactFiberReconciler = require('ReactFiberReconciler');
-var {
-  AnimationPriority,
-} = require('ReactPriorityLevel');
+var {AnimationPriority} = require('ReactPriorityLevel');
 
@@ -35,5 +33,11 @@ const TERMINAL_TAG = 99;
 
-type Container = { rootID: number, children: Array<Instance> };
-type Props = { prop: any };
-type Instance = { tag: 99, type: string, id: number, children: Array<Instance>, prop: any };
+type Container = {rootID: number, children: Array<Instance>};
+type Props = {prop: any};
+type Instance = {
+  tag: 99,
+  type: string,
+  id: number,
+  children: Array<Instance>,
+  prop: any,
+};
 
@@ -41,3 +45,6 @@ var instanceCounter = 0;
 
-function recursivelyAppendChildren(flatArray : Array<Instance>, child : HostChildren<Instance>) {
+function recursivelyAppendChildren(
+  flatArray: Array<Instance>,
+  child: HostChildren<Instance>,
+) {
   if (!child) {
@@ -51,3 +58,3 @@ function recursivelyAppendChildren(flatArray : Array<Instance>, child : HostChil
       recursivelyAppendChildren(flatArray, node.output);
-    } while (node = node.sibling);
+    } while ((node = node.sibling));
   }
@@ -55,3 +62,3 @@ function recursivelyAppendChildren(flatArray : Array<Instance>, child : HostChil
 
-function flattenChildren(children : HostChildren<Instance>) {
+function flattenChildren(children: HostChildren<Instance>) {
   const flatArray = [];
@@ -62,4 +69,6 @@ function flattenChildren(children : HostChildren<Instance>) {
 var NoopRenderer = ReactFiberReconciler({
-
-  updateContainer(containerInfo : Container, children : HostChildren<Instance>) : void {
+  updateContainer(
+    containerInfo: Container,
+    children: HostChildren<Instance>,
+  ): void {
     containerInfo.children = flattenChildren(children);
@@ -67,3 +76,7 @@ var NoopRenderer = ReactFiberReconciler({
 
-  createInstance(type : string, props : Props, children : HostChildren<Instance>) : Instance {
+  createInstance(
+    type: string,
+    props: Props,
+    children: HostChildren<Instance>,
+  ): Instance {
     const inst = {
@@ -76,4 +89,4 @@ var NoopRenderer = ReactFiberReconciler({
     // Hide from unit tests
-    Object.defineProperty(inst, 'tag', { value: inst.tag, enumerable: false });
-    Object.defineProperty(inst, 'id', { value: inst.id, enumerable: false });
+    Object.defineProperty(inst, 'tag', {value: inst.tag, enumerable: false});
+    Object.defineProperty(inst, 'id', {value: inst.id, enumerable: false});
     return inst;
@@ -81,3 +94,8 @@ var NoopRenderer = ReactFiberReconciler({
 
-  prepareUpdate(instance : Instance, oldProps : Props, newProps : Props, children : HostChildren<Instance>) : boolean {
+  prepareUpdate(
+    instance: Instance,
+    oldProps: Props,
+    newProps: Props,
+    children: HostChildren<Instance>,
+  ): boolean {
     return true;
@@ -85,3 +103,8 @@ var NoopRenderer = ReactFiberReconciler({
 
-  commitUpdate(instance : Instance, oldProps : Props, newProps : Props, children : HostChildren<Instance>) : void {
+  commitUpdate(
+    instance: Instance,
+    oldProps: Props,
+    newProps: Props,
+    children: HostChildren<Instance>,
+  ): void {
     instance.children = flattenChildren(children);
@@ -90,4 +113,3 @@ var NoopRenderer = ReactFiberReconciler({
 
-  deleteInstance(instance : Instance) : void {
-  },
+  deleteInstance(instance: Instance): void {},
 
@@ -100,6 +122,5 @@ var NoopRenderer = ReactFiberReconciler({
   },
-
 });
 
-var rootContainer = { rootID: 0, children: [] };
+var rootContainer = {rootID: 0, children: []};
 
@@ -108,6 +129,5 @@ var root = null;
 var ReactNoop = {
-
   root: rootContainer,
 
-  render(element : ReactElement<any>) {
+  render(element: ReactElement<any>) {
     if (!root) {
@@ -128,3 +148,3 @@ var ReactNoop = {
 
-  flushDeferredPri(timeout : number = Infinity) {
+  flushDeferredPri(timeout: number = Infinity) {
     var cb = scheduledDeferredCallback;
@@ -175,3 +195,3 @@ var ReactNoop = {
     }
-    function logContainer(container : Container, depth) {
+    function logContainer(container: Container, depth) {
       log('  '.repeat(depth) + '- [root#' + container.rootID + ']');
@@ -180,3 +200,3 @@ var ReactNoop = {
 
-    function logUpdateQueue(updateQueue : UpdateQueue, depth) {
+    function logUpdateQueue(updateQueue: UpdateQueue, depth) {
       log(
@@ -184,3 +204,3 @@ var ReactNoop = {
         updateQueue.isReplace ? 'is replace' : '',
-        updateQueue.isForced ? 'is forced' : ''
+        updateQueue.isForced ? 'is forced' : '',
       );
@@ -189,6 +209,6 @@ var ReactNoop = {
         updateQueue.partialState,
-        updateQueue.callback ? 'with callback' : ''
+        updateQueue.callback ? 'with callback' : '',
       );
       var next;
-      while (next = updateQueue.next) {
+      while ((next = updateQueue.next)) {
         log(
@@ -196,3 +216,3 @@ var ReactNoop = {
           next.partialState,
-          next.callback ? 'with callback' : ''
+          next.callback ? 'with callback' : '',
         );
@@ -201,6 +221,8 @@ var ReactNoop = {
 
-    function logFiber(fiber : Fiber, depth) {
+    function logFiber(fiber: Fiber, depth) {
       log(
-        '  '.repeat(depth) + '- ' + (fiber.type ? fiber.type.name || fiber.type : '[root]'),
-        '[' + fiber.pendingWorkPriority + (fiber.pendingProps ? '*' : '') + ']'
+        '  '.repeat(depth) +
+          '- ' +
+          (fiber.type ? fiber.type.name || fiber.type : '[root]'),
+        '[' + fiber.pendingWorkPriority + (fiber.pendingProps ? '*' : '') + ']',
       );
@@ -211,3 +233,5 @@ var ReactNoop = {
       if (childInProgress && childInProgress !== fiber.child) {
-        log('  '.repeat(depth + 1) + 'IN PROGRESS: ' + fiber.progressedPriority);
+        log(
+          '  '.repeat(depth + 1) + 'IN PROGRESS: ' + fiber.progressedPriority,
+        );
         logFiber(childInProgress, depth + 1);
@@ -230,3 +254,3 @@ var ReactNoop = {
     log('FIBERS:');
-    logFiber((root.stateNode : any).current, 0);
+    logFiber((root.stateNode: any).current, 0);
 
@@ -234,3 +258,2 @@ var ReactNoop = {
   },
-
 };
diff --git a/src/renderers/shared/ReactDebugTool.js b/src/renderers/shared/ReactDebugTool.js
index f7edbfbc7..a83432a1a 100644
--- a/src/renderers/shared/ReactDebugTool.js
+++ b/src/renderers/shared/ReactDebugTool.js
@@ -22,5 +22,5 @@ var warning = require('warning');
 
-import type { ReactElement } from 'ReactElementType';
-import type { DebugID } from 'ReactInstanceType';
-import type { Operation } from 'ReactHostOperationHistoryHook';
+import type {ReactElement} from 'ReactElementType';
+import type {DebugID} from 'ReactInstanceType';
+import type {Operation} from 'ReactHostOperationHistoryHook';
 
@@ -29,11 +29,11 @@ type Hook = any;
 type TimerType =
-  'ctor' |
-  'render' |
-  'componentWillMount' |
-  'componentWillUnmount' |
-  'componentWillReceiveProps' |
-  'shouldComponentUpdate' |
-  'componentWillUpdate' |
-  'componentDidUpdate' |
-  'componentDidMount';
+  | 'ctor'
+  | 'render'
+  | 'componentWillMount'
+  | 'componentWillUnmount'
+  | 'componentWillReceiveProps'
+  | 'shouldComponentUpdate'
+  | 'componentWillUpdate'
+  | 'componentDidUpdate'
+  | 'componentDidMount';
 
@@ -53,3 +53,3 @@ type TreeSnapshot = {
     parentID: DebugID,
-  }
+  },
 };
@@ -76,3 +76,3 @@ function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
       event,
-      e + '\n' + e.stack
+      e + '\n' + e.stack,
     );
@@ -120,5 +120,6 @@ function getTreeSnapshot(registeredIDs) {
       // Text nodes don't have owners but this is close enough.
-      ownerID: ownerID ||
-        parentID && ReactComponentTreeHook.getOwnerID(parentID) ||
-        0,
+      ownerID:
+        ownerID ||
+          (parentID && ReactComponentTreeHook.getOwnerID(parentID)) ||
+          0,
       parentID,
@@ -173,7 +174,7 @@ function beginLifeCycleTimer(debugID, timerType) {
       'There is an internal error in the React performance measurement code. ' +
-      'Did not expect %s timer to start while %s timer is still in ' +
-      'progress for %s instance.',
+        'Did not expect %s timer to start while %s timer is still in ' +
+        'progress for %s instance.',
       timerType,
       currentTimerType || 'no',
-      (debugID === currentTimerDebugID) ? 'the same' : 'another'
+      debugID === currentTimerDebugID ? 'the same' : 'another',
     );
@@ -195,7 +196,7 @@ function endLifeCycleTimer(debugID, timerType) {
       'There is an internal error in the React performance measurement code. ' +
-      'We did not expect %s timer to stop while %s timer is still in ' +
-      'progress for %s instance. Please report this as a bug in React.',
+        'We did not expect %s timer to stop while %s timer is still in ' +
+        'progress for %s instance. Please report this as a bug in React.',
       timerType,
       currentTimerType || 'no',
-      (debugID === currentTimerDebugID) ? 'the same' : 'another'
+      debugID === currentTimerDebugID ? 'the same' : 'another',
     );
@@ -207,3 +208,6 @@ function endLifeCycleTimer(debugID, timerType) {
       instanceID: debugID,
-      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration,
+      duration:
+        performanceNow() -
+          currentTimerStartTime -
+          currentTimerNestedFlushDuration,
     });
@@ -231,3 +235,8 @@ function pauseCurrentLifeCycleTimer() {
 function resumeCurrentLifeCycleTimer() {
-  var {startTime, nestedFlushStartTime, debugID, timerType} = lifeCycleTimerStack.pop();
+  var {
+    startTime,
+    nestedFlushStartTime,
+    debugID,
+    timerType,
+  } = lifeCycleTimerStack.pop();
   var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
@@ -293,3 +302,5 @@ function markEnd(debugID, markType) {
   performance.clearMarks(markName);
-  performance.clearMeasures(measurementName);
+  if (measurementName) {
+    performance.clearMeasures(measurementName);
+  }
 }
@@ -375,3 +386,7 @@ var ReactDebugTool = {
   },
-  onBeforeMountComponent(debugID: DebugID, element: ReactElement, parentDebugID: DebugID): void {
+  onBeforeMountComponent(
+    debugID: DebugID,
+    element: ReactElement,
+    parentDebugID: DebugID,
+  ): void {
     checkDebugID(debugID);
@@ -418,3 +433,3 @@ ReactDebugTool.addHook(ReactComponentTreeHook);
 var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
-if ((/[?&]react_perf\b/).test(url)) {
+if (/[?&]react_perf\b/.test(url)) {
   ReactDebugTool.beginProfiling();
diff --git a/src/renderers/shared/ReactPerf.js b/src/renderers/shared/ReactPerf.js
index 0f3886f69..17abb5809 100644
--- a/src/renderers/shared/ReactPerf.js
+++ b/src/renderers/shared/ReactPerf.js
@@ -15,6 +15,6 @@
 var ReactDebugTool = require('ReactDebugTool');
-var warning = require('warning');
+var lowPriorityWarning = require('lowPriorityWarning');
 var alreadyWarned = false;
 
-import type { FlushHistory } from 'ReactDebugTool';
+import type {FlushHistory} from 'ReactDebugTool';
 
@@ -39,3 +39,3 @@ function warnInProduction() {
       'ReactPerf is not supported in the production builds of React. ' +
-      'To collect measurements, please use the development build of React instead.'
+        'To collect measurements, please use the development build of React instead.',
     );
@@ -62,3 +62,8 @@ function getExclusive(flushHistory = getLastMeasurements()) {
 
-  function updateAggregatedStats(treeSnapshot, instanceID, timerType, applyUpdate) {
+  function updateAggregatedStats(
+    treeSnapshot,
+    instanceID,
+    timerType,
+    applyUpdate,
+  ) {
     var {displayName} = treeSnapshot[instanceID];
@@ -103,5 +108,3 @@ function getExclusive(flushHistory = getLastMeasurements()) {
     }))
-    .sort((a, b) =>
-      b.totalDuration - a.totalDuration
-    );
+    .sort((a, b) => b.totalDuration - a.totalDuration);
 }
@@ -176,5 +179,3 @@ function getInclusive(flushHistory = getLastMeasurements()) {
     }))
-    .sort((a, b) =>
-      b.inclusiveRenderDuration - a.inclusiveRenderDuration
-    );
+    .sort((a, b) => b.inclusiveRenderDuration - a.inclusiveRenderDuration);
 }
@@ -242,3 +243,3 @@ function getWasted(flushHistory = getLastMeasurements()) {
       // mounted, its render() is not considered wasted.
-      var { updateCount } = treeSnapshot[instanceID];
+      var {updateCount} = treeSnapshot[instanceID];
       if (isDefinitelyNotWastedByID[instanceID] || updateCount === 0) {
@@ -274,5 +275,3 @@ function getWasted(flushHistory = getLastMeasurements()) {
     }))
-    .sort((a, b) =>
-      b.inclusiveRenderDuration - a.inclusiveRenderDuration
-    );
+    .sort((a, b) => b.inclusiveRenderDuration - a.inclusiveRenderDuration);
 }
@@ -319,3 +318,3 @@ function printExclusive(flushHistory?: FlushHistory) {
     return {
-      'Component': key,
+      Component: key,
       'Total time (ms)': roundFloat(totalDuration),
@@ -323,5 +322,5 @@ function printExclusive(flushHistory?: FlushHistory) {
       'Total render time (ms)': roundFloat(renderDuration),
-      'Average render time (ms)': renderCount ?
-        roundFloat(renderDuration / renderCount) :
-        undefined,
+      'Average render time (ms)': renderCount
+        ? roundFloat(renderDuration / renderCount)
+        : undefined,
       'Render count': renderCount,
@@ -380,6 +379,6 @@ function printOperations(flushHistory?: FlushHistory) {
     'Owner > Node': stat.key,
-    'Operation': stat.type,
-    'Payload': typeof stat.payload === 'object' ?
-      JSON.stringify(stat.payload) :
-      stat.payload,
+    Operation: stat.type,
+    Payload: typeof stat.payload === 'object'
+      ? JSON.stringify(stat.payload)
+      : stat.payload,
     'Flush index': stat.flushIndex,
@@ -393,6 +392,6 @@ var warnedAboutPrintDOM = false;
 function printDOM(measurements: FlushHistory) {
-  warning(
+  lowPriorityWarning(
     warnedAboutPrintDOM,
     '`ReactPerf.printDOM(...)` is deprecated. Use ' +
-    '`ReactPerf.printOperations(...)` instead.'
+      '`ReactPerf.printOperations(...)` instead.',
   );
@@ -404,6 +403,6 @@ var warnedAboutGetMeasurementsSummaryMap = false;
 function getMeasurementsSummaryMap(measurements: FlushHistory) {
-  warning(
+  lowPriorityWarning(
     warnedAboutGetMeasurementsSummaryMap,
     '`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use ' +
-    '`ReactPerf.getWasted(...)` instead.'
+      '`ReactPerf.getWasted(...)` instead.',
   );
diff --git a/src/renderers/shared/__tests__/ReactDebugTool-test.js b/src/renderers/shared/__tests__/ReactDebugTool-test.js
index 6f849c62f..ab702ce34 100644
--- a/src/renderers/shared/__tests__/ReactDebugTool-test.js
+++ b/src/renderers/shared/__tests__/ReactDebugTool-test.js
@@ -67,4 +67,3 @@ describe('ReactDebugTool', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Exception thrown by hook while handling ' +
-      'onTestEvent: Error: Hi.'
+      'Exception thrown by hook while handling ' + 'onTestEvent: Error: Hi.',
     );
diff --git a/src/renderers/shared/__tests__/ReactPerf-test.js b/src/renderers/shared/__tests__/ReactPerf-test.js
index 25ffd77d7..3c5f3d58e 100644
--- a/src/renderers/shared/__tests__/ReactPerf-test.js
+++ b/src/renderers/shared/__tests__/ReactPerf-test.js
@@ -101,13 +101,16 @@ describe('ReactPerf', () => {
     var summary = ReactPerf.getWasted(measurements);
-    expect(summary).toEqual([{
-      key: 'App',
-      instanceCount: 1,
-      inclusiveRenderDuration: 3,
-      renderCount: 1,
-    }, {
-      key: 'App > Box',
-      instanceCount: 2,
-      inclusiveRenderDuration: 2,
-      renderCount: 2,
-    }]);
+    expect(summary).toEqual([
+      {
+        key: 'App',
+        instanceCount: 1,
+        inclusiveRenderDuration: 3,
+        renderCount: 1,
+      },
+      {
+        key: 'App > Box',
+        instanceCount: 2,
+        inclusiveRenderDuration: 2,
+        renderCount: 2,
+      },
+    ]);
   });
@@ -125,8 +128,10 @@ describe('ReactPerf', () => {
     var summary = ReactPerf.getWasted(measurements);
-    expect(summary).toEqual([{
-      key: 'App > Box',
-      instanceCount: 1,
-      inclusiveRenderDuration: 1,
-      renderCount: 1,
-    }]);
+    expect(summary).toEqual([
+      {
+        key: 'App > Box',
+        instanceCount: 1,
+        inclusiveRenderDuration: 1,
+        renderCount: 1,
+      },
+    ]);
   });
@@ -205,3 +210,3 @@ describe('ReactPerf', () => {
       <Div dangerouslySetInnerHTML={{__html: 'me'}} />,
-      container
+      container,
     );
@@ -210,3 +215,3 @@ describe('ReactPerf', () => {
         <Div dangerouslySetInnerHTML={{__html: 'you'}} />,
-        container
+        container,
       );
@@ -263,9 +268,11 @@ describe('ReactPerf', () => {
     });
-    expect(ReactPerf.getExclusive(measurements)).toEqual([{
-      key: 'Div',
-      instanceCount: 3,
-      counts: { ctor: 3, render: 4 },
-      durations: { ctor: 3, render: 4 },
-      totalDuration: 7,
-    }]);
+    expect(ReactPerf.getExclusive(measurements)).toEqual([
+      {
+        key: 'Div',
+        instanceCount: 3,
+        counts: {ctor: 3, render: 4},
+        durations: {ctor: 3, render: 4},
+        totalDuration: 7,
+      },
+    ]);
   });
@@ -280,29 +287,31 @@ describe('ReactPerf', () => {
     });
-    expect(ReactPerf.getExclusive(measurements)).toEqual([{
-      key: 'LifeCycle',
-      instanceCount: 1,
-      totalDuration: 14,
-      counts: {
-        ctor: 1,
-        shouldComponentUpdate: 2,
-        componentWillMount: 1,
-        componentDidMount: 1,
-        componentWillReceiveProps: 1,
-        componentWillUpdate: 2,
-        componentDidUpdate: 2,
-        componentWillUnmount: 1,
-        render: 3,
-      },
-      durations: {
-        ctor: 1,
-        shouldComponentUpdate: 2,
-        componentWillMount: 1,
-        componentDidMount: 1,
-        componentWillReceiveProps: 1,
-        componentWillUpdate: 2,
-        componentDidUpdate: 2,
-        componentWillUnmount: 1,
-        render: 3,
+    expect(ReactPerf.getExclusive(measurements)).toEqual([
+      {
+        key: 'LifeCycle',
+        instanceCount: 1,
+        totalDuration: 14,
+        counts: {
+          ctor: 1,
+          shouldComponentUpdate: 2,
+          componentWillMount: 1,
+          componentDidMount: 1,
+          componentWillReceiveProps: 1,
+          componentWillUpdate: 2,
+          componentDidUpdate: 2,
+          componentWillUnmount: 1,
+          render: 3,
+        },
+        durations: {
+          ctor: 1,
+          shouldComponentUpdate: 2,
+          componentWillMount: 1,
+          componentDidMount: 1,
+          componentWillReceiveProps: 1,
+          componentWillUpdate: 2,
+          componentDidUpdate: 2,
+          componentWillUnmount: 1,
+          render: 3,
+        },
       },
-    }]);
+    ]);
   });
@@ -318,13 +327,15 @@ describe('ReactPerf', () => {
     });
-    expect(ReactPerf.getExclusive(measurements)).toEqual([{
-      key: 'Foo',
-      instanceCount: 1,
-      totalDuration: 1,
-      counts: {
-        render: 1,
+    expect(ReactPerf.getExclusive(measurements)).toEqual([
+      {
+        key: 'Foo',
+        instanceCount: 1,
+        totalDuration: 1,
+        counts: {
+          render: 1,
+        },
+        durations: {
+          render: 1,
+        },
       },
-      durations: {
-        render: 1,
-      },
-    }]);
+    ]);
   });
@@ -351,36 +362,39 @@ describe('ReactPerf', () => {
 
-    expect(ReactPerf.getExclusive(measurements)).toEqual([{
-      key: 'Portal',
-      instanceCount: 1,
-      totalDuration: 6,
-      counts: {
-        ctor: 1,
-        componentDidMount: 1,
-        render: 1,
-      },
-      durations: {
-        ctor: 1,
-        // We want to exclude nested imperative ReactDOM.render() from lifecycle hook's own time.
-        // Otherwise it would artificially float to the top even though its exclusive time is small.
-        // This is how we get 4 as a number with the performanceNow() mock:
-        // - we capture the time we enter componentDidMount (n = 0)
-        // - we capture the time when we enter a nested flush (n = 1)
-        // - in the nested flush, we call it twice: before and after <Foo /> rendering. (n = 3)
-        // - we capture the time when we exit a nested flush (n = 4)
-        // - we capture the time we exit componentDidMount (n = 5)
-        // Time spent in componentDidMount = (5 - 0 - (4 - 3)) = 4.
-        componentDidMount: 4,
-        render: 1,
+    expect(ReactPerf.getExclusive(measurements)).toEqual([
+      {
+        key: 'Portal',
+        instanceCount: 1,
+        totalDuration: 6,
+        counts: {
+          ctor: 1,
+          componentDidMount: 1,
+          render: 1,
+        },
+        durations: {
+          ctor: 1,
+          // We want to exclude nested imperative ReactDOM.render() from lifecycle hook's own time.
+          // Otherwise it would artificially float to the top even though its exclusive time is small.
+          // This is how we get 4 as a number with the performanceNow() mock:
+          // - we capture the time we enter componentDidMount (n = 0)
+          // - we capture the time when we enter a nested flush (n = 1)
+          // - in the nested flush, we call it twice: before and after <Foo /> rendering. (n = 3)
+          // - we capture the time when we exit a nested flush (n = 4)
+          // - we capture the time we exit componentDidMount (n = 5)
+          // Time spent in componentDidMount = (5 - 0 - (4 - 3)) = 4.
+          componentDidMount: 4,
+          render: 1,
+        },
       },
-    }, {
-      key: 'Foo',
-      instanceCount: 1,
-      totalDuration: 1,
-      counts: {
-        render: 1,
+      {
+        key: 'Foo',
+        instanceCount: 1,
+        totalDuration: 1,
+        counts: {
+          render: 1,
+        },
+        durations: {
+          render: 1,
+        },
       },
-      durations: {
-        render: 1,
-      },
-    }]);
+    ]);
   });
@@ -389,8 +403,8 @@ describe('ReactPerf', () => {
     var measurements = measure(() => {});
-    spyOn(console, 'error');
+    spyOn(console, 'warn');
     ReactPerf.getMeasurementsSummaryMap(measurements);
-    expect(console.error.calls.count()).toBe(1);
-    expect(console.error.calls.argsFor(0)[0]).toContain(
+    expect(console.warn.calls.count()).toBe(1);
+    expect(console.warn.calls.argsFor(0)[0]).toContain(
       '`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use ' +
-      '`ReactPerf.getWasted(...)` instead.'
+        '`ReactPerf.getWasted(...)` instead.',
     );
@@ -398,3 +412,3 @@ describe('ReactPerf', () => {
     ReactPerf.getMeasurementsSummaryMap(measurements);
-    expect(console.error.calls.count()).toBe(1);
+    expect(console.warn.calls.count()).toBe(1);
   });
@@ -403,8 +417,8 @@ describe('ReactPerf', () => {
     var measurements = measure(() => {});
-    spyOn(console, 'error');
+    spyOn(console, 'warn');
     ReactPerf.printDOM(measurements);
-    expect(console.error.calls.count()).toBe(1);
-    expect(console.error.calls.argsFor(0)[0]).toContain(
+    expect(console.warn.calls.count()).toBe(1);
+    expect(console.warn.calls.argsFor(0)[0]).toContain(
       '`ReactPerf.printDOM(...)` is deprecated. Use ' +
-      '`ReactPerf.printOperations(...)` instead.'
+        '`ReactPerf.printOperations(...)` instead.',
     );
@@ -412,3 +426,3 @@ describe('ReactPerf', () => {
     ReactPerf.printDOM(measurements);
-    expect(console.error.calls.count()).toBe(1);
+    expect(console.warn.calls.count()).toBe(1);
   });
@@ -501,18 +515,22 @@ describe('ReactPerf', () => {
     ReactDOM.render(<Measurer><App /></Measurer>, container);
-    expect(ReactPerf.getWasted()).toEqual([{
-      key: 'Measurer',
-      instanceCount: 1,
-      inclusiveRenderDuration: 4,
-      renderCount: 1,
-    }, {
-      key: 'App',
-      instanceCount: 1,
-      inclusiveRenderDuration: 3,
-      renderCount: 1,
-    }, {
-      key: 'App > Box',
-      instanceCount: 2,
-      inclusiveRenderDuration: 2,
-      renderCount: 2,
-    }]);
+    expect(ReactPerf.getWasted()).toEqual([
+      {
+        key: 'Measurer',
+        instanceCount: 1,
+        inclusiveRenderDuration: 4,
+        renderCount: 1,
+      },
+      {
+        key: 'App',
+        instanceCount: 1,
+        inclusiveRenderDuration: 3,
+        renderCount: 1,
+      },
+      {
+        key: 'App > Box',
+        instanceCount: 2,
+        inclusiveRenderDuration: 2,
+        renderCount: 2,
+      },
+    ]);
   });
@@ -536,3 +554,3 @@ describe('ReactPerf', () => {
         </div>,
-        container
+        container,
       );
@@ -566,3 +584,3 @@ describe('ReactPerf', () => {
         </div>,
-        container
+        container,
       );
@@ -596,3 +614,3 @@ describe('ReactPerf', () => {
         </div>,
-        container
+        container,
       );
@@ -632,3 +650,3 @@ describe('ReactPerf', () => {
         </div>,
-        container
+        container,
       );
@@ -672,3 +690,3 @@ describe('ReactPerf', () => {
         </div>,
-        container
+        container,
       );
@@ -712,3 +730,3 @@ describe('ReactPerf', () => {
         </div>,
-        container
+        container,
       );
diff --git a/src/renderers/shared/fiber/ReactChildFiber.js b/src/renderers/shared/fiber/ReactChildFiber.js
index 93839caed..31d186022 100644
--- a/src/renderers/shared/fiber/ReactChildFiber.js
+++ b/src/renderers/shared/fiber/ReactChildFiber.js
@@ -14,13 +14,10 @@
 
-import type { ReactCoroutine, ReactYield } from 'ReactCoroutine';
-import type { Fiber } from 'ReactFiber';
-import type { PriorityLevel } from 'ReactPriorityLevel';
+import type {ReactCoroutine, ReactYield} from 'ReactCoroutine';
+import type {Fiber} from 'ReactFiber';
+import type {PriorityLevel} from 'ReactPriorityLevel';
 
-import type { ReactNodeList } from 'ReactTypes';
+import type {ReactNodeList} from 'ReactTypes';
 
 var REACT_ELEMENT_TYPE = require('ReactElementSymbol');
-var {
-  REACT_COROUTINE_TYPE,
-  REACT_YIELD_TYPE,
-} = require('ReactCoroutine');
+var {REACT_COROUTINE_TYPE, REACT_YIELD_TYPE} = require('ReactCoroutine');
 
@@ -36,5 +33,3 @@ const {
 
-const {
-  createReifiedYield,
-} = ReactReifiedYield;
+const {createReifiedYield} = ReactReifiedYield;
 
@@ -43,10 +38,9 @@ const isArray = Array.isArray;
 function ChildReconciler(shouldClone) {
-
   function createSubsequentChild(
-    returnFiber : Fiber,
-    existingChild : ?Fiber,
-    previousSibling : Fiber,
+    returnFiber: Fiber,
+    existingChild: ?Fiber,
+    previousSibling: Fiber,
     newChildren,
-    priority : PriorityLevel
-  ) : Fiber {
+    priority: PriorityLevel,
+  ): Fiber {
     if (typeof newChildren !== 'object' || newChildren === null) {
@@ -57,9 +51,13 @@ function ChildReconciler(shouldClone) {
       case REACT_ELEMENT_TYPE: {
-        const element = (newChildren : ReactElement<any>);
-        if (existingChild &&
-            element.type === existingChild.type &&
-            element.key === existingChild.key) {
+        const element = (newChildren: ReactElement<any>);
+        if (
+          existingChild &&
+          element.type === existingChild.type &&
+          element.key === existingChild.key
+        ) {
           // TODO: This is not sufficient since previous siblings could be new.
           // Will fix reconciliation properly later.
-          const clone = shouldClone ? cloneFiber(existingChild, priority) : existingChild;
+          const clone = shouldClone
+            ? cloneFiber(existingChild, priority)
+            : existingChild;
           if (!shouldClone) {
@@ -81,3 +79,3 @@ function ChildReconciler(shouldClone) {
       case REACT_COROUTINE_TYPE: {
-        const coroutine = (newChildren : ReactCoroutine);
+        const coroutine = (newChildren: ReactCoroutine);
         const child = createFiberFromCoroutine(coroutine, priority);
@@ -89,3 +87,3 @@ function ChildReconciler(shouldClone) {
       case REACT_YIELD_TYPE: {
-        const yieldNode = (newChildren : ReactYield);
+        const yieldNode = (newChildren: ReactYield);
         const reifiedYield = createReifiedYield(yieldNode);
@@ -100,7 +98,13 @@ function ChildReconciler(shouldClone) {
     if (isArray(newChildren)) {
-      let prev : Fiber = previousSibling;
-      let existing : ?Fiber = existingChild;
+      let prev: Fiber = previousSibling;
+      let existing: ?Fiber = existingChild;
       for (var i = 0; i < newChildren.length; i++) {
         var nextExisting = existing && existing.sibling;
-        prev = createSubsequentChild(returnFiber, existing, prev, newChildren[i], priority);
+        prev = createSubsequentChild(
+          returnFiber,
+          existing,
+          prev,
+          newChildren[i],
+          priority,
+        );
         if (prev && existing) {
@@ -129,8 +133,12 @@ function ChildReconciler(shouldClone) {
          */
-        const element = (newChildren : ReactElement<any>);
-        if (existingChild &&
-            element.type === existingChild.type &&
-            element.key === existingChild.key) {
+        const element = (newChildren: ReactElement<any>);
+        if (
+          existingChild &&
+          element.type === existingChild.type &&
+          element.key === existingChild.key
+        ) {
           // Get the clone of the existing fiber.
-          const clone = shouldClone ? cloneFiber(existingChild, priority) : existingChild;
+          const clone = shouldClone
+            ? cloneFiber(existingChild, priority)
+            : existingChild;
           if (!shouldClone) {
@@ -152,3 +160,3 @@ function ChildReconciler(shouldClone) {
          */
-        const coroutine = (newChildren : ReactCoroutine);
+        const coroutine = (newChildren: ReactCoroutine);
         const child = createFiberFromCoroutine(coroutine, priority);
@@ -165,3 +173,3 @@ function ChildReconciler(shouldClone) {
          */
-        const yieldNode = (newChildren : ReactYield);
+        const yieldNode = (newChildren: ReactYield);
         const reifiedYield = createReifiedYield(yieldNode);
@@ -175,5 +183,5 @@ function ChildReconciler(shouldClone) {
     if (isArray(newChildren)) {
-      var first : ?Fiber = null;
-      var prev : ?Fiber = null;
-      var existing : ?Fiber = existingChild;
+      var first: ?Fiber = null;
+      var prev: ?Fiber = null;
+      var existing: ?Fiber = existingChild;
       /* $FlowIssue(>=0.31.0) #12747709
@@ -186,6 +194,17 @@ function ChildReconciler(shouldClone) {
         if (prev == null) {
-          prev = createFirstChild(returnFiber, existing, newChildren[i], priority);
+          prev = createFirstChild(
+            returnFiber,
+            existing,
+            newChildren[i],
+            priority,
+          );
           first = prev;
         } else {
-          prev = createSubsequentChild(returnFiber, existing, prev, newChildren[i], priority);
+          prev = createSubsequentChild(
+            returnFiber,
+            existing,
+            prev,
+            newChildren[i],
+            priority,
+          );
         }
@@ -207,8 +226,13 @@ function ChildReconciler(shouldClone) {
   function reconcileChildFibers(
-    returnFiber : Fiber,
-    currentFirstChild : ?Fiber,
-    newChildren : ReactNodeList,
-    priority : PriorityLevel
-  ) : ?Fiber {
-    return createFirstChild(returnFiber, currentFirstChild, newChildren, priority);
+    returnFiber: Fiber,
+    currentFirstChild: ?Fiber,
+    newChildren: ReactNodeList,
+    priority: PriorityLevel,
+  ): ?Fiber {
+    return createFirstChild(
+      returnFiber,
+      currentFirstChild,
+      newChildren,
+      priority,
+    );
   }
@@ -222,4 +246,7 @@ exports.reconcileChildFibersInPlace = ChildReconciler(false);
 
-
-function cloneSiblings(current : Fiber, workInProgress : Fiber, returnFiber : Fiber) {
+function cloneSiblings(
+  current: Fiber,
+  workInProgress: Fiber,
+  returnFiber: Fiber,
+) {
   workInProgress.return = returnFiber;
@@ -229,3 +256,3 @@ function cloneSiblings(current : Fiber, workInProgress : Fiber, returnFiber : Fi
       current,
-      current.pendingWorkPriority
+      current.pendingWorkPriority,
     );
@@ -236,3 +263,3 @@ function cloneSiblings(current : Fiber, workInProgress : Fiber, returnFiber : Fi
 
-exports.cloneChildFibers = function(current : ?Fiber, workInProgress : Fiber) {
+exports.cloneChildFibers = function(current: ?Fiber, workInProgress: Fiber) {
   if (!workInProgress.child) {
diff --git a/src/renderers/shared/fiber/ReactFiber.js b/src/renderers/shared/fiber/ReactFiber.js
index f7c103edc..6bd8c0e9a 100644
--- a/src/renderers/shared/fiber/ReactFiber.js
+++ b/src/renderers/shared/fiber/ReactFiber.js
@@ -14,6 +14,6 @@
 
-import type { ReactCoroutine, ReactYield } from 'ReactCoroutine';
-import type { TypeOfWork } from 'ReactTypeOfWork';
-import type { PriorityLevel } from 'ReactPriorityLevel';
-import type { UpdateQueue } from 'ReactFiberUpdateQueue';
+import type {ReactCoroutine, ReactYield} from 'ReactCoroutine';
+import type {TypeOfWork} from 'ReactTypeOfWork';
+import type {PriorityLevel} from 'ReactPriorityLevel';
+import type {UpdateQueue} from 'ReactFiberUpdateQueue';
 
@@ -29,5 +29,3 @@ var {
 
-var {
-  NoWork,
-} = require('ReactPriorityLevel');
+var {NoWork} = require('ReactPriorityLevel');
 
@@ -38,3 +36,2 @@ var {
 type Instance = {
-
   // Tag identifying the type of fiber.
@@ -54,3 +51,2 @@ type Instance = {
   // return fiber since we've merged the fiber and instance.
-
 };
@@ -60,3 +56,2 @@ type Instance = {
 export type Fiber = Instance & {
-
   // The Fiber to return to after finishing processing this one.
@@ -73,3 +68,3 @@ export type Fiber = Instance & {
   // I'll avoid adding an owner field for prod and model that as functions.
-  ref: null | (handle : ?Object) => void,
+  ref: null | ((handle: ?Object) => void),
 
@@ -120,3 +115,2 @@ export type Fiber = Instance & {
   // to be the same as work in progress.
-
 };
@@ -136,5 +130,4 @@ export type Fiber = Instance & {
 //    compatible.
-var createFiber = function(tag : TypeOfWork, key : null | string) : Fiber {
+var createFiber = function(tag: TypeOfWork, key: null | string): Fiber {
   return {
-
     // Instance
@@ -174,3 +167,2 @@ var createFiber = function(tag : TypeOfWork, key : null | string) : Fiber {
     alternate: null,
-
   };
@@ -184,3 +176,6 @@ function shouldConstruct(Component) {
 // TODO: Rename to createWorkInProgressFiber or something like that.
-exports.cloneFiber = function(fiber : Fiber, priorityLevel : PriorityLevel) : Fiber {
+exports.cloneFiber = function(
+  fiber: Fiber,
+  priorityLevel: PriorityLevel,
+): Fiber {
   // We clone to get a work in progress. That means that this fiber is the
@@ -239,4 +234,7 @@ exports.createHostContainerFiber = function() {
 
-exports.createFiberFromElement = function(element : ReactElement<*>, priorityLevel : PriorityLevel) {
-// $FlowFixMe: ReactElement.key is currently defined as ?string but should be defined as null | string in Flow.
+exports.createFiberFromElement = function(
+  element: ReactElement<*>,
+  priorityLevel: PriorityLevel,
+) {
+  // $FlowFixMe: ReactElement.key is currently defined as ?string but should be defined as null | string in Flow.
   const fiber = createFiberFromElementType(element.type, element.key);
@@ -247,8 +245,8 @@ exports.createFiberFromElement = function(element : ReactElement<*>, priorityLev
 
-function createFiberFromElementType(type : mixed, key : null | string) {
+function createFiberFromElementType(type: mixed, key: null | string) {
   let fiber;
   if (typeof type === 'function') {
-    fiber = shouldConstruct(type) ?
-      createFiber(ClassComponent, key) :
-      createFiber(IndeterminateComponent, key);
+    fiber = shouldConstruct(type)
+      ? createFiber(ClassComponent, key)
+      : createFiber(IndeterminateComponent, key);
     fiber.type = type;
@@ -259,3 +257,3 @@ function createFiberFromElementType(type : mixed, key : null | string) {
     // Currently assumed to be a continuation and therefore is a fiber already.
-    fiber = ((type : any) : Fiber);
+    fiber = ((type: any): Fiber);
   } else {
@@ -268,3 +266,6 @@ exports.createFiberFromElementType = createFiberFromElementType;
 
-exports.createFiberFromCoroutine = function(coroutine : ReactCoroutine, priorityLevel : PriorityLevel) {
+exports.createFiberFromCoroutine = function(
+  coroutine: ReactCoroutine,
+  priorityLevel: PriorityLevel,
+) {
   const fiber = createFiber(CoroutineComponent, coroutine.key);
@@ -276,3 +277,6 @@ exports.createFiberFromCoroutine = function(coroutine : ReactCoroutine, priority
 
-exports.createFiberFromYield = function(yieldNode : ReactYield, priorityLevel : PriorityLevel) {
+exports.createFiberFromYield = function(
+  yieldNode: ReactYield,
+  priorityLevel: PriorityLevel,
+) {
   const fiber = createFiber(YieldComponent, yieldNode.key);
diff --git a/src/renderers/shared/fiber/ReactFiberBeginWork.js b/src/renderers/shared/fiber/ReactFiberBeginWork.js
index b2d3f3ab4..107c3fce7 100644
--- a/src/renderers/shared/fiber/ReactFiberBeginWork.js
+++ b/src/renderers/shared/fiber/ReactFiberBeginWork.js
@@ -14,9 +14,9 @@
 
-import type { ReactCoroutine } from 'ReactCoroutine';
-import type { Fiber } from 'ReactFiber';
-import type { FiberRoot } from 'ReactFiberRoot';
-import type { HostConfig } from 'ReactFiberReconciler';
-import type { Scheduler } from 'ReactFiberScheduler';
-import type { PriorityLevel } from 'ReactPriorityLevel';
-import type { UpdateQueue } from 'ReactFiberUpdateQueue';
+import type {ReactCoroutine} from 'ReactCoroutine';
+import type {Fiber} from 'ReactFiber';
+import type {FiberRoot} from 'ReactFiberRoot';
+import type {HostConfig} from 'ReactFiberReconciler';
+import type {Scheduler} from 'ReactFiberScheduler';
+import type {PriorityLevel} from 'ReactPriorityLevel';
+import type {UpdateQueue} from 'ReactFiberUpdateQueue';
 
@@ -27,3 +27,3 @@ var {
 } = require('ReactChildFiber');
-var { LowPriority } = require('ReactPriorityLevel');
+var {LowPriority} = require('ReactPriorityLevel');
 var ReactTypeOfWork = require('ReactTypeOfWork');
@@ -39,6 +39,3 @@ var {
 } = ReactTypeOfWork;
-var {
-  NoWork,
-  OffscreenPriority,
-} = require('ReactPriorityLevel');
+var {NoWork, OffscreenPriority} = require('ReactPriorityLevel');
 var {
@@ -51,4 +48,6 @@ var ReactInstanceMap = require('ReactInstanceMap');
 
-module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getScheduler : () => Scheduler) {
-
+module.exports = function<T, P, I, C>(
+  config: HostConfig<T, P, I, C>,
+  getScheduler: () => Scheduler,
+) {
   function markChildAsProgressed(current, workInProgress, priorityLevel) {
@@ -67,6 +66,16 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
     const priorityLevel = workInProgress.pendingWorkPriority;
-    reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel);
+    reconcileChildrenAtPriority(
+      current,
+      workInProgress,
+      nextChildren,
+      priorityLevel,
+    );
   }
 
-  function reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel) {
+  function reconcileChildrenAtPriority(
+    current,
+    workInProgress,
+    nextChildren,
+    priorityLevel,
+  ) {
     // At this point any memoization is no longer valid since we'll have changed
@@ -82,3 +91,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
         nextChildren,
-        priorityLevel
+        priorityLevel,
       );
@@ -93,3 +102,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
         nextChildren,
-        priorityLevel
+        priorityLevel,
       );
@@ -118,4 +127,8 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
 
-  function scheduleUpdate(fiber: Fiber, updateQueue: UpdateQueue, priorityLevel : PriorityLevel): void {
-    const { scheduleDeferredWork } = getScheduler();
+  function scheduleUpdate(
+    fiber: Fiber,
+    updateQueue: UpdateQueue,
+    priorityLevel: PriorityLevel,
+  ): void {
+    const {scheduleDeferredWork} = getScheduler();
     fiber.updateQueue = updateQueue;
@@ -127,4 +140,6 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
     while (true) {
-      if (fiber.pendingWorkPriority === NoWork ||
-          fiber.pendingWorkPriority >= priorityLevel) {
+      if (
+        fiber.pendingWorkPriority === NoWork ||
+        fiber.pendingWorkPriority >= priorityLevel
+      ) {
         fiber.pendingWorkPriority = priorityLevel;
@@ -132,4 +147,6 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
       if (fiber.alternate) {
-        if (fiber.alternate.pendingWorkPriority === NoWork ||
-            fiber.alternate.pendingWorkPriority >= priorityLevel) {
+        if (
+          fiber.alternate.pendingWorkPriority === NoWork ||
+          fiber.alternate.pendingWorkPriority >= priorityLevel
+        ) {
           fiber.alternate.pendingWorkPriority = priorityLevel;
@@ -139,3 +156,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
       if (fiber.stateNode && fiber.stateNode.containerInfo) {
-        const root : FiberRoot = (fiber.stateNode : any);
+        const root: FiberRoot = (fiber.stateNode: any);
         scheduleDeferredWork(root, priorityLevel);
@@ -154,5 +171,5 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
       const fiber = ReactInstanceMap.get(instance);
-      const updateQueue = fiber.updateQueue ?
-        addToQueue(fiber.updateQueue, partialState) :
-        createUpdateQueue(partialState);
+      const updateQueue = fiber.updateQueue
+        ? addToQueue(fiber.updateQueue, partialState)
+        : createUpdateQueue(partialState);
       scheduleUpdate(fiber, updateQueue, LowPriority);
@@ -173,5 +190,5 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
       const fiber = ReactInstanceMap.get(instance);
-      let updateQueue = fiber.updateQueue ?
-        fiber.updateQueue :
-        createUpdateQueue(null);
+      let updateQueue = fiber.updateQueue
+        ? fiber.updateQueue
+        : createUpdateQueue(null);
       addCallbackToQueue(updateQueue, callback);
@@ -184,3 +201,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
 
-  function updateClassComponent(current : ?Fiber, workInProgress : Fiber) {
+  function updateClassComponent(current: ?Fiber, workInProgress: Fiber) {
     // A class component update is the result of either new props or new state.
@@ -195,5 +212,5 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
     var previousState = current ? current.memoizedState : null;
-    var state = updateQueue ?
-      mergeUpdateQueue(updateQueue, previousState, props) :
-      previousState;
+    var state = updateQueue
+      ? mergeUpdateQueue(updateQueue, previousState, props)
+      : previousState;
 
@@ -212,4 +229,6 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
       instance.updater = updater;
-    } else if (typeof instance.shouldComponentUpdate === 'function' &&
-               !(updateQueue && updateQueue.isForced)) {
+    } else if (
+      typeof instance.shouldComponentUpdate === 'function' &&
+      !(updateQueue && updateQueue.isForced)
+    ) {
       if (workInProgress.memoizedProps !== null) {
@@ -236,4 +255,6 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
     const nextChildren = workInProgress.pendingProps.children;
-    if (workInProgress.pendingProps.hidden &&
-        workInProgress.pendingWorkPriority !== OffscreenPriority) {
+    if (
+      workInProgress.pendingProps.hidden &&
+      workInProgress.pendingWorkPriority !== OffscreenPriority
+    ) {
       // If this host component is hidden, we can bail out on the children.
@@ -253,3 +274,8 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
       // Reconcile the children and stash them for later work.
-      reconcileChildrenAtPriority(current, workInProgress, nextChildren, OffscreenPriority);
+      reconcileChildrenAtPriority(
+        current,
+        workInProgress,
+        nextChildren,
+        OffscreenPriority,
+      );
       workInProgress.child = current ? current.child : null;
@@ -267,3 +293,7 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
     var value = fn(props);
-    if (typeof value === 'object' && value && typeof value.render === 'function') {
+    if (
+      typeof value === 'object' &&
+      value &&
+      typeof value.render === 'function'
+    ) {
       // Proceed under the assumption that this is a class instance
@@ -286,3 +316,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
   function updateCoroutineComponent(current, workInProgress) {
-    var coroutine = (workInProgress.pendingProps : ?ReactCoroutine);
+    var coroutine = (workInProgress.pendingProps: ?ReactCoroutine);
     if (!coroutine) {
@@ -312,3 +342,6 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
 
-  function bailoutOnAlreadyFinishedWork(current, workInProgress : Fiber) : ?Fiber {
+  function bailoutOnAlreadyFinishedWork(
+    current,
+    workInProgress: Fiber,
+  ): ?Fiber {
     const priorityLevel = workInProgress.pendingWorkPriority;
@@ -343,5 +376,11 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
 
-  function beginWork(current : ?Fiber, workInProgress : Fiber, priorityLevel : PriorityLevel) : ?Fiber {
-    if (workInProgress.pendingWorkPriority === NoWork ||
-        workInProgress.pendingWorkPriority > priorityLevel) {
+  function beginWork(
+    current: ?Fiber,
+    workInProgress: Fiber,
+    priorityLevel: PriorityLevel,
+  ): ?Fiber {
+    if (
+      workInProgress.pendingWorkPriority === NoWork ||
+      workInProgress.pendingWorkPriority > priorityLevel
+    ) {
       return bailoutOnLowPriority(current, workInProgress);
@@ -355,7 +394,8 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
 
-    if ((workInProgress.pendingProps === null || (
-      workInProgress.memoizedProps !== null &&
-      workInProgress.pendingProps === workInProgress.memoizedProps
-      )) &&
-      workInProgress.updateQueue === null) {
+    if (
+      (workInProgress.pendingProps === null ||
+        (workInProgress.memoizedProps !== null &&
+          workInProgress.pendingProps === workInProgress.memoizedProps)) &&
+      workInProgress.updateQueue === null
+    ) {
       return bailoutOnAlreadyFinishedWork(current, workInProgress);
@@ -378,3 +418,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
             workInProgress.child,
-            priorityLevel
+            priorityLevel,
           );
@@ -383,3 +423,6 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
       case HostComponent:
-        if (workInProgress.stateNode && typeof config.beginUpdate === 'function') {
+        if (
+          workInProgress.stateNode &&
+          typeof config.beginUpdate === 'function'
+        ) {
           config.beginUpdate(workInProgress.stateNode);
@@ -390,3 +433,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
         workInProgress.tag = CoroutineComponent;
-        // Intentionally fall through since this is now the same.
+      // Intentionally fall through since this is now the same.
       case CoroutineComponent:
@@ -399,3 +442,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
             workInProgress.child,
-            priorityLevel
+            priorityLevel,
           );
@@ -410,3 +453,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
             workInProgress.sibling,
-            priorityLevel
+            priorityLevel,
           );
@@ -422,3 +465,2 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getSchedu
   };
-
 };
diff --git a/src/renderers/shared/fiber/ReactFiberCommitWork.js b/src/renderers/shared/fiber/ReactFiberCommitWork.js
index beb773a2e..f1de612a4 100644
--- a/src/renderers/shared/fiber/ReactFiberCommitWork.js
+++ b/src/renderers/shared/fiber/ReactFiberCommitWork.js
@@ -14,16 +14,11 @@
 
-import type { Fiber } from 'ReactFiber';
-import type { FiberRoot } from 'ReactFiberRoot';
-import type { HostConfig } from 'ReactFiberReconciler';
+import type {Fiber} from 'ReactFiber';
+import type {FiberRoot} from 'ReactFiberRoot';
+import type {HostConfig} from 'ReactFiberReconciler';
 
 var ReactTypeOfWork = require('ReactTypeOfWork');
-var {
-  ClassComponent,
-  HostContainer,
-  HostComponent,
-} = ReactTypeOfWork;
-var { callCallbacks } = require('ReactFiberUpdateQueue');
-
-module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
+var {ClassComponent, HostContainer, HostComponent} = ReactTypeOfWork;
+var {callCallbacks} = require('ReactFiberUpdateQueue');
 
+module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
   const updateContainer = config.updateContainer;
@@ -31,3 +26,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function commitWork(current : ?Fiber, finishedWork : Fiber) : void {
+  function commitWork(current: ?Fiber, finishedWork: Fiber): void {
     switch (finishedWork.tag) {
@@ -42,3 +37,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
         if (finishedWork.callbackList) {
-          const { callbackList } = finishedWork;
+          const {callbackList} = finishedWork;
           finishedWork.callbackList = null;
@@ -52,4 +47,4 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
         const children = finishedWork.output;
-        const root : FiberRoot = finishedWork.stateNode;
-        const containerInfo : C = root.containerInfo;
+        const root: FiberRoot = finishedWork.stateNode;
+        const containerInfo: C = root.containerInfo;
         updateContainer(containerInfo, children);
@@ -63,6 +58,8 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
         const child = finishedWork.child;
-        const children = (child && !child.sibling) ? (child.output : ?Fiber | I) : child;
+        const children = child && !child.sibling
+          ? (child.output: ?Fiber | I)
+          : child;
         const newProps = finishedWork.memoizedProps;
         const oldProps = current.memoizedProps;
-        const instance : I = finishedWork.stateNode;
+        const instance: I = finishedWork.stateNode;
         commitUpdate(instance, oldProps, newProps, children);
@@ -78,3 +75,2 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
   };
-
 };
diff --git a/src/renderers/shared/fiber/ReactFiberCompleteWork.js b/src/renderers/shared/fiber/ReactFiberCompleteWork.js
index d4687f457..572736e79 100644
--- a/src/renderers/shared/fiber/ReactFiberCompleteWork.js
+++ b/src/renderers/shared/fiber/ReactFiberCompleteWork.js
@@ -14,8 +14,8 @@
 
-import type { ReactCoroutine } from 'ReactCoroutine';
-import type { Fiber } from 'ReactFiber';
-import type { HostConfig } from 'ReactFiberReconciler';
-import type { ReifiedYield } from 'ReactReifiedYield';
+import type {ReactCoroutine} from 'ReactCoroutine';
+import type {Fiber} from 'ReactFiber';
+import type {HostConfig} from 'ReactFiberReconciler';
+import type {ReifiedYield} from 'ReactReifiedYield';
 
-var { reconcileChildFibers } = require('ReactChildFiber');
+var {reconcileChildFibers} = require('ReactChildFiber');
 var ReactTypeOfWork = require('ReactTypeOfWork');
@@ -32,4 +32,3 @@ var {
 
-module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
-
+module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
   const createInstance = config.createInstance;
@@ -37,3 +36,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function markForPreEffect(workInProgress : Fiber) {
+  function markForPreEffect(workInProgress: Fiber) {
     // Schedule a side-effect on this fiber, BEFORE the children's side-effects.
@@ -51,3 +50,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
   // of a sibling reads, then the next sibling updates and reads etc.
-  function markForPostEffect(workInProgress : Fiber) {
+  function markForPostEffect(workInProgress: Fiber) {
     // Schedule a side-effect on this fiber, AFTER the children's side-effects.
@@ -61,3 +60,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function transferOutput(child : ?Fiber, returnFiber : Fiber) {
+  function transferOutput(child: ?Fiber, returnFiber: Fiber) {
     // If we have a single result, we just pass that through as the output to
@@ -65,3 +64,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
     // the linked list of fibers that has the individual output values.
-    returnFiber.output = (child && !child.sibling) ? child.output : child;
+    returnFiber.output = child && !child.sibling ? child.output : child;
     returnFiber.memoizedProps = returnFiber.pendingProps;
@@ -69,9 +68,10 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function recursivelyFillYields(yields, output : ?Fiber | ?ReifiedYield) {
+  function recursivelyFillYields(yields, output: ?Fiber | ?ReifiedYield) {
     if (!output) {
       // Ignore nulls etc.
-    } else if (output.tag !== undefined) { // TODO: Fix this fragile duck test.
+    } else if (output.tag !== undefined) {
+      // TODO: Fix this fragile duck test.
       // Detect if this is a fiber, if so it is a fragment result.
       // $FlowFixMe: Refinement issue.
-      var item = (output : Fiber);
+      var item = (output: Fiber);
       do {
@@ -86,4 +86,4 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function moveCoroutineToHandlerPhase(current : ?Fiber, workInProgress : Fiber) {
-    var coroutine = (workInProgress.pendingProps : ?ReactCoroutine);
+  function moveCoroutineToHandlerPhase(current: ?Fiber, workInProgress: Fiber) {
+    var coroutine = (workInProgress.pendingProps: ?ReactCoroutine);
     if (!coroutine) {
@@ -103,3 +103,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
     // TODO: Compare this to a generator or opaque helpers like Children.
-    var yields : Array<ReifiedYield> = [];
+    var yields: Array<ReifiedYield> = [];
     var child = workInProgress.child;
@@ -120,3 +120,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
       nextChildren,
-      priority
+      priority,
     );
@@ -125,3 +125,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function completeWork(current : ?Fiber, workInProgress : Fiber) : ?Fiber {
+  function completeWork(current: ?Fiber, workInProgress: Fiber): ?Fiber {
     switch (workInProgress.tag) {
@@ -136,3 +136,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
         // in the case of an update
-        const { state, props } = workInProgress.stateNode;
+        const {state, props} = workInProgress.stateNode;
         workInProgress.memoizedState = state;
@@ -156,3 +156,5 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
         const child = workInProgress.child;
-        const children = (child && !child.sibling) ? (child.output : ?Fiber | I) : child;
+        const children = child && !child.sibling
+          ? (child.output: ?Fiber | I)
+          : child;
         if (current && workInProgress.stateNode != null) {
@@ -168,3 +170,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
           }
-          const instance : I = workInProgress.stateNode;
+          const instance: I = workInProgress.stateNode;
           if (prepareUpdate(instance, oldProps, newProps, children)) {
@@ -184,3 +186,7 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
           }
-          const instance = createInstance(workInProgress.type, newProps, children);
+          const instance = createInstance(
+            workInProgress.type,
+            newProps,
+            children,
+          );
           // TODO: This seems like unnecessary duplication.
@@ -201,6 +207,7 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
         return null;
-
       // Error cases
       case IndeterminateComponent:
-        throw new Error('An indeterminate component should have become determinate before completing.');
+        throw new Error(
+          'An indeterminate component should have become determinate before completing.',
+        );
       default:
@@ -213,3 +220,2 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
   };
-
 };
diff --git a/src/renderers/shared/fiber/ReactFiberReconciler.js b/src/renderers/shared/fiber/ReactFiberReconciler.js
index f0443a43c..1034d1d5c 100644
--- a/src/renderers/shared/fiber/ReactFiberReconciler.js
+++ b/src/renderers/shared/fiber/ReactFiberReconciler.js
@@ -14,8 +14,8 @@
 
-import type { Fiber } from 'ReactFiber';
-import type { FiberRoot } from 'ReactFiberRoot';
-import type { TypeOfWork } from 'ReactTypeOfWork';
-import type { PriorityLevel } from 'ReactPriorityLevel';
+import type {Fiber} from 'ReactFiber';
+import type {FiberRoot} from 'ReactFiberRoot';
+import type {TypeOfWork} from 'ReactTypeOfWork';
+import type {PriorityLevel} from 'ReactPriorityLevel';
 
-var { createFiberRoot } = require('ReactFiberRoot');
+var {createFiberRoot} = require('ReactFiberRoot');
 var ReactFiberScheduler = require('ReactFiberScheduler');
@@ -23,6 +23,10 @@ var ReactFiberScheduler = require('ReactFiberScheduler');
 type Deadline = {
-  timeRemaining : () => number
+  timeRemaining: () => number,
 };
 
-type HostChildNode<I> = { tag: TypeOfWork, output: HostChildren<I>, sibling: any };
+type HostChildNode<I> = {
+  tag: TypeOfWork,
+  output: HostChildren<I>,
+  sibling: any,
+};
 
@@ -31,3 +35,2 @@ export type HostChildren<I> = null | void | I | HostChildNode<I>;
 export type HostConfig<T, P, I, C> = {
-
   // TODO: We don't currently have a quick way to detect that children didn't
@@ -36,12 +39,21 @@ export type HostConfig<T, P, I, C> = {
 
-  updateContainer(containerInfo : C, children : HostChildren<I>) : void;
-
-  createInstance(type : T, props : P, children : HostChildren<I>) : I,
-  prepareUpdate(instance : I, oldProps : P, newProps : P, children : HostChildren<I>) : boolean,
-  commitUpdate(instance : I, oldProps : P, newProps : P, children : HostChildren<I>) : void,
-  deleteInstance(instance : I) : void,
-
-  scheduleAnimationCallback(callback : () => void) : void,
-  scheduleDeferredCallback(callback : (deadline : Deadline) => void) : void
-
+  updateContainer(containerInfo: C, children: HostChildren<I>): void,
+
+  createInstance(type: T, props: P, children: HostChildren<I>): I,
+  prepareUpdate(
+    instance: I,
+    oldProps: P,
+    newProps: P,
+    children: HostChildren<I>,
+  ): boolean,
+  commitUpdate(
+    instance: I,
+    oldProps: P,
+    newProps: P,
+    children: HostChildren<I>,
+  ): void,
+  deleteInstance(instance: I): void,
+
+  scheduleAnimationCallback(callback: () => void): void,
+  scheduleDeferredCallback(callback: (deadline: Deadline) => void): void,
 };
@@ -51,18 +63,18 @@ type OpaqueNode = Fiber;
 export type Reconciler<C> = {
-  mountContainer(element : ReactElement<any>, containerInfo : C) : OpaqueNode,
-  updateContainer(element : ReactElement<any>, container : OpaqueNode) : void,
-  unmountContainer(container : OpaqueNode) : void,
-  performWithPriority(priorityLevel : PriorityLevel, fn : Function) : void,
+  mountContainer(element: ReactElement<any>, containerInfo: C): OpaqueNode,
+  updateContainer(element: ReactElement<any>, container: OpaqueNode): void,
+  unmountContainer(container: OpaqueNode): void,
+  performWithPriority(priorityLevel: PriorityLevel, fn: Function): void,
 
   // Used to extract the return value from the initial render. Legacy API.
-  getPublicRootInstance(container : OpaqueNode) : (C | null),
+  getPublicRootInstance(container: OpaqueNode): C | null,
 };
 
-module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) : Reconciler<C> {
-
-  var { scheduleWork, performWithPriority } = ReactFiberScheduler(config);
+module.exports = function<T, P, I, C>(
+  config: HostConfig<T, P, I, C>,
+): Reconciler<C> {
+  var {scheduleWork, performWithPriority} = ReactFiberScheduler(config);
 
   return {
-
-    mountContainer(element : ReactElement<any>, containerInfo : C) : OpaqueNode {
+    mountContainer(element: ReactElement<any>, containerInfo: C): OpaqueNode {
       const root = createFiberRoot(containerInfo);
@@ -82,5 +94,5 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) : Reconci
 
-    updateContainer(element : ReactElement<any>, container : OpaqueNode) : void {
+    updateContainer(element: ReactElement<any>, container: OpaqueNode): void {
       // TODO: If this is a nested container, this won't be the root.
-      const root : FiberRoot = (container.stateNode : any);
+      const root: FiberRoot = (container.stateNode: any);
       // TODO: Use pending work/state instead of props.
@@ -91,5 +103,5 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) : Reconci
 
-    unmountContainer(container : OpaqueNode) : void {
+    unmountContainer(container: OpaqueNode): void {
       // TODO: If this is a nested container, this won't be the root.
-      const root : FiberRoot = (container.stateNode : any);
+      const root: FiberRoot = (container.stateNode: any);
       // TODO: Use pending work/state instead of props.
@@ -102,8 +114,6 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) : Reconci
 
-    getPublicRootInstance(container : OpaqueNode) : (C | null) {
+    getPublicRootInstance(container: OpaqueNode): C | null {
       return null;
     },
-
   };
-
 };
diff --git a/src/renderers/shared/fiber/ReactFiberRoot.js b/src/renderers/shared/fiber/ReactFiberRoot.js
index 1c972700b..c36382795 100644
--- a/src/renderers/shared/fiber/ReactFiberRoot.js
+++ b/src/renderers/shared/fiber/ReactFiberRoot.js
@@ -14,5 +14,5 @@
 
-import type { Fiber } from 'ReactFiber';
+import type {Fiber} from 'ReactFiber';
 
-const { createHostContainerFiber } = require('ReactFiber');
+const {createHostContainerFiber} = require('ReactFiber');
 
@@ -29,3 +29,3 @@ export type FiberRoot = {
 
-exports.createFiberRoot = function(containerInfo : any) : FiberRoot {
+exports.createFiberRoot = function(containerInfo: any): FiberRoot {
   // Cyclic construction. This cheats the type system right now because
diff --git a/src/renderers/shared/fiber/ReactFiberScheduler.js b/src/renderers/shared/fiber/ReactFiberScheduler.js
index 5bc128f5e..a8e1b77cc 100644
--- a/src/renderers/shared/fiber/ReactFiberScheduler.js
+++ b/src/renderers/shared/fiber/ReactFiberScheduler.js
@@ -14,6 +14,6 @@
 
-import type { Fiber } from 'ReactFiber';
-import type { FiberRoot } from 'ReactFiberRoot';
-import type { HostConfig } from 'ReactFiberReconciler';
-import type { PriorityLevel } from 'ReactPriorityLevel';
+import type {Fiber} from 'ReactFiber';
+import type {FiberRoot} from 'ReactFiberRoot';
+import type {HostConfig} from 'ReactFiberReconciler';
+import type {PriorityLevel} from 'ReactPriorityLevel';
 
@@ -23,3 +23,3 @@ var ReactFiberCommitWork = require('ReactFiberCommitWork');
 
-var { cloneFiber } = require('ReactFiber');
+var {cloneFiber} = require('ReactFiber');
 
@@ -35,6 +35,6 @@ var timeHeuristicForUnitOfWork = 1;
 export type Scheduler = {
-  scheduleDeferredWork: (root : FiberRoot, priority : PriorityLevel) => void
+  scheduleDeferredWork: (root: FiberRoot, priority: PriorityLevel) => void,
 };
 
-module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
+module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
   // Use a closure to circumvent the circular dependency between the scheduler
@@ -46,5 +46,5 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  const { beginWork } = ReactFiberBeginWork(config, getScheduler);
-  const { completeWork } = ReactFiberCompleteWork(config);
-  const { commitWork } = ReactFiberCommitWork(config);
+  const {beginWork} = ReactFiberBeginWork(config, getScheduler);
+  const {completeWork} = ReactFiberCompleteWork(config);
+  const {commitWork} = ReactFiberCommitWork(config);
 
@@ -54,11 +54,11 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
   // The default priority to use for updates.
-  let defaultPriority : PriorityLevel = LowPriority;
+  let defaultPriority: PriorityLevel = LowPriority;
 
   // The next work in progress fiber that we're currently working on.
-  let nextUnitOfWork : ?Fiber = null;
-  let nextPriorityLevel : PriorityLevel = NoWork;
+  let nextUnitOfWork: ?Fiber = null;
+  let nextPriorityLevel: PriorityLevel = NoWork;
 
   // Linked list of roots with scheduled work on them.
-  let nextScheduledRoot : ?FiberRoot = null;
-  let lastScheduledRoot : ?FiberRoot = null;
+  let nextScheduledRoot: ?FiberRoot = null;
+  let lastScheduledRoot: ?FiberRoot = null;
 
@@ -66,3 +66,6 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
     // Clear out roots with no more work on them.
-    while (nextScheduledRoot && nextScheduledRoot.current.pendingWorkPriority === NoWork) {
+    while (
+      nextScheduledRoot &&
+      nextScheduledRoot.current.pendingWorkPriority === NoWork
+    ) {
       nextScheduledRoot.isScheduled = false;
@@ -82,4 +85,6 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
     while (root) {
-      if (highestPriorityLevel === NoWork ||
-          highestPriorityLevel > root.current.pendingWorkPriority) {
+      if (
+        highestPriorityLevel === NoWork ||
+        highestPriorityLevel > root.current.pendingWorkPriority
+      ) {
         highestPriorityLevel = root.current.pendingWorkPriority;
@@ -92,6 +97,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
       nextPriorityLevel = highestPriorityLevel;
-      return cloneFiber(
-        highestPriorityRoot.current,
-        highestPriorityLevel
-      );
+      return cloneFiber(highestPriorityRoot.current, highestPriorityLevel);
     }
@@ -102,3 +104,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function commitAllWork(finishedWork : Fiber) {
+  function commitAllWork(finishedWork: Fiber) {
     // Commit all the side-effects within a tree.
@@ -119,3 +121,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function resetWorkPriority(workInProgress : Fiber) {
+  function resetWorkPriority(workInProgress: Fiber) {
     let newPriority = NoWork;
@@ -127,5 +129,6 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
       // Ensure that remaining work priority bubbles up.
-      if (child.pendingWorkPriority !== NoWork &&
-          (newPriority === NoWork ||
-          newPriority > child.pendingWorkPriority)) {
+      if (
+        child.pendingWorkPriority !== NoWork &&
+        (newPriority === NoWork || newPriority > child.pendingWorkPriority)
+      ) {
         newPriority = child.pendingWorkPriority;
@@ -137,3 +140,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function completeUnitOfWork(workInProgress : Fiber) : ?Fiber {
+  function completeUnitOfWork(workInProgress: Fiber): ?Fiber {
     while (true) {
@@ -182,3 +185,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
         // If we're at the root, there's no more work to do. We can flush it.
-        const root : FiberRoot = (workInProgress.stateNode : any);
+        const root: FiberRoot = (workInProgress.stateNode: any);
         if (root.current === workInProgress) {
@@ -186,3 +189,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
             'Cannot commit the same tree as before. This is probably a bug ' +
-            'related to the return field.'
+              'related to the return field.',
           );
@@ -197,7 +200,7 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
         // if (!nextWork && hasMoreWork) {
-          // TODO: This can happen when some deep work completes and we don't
-          // know if this was the last one. We should be able to keep track of
-          // the highest priority still in the tree for one pass. But if we
-          // terminate an update we don't know.
-          // throw new Error('FiberRoots should not have flagged more work if there is none.');
+        // TODO: This can happen when some deep work completes and we don't
+        // know if this was the last one. We should be able to keep track of
+        // the highest priority still in the tree for one pass. But if we
+        // terminate an update we don't know.
+        // throw new Error('FiberRoots should not have flagged more work if there is none.');
         // }
@@ -208,3 +211,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function performUnitOfWork(workInProgress : Fiber) : ?Fiber {
+  function performUnitOfWork(workInProgress: Fiber): ?Fiber {
     // The current, flushed, state of this fiber is the alternate.
@@ -243,3 +246,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function scheduleDeferredWork(root : FiberRoot, priority : PriorityLevel) {
+  function scheduleDeferredWork(root: FiberRoot, priority: PriorityLevel) {
     // We must reset the current unit of work pointer so that we restart the
@@ -252,4 +255,6 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
     // Set the priority on the root, without deprioritizing
-    if (root.current.pendingWorkPriority === NoWork ||
-        priority <= root.current.pendingWorkPriority) {
+    if (
+      root.current.pendingWorkPriority === NoWork ||
+      priority <= root.current.pendingWorkPriority
+    ) {
       root.current.pendingWorkPriority = priority;
@@ -277,4 +282,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
     nextUnitOfWork = findNextUnitOfWork();
-    while (nextUnitOfWork &&
-           nextPriorityLevel !== NoWork) {
+    while (nextUnitOfWork && nextPriorityLevel !== NoWork) {
       nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
@@ -292,6 +296,11 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function scheduleAnimationWork(root: FiberRoot, priorityLevel : PriorityLevel) {
+  function scheduleAnimationWork(
+    root: FiberRoot,
+    priorityLevel: PriorityLevel,
+  ) {
     // Set the priority on the root, without deprioritizing
-    if (root.current.pendingWorkPriority === NoWork ||
-        priorityLevel <= root.current.pendingWorkPriority) {
+    if (
+      root.current.pendingWorkPriority === NoWork ||
+      priorityLevel <= root.current.pendingWorkPriority
+    ) {
       root.current.pendingWorkPriority = priorityLevel;
@@ -316,3 +325,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function scheduleWork(root : FiberRoot) {
+  function scheduleWork(root: FiberRoot) {
     if (defaultPriority === SynchronousPriority) {
@@ -331,3 +340,3 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-  function performWithPriority(priorityLevel : PriorityLevel, fn : Function) {
+  function performWithPriority(priorityLevel: PriorityLevel, fn: Function) {
     const previousDefaultPriority = defaultPriority;
diff --git a/src/renderers/shared/fiber/ReactFiberUpdateQueue.js b/src/renderers/shared/fiber/ReactFiberUpdateQueue.js
index aab252b65..65d8bb66d 100644
--- a/src/renderers/shared/fiber/ReactFiberUpdateQueue.js
+++ b/src/renderers/shared/fiber/ReactFiberUpdateQueue.js
@@ -24,6 +24,6 @@ export type UpdateQueue = UpdateQueueNode & {
   isForced: boolean,
-  tail: UpdateQueueNode
+  tail: UpdateQueueNode,
 };
 
-exports.createUpdateQueue = function(partialState : mixed) : UpdateQueue {
+exports.createUpdateQueue = function(partialState: mixed): UpdateQueue {
   const queue = {
@@ -35,3 +35,3 @@ exports.createUpdateQueue = function(partialState : mixed) : UpdateQueue {
     isForced: false,
-    tail: (null : any),
+    tail: (null: any),
   };
@@ -41,3 +41,6 @@ exports.createUpdateQueue = function(partialState : mixed) : UpdateQueue {
 
-exports.addToQueue = function(queue : UpdateQueue, partialState : mixed) : UpdateQueue {
+exports.addToQueue = function(
+  queue: UpdateQueue,
+  partialState: mixed,
+): UpdateQueue {
   const node = {
@@ -53,3 +56,6 @@ exports.addToQueue = function(queue : UpdateQueue, partialState : mixed) : Updat
 
-exports.addCallbackToQueue = function(queue : UpdateQueue, callback: Function) : UpdateQueue {
+exports.addCallbackToQueue = function(
+  queue: UpdateQueue,
+  callback: Function,
+): UpdateQueue {
   if (queue.tail.callback) {
@@ -62,4 +68,4 @@ exports.addCallbackToQueue = function(queue : UpdateQueue, callback: Function) :
 
-exports.callCallbacks = function(queue : UpdateQueue, context : any) {
-  let node : ?UpdateQueueNode = queue;
+exports.callCallbacks = function(queue: UpdateQueue, context: any) {
+  let node: ?UpdateQueueNode = queue;
   while (node) {
@@ -73,4 +79,8 @@ exports.callCallbacks = function(queue : UpdateQueue, context : any) {
 
-exports.mergeUpdateQueue = function(queue : UpdateQueue, prevState : any, props : any) : any {
-  let node : ?UpdateQueueNode = queue;
+exports.mergeUpdateQueue = function(
+  queue: UpdateQueue,
+  prevState: any,
+  props: any,
+): any {
+  let node: ?UpdateQueueNode = queue;
   let state = queue.isReplace ? null : Object.assign({}, prevState);
diff --git a/src/renderers/shared/fiber/ReactReifiedYield.js b/src/renderers/shared/fiber/ReactReifiedYield.js
index 41ef6b921..c41676379 100644
--- a/src/renderers/shared/fiber/ReactReifiedYield.js
+++ b/src/renderers/shared/fiber/ReactReifiedYield.js
@@ -14,14 +14,11 @@
 
-import type { ReactYield } from 'ReactCoroutine';
-import type { Fiber } from 'ReactFiber';
+import type {ReactYield} from 'ReactCoroutine';
+import type {Fiber} from 'ReactFiber';
 
-var { createFiberFromElementType } = require('ReactFiber');
+var {createFiberFromElementType} = require('ReactFiber');
 
-export type ReifiedYield = { continuation: Fiber, props: Object };
+export type ReifiedYield = {continuation: Fiber, props: Object};
 
-exports.createReifiedYield = function(yieldNode : ReactYield) : ReifiedYield {
-  var fiber = createFiberFromElementType(
-    yieldNode.continuation,
-    yieldNode.key
-  );
+exports.createReifiedYield = function(yieldNode: ReactYield): ReifiedYield {
+  var fiber = createFiberFromElementType(yieldNode.continuation, yieldNode.key);
   return {
@@ -32,3 +29,6 @@ exports.createReifiedYield = function(yieldNode : ReactYield) : ReifiedYield {
 
-exports.createUpdatedReifiedYield = function(previousYield : ReifiedYield, yieldNode : ReactYield) : ReifiedYield {
+exports.createUpdatedReifiedYield = function(
+  previousYield: ReifiedYield,
+  yieldNode: ReactYield,
+): ReifiedYield {
   return {
diff --git a/src/renderers/shared/fiber/__tests__/ReactCoroutine-test.js b/src/renderers/shared/fiber/__tests__/ReactCoroutine-test.js
index 5f75c9280..af5632305 100644
--- a/src/renderers/shared/fiber/__tests__/ReactCoroutine-test.js
+++ b/src/renderers/shared/fiber/__tests__/ReactCoroutine-test.js
@@ -25,7 +25,5 @@ describe('ReactCoroutine', () => {
   xit('should render a coroutine', () => {
-
     var ops = [];
 
-
-    function Continuation({ isSame }) {
+    function Continuation({isSame}) {
       ops.push(['Continuation', isSame]);
@@ -36,7 +34,11 @@ describe('ReactCoroutine', () => {
     // yielding. E.g. Continuation.yieldType = 123;
-    function Child({ bar }) {
+    function Child({bar}) {
       ops.push(['Child', bar]);
-      return ReactCoroutine.createYield({
-        bar: bar,
-      }, Continuation, null);
+      return ReactCoroutine.createYield(
+        {
+          bar: bar,
+        },
+        Continuation,
+        null,
+      );
     }
@@ -51,3 +53,3 @@ describe('ReactCoroutine', () => {
       return yields.map(y =>
-        <y.continuation isSame={props.foo === y.props.bar} />
+        <y.continuation isSame={props.foo === y.props.bar} />,
       );
@@ -62,3 +64,3 @@ describe('ReactCoroutine', () => {
         HandleYields,
-        props
+        props,
       );
@@ -85,5 +87,3 @@ describe('ReactCoroutine', () => {
     ]);
-
   });
-
 });
diff --git a/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js b/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js
index 24f0bddfa..520cbd476 100644
--- a/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js
+++ b/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js
@@ -23,3 +23,2 @@ describe('ReactIncremental', () => {
   it('should render a simple component', () => {
-
     function Bar() {
@@ -34,3 +33,2 @@ describe('ReactIncremental', () => {
     ReactNoop.flush();
-
   });
@@ -38,3 +36,2 @@ describe('ReactIncremental', () => {
   it('should render a simple component, in steps if needed', () => {
-
     var barCalled = false;
@@ -48,6 +45,3 @@ describe('ReactIncremental', () => {
       fooCalled = true;
-      return [
-        <Bar isBar={true} />,
-        <Bar isBar={true} />,
-      ];
+      return [<Bar isBar={true} />, <Bar isBar={true} />];
     }
@@ -68,3 +62,2 @@ describe('ReactIncremental', () => {
   it('updates a previous render', () => {
-
     var ops = [];
@@ -115,3 +108,2 @@ describe('ReactIncremental', () => {
     expect(ops).toEqual(['Foo', 'Content']);
-
   });
@@ -119,3 +111,2 @@ describe('ReactIncremental', () => {
   it('can cancel partially rendered work and restart', () => {
-
     var ops = [];
@@ -163,3 +154,2 @@ describe('ReactIncremental', () => {
     expect(ops).toEqual(['Foo', 'Bar', 'Bar']);
-
   });
@@ -167,3 +157,2 @@ describe('ReactIncremental', () => {
   it('can deprioritize unfinished work and resume it later', () => {
-
     var ops = [];
@@ -217,3 +206,2 @@ describe('ReactIncremental', () => {
     expect(ops).toEqual(['Middle', 'Middle']);
-
   });
@@ -278,3 +266,2 @@ describe('ReactIncremental', () => {
   it('can resume work in a subtree even when a parent bails out', () => {
-
     var ops = [];
@@ -422,3 +409,2 @@ describe('ReactIncremental', () => {
   it('can reuse work done after being preempted', () => {
-
     var ops = [];
@@ -457,7 +443,3 @@ describe('ReactIncremental', () => {
           <div hidden={true}>
-            {
-              props.step === 0 ?
-                step0
-                : middleContent
-            }
+            {props.step === 0 ? step0 : middleContent}
           </div>
@@ -517,3 +499,2 @@ describe('ReactIncremental', () => {
     expect(ops).toEqual(['Middle']);
-
   });
@@ -521,3 +502,2 @@ describe('ReactIncremental', () => {
   it('can reuse work if shouldComponentUpdate is false, after being preempted', () => {
-
     var ops = [];
@@ -613,3 +593,2 @@ describe('ReactIncremental', () => {
     expect(ops).toEqual(['Content', 'Bar', 'Middle']);
-
   });
@@ -621,3 +600,3 @@ describe('ReactIncremental', () => {
         super();
-        this.state = { a: 'a' };
+        this.state = {a: 'a'};
         instance = this;
@@ -639,6 +618,6 @@ describe('ReactIncremental', () => {
     ReactNoop.flush();
-    expect(instance.state).toEqual({ a: 'a' });
-    instance.setState({ b: 'b' });
+    expect(instance.state).toEqual({a: 'a'});
+    instance.setState({b: 'b'});
     ReactNoop.flush();
-    expect(instance.state).toEqual({ a: 'a', b: 'b' });
+    expect(instance.state).toEqual({a: 'a', b: 'b'});
   });
@@ -650,3 +629,3 @@ describe('ReactIncremental', () => {
         super();
-        this.state = { a: 'a' };
+        this.state = {a: 'a'};
         instance = this;
@@ -669,7 +648,7 @@ describe('ReactIncremental', () => {
     // Call setState multiple times before flushing
-    instance.setState({ b: 'b' });
-    instance.setState({ c: 'c' });
-    instance.setState({ d: 'd' });
+    instance.setState({b: 'b'});
+    instance.setState({c: 'c'});
+    instance.setState({d: 'd'});
     ReactNoop.flush();
-    expect(instance.state).toEqual({ a: 'a', b: 'b', c: 'c', d: 'd' });
+    expect(instance.state).toEqual({a: 'a', b: 'b', c: 'c', d: 'd'});
   });
@@ -681,3 +660,3 @@ describe('ReactIncremental', () => {
         super();
-        this.state = { num: 1 };
+        this.state = {num: 1};
         instance = this;
@@ -689,3 +668,3 @@ describe('ReactIncremental', () => {
 
-    function Foo({ multiplier }) {
+    function Foo({multiplier}) {
       return (
@@ -698,3 +677,3 @@ describe('ReactIncremental', () => {
     function updater(state, props) {
-      return { num: state.num * props.multiplier };
+      return {num: state.num * props.multiplier};
     }
@@ -718,3 +697,3 @@ describe('ReactIncremental', () => {
         super();
-        this.state = { num: 1 };
+        this.state = {num: 1};
         instance = this;
@@ -726,3 +705,3 @@ describe('ReactIncremental', () => {
 
-    function Foo({ multiplier }) {
+    function Foo({multiplier}) {
       return (
@@ -735,3 +714,3 @@ describe('ReactIncremental', () => {
     function updater(state, props) {
-      return { num: state.num * props.multiplier };
+      return {num: state.num * props.multiplier};
     }
@@ -739,3 +718,3 @@ describe('ReactIncremental', () => {
     function callback() {
-      this.setState({ called: true });
+      this.setState({called: true});
     }
@@ -771,7 +750,7 @@ describe('ReactIncremental', () => {
     ReactNoop.flush();
-    instance.setState({ b: 'b' });
-    instance.setState({ c: 'c' });
+    instance.setState({b: 'b'});
+    instance.setState({c: 'c'});
     instance.updater.enqueueReplaceState(instance, {d: 'd'});
     ReactNoop.flush();
-    expect(instance.state).toEqual({ d: 'd' });
+    expect(instance.state).toEqual({d: 'd'});
   });
diff --git a/src/renderers/shared/fiber/__tests__/ReactIncrementalSideEffects-test.js b/src/renderers/shared/fiber/__tests__/ReactIncrementalSideEffects-test.js
index 901b55f0d..d874ac7bc 100644
--- a/src/renderers/shared/fiber/__tests__/ReactIncrementalSideEffects-test.js
+++ b/src/renderers/shared/fiber/__tests__/ReactIncrementalSideEffects-test.js
@@ -23,3 +23,3 @@ describe('ReactIncrementalSideEffects', () => {
   function div(...children) {
-    return { type: 'div', children, prop: undefined };
+    return {type: 'div', children, prop: undefined};
   }
@@ -27,3 +27,3 @@ describe('ReactIncrementalSideEffects', () => {
   function span(prop) {
-    return { type: 'span', children: [], prop };
+    return {type: 'span', children: [], prop};
   }
@@ -31,3 +31,2 @@ describe('ReactIncrementalSideEffects', () => {
   it('can update child nodes of a host instance', () => {
-
     function Bar(props) {
@@ -47,5 +46,3 @@ describe('ReactIncrementalSideEffects', () => {
     ReactNoop.flush();
-    expect(ReactNoop.root.children).toEqual([
-      div(span()),
-    ]);
+    expect(ReactNoop.root.children).toEqual([div(span())]);
 
@@ -53,6 +50,3 @@ describe('ReactIncrementalSideEffects', () => {
     ReactNoop.flush();
-    expect(ReactNoop.root.children).toEqual([
-      div(span(), span()),
-    ]);
-
+    expect(ReactNoop.root.children).toEqual([div(span(), span())]);
   });
@@ -60,3 +54,2 @@ describe('ReactIncrementalSideEffects', () => {
   it('does not update child nodes if a flush is aborted', () => {
-
     function Bar(props) {
@@ -88,3 +81,2 @@ describe('ReactIncrementalSideEffects', () => {
     ]);
-
   });
@@ -92,3 +84,2 @@ describe('ReactIncrementalSideEffects', () => {
   it('preserves a previously rendered node when deprioritized', () => {
-
     function Middle(props) {
@@ -110,5 +101,3 @@ describe('ReactIncrementalSideEffects', () => {
 
-    expect(ReactNoop.root.children).toEqual([
-      div(div(span('foo'))),
-    ]);
+    expect(ReactNoop.root.children).toEqual([div(div(span('foo')))]);
 
@@ -117,5 +106,3 @@ describe('ReactIncrementalSideEffects', () => {
 
-    expect(ReactNoop.root.children).toEqual([
-      div(div(span('foo'))),
-    ]);
+    expect(ReactNoop.root.children).toEqual([div(div(span('foo')))]);
 
@@ -123,6 +110,3 @@ describe('ReactIncrementalSideEffects', () => {
 
-    expect(ReactNoop.root.children).toEqual([
-      div(div(span('bar'))),
-    ]);
-
+    expect(ReactNoop.root.children).toEqual([div(div(span('bar')))]);
   });
@@ -130,3 +114,2 @@ describe('ReactIncrementalSideEffects', () => {
   it('can reuse side-effects after being preempted', () => {
-
     function Bar(props) {
@@ -145,5 +128,4 @@ describe('ReactIncrementalSideEffects', () => {
         <div hidden={true}>
-          {
-            props.step === 0 ?
-              <div>
+          {props.step === 0
+            ? <div>
                 <Bar>Hi</Bar>
@@ -151,4 +133,3 @@ describe('ReactIncrementalSideEffects', () => {
               </div>
-              : middleContent
-          }
+            : middleContent}
         </div>
@@ -191,3 +172,2 @@ describe('ReactIncrementalSideEffects', () => {
   it('can reuse side-effects after being preempted, if shouldComponentUpdate is false', () => {
-
     class Bar extends React.Component {
@@ -267,5 +247,3 @@ describe('ReactIncrementalSideEffects', () => {
     ReactNoop.flush();
-    expect(ReactNoop.root.children).toEqual([
-      div(span(1)),
-    ]);
+    expect(ReactNoop.root.children).toEqual([div(span(1))]);
   });
@@ -297,3 +275,3 @@ describe('ReactIncrementalSideEffects', () => {
         span(0),
-        div(/*the spans are down-prioritized and not rendered yet*/)
+        div(/*the spans are down-prioritized and not rendered yet*/),
       ),
@@ -303,6 +281,3 @@ describe('ReactIncrementalSideEffects', () => {
     expect(ReactNoop.root.children).toEqual([
-      div(
-        span(1),
-        div(/*still not rendered yet*/)
-      ),
+      div(span(1), div(/*still not rendered yet*/)),
     ]);
@@ -315,4 +290,4 @@ describe('ReactIncrementalSideEffects', () => {
           span(0),
-          span(1)
-        )
+          span(1),
+        ),
       ),
@@ -328,4 +303,4 @@ describe('ReactIncrementalSideEffects', () => {
           span(0),
-          span(1)
-        )
+          span(1),
+        ),
       ),
@@ -339,4 +314,4 @@ describe('ReactIncrementalSideEffects', () => {
           span(1),
-          span(2)
-        )
+          span(2),
+        ),
       ),
@@ -351,3 +326,2 @@ describe('ReactIncrementalSideEffects', () => {
 
-
   // TODO: Test that side-effects are not cut off when a work in progress node
@@ -362,3 +336,3 @@ describe('ReactIncrementalSideEffects', () => {
         instance = this;
-        this.state = { text: 'foo' };
+        this.state = {text: 'foo'};
       }
@@ -371,10 +345,6 @@ describe('ReactIncrementalSideEffects', () => {
     ReactNoop.flush();
-    expect(ReactNoop.root.children).toEqual([
-      span('foo'),
-    ]);
+    expect(ReactNoop.root.children).toEqual([span('foo')]);
     let called = false;
-    instance.setState({ text: 'bar' }, () => {
-      expect(ReactNoop.root.children).toEqual([
-        span('bar'),
-      ]);
+    instance.setState({text: 'bar'}, () => {
+      expect(ReactNoop.root.children).toEqual([span('bar')]);
       called = true;
diff --git a/src/renderers/shared/fiber/isomorphic/ReactCoroutine.js b/src/renderers/shared/fiber/isomorphic/ReactCoroutine.js
index dda4ca1fb..7f44eb8d0 100644
--- a/src/renderers/shared/fiber/isomorphic/ReactCoroutine.js
+++ b/src/renderers/shared/fiber/isomorphic/ReactCoroutine.js
@@ -14,3 +14,3 @@
 
-import type { ReactNodeList } from 'ReactTypes';
+import type {ReactNodeList} from 'ReactTypes';
 
@@ -19,3 +19,5 @@ import type { ReactNodeList } from 'ReactTypes';
 var REACT_COROUTINE_TYPE =
-  (typeof Symbol === 'function' && Symbol.for && Symbol.for('react.coroutine')) ||
+  (typeof Symbol === 'function' &&
+    Symbol.for &&
+    Symbol.for('react.coroutine')) ||
   0xeac8;
@@ -26,4 +28,7 @@ var REACT_YIELD_TYPE =
 
-type ReifiedYield = { continuation: Object, props: Object };
-type CoroutineHandler<T> = (props: T, yields: Array<ReifiedYield>) => ReactNodeList;
+type ReifiedYield = {continuation: Object, props: Object};
+type CoroutineHandler<T> = (
+  props: T,
+  yields: Array<ReifiedYield>,
+) => ReactNodeList;
 
@@ -44,3 +49,3 @@ export type ReactYield = {
   props: Object,
-  continuation: mixed
+  continuation: mixed,
 };
@@ -48,7 +53,7 @@ export type ReactYield = {
 exports.createCoroutine = function<T>(
-  children : mixed,
-  handler : CoroutineHandler<T>,
-  props : T,
-  key : ?string = null
-) : ReactCoroutine {
+  children: mixed,
+  handler: CoroutineHandler<T>,
+  props: T,
+  key: ?string = null,
+): ReactCoroutine {
   var coroutine = {
@@ -73,3 +78,7 @@ exports.createCoroutine = function<T>(
 
-exports.createYield = function(props : mixed, continuation : mixed, key : ?string = null) {
+exports.createYield = function(
+  props: mixed,
+  continuation: mixed,
+  key: ?string = null,
+) {
   var yieldNode = {
@@ -96,3 +105,3 @@ exports.createYield = function(props : mixed, continuation : mixed, key : ?strin
  */
-exports.isCoroutine = function(object : mixed) : boolean {
+exports.isCoroutine = function(object: mixed): boolean {
   return (
@@ -107,3 +116,3 @@ exports.isCoroutine = function(object : mixed) : boolean {
  */
-exports.isYield = function(object : mixed) : boolean {
+exports.isYield = function(object: mixed): boolean {
   return (
diff --git a/src/renderers/shared/fiber/isomorphic/ReactTypes.js b/src/renderers/shared/fiber/isomorphic/ReactTypes.js
index 643048b46..2ba79535d 100644
--- a/src/renderers/shared/fiber/isomorphic/ReactTypes.js
+++ b/src/renderers/shared/fiber/isomorphic/ReactTypes.js
@@ -14,5 +14,10 @@
 
-import type { ReactCoroutine, ReactYield } from 'ReactCoroutine';
+import type {ReactCoroutine, ReactYield} from 'ReactCoroutine';
 
-export type ReactNode = ReactElement<any> | ReactCoroutine | ReactYield | ReactText | ReactFragment;
+export type ReactNode =
+  | ReactElement<any>
+  | ReactCoroutine
+  | ReactYield
+  | ReactText
+  | ReactFragment;
 
diff --git a/src/renderers/shared/hooks/ReactHostOperationHistoryHook.js b/src/renderers/shared/hooks/ReactHostOperationHistoryHook.js
index 675a00e73..bbe1aa890 100644
--- a/src/renderers/shared/hooks/ReactHostOperationHistoryHook.js
+++ b/src/renderers/shared/hooks/ReactHostOperationHistoryHook.js
@@ -14,15 +14,14 @@
 
-import type { DebugID } from 'ReactInstanceType';
+import type {DebugID} from 'ReactInstanceType';
 
 export type Operation = {instanceID: DebugID} & (
-  {type: 'mount', payload: string} |
-  {type: 'insert child', payload: {toIndex: number, content: string}} |
-  {type: 'move child', payload: {fromIndex: number, toIndex: number}} |
-  {type: 'replace children', payload: string} |
-  {type: 'replace text', payload: string} |
-  {type: 'replace with', payload: string} |
-  {type: 'update styles', payload: mixed /* Style Object */} |
-  {type: 'update attribute', payload: {[name: string]: string}} |
-  {type: 'remove attribute', payload: string}
-);
+  | {type: 'mount', payload: string}
+  | {type: 'insert child', payload: {toIndex: number, content: string}}
+  | {type: 'move child', payload: {fromIndex: number, toIndex: number}}
+  | {type: 'replace children', payload: string}
+  | {type: 'replace text', payload: string}
+  | {type: 'replace with', payload: string}
+  | {type: 'update styles', payload: mixed /* Style Object */}
+  | {type: 'update attribute', payload: {[name: string]: string}}
+  | {type: 'remove attribute', payload: string});
 
diff --git a/src/renderers/shared/hooks/ReactInvalidSetStateWarningHook.js b/src/renderers/shared/hooks/ReactInvalidSetStateWarningHook.js
index 66378b50d..3c309ed0f 100644
--- a/src/renderers/shared/hooks/ReactInvalidSetStateWarningHook.js
+++ b/src/renderers/shared/hooks/ReactInvalidSetStateWarningHook.js
@@ -22,3 +22,3 @@ if (__DEV__) {
       !processingChildContext,
-      'setState(...): Cannot call setState() inside getChildContext()'
+      'setState(...): Cannot call setState() inside getChildContext()',
     );
diff --git a/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js b/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js
index d639848ae..974ed201b 100644
--- a/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js
+++ b/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js
@@ -135,12 +135,16 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'div',
-        children: [{
-          displayName: 'Bar',
-          children: [],
-        }, {
-          displayName: 'Baz',
-          children: [],
-        }, {
-          displayName: 'Unknown',
-          children: [],
-        }],
+        children: [
+          {
+            displayName: 'Bar',
+            children: [],
+          },
+          {
+            displayName: 'Baz',
+            children: [],
+          },
+          {
+            displayName: 'Unknown',
+            children: [],
+          },
+        ],
       };
@@ -172,13 +176,17 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: 'Bar',
-          children: [],
-        }, {
-          displayName: 'Baz',
-          children: [],
-        }, {
-          // Note: Ideally fallback name should be consistent (e.g. "Unknown")
-          displayName: 'ReactComponent',
-          children: [],
-        }],
+        children: [
+          {
+            displayName: 'Bar',
+            children: [],
+          },
+          {
+            displayName: 'Baz',
+            children: [],
+          },
+          {
+            // Note: Ideally fallback name should be consistent (e.g. "Unknown")
+            displayName: 'ReactComponent',
+            children: [],
+          },
+        ],
       };
@@ -216,12 +224,16 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: 'Bar',
-          children: [],
-        }, {
-          displayName: 'Baz',
-          children: [],
-        }, {
-          displayName: 'Unknown',
-          children: [],
-        }],
+        children: [
+          {
+            displayName: 'Bar',
+            children: [],
+          },
+          {
+            displayName: 'Baz',
+            children: [],
+          },
+          {
+            displayName: 'Unknown',
+            children: [],
+          },
+        ],
       };
@@ -247,12 +259,16 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: 'Bar',
-          children: [],
-        }, {
-          displayName: 'Baz',
-          children: [],
-        }, {
-          displayName: 'Unknown',
-          children: [],
-        }],
+        children: [
+          {
+            displayName: 'Bar',
+            children: [],
+          },
+          {
+            displayName: 'Baz',
+            children: [],
+          },
+          {
+            displayName: 'Unknown',
+            children: [],
+          },
+        ],
       };
@@ -275,19 +291,27 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'div',
-        children: [{
-          displayName: 'p',
-          children: [{
-            displayName: 'span',
-            children: [{
-              displayName: '#text',
-              text: 'Hi!',
-            }],
-          }, {
-            displayName: '#text',
-            text: 'Wow.',
-          }],
-        }, {
-          displayName: 'hr',
-          element: <hr />,
-          children: [],
-        }],
+        children: [
+          {
+            displayName: 'p',
+            children: [
+              {
+                displayName: 'span',
+                children: [
+                  {
+                    displayName: '#text',
+                    text: 'Hi!',
+                  },
+                ],
+              },
+              {
+                displayName: '#text',
+                text: 'Wow.',
+              },
+            ],
+          },
+          {
+            displayName: 'hr',
+            element: <hr />,
+            children: [],
+          },
+        ],
       };
@@ -307,7 +331,9 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: 'div',
-          element: <div />,
-          children: [],
-        }],
+        children: [
+          {
+            displayName: 'div',
+            element: <div />,
+            children: [],
+          },
+        ],
       };
@@ -352,38 +378,55 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: 'div',
-          children: [{
-            displayName: 'Foo',
-            element: <Foo />,
-            children: [{
-              displayName: 'Qux',
-              element: <Qux />,
-              children: [],
-            }],
-          }, {
-            displayName: 'Bar',
-            children: [{
-              displayName: 'h1',
-              children: [{
-                displayName: 'span',
-                children: [{
-                  displayName: '#text',
-                  element: 'Hi,',
-                  text: 'Hi,',
-                }],
-              }, {
-                displayName: '#text',
-                text: 'Mom',
-                element: 'Mom',
-              }],
-            }],
-          }, {
-            displayName: 'a',
-            children: [{
-              displayName: '#text',
-              text: 'Click me.',
-              element: 'Click me.',
-            }],
-          }],
-        }],
+        children: [
+          {
+            displayName: 'div',
+            children: [
+              {
+                displayName: 'Foo',
+                element: <Foo />,
+                children: [
+                  {
+                    displayName: 'Qux',
+                    element: <Qux />,
+                    children: [],
+                  },
+                ],
+              },
+              {
+                displayName: 'Bar',
+                children: [
+                  {
+                    displayName: 'h1',
+                    children: [
+                      {
+                        displayName: 'span',
+                        children: [
+                          {
+                            displayName: '#text',
+                            element: 'Hi,',
+                            text: 'Hi,',
+                          },
+                        ],
+                      },
+                      {
+                        displayName: '#text',
+                        text: 'Mom',
+                        element: 'Mom',
+                      },
+                    ],
+                  },
+                ],
+              },
+              {
+                displayName: 'a',
+                children: [
+                  {
+                    displayName: '#text',
+                    text: 'Click me.',
+                    element: 'Click me.',
+                  },
+                ],
+              },
+            ],
+          },
+        ],
       };
@@ -425,9 +468,12 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: '#text',
-          text: '1',
-        }, {
-          displayName: '#text',
-          text: '2',
-        }],
+        children: [
+          {
+            displayName: '#text',
+            text: '1',
+          },
+          {
+            displayName: '#text',
+            text: '2',
+          },
+        ],
       };
@@ -441,6 +487,8 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: '#text',
-          text: '1',
-        }],
+        children: [
+          {
+            displayName: '#text',
+            text: '1',
+          },
+        ],
       };
@@ -454,6 +502,8 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: '#text',
-          text: '42',
-        }],
+        children: [
+          {
+            displayName: '#text',
+            text: '42',
+          },
+        ],
       };
@@ -467,6 +517,8 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: '#text',
-          text: '0',
-        }],
+        children: [
+          {
+            displayName: '#text',
+            text: '0',
+          },
+        ],
       };
@@ -491,19 +543,25 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: '#text',
-          text: 'hi',
-          element: 'hi',
-        }, {
-          displayName: '#text',
-          text: '42',
-          element: 42,
-        }, {
-          displayName: 'Foo',
-          element: <Foo />,
-          children: [{
-            displayName: 'div',
-            element: <div />,
-            children: [],
-          }],
-        }],
+        children: [
+          {
+            displayName: '#text',
+            text: 'hi',
+            element: 'hi',
+          },
+          {
+            displayName: '#text',
+            text: '42',
+            element: 42,
+          },
+          {
+            displayName: 'Foo',
+            element: <Foo />,
+            children: [
+              {
+                displayName: 'div',
+                element: <div />,
+                children: [],
+              },
+            ],
+          },
+        ],
       };
@@ -528,6 +586,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+          ],
         };
@@ -537,6 +597,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Bye.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Bye.',
+            },
+          ],
         };
@@ -559,6 +621,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+          ],
         };
@@ -575,6 +639,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+          ],
         };
@@ -603,6 +669,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+          ],
         };
@@ -619,6 +687,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+          ],
         };
@@ -647,9 +717,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }, {
-            displayName: '#text',
-            text: 'Bye.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+            {
+              displayName: '#text',
+              text: 'Bye.',
+            },
+          ],
         };
@@ -666,9 +739,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }, {
-            displayName: '#text',
-            text: 'Bye.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+            {
+              displayName: '#text',
+              text: 'Bye.',
+            },
+          ],
         };
@@ -697,9 +773,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }, {
-            displayName: '#text',
-            text: 'Bye.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+            {
+              displayName: '#text',
+              text: 'Bye.',
+            },
+          ],
         };
@@ -716,9 +795,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }, {
-            displayName: '#text',
-            text: 'Bye.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+            {
+              displayName: '#text',
+              text: 'Bye.',
+            },
+          ],
         };
@@ -779,6 +861,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+          ],
         };
@@ -788,9 +872,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }, {
-            displayName: '#text',
-            text: 'Bye.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+            {
+              displayName: '#text',
+              text: 'Bye.',
+            },
+          ],
         };
@@ -807,9 +894,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }, {
-            displayName: '#text',
-            text: 'Bye.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+            {
+              displayName: '#text',
+              text: 'Bye.',
+            },
+          ],
         };
@@ -819,6 +909,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+          ],
         };
@@ -834,9 +926,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Hi.',
-          }, {
-            displayName: '#text',
-            text: 'Bye.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+            {
+              displayName: '#text',
+              text: 'Bye.',
+            },
+          ],
         };
@@ -846,9 +941,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'Bye.',
-          }, {
-            displayName: '#text',
-            text: 'Hi.',
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'Bye.',
+            },
+            {
+              displayName: '#text',
+              text: 'Hi.',
+            },
+          ],
         };
@@ -869,15 +967,22 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: 'div',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }],
-          }, {
-            displayName: 'div',
-            children: [{
-              displayName: '#text',
-              text: 'Bye.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+              ],
+            },
+            {
+              displayName: 'div',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Bye.',
+                },
+              ],
+            },
+          ],
         };
@@ -892,15 +997,22 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: 'div',
-            children: [{
-              displayName: '#text',
-              text: 'Bye.',
-            }],
-          }, {
-            displayName: 'div',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Bye.',
+                },
+              ],
+            },
+            {
+              displayName: 'div',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+              ],
+            },
+          ],
         };
@@ -922,15 +1034,22 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: 'div',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }],
-          }, {
-            displayName: 'div',
-            children: [{
-              displayName: '#text',
-              text: 'Bye.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+              ],
+            },
+            {
+              displayName: 'div',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Bye.',
+                },
+              ],
+            },
+          ],
         };
@@ -945,15 +1064,22 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: 'div',
-            children: [{
-              displayName: '#text',
-              text: 'Bye.',
-            }],
-          }, {
-            displayName: 'div',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Bye.',
+                },
+              ],
+            },
+            {
+              displayName: 'div',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+              ],
+            },
+          ],
         };
@@ -978,6 +1104,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: 'Foo',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [],
+            },
+          ],
         };
@@ -987,6 +1115,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1000,3 +1130,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates a single composite child of the same type', () => {
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1007,9 +1137,13 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: 'Foo',
-            children: [{
-              displayName: 'div',
-              children: [],
-            }],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [
+                {
+                  displayName: 'div',
+                  children: [],
+                },
+              ],
+            },
+          ],
         };
@@ -1019,9 +1153,13 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: 'Foo',
-            children: [{
-              displayName: 'span',
-              children: [],
-            }],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [
+                {
+                  displayName: 'span',
+                  children: [],
+                },
+              ],
+            },
+          ],
         };
@@ -1048,6 +1186,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: 'Foo',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [],
+            },
+          ],
         };
@@ -1068,6 +1208,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: 'Foo',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [],
+            },
+          ],
         };
@@ -1101,15 +1243,21 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: '#text',
-            text: 'hi',
-          }, {
-            displayName: '#text',
-            text: '42',
-          }, {
-            displayName: 'Foo',
-            children: [{
-              displayName: 'div',
-              children: [],
-            }],
-          }],
+          children: [
+            {
+              displayName: '#text',
+              text: 'hi',
+            },
+            {
+              displayName: '#text',
+              text: '42',
+            },
+            {
+              displayName: 'Foo',
+              children: [
+                {
+                  displayName: 'div',
+                  children: [],
+                },
+              ],
+            },
+          ],
         };
@@ -1126,12 +1274,17 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: 'Foo',
-            children: [{
-              displayName: 'div',
-              children: [],
-            }],
-          }, {
-            displayName: '#text',
-            text: 'hi',
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [
+                {
+                  displayName: 'div',
+                  children: [],
+                },
+              ],
+            },
+            {
+              displayName: '#text',
+              text: 'hi',
+            },
+          ],
         };
@@ -1145,9 +1298,13 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [{
-            displayName: 'Foo',
-            children: [{
-              displayName: 'div',
-              children: [],
-            }],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [
+                {
+                  displayName: 'div',
+                  children: [],
+                },
+              ],
+            },
+          ],
         };
@@ -1164,3 +1321,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates with a host child', () => {
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1171,6 +1328,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'div',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [],
+            },
+          ],
         };
@@ -1180,6 +1339,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'span',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'span',
+              children: [],
+            },
+          ],
         };
@@ -1193,3 +1354,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates from null to a host child', () => {
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1206,6 +1367,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'div',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [],
+            },
+          ],
         };
@@ -1219,3 +1382,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates from a host child to null', () => {
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1226,6 +1389,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'div',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [],
+            },
+          ],
         };
@@ -1249,3 +1414,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1256,6 +1421,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'div',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [],
+            },
+          ],
         };
@@ -1265,6 +1432,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1282,3 +1451,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1289,6 +1458,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1298,6 +1469,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'div',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [],
+            },
+          ],
         };
@@ -1315,3 +1488,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1328,6 +1501,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1345,3 +1520,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1352,6 +1527,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1382,6 +1559,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'div',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [],
+            },
+          ],
         };
@@ -1391,6 +1570,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'span',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'span',
+              children: [],
+            },
+          ],
         };
@@ -1419,6 +1600,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'div',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [],
+            },
+          ],
         };
@@ -1441,6 +1624,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'div',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [],
+            },
+          ],
         };
@@ -1475,6 +1660,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'div',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [],
+            },
+          ],
         };
@@ -1484,6 +1671,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1512,6 +1701,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1521,6 +1712,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'div',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'div',
+              children: [],
+            },
+          ],
         };
@@ -1555,6 +1748,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1583,6 +1778,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1618,24 +1815,35 @@ describe('ReactComponentTreeHook', () => {
       displayName: 'article',
-      children: [{
-        displayName: 'Foo',
-        children: [{
-          displayName: 'Bar',
-          ownerDisplayName: 'Foo',
-          children: [{
-            displayName: 'div',
-            ownerDisplayName: 'Bar',
-            children: [{
-              displayName: 'h1',
+      children: [
+        {
+          displayName: 'Foo',
+          children: [
+            {
+              displayName: 'Bar',
               ownerDisplayName: 'Foo',
-              children: [{
-                displayName: '#text',
-                text: 'Hi.',
-              }],
-            }, {
-              displayName: '#text',
-              text: ' Mom',
-            }],
-          }],
-        }],
-      }],
+              children: [
+                {
+                  displayName: 'div',
+                  ownerDisplayName: 'Bar',
+                  children: [
+                    {
+                      displayName: 'h1',
+                      ownerDisplayName: 'Foo',
+                      children: [
+                        {
+                          displayName: '#text',
+                          text: 'Hi.',
+                        },
+                      ],
+                    },
+                    {
+                      displayName: '#text',
+                      text: ' Mom',
+                    },
+                  ],
+                },
+              ],
+            },
+          ],
+        },
+      ],
     };
@@ -1665,8 +1873,12 @@ describe('ReactComponentTreeHook', () => {
     ReactDOM.render(<Foo />, node);
-    ReactComponentTreeTestUtils.expectTree(barInstance._debugID, {
-      displayName: 'Bar',
-      parentDisplayName: 'Foo',
-      parentID: fooInstance._debugID,
-      children: [],
-    }, 'Foo');
+    ReactComponentTreeTestUtils.expectTree(
+      barInstance._debugID,
+      {
+        displayName: 'Bar',
+        parentDisplayName: 'Foo',
+        parentID: fooInstance._debugID,
+        children: [],
+      },
+      'Foo',
+    );
 
@@ -1675,14 +1887,22 @@ describe('ReactComponentTreeHook', () => {
     ReactDOM.render(<Foo />, node);
-    ReactComponentTreeTestUtils.expectTree(barInstance._debugID, {
-      displayName: 'Unknown',
-      children: [],
-      parentID: null,
-    }, 'Foo');
+    ReactComponentTreeTestUtils.expectTree(
+      barInstance._debugID,
+      {
+        displayName: 'Unknown',
+        children: [],
+        parentID: null,
+      },
+      'Foo',
+    );
 
     ReactDOM.unmountComponentAtNode(node);
-    ReactComponentTreeTestUtils.expectTree(barInstance._debugID, {
-      displayName: 'Unknown',
-      children: [],
-      parentID: null,
-    }, 'Foo');
+    ReactComponentTreeTestUtils.expectTree(
+      barInstance._debugID,
+      {
+        displayName: 'Unknown',
+        children: [],
+        parentID: null,
+      },
+      'Foo',
+    );
   });
@@ -1732,3 +1952,6 @@ describe('ReactComponentTreeHook', () => {
     ReactDOM.render(<div>hi</div>, node);
-    expect(ReactComponentTreeTestUtils.getRegisteredDisplayNames()).toEqual(['div', '#text']);
+    expect(ReactComponentTreeTestUtils.getRegisteredDisplayNames()).toEqual([
+      'div',
+      '#text',
+    ]);
 
@@ -1755,17 +1978,7 @@ describe('ReactComponentTreeHook', () => {
 
-      expect(getAddendum()).toBe(
-        ''
-      );
-      expect(getAddendum(<div />)).toBe(
-        '\n    in div (at **)'
-      );
-      expect(getAddendum(<Anon />)).toBe(
-        '\n    in Unknown (at **)'
-      );
-      expect(getAddendum(<Orange />)).toBe(
-        '\n    in Orange (at **)'
-      );
-      expect(getAddendum(React.createElement(Orange))).toBe(
-        '\n    in Orange'
-      );
+      expect(getAddendum()).toBe('');
+      expect(getAddendum(<div />)).toBe('\n    in div (at **)');
+      expect(getAddendum(<Anon />)).toBe('\n    in Unknown (at **)');
+      expect(getAddendum(<Orange />)).toBe('\n    in Orange (at **)');
+      expect(getAddendum(React.createElement(Orange))).toBe('\n    in Orange');
 
@@ -1789,5 +2002,5 @@ describe('ReactComponentTreeHook', () => {
             '\n    in S (at **)' +
-            '\n    in div (at **)' +
-            '\n    in R (created by Q)' +
-            '\n    in Q (at **)'
+              '\n    in div (at **)' +
+              '\n    in R (created by Q)' +
+              '\n    in Q (at **)',
           );
@@ -1795,6 +2008,6 @@ describe('ReactComponentTreeHook', () => {
             '\n    in span (at **)' +
-            '\n    in S (at **)' +
-            '\n    in div (at **)' +
-            '\n    in R (created by Q)' +
-            '\n    in Q (at **)'
+              '\n    in S (at **)' +
+              '\n    in div (at **)' +
+              '\n    in R (created by Q)' +
+              '\n    in Q (at **)',
           );
@@ -1802,6 +2015,6 @@ describe('ReactComponentTreeHook', () => {
             '\n    in span (created by S)' +
-            '\n    in S (at **)' +
-            '\n    in div (at **)' +
-            '\n    in R (created by Q)' +
-            '\n    in Q (at **)'
+              '\n    in S (at **)' +
+              '\n    in div (at **)' +
+              '\n    in R (created by Q)' +
+              '\n    in Q (at **)',
           );
@@ -1815,5 +2028,3 @@ describe('ReactComponentTreeHook', () => {
       // Make sure owner is fetched for the top element too.
-      expect(getAddendum(rOwnedByQ)).toBe(
-        '\n    in R (created by Q)'
-      );
+      expect(getAddendum(rOwnedByQ)).toBe('\n    in R (created by Q)');
     });
@@ -1834,3 +2045,3 @@ describe('ReactComponentTreeHook', () => {
       expect(getAddendum(ReactInstanceMap.get(q)._debugID)).toBe(
-        '\n    in Q (at **)'
+        '\n    in Q (at **)',
       );
@@ -1842,3 +2053,3 @@ describe('ReactComponentTreeHook', () => {
         'Warning: ReactComponentTreeHook: Missing React element for ' +
-        'debugID -17 when building stack'
+          'debugID -17 when building stack',
       );
@@ -1945,38 +2156,55 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: 'div',
-          children: [{
-            displayName: 'Foo',
-            element: <Foo />,
-            children: [{
-              displayName: 'Qux',
-              element: <Qux />,
-              children: [],
-            }],
-          }, {
-            displayName: 'Bar',
-            children: [{
-              displayName: 'h1',
-              children: [{
-                displayName: 'span',
-                children: [{
-                  displayName: '#text',
-                  element: 'Hi,',
-                  text: 'Hi,',
-                }],
-              }, {
-                displayName: '#text',
-                text: 'Mom',
-                element: 'Mom',
-              }],
-            }],
-          }, {
-            displayName: 'a',
-            children: [{
-              displayName: '#text',
-              text: 'Click me.',
-              element: 'Click me.',
-            }],
-          }],
-        }],
+        children: [
+          {
+            displayName: 'div',
+            children: [
+              {
+                displayName: 'Foo',
+                element: <Foo />,
+                children: [
+                  {
+                    displayName: 'Qux',
+                    element: <Qux />,
+                    children: [],
+                  },
+                ],
+              },
+              {
+                displayName: 'Bar',
+                children: [
+                  {
+                    displayName: 'h1',
+                    children: [
+                      {
+                        displayName: 'span',
+                        children: [
+                          {
+                            displayName: '#text',
+                            element: 'Hi,',
+                            text: 'Hi,',
+                          },
+                        ],
+                      },
+                      {
+                        displayName: '#text',
+                        text: 'Mom',
+                        element: 'Mom',
+                      },
+                    ],
+                  },
+                ],
+              },
+              {
+                displayName: 'a',
+                children: [
+                  {
+                    displayName: '#text',
+                    text: 'Click me.',
+                    element: 'Click me.',
+                  },
+                ],
+              },
+            ],
+          },
+        ],
       };
diff --git a/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.native.js b/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.native.js
index bdbf4c549..15cbde7b5 100644
--- a/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.native.js
+++ b/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.native.js
@@ -14,2 +14,3 @@
 describe('ReactComponentTreeHook', () => {
+  var PropTypes;
   var React;
@@ -27,2 +28,3 @@ describe('ReactComponentTreeHook', () => {
 
+    PropTypes = require('prop-types');
     React = require('React');
@@ -44,3 +46,3 @@ describe('ReactComponentTreeHook', () => {
       static childContextTypes = {
-        isInAParentText: React.PropTypes.bool,
+        isInAParentText: PropTypes.bool,
       };
@@ -151,12 +153,16 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: 'Bar',
-          children: [],
-        }, {
-          displayName: 'Baz',
-          children: [],
-        }, {
-          displayName: 'Unknown',
-          children: [],
-        }],
+        children: [
+          {
+            displayName: 'Bar',
+            children: [],
+          },
+          {
+            displayName: 'Baz',
+            children: [],
+          },
+          {
+            displayName: 'Unknown',
+            children: [],
+          },
+        ],
       };
@@ -187,13 +193,17 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'View',
-        children: [{
-          displayName: 'Bar',
-          children: [],
-        }, {
-          displayName: 'Baz',
-          children: [],
-        }, {
-          // Note: Ideally fallback name should be consistent (e.g. "Unknown")
-          displayName: 'ReactComponent',
-          children: [],
-        }],
+        children: [
+          {
+            displayName: 'Bar',
+            children: [],
+          },
+          {
+            displayName: 'Baz',
+            children: [],
+          },
+          {
+            // Note: Ideally fallback name should be consistent (e.g. "Unknown")
+            displayName: 'ReactComponent',
+            children: [],
+          },
+        ],
       };
@@ -230,12 +240,16 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'View',
-        children: [{
-          displayName: 'Bar',
-          children: [],
-        }, {
-          displayName: 'Baz',
-          children: [],
-        }, {
-          displayName: 'Unknown',
-          children: [],
-        }],
+        children: [
+          {
+            displayName: 'Bar',
+            children: [],
+          },
+          {
+            displayName: 'Baz',
+            children: [],
+          },
+          {
+            displayName: 'Unknown',
+            children: [],
+          },
+        ],
       };
@@ -260,12 +274,16 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'View',
-        children: [{
-          displayName: 'Bar',
-          children: [],
-        }, {
-          displayName: 'Baz',
-          children: [],
-        }, {
-          displayName: 'Unknown',
-          children: [],
-        }],
+        children: [
+          {
+            displayName: 'Bar',
+            children: [],
+          },
+          {
+            displayName: 'Baz',
+            children: [],
+          },
+          {
+            displayName: 'Unknown',
+            children: [],
+          },
+        ],
       };
@@ -288,20 +306,29 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: 'View',
-          children: [{
-            displayName: 'Text',
-            children: [{
-              displayName: 'RCText',
-              children: [{
-                displayName: '#text',
-                element: 'Hi!',
-                text: 'Hi!',
-              }],
-            }],
-          }],
-        }, {
-          displayName: 'Image',
-          element: <Image />,
-          children: [],
-        }],
+        children: [
+          {
+            displayName: 'View',
+            children: [
+              {
+                displayName: 'Text',
+                children: [
+                  {
+                    displayName: 'RCText',
+                    children: [
+                      {
+                        displayName: '#text',
+                        element: 'Hi!',
+                        text: 'Hi!',
+                      },
+                    ],
+                  },
+                ],
+              },
+            ],
+          },
+          {
+            displayName: 'Image',
+            element: <Image />,
+            children: [],
+          },
+        ],
       };
@@ -321,7 +348,9 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: 'Image',
-          element: <Image />,
-          children: [],
-        }],
+        children: [
+          {
+            displayName: 'Image',
+            element: <Image />,
+            children: [],
+          },
+        ],
       };
@@ -365,34 +394,50 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: 'View',
-          children: [{
-            displayName: 'Foo',
-            element: <Foo />,
-            children: [{
-              displayName: 'Qux',
-              element: <Qux />,
-              children: [],
-            }],
-          }, {
-            displayName: 'Bar',
-            children: [{
-              displayName: 'View',
-              children: [{
-                displayName: 'Text',
-                children: [{
-                  displayName: 'RCText',
-                  children: [{
-                    displayName: '#text',
-                    element: 'Hi,',
-                    text: 'Hi,',
-                  }],
-                }],
-              }],
-            }],
-          }, {
-            displayName: 'Image',
-            element: <Image />,
-            children: [],
-          }],
-        }],
+        children: [
+          {
+            displayName: 'View',
+            children: [
+              {
+                displayName: 'Foo',
+                element: <Foo />,
+                children: [
+                  {
+                    displayName: 'Qux',
+                    element: <Qux />,
+                    children: [],
+                  },
+                ],
+              },
+              {
+                displayName: 'Bar',
+                children: [
+                  {
+                    displayName: 'View',
+                    children: [
+                      {
+                        displayName: 'Text',
+                        children: [
+                          {
+                            displayName: 'RCText',
+                            children: [
+                              {
+                                displayName: '#text',
+                                element: 'Hi,',
+                                text: 'Hi,',
+                              },
+                            ],
+                          },
+                        ],
+                      },
+                    ],
+                  },
+                ],
+              },
+              {
+                displayName: 'Image',
+                element: <Image />,
+                children: [],
+              },
+            ],
+          },
+        ],
       };
@@ -433,12 +478,17 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'Text',
-        children: [{
-          displayName: 'RCText',
-          children: [{
-            displayName: '#text',
-            text: '1',
-          }, {
-            displayName: '#text',
-            text: '2',
-          }],
-        }],
+        children: [
+          {
+            displayName: 'RCText',
+            children: [
+              {
+                displayName: '#text',
+                text: '1',
+              },
+              {
+                displayName: '#text',
+                text: '2',
+              },
+            ],
+          },
+        ],
       };
@@ -451,9 +501,13 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'Text',
-        children: [{
-          displayName: 'RCText',
-          children: [{
-            displayName: '#text',
-            text: '1',
-          }],
-        }],
+        children: [
+          {
+            displayName: 'RCText',
+            children: [
+              {
+                displayName: '#text',
+                text: '1',
+              },
+            ],
+          },
+        ],
       };
@@ -466,9 +520,13 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'Text',
-        children: [{
-          displayName: 'RCText',
-          children: [{
-            displayName: '#text',
-            text: '42',
-          }],
-        }],
+        children: [
+          {
+            displayName: 'RCText',
+            children: [
+              {
+                displayName: '#text',
+                text: '42',
+              },
+            ],
+          },
+        ],
       };
@@ -481,9 +539,13 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'Text',
-        children: [{
-          displayName: 'RCText',
-          children: [{
-            displayName: '#text',
-            text: '0',
-          }],
-        }],
+        children: [
+          {
+            displayName: 'RCText',
+            children: [
+              {
+                displayName: '#text',
+                text: '0',
+              },
+            ],
+          },
+        ],
       };
@@ -507,19 +569,26 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [{
-          displayName: 'Foo',
-          element: <Foo />,
-          children: [{
-            displayName: 'Image',
-            element: <Image />,
-            children: [],
-          }],
-        }, {
-          displayName: 'Foo',
-          element: <Foo />,
-          children: [{
-            displayName: 'Image',
-            element: <Image />,
-            children: [],
-          }],
-        }],
+        children: [
+          {
+            displayName: 'Foo',
+            element: <Foo />,
+            children: [
+              {
+                displayName: 'Image',
+                element: <Image />,
+                children: [],
+              },
+            ],
+          },
+          {
+            displayName: 'Foo',
+            element: <Foo />,
+            children: [
+              {
+                displayName: 'Image',
+                element: <Image />,
+                children: [],
+              },
+            ],
+          },
+        ],
       };
@@ -535,9 +604,13 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+              ],
+            },
+          ],
         };
@@ -547,9 +620,13 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [{
-              displayName: '#text',
-              text: 'Bye.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Bye.',
+                },
+              ],
+            },
+          ],
         };
@@ -566,6 +643,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [],
+            },
+          ],
         };
@@ -575,9 +654,13 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+              ],
+            },
+          ],
         };
@@ -594,9 +677,13 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+              ],
+            },
+          ],
         };
@@ -606,6 +693,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [],
+            },
+          ],
         };
@@ -622,6 +711,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [],
+            },
+          ],
         };
@@ -631,12 +722,17 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }, {
-              displayName: '#text',
-              text: 'Bye.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+                {
+                  displayName: '#text',
+                  text: 'Bye.',
+                },
+              ],
+            },
+          ],
         };
@@ -653,12 +749,17 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }, {
-              displayName: '#text',
-              text: 'Bye.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+                {
+                  displayName: '#text',
+                  text: 'Bye.',
+                },
+              ],
+            },
+          ],
         };
@@ -668,6 +769,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [],
+            },
+          ],
         };
@@ -683,9 +786,13 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+              ],
+            },
+          ],
         };
@@ -695,12 +802,17 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }, {
-              displayName: '#text',
-              text: 'Bye.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+                {
+                  displayName: '#text',
+                  text: 'Bye.',
+                },
+              ],
+            },
+          ],
         };
@@ -717,12 +829,17 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }, {
-              displayName: '#text',
-              text: 'Bye.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+                {
+                  displayName: '#text',
+                  text: 'Bye.',
+                },
+              ],
+            },
+          ],
         };
@@ -732,9 +849,13 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+              ],
+            },
+          ],
         };
@@ -750,12 +871,17 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [{
-              displayName: '#text',
-              text: 'Hi.',
-            }, {
-              displayName: '#text',
-              text: 'Bye.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+                {
+                  displayName: '#text',
+                  text: 'Bye.',
+                },
+              ],
+            },
+          ],
         };
@@ -765,12 +891,17 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [{
-            displayName: 'RCText',
-            children: [{
-              displayName: '#text',
-              text: 'Bye.',
-            }, {
-              displayName: '#text',
-              text: 'Hi.',
-            }],
-          }],
+          children: [
+            {
+              displayName: 'RCText',
+              children: [
+                {
+                  displayName: '#text',
+                  text: 'Bye.',
+                },
+                {
+                  displayName: '#text',
+                  text: 'Hi.',
+                },
+              ],
+            },
+          ],
         };
@@ -791,21 +922,32 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Text',
-            children: [{
-              displayName: 'RCText',
-              children: [{
-                displayName: '#text',
-                text: 'Hi.',
-              }],
-            }],
-          }, {
-            displayName: 'Text',
-            children: [{
-              displayName: 'RCText',
-              children: [{
-                displayName: '#text',
-                text: 'Bye.',
-              }],
-            }],
-          }],
+          children: [
+            {
+              displayName: 'Text',
+              children: [
+                {
+                  displayName: 'RCText',
+                  children: [
+                    {
+                      displayName: '#text',
+                      text: 'Hi.',
+                    },
+                  ],
+                },
+              ],
+            },
+            {
+              displayName: 'Text',
+              children: [
+                {
+                  displayName: 'RCText',
+                  children: [
+                    {
+                      displayName: '#text',
+                      text: 'Bye.',
+                    },
+                  ],
+                },
+              ],
+            },
+          ],
         };
@@ -820,21 +962,32 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Text',
-            children: [{
-              displayName: 'RCText',
-              children: [{
-                displayName: '#text',
-                text: 'Bye.',
-              }],
-            }],
-          }, {
-            displayName: 'Text',
-            children: [{
-              displayName: 'RCText',
-              children: [{
-                displayName: '#text',
-                text: 'Hi.',
-              }],
-            }],
-          }],
+          children: [
+            {
+              displayName: 'Text',
+              children: [
+                {
+                  displayName: 'RCText',
+                  children: [
+                    {
+                      displayName: '#text',
+                      text: 'Bye.',
+                    },
+                  ],
+                },
+              ],
+            },
+            {
+              displayName: 'Text',
+              children: [
+                {
+                  displayName: 'RCText',
+                  children: [
+                    {
+                      displayName: '#text',
+                      text: 'Hi.',
+                    },
+                  ],
+                },
+              ],
+            },
+          ],
         };
@@ -856,21 +1009,32 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Text',
-            children: [{
-              displayName: 'RCText',
-              children: [{
-                displayName: '#text',
-                text: 'Hi.',
-              }],
-            }],
-          }, {
-            displayName: 'Text',
-            children: [{
-              displayName: 'RCText',
-              children: [{
-                displayName: '#text',
-                text: 'Bye.',
-              }],
-            }],
-          }],
+          children: [
+            {
+              displayName: 'Text',
+              children: [
+                {
+                  displayName: 'RCText',
+                  children: [
+                    {
+                      displayName: '#text',
+                      text: 'Hi.',
+                    },
+                  ],
+                },
+              ],
+            },
+            {
+              displayName: 'Text',
+              children: [
+                {
+                  displayName: 'RCText',
+                  children: [
+                    {
+                      displayName: '#text',
+                      text: 'Bye.',
+                    },
+                  ],
+                },
+              ],
+            },
+          ],
         };
@@ -885,21 +1049,32 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Text',
-            children: [{
-              displayName: 'RCText',
-              children: [{
-                displayName: '#text',
-                text: 'Bye.',
-              }],
-            }],
-          }, {
-            displayName: 'Text',
-            children: [{
-              displayName: 'RCText',
-              children: [{
-                displayName: '#text',
-                text: 'Hi.',
-              }],
-            }],
-          }],
+          children: [
+            {
+              displayName: 'Text',
+              children: [
+                {
+                  displayName: 'RCText',
+                  children: [
+                    {
+                      displayName: '#text',
+                      text: 'Bye.',
+                    },
+                  ],
+                },
+              ],
+            },
+            {
+              displayName: 'Text',
+              children: [
+                {
+                  displayName: 'RCText',
+                  children: [
+                    {
+                      displayName: '#text',
+                      text: 'Hi.',
+                    },
+                  ],
+                },
+              ],
+            },
+          ],
         };
@@ -924,6 +1099,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Foo',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [],
+            },
+          ],
         };
@@ -933,6 +1110,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -946,3 +1125,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates a single composite child of the same type', () => {
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -953,9 +1132,13 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Foo',
-            children: [{
-              displayName: 'View',
-              children: [],
-            }],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [
+                {
+                  displayName: 'View',
+                  children: [],
+                },
+              ],
+            },
+          ],
         };
@@ -965,9 +1148,13 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Foo',
-            children: [{
-              displayName: 'Image',
-              children: [],
-            }],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [
+                {
+                  displayName: 'Image',
+                  children: [],
+                },
+              ],
+            },
+          ],
         };
@@ -994,6 +1181,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Foo',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [],
+            },
+          ],
         };
@@ -1014,6 +1203,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Foo',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [],
+            },
+          ],
         };
@@ -1047,27 +1238,41 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Text',
-            children: [{
-              displayName: 'RCText',
-              children: [{
-                displayName: '#text',
-                text: 'hi',
-              }],
-            }],
-          }, {
-            displayName: 'Text',
-            children: [{
-              displayName: 'RCText',
-              children: [{
-                displayName: '#text',
-                text: '42',
-              }],
-            }],
-          }, {
-            displayName: 'Foo',
-            children: [{
-              displayName: 'View',
-              children: [],
-            }],
-          }],
+          children: [
+            {
+              displayName: 'Text',
+              children: [
+                {
+                  displayName: 'RCText',
+                  children: [
+                    {
+                      displayName: '#text',
+                      text: 'hi',
+                    },
+                  ],
+                },
+              ],
+            },
+            {
+              displayName: 'Text',
+              children: [
+                {
+                  displayName: 'RCText',
+                  children: [
+                    {
+                      displayName: '#text',
+                      text: '42',
+                    },
+                  ],
+                },
+              ],
+            },
+            {
+              displayName: 'Foo',
+              children: [
+                {
+                  displayName: 'View',
+                  children: [],
+                },
+              ],
+            },
+          ],
         };
@@ -1084,18 +1289,27 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Foo',
-            children: [{
-              displayName: 'View',
-              children: [],
-            }],
-          }, {
-            displayName: 'Text',
-            children: [{
-              displayName: 'RCText',
-              children: [{
-                displayName: '#text',
-                text: 'hi',
-              }],
-            }],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [
+                {
+                  displayName: 'View',
+                  children: [],
+                },
+              ],
+            },
+            {
+              displayName: 'Text',
+              children: [
+                {
+                  displayName: 'RCText',
+                  children: [
+                    {
+                      displayName: '#text',
+                      text: 'hi',
+                    },
+                  ],
+                },
+              ],
+            },
+          ],
         };
@@ -1109,9 +1323,13 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [{
-            displayName: 'Foo',
-            children: [{
-              displayName: 'View',
-              children: [],
-            }],
-          }],
+          children: [
+            {
+              displayName: 'Foo',
+              children: [
+                {
+                  displayName: 'View',
+                  children: [],
+                },
+              ],
+            },
+          ],
         };
@@ -1128,3 +1346,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates with a host child', () => {
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1135,6 +1353,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'View',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'View',
+              children: [],
+            },
+          ],
         };
@@ -1144,6 +1364,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Image',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Image',
+              children: [],
+            },
+          ],
         };
@@ -1157,3 +1379,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates from null to a host child', () => {
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1170,6 +1392,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'View',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'View',
+              children: [],
+            },
+          ],
         };
@@ -1183,3 +1407,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates from a host child to null', () => {
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1190,6 +1414,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'View',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'View',
+              children: [],
+            },
+          ],
         };
@@ -1213,3 +1439,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1220,6 +1446,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'View',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'View',
+              children: [],
+            },
+          ],
         };
@@ -1229,6 +1457,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1246,3 +1476,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1253,6 +1483,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1262,6 +1494,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'View',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'View',
+              children: [],
+            },
+          ],
         };
@@ -1279,3 +1513,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1292,6 +1526,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1309,3 +1545,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({ children }) {
+        function Foo({children}) {
           return children;
@@ -1316,6 +1552,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1346,6 +1584,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'View',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'View',
+              children: [],
+            },
+          ],
         };
@@ -1355,6 +1595,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Image',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Image',
+              children: [],
+            },
+          ],
         };
@@ -1383,6 +1625,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'View',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'View',
+              children: [],
+            },
+          ],
         };
@@ -1405,6 +1649,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'View',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'View',
+              children: [],
+            },
+          ],
         };
@@ -1439,6 +1685,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'View',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'View',
+              children: [],
+            },
+          ],
         };
@@ -1448,6 +1696,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1476,6 +1726,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1485,6 +1737,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'View',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'View',
+              children: [],
+            },
+          ],
         };
@@ -1519,6 +1773,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1547,6 +1803,8 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [{
-            displayName: 'Bar',
-            children: [],
-          }],
+          children: [
+            {
+              displayName: 'Bar',
+              children: [],
+            },
+          ],
         };
@@ -1582,36 +1840,53 @@ describe('ReactComponentTreeHook', () => {
       displayName: 'View',
-      children: [{
-        displayName: 'Foo',
-        children: [{
-          displayName: 'Bar',
-          ownerDisplayName: 'Foo',
-          children: [{
-            displayName: 'View',
-            ownerDisplayName: 'Bar',
-            children: [{
-              displayName: 'Text',
+      children: [
+        {
+          displayName: 'Foo',
+          children: [
+            {
+              displayName: 'Bar',
               ownerDisplayName: 'Foo',
-              children: [{
-                displayName: 'RCText',
-                ownerDisplayName: 'Text',
-                children: [{
-                  displayName: '#text',
-                  text: 'Hi.',
-                }],
-              }],
-            }, {
-              displayName: 'Text',
-              ownerDisplayName: 'Bar',
-              children: [{
-                displayName: 'RCText',
-                ownerDisplayName: 'Text',
-                children: [{
-                  displayName: '#text',
-                  text: 'Mom',
-                }],
-              }],
-            }],
-          }],
-        }],
-      }],
+              children: [
+                {
+                  displayName: 'View',
+                  ownerDisplayName: 'Bar',
+                  children: [
+                    {
+                      displayName: 'Text',
+                      ownerDisplayName: 'Foo',
+                      children: [
+                        {
+                          displayName: 'RCText',
+                          ownerDisplayName: 'Text',
+                          children: [
+                            {
+                              displayName: '#text',
+                              text: 'Hi.',
+                            },
+                          ],
+                        },
+                      ],
+                    },
+                    {
+                      displayName: 'Text',
+                      ownerDisplayName: 'Bar',
+                      children: [
+                        {
+                          displayName: 'RCText',
+                          ownerDisplayName: 'Text',
+                          children: [
+                            {
+                              displayName: '#text',
+                              text: 'Mom',
+                            },
+                          ],
+                        },
+                      ],
+                    },
+                  ],
+                },
+              ],
+            },
+          ],
+        },
+      ],
     };
@@ -1640,8 +1915,12 @@ describe('ReactComponentTreeHook', () => {
     ReactNative.render(<Foo />, 1);
-    ReactComponentTreeTestUtils.expectTree(barInstance._debugID, {
-      displayName: 'Bar',
-      parentDisplayName: 'Foo',
-      parentID: fooInstance._debugID,
-      children: [],
-    }, 'Foo');
+    ReactComponentTreeTestUtils.expectTree(
+      barInstance._debugID,
+      {
+        displayName: 'Bar',
+        parentDisplayName: 'Foo',
+        parentID: fooInstance._debugID,
+        children: [],
+      },
+      'Foo',
+    );
 
@@ -1649,14 +1928,22 @@ describe('ReactComponentTreeHook', () => {
     ReactNative.render(<Foo />, 1);
-    ReactComponentTreeTestUtils.expectTree(barInstance._debugID, {
-      displayName: 'Unknown',
-      children: [],
-      parentID: null,
-    }, 'Foo');
+    ReactComponentTreeTestUtils.expectTree(
+      barInstance._debugID,
+      {
+        displayName: 'Unknown',
+        children: [],
+        parentID: null,
+      },
+      'Foo',
+    );
 
     ReactNative.unmountComponentAtNode(1);
-    ReactComponentTreeTestUtils.expectTree(barInstance._debugID, {
-      displayName: 'Unknown',
-      children: [],
-      parentID: null,
-    }, 'Foo');
+    ReactComponentTreeTestUtils.expectTree(
+      barInstance._debugID,
+      {
+        displayName: 'Unknown',
+        children: [],
+        parentID: null,
+      },
+      'Foo',
+    );
   });
diff --git a/src/renderers/shared/hooks/__tests__/ReactHostOperationHistoryHook-test.js b/src/renderers/shared/hooks/__tests__/ReactHostOperationHistoryHook-test.js
index c3e8d1773..87877916a 100644
--- a/src/renderers/shared/hooks/__tests__/ReactHostOperationHistoryHook-test.js
+++ b/src/renderers/shared/hooks/__tests__/ReactHostOperationHistoryHook-test.js
@@ -50,9 +50,11 @@ describe('ReactHostOperationHistoryHook', () => {
       var inst = ReactDOMComponentTree.getInstanceFromNode(node.firstChild);
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'mount',
-        payload: ReactDOMFeatureFlags.useCreateElement ?
-          'DIV' :
-          '<div data-reactroot="" data-reactid="1"><p data-reactid="2">Hi.</p></div>',
-      }]);
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'mount',
+          payload: ReactDOMFeatureFlags.useCreateElement
+            ? 'DIV'
+            : '<div data-reactroot="" data-reactid="1"><p data-reactid="2">Hi.</p></div>',
+        },
+      ]);
     });
@@ -69,10 +71,12 @@ describe('ReactHostOperationHistoryHook', () => {
       var inst = ReactDOMComponentTree.getInstanceFromNode(node.firstChild);
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'mount',
-        payload: ReactDOMFeatureFlags.useCreateElement ?
-          'DIV' :
-          '<div data-reactroot="" data-reactid="1">' +
-          '<p data-reactid="2">Hi.</p></div>',
-      }]);
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'mount',
+          payload: ReactDOMFeatureFlags.useCreateElement
+            ? 'DIV'
+            : '<div data-reactroot="" data-reactid="1">' +
+                '<p data-reactid="2">Hi.</p></div>',
+        },
+      ]);
     });
@@ -110,7 +114,9 @@ describe('ReactHostOperationHistoryHook', () => {
       // we record a "mount" event rather than a "replace with".
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'mount',
-        payload: 'SPAN',
-      }]);
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'mount',
+          payload: 'SPAN',
+        },
+      ]);
     });
@@ -123,6 +129,11 @@ describe('ReactHostOperationHistoryHook', () => {
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(<div style={{
-        color: 'red',
-        backgroundColor: 'yellow',
-      }} />, node);
+      ReactDOM.render(
+        <div
+          style={{
+            color: 'red',
+            backgroundColor: 'yellow',
+          }}
+        />,
+        node,
+      );
 
@@ -130,21 +141,27 @@ describe('ReactHostOperationHistoryHook', () => {
       if (ReactDOMFeatureFlags.useCreateElement) {
-        assertHistoryMatches([{
-          instanceID: inst._debugID,
-          type: 'update styles',
-          payload: {
-            color: 'red',
-            backgroundColor: 'yellow',
+        assertHistoryMatches([
+          {
+            instanceID: inst._debugID,
+            type: 'update styles',
+            payload: {
+              color: 'red',
+              backgroundColor: 'yellow',
+            },
           },
-        }, {
-          instanceID: inst._debugID,
-          type: 'mount',
-          payload: 'DIV',
-        }]);
+          {
+            instanceID: inst._debugID,
+            type: 'mount',
+            payload: 'DIV',
+          },
+        ]);
       } else {
-        assertHistoryMatches([{
-          instanceID: inst._debugID,
-          type: 'mount',
-          payload: '<div style="color:red;background-color:yellow;" ' +
-          'data-reactroot="" data-reactid="1"></div>',
-        }]);
+        assertHistoryMatches([
+          {
+            instanceID: inst._debugID,
+            type: 'mount',
+            payload:
+              '<div style="color:red;background-color:yellow;" ' +
+                'data-reactroot="" data-reactid="1"></div>',
+          },
+        ]);
       }
@@ -158,27 +175,37 @@ describe('ReactHostOperationHistoryHook', () => {
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(<div style={{ color: 'red' }} />, node);
-      ReactDOM.render(<div style={{
-        color: 'blue',
-        backgroundColor: 'yellow',
-      }} />, node);
-      ReactDOM.render(<div style={{ backgroundColor: 'green' }} />, node);
+      ReactDOM.render(<div style={{color: 'red'}} />, node);
+      ReactDOM.render(
+        <div
+          style={{
+            color: 'blue',
+            backgroundColor: 'yellow',
+          }}
+        />,
+        node,
+      );
+      ReactDOM.render(<div style={{backgroundColor: 'green'}} />, node);
       ReactDOM.render(<div />, node);
 
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'update styles',
-        payload: { color: 'red' },
-      }, {
-        instanceID: inst._debugID,
-        type: 'update styles',
-        payload: { color: 'blue', backgroundColor: 'yellow' },
-      }, {
-        instanceID: inst._debugID,
-        type: 'update styles',
-        payload: { color: '', backgroundColor: 'green' },
-      }, {
-        instanceID: inst._debugID,
-        type: 'update styles',
-        payload: { backgroundColor: '' },
-      }]);
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'update styles',
+          payload: {color: 'red'},
+        },
+        {
+          instanceID: inst._debugID,
+          type: 'update styles',
+          payload: {color: 'blue', backgroundColor: 'yellow'},
+        },
+        {
+          instanceID: inst._debugID,
+          type: 'update styles',
+          payload: {color: '', backgroundColor: 'green'},
+        },
+        {
+          instanceID: inst._debugID,
+          type: 'update styles',
+          payload: {backgroundColor: ''},
+        },
+      ]);
     });
@@ -191,19 +218,31 @@ describe('ReactHostOperationHistoryHook', () => {
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(<div style={{
-        color: 'red',
-        backgroundColor: 'yellow',
-      }} />, node);
-      ReactDOM.render(<div style={{
-        color: 'red',
-        backgroundColor: 'yellow',
-      }} />, node);
-
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'update styles',
-        payload: {
-          color: 'red',
-          backgroundColor: 'yellow',
+      ReactDOM.render(
+        <div
+          style={{
+            color: 'red',
+            backgroundColor: 'yellow',
+          }}
+        />,
+        node,
+      );
+      ReactDOM.render(
+        <div
+          style={{
+            color: 'red',
+            backgroundColor: 'yellow',
+          }}
+        />,
+        node,
+      );
+
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'update styles',
+          payload: {
+            color: 'red',
+            backgroundColor: 'yellow',
+          },
         },
-      }]);
+      ]);
     });
@@ -221,22 +260,29 @@ describe('ReactHostOperationHistoryHook', () => {
         if (ReactDOMFeatureFlags.useCreateElement) {
-          assertHistoryMatches([{
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: { className: 'rad' },
-          }, {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: { tabIndex: 42 },
-          }, {
-            instanceID: inst._debugID,
-            type: 'mount',
-            payload: 'DIV',
-          }]);
+          assertHistoryMatches([
+            {
+              instanceID: inst._debugID,
+              type: 'update attribute',
+              payload: {className: 'rad'},
+            },
+            {
+              instanceID: inst._debugID,
+              type: 'update attribute',
+              payload: {tabIndex: 42},
+            },
+            {
+              instanceID: inst._debugID,
+              type: 'mount',
+              payload: 'DIV',
+            },
+          ]);
         } else {
-          assertHistoryMatches([{
-            instanceID: inst._debugID,
-            type: 'mount',
-            payload: '<div class="rad" tabindex="42" data-reactroot="" ' +
-            'data-reactid="1"></div>',
-          }]);
+          assertHistoryMatches([
+            {
+              instanceID: inst._debugID,
+              type: 'mount',
+              payload:
+                '<div class="rad" tabindex="42" data-reactroot="" ' +
+                  'data-reactid="1"></div>',
+            },
+          ]);
         }
@@ -254,23 +300,29 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([{
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { className: 'rad' },
-        }, {
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { className: 'mad' },
-        }, {
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { tabIndex: 42 },
-        }, {
-          instanceID: inst._debugID,
-          type: 'remove attribute',
-          payload: 'className',
-        }, {
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { tabIndex: 43 },
-        }]);
+        assertHistoryMatches([
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {className: 'rad'},
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {className: 'mad'},
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {tabIndex: 42},
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'remove attribute',
+            payload: 'className',
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {tabIndex: 43},
+          },
+        ]);
       });
@@ -288,11 +340,14 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([{
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { disabled: true },
-        }, {
-          instanceID: inst._debugID,
-          type: 'remove attribute',
-          payload: 'disabled',
-        }]);
+        assertHistoryMatches([
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {disabled: true},
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'remove attribute',
+            payload: 'disabled',
+          },
+        ]);
       });
@@ -309,22 +364,29 @@ describe('ReactHostOperationHistoryHook', () => {
         if (ReactDOMFeatureFlags.useCreateElement) {
-          assertHistoryMatches([{
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: { 'data-x': 'rad' },
-          }, {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: { 'data-y': 42 },
-          }, {
-            instanceID: inst._debugID,
-            type: 'mount',
-            payload: 'DIV',
-          }]);
+          assertHistoryMatches([
+            {
+              instanceID: inst._debugID,
+              type: 'update attribute',
+              payload: {'data-x': 'rad'},
+            },
+            {
+              instanceID: inst._debugID,
+              type: 'update attribute',
+              payload: {'data-y': 42},
+            },
+            {
+              instanceID: inst._debugID,
+              type: 'mount',
+              payload: 'DIV',
+            },
+          ]);
         } else {
-          assertHistoryMatches([{
-            instanceID: inst._debugID,
-            type: 'mount',
-            payload: '<div data-x="rad" data-y="42" data-reactroot="" ' +
-            'data-reactid="1"></div>',
-          }]);
+          assertHistoryMatches([
+            {
+              instanceID: inst._debugID,
+              type: 'mount',
+              payload:
+                '<div data-x="rad" data-y="42" data-reactroot="" ' +
+                  'data-reactid="1"></div>',
+            },
+          ]);
         }
@@ -342,23 +404,29 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([{
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { 'data-x': 'rad' },
-        }, {
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { 'data-x': 'mad' },
-        }, {
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { 'data-y': 42 },
-        }, {
-          instanceID: inst._debugID,
-          type: 'remove attribute',
-          payload: 'data-x',
-        }, {
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { 'data-y': 43 },
-        }]);
+        assertHistoryMatches([
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {'data-x': 'rad'},
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {'data-x': 'mad'},
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {'data-y': 42},
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'remove attribute',
+            payload: 'data-x',
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {'data-y': 43},
+          },
+        ]);
       });
@@ -375,22 +443,29 @@ describe('ReactHostOperationHistoryHook', () => {
         if (ReactDOMFeatureFlags.useCreateElement) {
-          assertHistoryMatches([{
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: { className: 'rad' },
-          }, {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: { tabIndex: 42 },
-          }, {
-            instanceID: inst._debugID,
-            type: 'mount',
-            payload: 'MY-COMPONENT',
-          }]);
+          assertHistoryMatches([
+            {
+              instanceID: inst._debugID,
+              type: 'update attribute',
+              payload: {className: 'rad'},
+            },
+            {
+              instanceID: inst._debugID,
+              type: 'update attribute',
+              payload: {tabIndex: 42},
+            },
+            {
+              instanceID: inst._debugID,
+              type: 'mount',
+              payload: 'MY-COMPONENT',
+            },
+          ]);
         } else {
-          assertHistoryMatches([{
-            instanceID: inst._debugID,
-            type: 'mount',
-            payload: '<my-component className="rad" tabIndex="42" ' +
-            'data-reactroot="" data-reactid="1"></my-component>',
-          }]);
+          assertHistoryMatches([
+            {
+              instanceID: inst._debugID,
+              type: 'mount',
+              payload:
+                '<my-component className="rad" tabIndex="42" ' +
+                  'data-reactroot="" data-reactid="1"></my-component>',
+            },
+          ]);
         }
@@ -408,23 +483,29 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([{
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { className: 'rad' },
-        }, {
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { className: 'mad' },
-        }, {
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { tabIndex: 42 },
-        }, {
-          instanceID: inst._debugID,
-          type: 'remove attribute',
-          payload: 'className',
-        }, {
-          instanceID: inst._debugID,
-          type: 'update attribute',
-          payload: { tabIndex: 43 },
-        }]);
+        assertHistoryMatches([
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {className: 'rad'},
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {className: 'mad'},
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {tabIndex: 42},
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'remove attribute',
+            payload: 'className',
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: {tabIndex: 43},
+          },
+        ]);
       });
@@ -443,7 +524,9 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([{
-          instanceID: inst._debugID,
-          type: 'replace text',
-          payload: 'Bye.',
-        }]);
+        assertHistoryMatches([
+          {
+            instanceID: inst._debugID,
+            type: 'replace text',
+            payload: 'Bye.',
+          },
+        ]);
       });
@@ -452,3 +535,6 @@ describe('ReactHostOperationHistoryHook', () => {
         var node = document.createElement('div');
-        ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Hi.'}} />, node);
+        ReactDOM.render(
+          <div dangerouslySetInnerHTML={{__html: 'Hi.'}} />,
+          node,
+        );
         var inst = ReactDOMComponentTree.getInstanceFromNode(node.firstChild);
@@ -458,7 +544,9 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([{
-          instanceID: inst._debugID,
-          type: 'replace text',
-          payload: 'Bye.',
-        }]);
+        assertHistoryMatches([
+          {
+            instanceID: inst._debugID,
+            type: 'replace text',
+            payload: 'Bye.',
+          },
+        ]);
       });
@@ -473,15 +561,19 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([{
-          instanceID: inst._debugID,
-          type: 'remove child',
-          payload: {fromIndex: 0},
-        }, {
-          instanceID: inst._debugID,
-          type: 'remove child',
-          payload: {fromIndex: 1},
-        }, {
-          instanceID: inst._debugID,
-          type: 'replace text',
-          payload: 'Bye.',
-        }]);
+        assertHistoryMatches([
+          {
+            instanceID: inst._debugID,
+            type: 'remove child',
+            payload: {fromIndex: 0},
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'remove child',
+            payload: {fromIndex: 1},
+          },
+          {
+            instanceID: inst._debugID,
+            type: 'replace text',
+            payload: 'Bye.',
+          },
+        ]);
       });
@@ -503,4 +595,8 @@ describe('ReactHostOperationHistoryHook', () => {
         ReactDOM.render(<div>{'Hi.'}{42}</div>, node);
-        var inst1 = ReactDOMComponentTree.getInstanceFromNode(node.firstChild.childNodes[0]);
-        var inst2 = ReactDOMComponentTree.getInstanceFromNode(node.firstChild.childNodes[3]);
+        var inst1 = ReactDOMComponentTree.getInstanceFromNode(
+          node.firstChild.childNodes[0],
+        );
+        var inst2 = ReactDOMComponentTree.getInstanceFromNode(
+          node.firstChild.childNodes[3],
+        );
 
@@ -509,11 +605,14 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([{
-          instanceID: inst1._debugID,
-          type: 'replace text',
-          payload: 'Bye.',
-        }, {
-          instanceID: inst2._debugID,
-          type: 'replace text',
-          payload: '43',
-        }]);
+        assertHistoryMatches([
+          {
+            instanceID: inst1._debugID,
+            type: 'replace text',
+            payload: 'Bye.',
+          },
+          {
+            instanceID: inst2._debugID,
+            type: 'replace text',
+            payload: '43',
+          },
+        ]);
       });
@@ -549,7 +648,9 @@ describe('ReactHostOperationHistoryHook', () => {
 
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'replace with',
-        payload: 'SPAN',
-      }]);
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'replace with',
+          payload: 'SPAN',
+        },
+      ]);
     });
@@ -572,7 +673,9 @@ describe('ReactHostOperationHistoryHook', () => {
 
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'replace with',
-        payload: '#comment',
-      }]);
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'replace with',
+          payload: '#comment',
+        },
+      ]);
     });
@@ -605,12 +708,11 @@ describe('ReactHostOperationHistoryHook', () => {
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(
-        <div dangerouslySetInnerHTML={{__html: 'Bye.'}} />,
-        node
-      );
+      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Bye.'}} />, node);
 
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'replace children',
-        payload: 'Bye.',
-      }]);
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'replace children',
+          payload: 'Bye.',
+        },
+      ]);
     });
@@ -619,6 +721,3 @@ describe('ReactHostOperationHistoryHook', () => {
       var node = document.createElement('div');
-      ReactDOM.render(
-        <div dangerouslySetInnerHTML={{__html: 'Hi.'}} />,
-        node
-      );
+      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Hi.'}} />, node);
       var inst = ReactDOMComponentTree.getInstanceFromNode(node.firstChild);
@@ -626,12 +725,11 @@ describe('ReactHostOperationHistoryHook', () => {
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(
-        <div dangerouslySetInnerHTML={{__html: 'Bye.'}} />,
-        node
-      );
+      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Bye.'}} />, node);
 
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'replace children',
-        payload: 'Bye.',
-      }]);
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'replace children',
+          payload: 'Bye.',
+        },
+      ]);
     });
@@ -644,20 +742,21 @@ describe('ReactHostOperationHistoryHook', () => {
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(
-        <div dangerouslySetInnerHTML={{__html: 'Hi.'}} />,
-        node
-      );
+      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Hi.'}} />, node);
 
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'remove child',
-        payload: {fromIndex: 0},
-      }, {
-        instanceID: inst._debugID,
-        type: 'remove child',
-        payload: {fromIndex: 1},
-      }, {
-        instanceID: inst._debugID,
-        type: 'replace children',
-        payload: 'Hi.',
-      }]);
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'remove child',
+          payload: {fromIndex: 0},
+        },
+        {
+          instanceID: inst._debugID,
+          type: 'remove child',
+          payload: {fromIndex: 1},
+        },
+        {
+          instanceID: inst._debugID,
+          type: 'replace children',
+          payload: 'Hi.',
+        },
+      ]);
     });
@@ -666,12 +765,6 @@ describe('ReactHostOperationHistoryHook', () => {
       var node = document.createElement('div');
-      ReactDOM.render(
-        <div dangerouslySetInnerHTML={{__html: 'Hi.'}} />,
-        node
-      );
+      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Hi.'}} />, node);
 
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(
-        <div dangerouslySetInnerHTML={{__html: 'Hi.'}} />,
-        node
-      );
+      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Hi.'}} />, node);
 
@@ -690,7 +783,9 @@ describe('ReactHostOperationHistoryHook', () => {
 
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'insert child',
-        payload: {toIndex: 1, content: 'P'},
-      }]);
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'insert child',
+          payload: {toIndex: 1, content: 'P'},
+        },
+      ]);
     });
@@ -707,7 +802,9 @@ describe('ReactHostOperationHistoryHook', () => {
 
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'move child',
-        payload: {fromIndex: 0, toIndex: 1},
-      }]);
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'move child',
+          payload: {fromIndex: 0, toIndex: 1},
+        },
+      ]);
     });
@@ -724,7 +821,9 @@ describe('ReactHostOperationHistoryHook', () => {
 
-      assertHistoryMatches([{
-        instanceID: inst._debugID,
-        type: 'remove child',
-        payload: {fromIndex: 1},
-      }]);
+      assertHistoryMatches([
+        {
+          instanceID: inst._debugID,
+          type: 'remove child',
+          payload: {fromIndex: 1},
+        },
+      ]);
     });
diff --git a/src/renderers/shared/shared/ReactInstanceMap.js b/src/renderers/shared/shared/ReactInstanceMap.js
index 24eeb2d74..495c82c31 100644
--- a/src/renderers/shared/shared/ReactInstanceMap.js
+++ b/src/renderers/shared/shared/ReactInstanceMap.js
@@ -22,3 +22,2 @@
 var ReactInstanceMap = {
-
   /**
@@ -43,3 +42,2 @@ var ReactInstanceMap = {
   },
-
 };
diff --git a/src/renderers/shared/shared/shouldUpdateReactComponent.js b/src/renderers/shared/shared/shouldUpdateReactComponent.js
index 2c4a15542..097eab1c5 100644
--- a/src/renderers/shared/shared/shouldUpdateReactComponent.js
+++ b/src/renderers/shared/shared/shouldUpdateReactComponent.js
@@ -34,3 +34,3 @@ function shouldUpdateReactComponent(prevElement, nextElement) {
   if (prevType === 'string' || prevType === 'number') {
-    return (nextType === 'string' || nextType === 'number');
+    return nextType === 'string' || nextType === 'number';
   } else {
diff --git a/src/renderers/shared/stack/event/EventPluginHub.js b/src/renderers/shared/stack/event/EventPluginHub.js
index a72676543..8eb3fc8f2 100644
--- a/src/renderers/shared/stack/event/EventPluginHub.js
+++ b/src/renderers/shared/stack/event/EventPluginHub.js
@@ -63,4 +63,6 @@ function isInteractive(tag) {
   return (
-    tag === 'button' || tag === 'input' ||
-    tag === 'select' || tag === 'textarea'
+    tag === 'button' ||
+    tag === 'input' ||
+    tag === 'select' ||
+    tag === 'textarea'
   );
@@ -109,3 +111,2 @@ function shouldPreventMouseEvent(name, type, props) {
 var EventPluginHub = {
-
   /**
@@ -114,3 +115,2 @@ var EventPluginHub = {
   injection: {
-
     /**
@@ -125,3 +125,2 @@ var EventPluginHub = {
     injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName,
-
   },
@@ -139,3 +138,4 @@ var EventPluginHub = {
       'Expected %s listener to be a function, instead got type %s',
-      registrationName, typeof listener
+      registrationName,
+      typeof listener,
     );
@@ -163,3 +163,9 @@ var EventPluginHub = {
     var bankForRegistrationName = listenerBank[registrationName];
-    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
+    if (
+      shouldPreventMouseEvent(
+        registrationName,
+        inst._currentElement.type,
+        inst._currentElement.props,
+      )
+    ) {
       return null;
@@ -225,6 +231,7 @@ var EventPluginHub = {
   extractEvents: function(
-      topLevelType,
-      targetInst,
-      nativeEvent,
-      nativeEventTarget) {
+    topLevelType,
+    targetInst,
+    nativeEvent,
+    nativeEventTarget,
+  ) {
     var events;
@@ -239,3 +246,3 @@ var EventPluginHub = {
           nativeEvent,
-          nativeEventTarget
+          nativeEventTarget,
         );
@@ -275,3 +282,3 @@ var EventPluginHub = {
         processingEventQueue,
-        executeDispatchesAndReleaseSimulated
+        executeDispatchesAndReleaseSimulated,
       );
@@ -280,3 +287,3 @@ var EventPluginHub = {
         processingEventQueue,
-        executeDispatchesAndReleaseTopLevel
+        executeDispatchesAndReleaseTopLevel,
       );
@@ -286,3 +293,3 @@ var EventPluginHub = {
       'processEventQueue(): Additional events were enqueued while processing ' +
-      'an event queue. Support for this has not yet been implemented.'
+        'an event queue. Support for this has not yet been implemented.',
     );
@@ -302,3 +309,2 @@ var EventPluginHub = {
   },
-
 };
diff --git a/src/renderers/shared/stack/event/EventPluginRegistry.js b/src/renderers/shared/stack/event/EventPluginRegistry.js
index f44593eab..be2159edf 100644
--- a/src/renderers/shared/stack/event/EventPluginRegistry.js
+++ b/src/renderers/shared/stack/event/EventPluginRegistry.js
@@ -19,7 +19,3 @@ import type {
 
-import type {
-  AnyNativeEvent,
-  PluginName,
-  PluginModule,
-} from 'PluginModuleType';
+import type {AnyNativeEvent, PluginName, PluginModule} from 'PluginModuleType';
 
@@ -57,3 +53,3 @@ function recomputePluginOrdering(): void {
       'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
-      'the plugin ordering, `%s`.',
+        'the plugin ordering, `%s`.',
       pluginName,
@@ -66,3 +62,3 @@ function recomputePluginOrdering(): void {
       'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
-      'method, but `%s` does not.',
+        'method, but `%s` does not.',
       pluginName,
@@ -102,3 +98,3 @@ function publishEventForPlugin(
     'EventPluginHub: More than one plugin attempted to publish the same ' +
-    'event name, `%s`.',
+      'event name, `%s`.',
     eventName,
@@ -147,3 +143,3 @@ function publishRegistrationName(
     'EventPluginHub: More than one plugin attempted to publish the same ' +
-    'registration name, `%s`.',
+      'registration name, `%s`.',
     registrationName,
@@ -156,5 +152,5 @@ function publishRegistrationName(
     var lowerCasedName = registrationName.toLowerCase();
-    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] =
-      registrationName;
-
+    EventPluginRegistry.possibleRegistrationNames[
+      lowerCasedName
+    ] = registrationName;
 
@@ -172,3 +168,2 @@ function publishRegistrationName(
 var EventPluginRegistry = {
-
   /**
@@ -217,3 +212,3 @@ var EventPluginRegistry = {
       'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
-      'once. You are likely trying to load more than one copy of React.',
+        'once. You are likely trying to load more than one copy of React.',
     );
@@ -235,3 +230,3 @@ var EventPluginRegistry = {
   injectEventPluginsByName: function(
-    injectedNamesToPlugins: NamesToPlugins
+    injectedNamesToPlugins: NamesToPlugins,
   ): void {
@@ -243,4 +238,6 @@ var EventPluginRegistry = {
       var pluginModule = injectedNamesToPlugins[pluginName];
-      if (!namesToPlugins.hasOwnProperty(pluginName) ||
-          namesToPlugins[pluginName] !== pluginModule) {
+      if (
+        !namesToPlugins.hasOwnProperty(pluginName) ||
+        namesToPlugins[pluginName] !== pluginModule
+      ) {
         invariant(
@@ -248,3 +245,3 @@ var EventPluginRegistry = {
           'EventPluginRegistry: Cannot inject two different event plugins ' +
-          'using the same name, `%s`.',
+            'using the same name, `%s`.',
           pluginName,
@@ -272,5 +269,7 @@ var EventPluginRegistry = {
     if (dispatchConfig.registrationName) {
-      return EventPluginRegistry.registrationNameModules[
-        dispatchConfig.registrationName
-      ] || null;
+      return (
+        EventPluginRegistry.registrationNameModules[
+          dispatchConfig.registrationName
+        ] || null
+      );
     }
@@ -284,5 +283,6 @@ var EventPluginRegistry = {
         }
-        var pluginModule = EventPluginRegistry.registrationNameModules[
-          phasedRegistrationNames[phase]
-        ];
+        var pluginModule =
+          EventPluginRegistry.registrationNameModules[
+            phasedRegistrationNames[phase]
+          ];
         if (pluginModule) {
@@ -332,3 +332,2 @@ var EventPluginRegistry = {
   },
-
 };
diff --git a/src/renderers/shared/stack/event/EventPluginUtils.js b/src/renderers/shared/stack/event/EventPluginUtils.js
index 4bad7e316..cd4531e40 100644
--- a/src/renderers/shared/stack/event/EventPluginUtils.js
+++ b/src/renderers/shared/stack/event/EventPluginUtils.js
@@ -34,6 +34,6 @@ var injection = {
         Injected &&
-        Injected.getNodeFromInstance &&
-        Injected.getInstanceFromNode,
+          Injected.getNodeFromInstance &&
+          Injected.getInstanceFromNode,
         'EventPluginUtils.injection.injectComponentTree(...): Injected ' +
-        'module is missing getNodeFromInstance or getInstanceFromNode.'
+          'module is missing getNodeFromInstance or getInstanceFromNode.',
       );
@@ -47,3 +47,3 @@ var injection = {
         'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' +
-        'module is missing isAncestor or getLowestCommonAncestor.'
+          'module is missing isAncestor or getLowestCommonAncestor.',
       );
@@ -54,5 +54,7 @@ var injection = {
 function isEndish(topLevelType) {
-  return topLevelType === 'topMouseUp' ||
-         topLevelType === 'topTouchEnd' ||
-         topLevelType === 'topTouchCancel';
+  return (
+    topLevelType === 'topMouseUp' ||
+    topLevelType === 'topTouchEnd' ||
+    topLevelType === 'topTouchCancel'
+  );
 }
@@ -60,11 +62,8 @@ function isEndish(topLevelType) {
 function isMoveish(topLevelType) {
-  return topLevelType === 'topMouseMove' ||
-         topLevelType === 'topTouchMove';
+  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
 }
 function isStartish(topLevelType) {
-  return topLevelType === 'topMouseDown' ||
-         topLevelType === 'topTouchStart';
+  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
 }
 
-
 var validateEventDispatches;
@@ -76,10 +75,10 @@ if (__DEV__) {
     var listenersIsArr = Array.isArray(dispatchListeners);
-    var listenersLen = listenersIsArr ?
-      dispatchListeners.length :
-      dispatchListeners ? 1 : 0;
+    var listenersLen = listenersIsArr
+      ? dispatchListeners.length
+      : dispatchListeners ? 1 : 0;
 
     var instancesIsArr = Array.isArray(dispatchInstances);
-    var instancesLen = instancesIsArr ?
-      dispatchInstances.length :
-      dispatchInstances ? 1 : 0;
+    var instancesLen = instancesIsArr
+      ? dispatchInstances.length
+      : dispatchInstances ? 1 : 0;
 
@@ -87,3 +86,3 @@ if (__DEV__) {
       instancesIsArr === listenersIsArr && instancesLen === listenersLen,
-      'EventPluginUtils: Invalid `event`.'
+      'EventPluginUtils: Invalid `event`.',
     );
@@ -103,7 +102,3 @@ function executeDispatch(event, simulated, listener, inst) {
   if (simulated) {
-    ReactErrorUtils.invokeGuardedCallbackWithCatch(
-      type,
-      listener,
-      event
-    );
+    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
   } else {
@@ -133,3 +128,3 @@ function executeDispatchesInOrder(event, simulated) {
         dispatchListeners[i],
-        dispatchInstances[i]
+        dispatchInstances[i],
       );
@@ -201,5 +196,7 @@ function executeDirectDispatch(event) {
     !Array.isArray(dispatchListener),
-    'executeDirectDispatch(...): Invalid `event`.'
+    'executeDirectDispatch(...): Invalid `event`.',
   );
-  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
+  event.currentTarget = dispatchListener
+    ? EventPluginUtils.getNodeFromInstance(dispatchInstance)
+    : null;
   var res = dispatchListener ? dispatchListener(event) : null;
diff --git a/src/renderers/shared/stack/event/EventPropagators.js b/src/renderers/shared/stack/event/EventPropagators.js
index da1b23841..ec0766729 100644
--- a/src/renderers/shared/stack/event/EventPropagators.js
+++ b/src/renderers/shared/stack/event/EventPropagators.js
@@ -20,3 +20,3 @@ var warning = require('warning');
 
-import type { PropagationPhases } from 'EventConstants';
+import type {PropagationPhases} from 'EventConstants';
 
@@ -42,6 +42,3 @@ function accumulateDirectionalDispatches(inst, phase, event) {
   if (__DEV__) {
-    warning(
-      inst,
-      'Dispatching inst must not be null'
-    );
+    warning(inst, 'Dispatching inst must not be null');
   }
@@ -49,4 +46,6 @@ function accumulateDirectionalDispatches(inst, phase, event) {
   if (listener) {
-    event._dispatchListeners =
-      accumulateInto(event._dispatchListeners, listener);
+    event._dispatchListeners = accumulateInto(
+      event._dispatchListeners,
+      listener,
+    );
     event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
@@ -67,3 +66,3 @@ function accumulateTwoPhaseDispatchesSingle(event) {
       accumulateDirectionalDispatches,
-      event
+      event,
     );
@@ -78,4 +77,5 @@ function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
     var targetInst = event._targetInst;
-    var parentInst =
-      targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
+    var parentInst = targetInst
+      ? EventPluginUtils.getParentInstance(targetInst)
+      : null;
     EventPluginUtils.traverseTwoPhase(
@@ -83,3 +83,3 @@ function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
       accumulateDirectionalDispatches,
-      event
+      event,
     );
@@ -88,3 +88,2 @@ function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
 
-
 /**
@@ -99,4 +98,6 @@ function accumulateDispatches(inst, ignoredDirection, event) {
     if (listener) {
-      event._dispatchListeners =
-        accumulateInto(event._dispatchListeners, listener);
+      event._dispatchListeners = accumulateInto(
+        event._dispatchListeners,
+        listener,
+      );
       event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
@@ -131,3 +132,3 @@ function accumulateEnterLeaveDispatches(leave, enter, from, to) {
     leave,
-    enter
+    enter,
   );
@@ -135,3 +136,2 @@ function accumulateEnterLeaveDispatches(leave, enter, from, to) {
 
-
 function accumulateDirectDispatches(events) {
@@ -140,4 +140,2 @@ function accumulateDirectDispatches(events) {
 
-
-
 /**
diff --git a/src/renderers/shared/stack/event/PluginModuleType.js b/src/renderers/shared/stack/event/PluginModuleType.js
index ce00d28f9..bfcdbb0c1 100644
--- a/src/renderers/shared/stack/event/PluginModuleType.js
+++ b/src/renderers/shared/stack/event/PluginModuleType.js
@@ -22,7 +22,3 @@ export type EventTypes = {[key: string]: DispatchConfig};
 
-export type AnyNativeEvent =
-  Event |
-  KeyboardEvent |
-  MouseEvent |
-  Touch;
+export type AnyNativeEvent = Event | KeyboardEvent | MouseEvent | Touch;
 
@@ -43,6 +39,3 @@ export type PluginModule<NativeEvent> = {
   ) => void,
-  willDeleteListener?: (
-    inst: ReactInstance,
-    registrationName: string,
-  ) => void,
+  willDeleteListener?: (inst: ReactInstance, registrationName: string) => void,
   tapMoveThreshold?: number,
diff --git a/src/renderers/shared/stack/event/SyntheticEvent.js b/src/renderers/shared/stack/event/SyntheticEvent.js
index 6c7d4fe16..8325c734e 100644
--- a/src/renderers/shared/stack/event/SyntheticEvent.js
+++ b/src/renderers/shared/stack/event/SyntheticEvent.js
@@ -68,3 +68,8 @@ var EventInterface = {
  */
-function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
+function SyntheticEvent(
+  dispatchConfig,
+  targetInst,
+  nativeEvent,
+  nativeEventTarget,
+) {
   if (__DEV__) {
@@ -100,5 +105,5 @@ function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarg
 
-  var defaultPrevented = nativeEvent.defaultPrevented != null ?
-    nativeEvent.defaultPrevented :
-    nativeEvent.returnValue === false;
+  var defaultPrevented = nativeEvent.defaultPrevented != null
+    ? nativeEvent.defaultPrevented
+    : nativeEvent.returnValue === false;
   if (defaultPrevented) {
@@ -113,3 +118,2 @@ function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarg
 Object.assign(SyntheticEvent.prototype, {
-
   preventDefault: function() {
@@ -123,3 +127,4 @@ Object.assign(SyntheticEvent.prototype, {
       event.preventDefault();
-    } else if (typeof event.returnValue !== 'unknown') { // eslint-disable-line valid-typeof
+      // eslint-disable-next-line valid-typeof
+    } else if (typeof event.returnValue !== 'unknown') {
       event.returnValue = false;
@@ -137,3 +142,4 @@ Object.assign(SyntheticEvent.prototype, {
       event.stopPropagation();
-    } else if (typeof event.cancelBubble !== 'unknown') { // eslint-disable-line valid-typeof
+      // eslint-disable-next-line valid-typeof
+    } else if (typeof event.cancelBubble !== 'unknown') {
       // The ChangeEventPlugin registers a "propertychange" event for
@@ -172,3 +178,7 @@ Object.assign(SyntheticEvent.prototype, {
       if (__DEV__) {
-        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
+        Object.defineProperty(
+          this,
+          propName,
+          getPooledWarningPropertyDefinition(propName, Interface[propName]),
+        );
       } else {
@@ -184,3 +194,3 @@ Object.assign(SyntheticEvent.prototype, {
         'nativeEvent',
-        getPooledWarningPropertyDefinition('nativeEvent', null)
+        getPooledWarningPropertyDefinition('nativeEvent', null),
       );
@@ -189,3 +199,3 @@ Object.assign(SyntheticEvent.prototype, {
         'preventDefault',
-        getPooledWarningPropertyDefinition('preventDefault', emptyFunction)
+        getPooledWarningPropertyDefinition('preventDefault', emptyFunction),
       );
@@ -194,3 +204,3 @@ Object.assign(SyntheticEvent.prototype, {
         'stopPropagation',
-        getPooledWarningPropertyDefinition('stopPropagation', emptyFunction)
+        getPooledWarningPropertyDefinition('stopPropagation', emptyFunction),
       );
@@ -198,3 +208,2 @@ Object.assign(SyntheticEvent.prototype, {
   },
-
 });
@@ -213,11 +222,13 @@ if (__DEV__) {
           set: function(target, prop, value) {
-            if (prop !== 'isPersistent' &&
-                !target.constructor.Interface.hasOwnProperty(prop) &&
-                shouldBeReleasedProperties.indexOf(prop) === -1) {
+            if (
+              prop !== 'isPersistent' &&
+              !target.constructor.Interface.hasOwnProperty(prop) &&
+              shouldBeReleasedProperties.indexOf(prop) === -1
+            ) {
               warning(
                 didWarnForAddedNewProperty || target.isPersistent(),
-                'This synthetic event is reused for performance reasons. If you\'re ' +
-                'seeing this, you\'re adding a new property in the synthetic event object. ' +
-                'The property is never released. See ' +
-                'https://fb.me/react-event-pooling for more information.'
+                "This synthetic event is reused for performance reasons. If you're " +
+                  "seeing this, you're adding a new property in the synthetic event object. " +
+                  'The property is never released. See ' +
+                  'https://fb.me/react-event-pooling for more information.',
               );
@@ -284,3 +295,5 @@ function getPooledWarningPropertyDefinition(propName, getVal) {
     var action = isFunction ? 'accessing the method' : 'accessing the property';
-    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
+    var result = isFunction
+      ? 'This is a no-op function'
+      : 'This is set to null';
     warn(action, result);
@@ -293,9 +306,9 @@ function getPooledWarningPropertyDefinition(propName, getVal) {
       warningCondition,
-      'This synthetic event is reused for performance reasons. If you\'re seeing this, ' +
-      'you\'re %s `%s` on a released/nullified synthetic event. %s. ' +
-      'If you must keep the original synthetic event around, use event.persist(). ' +
-      'See https://fb.me/react-event-pooling for more information.',
+      "This synthetic event is reused for performance reasons. If you're seeing this, " +
+        "you're %s `%s` on a released/nullified synthetic event. %s. " +
+        'If you must keep the original synthetic event around, use event.persist(). ' +
+        'See https://fb.me/react-event-pooling for more information.',
       action,
       propName,
-      result
+      result,
     );
diff --git a/src/renderers/shared/stack/event/__tests__/EventPluginHub-test.js b/src/renderers/shared/stack/event/__tests__/EventPluginHub-test.js
index 2e49bc4f4..7f9598f2b 100644
--- a/src/renderers/shared/stack/event/__tests__/EventPluginHub-test.js
+++ b/src/renderers/shared/stack/event/__tests__/EventPluginHub-test.js
@@ -30,3 +30,3 @@ describe('EventPluginHub', () => {
     }).toThrowError(
-      'Expected onClick listener to be a function, instead got type string'
+      'Expected onClick listener to be a function, instead got type string',
     );
diff --git a/src/renderers/shared/stack/event/__tests__/EventPluginRegistry-test.js b/src/renderers/shared/stack/event/__tests__/EventPluginRegistry-test.js
index 245e7bcc4..7e068e214 100644
--- a/src/renderers/shared/stack/event/__tests__/EventPluginRegistry-test.js
+++ b/src/renderers/shared/stack/event/__tests__/EventPluginRegistry-test.js
@@ -13,3 +13,2 @@
 
-
 describe('EventPluginRegistry', () => {
@@ -99,3 +98,3 @@ describe('EventPluginRegistry', () => {
       'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
-      'method, but `bad` does not.'
+        'method, but `bad` does not.',
     );
@@ -116,3 +115,3 @@ describe('EventPluginRegistry', () => {
       'EventPluginRegistry: Cannot inject event plugins that do not exist ' +
-      'in the plugin ordering, `random`.'
+        'in the plugin ordering, `random`.',
     );
@@ -129,3 +128,3 @@ describe('EventPluginRegistry', () => {
       'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
-      'once. You are likely trying to load more than one copy of React.'
+        'once. You are likely trying to load more than one copy of React.',
     );
@@ -143,3 +142,3 @@ describe('EventPluginRegistry', () => {
       'EventPluginRegistry: Cannot inject two different event plugins using ' +
-      'the same name, `same`.'
+        'the same name, `same`.',
     );
@@ -168,3 +167,5 @@ describe('EventPluginRegistry', () => {
 
-    expect(Object.keys(EventPluginRegistry.registrationNameModules).length).toBe(2);
+    expect(
+      Object.keys(EventPluginRegistry.registrationNameModules).length,
+    ).toBe(2);
     expect(EventPluginRegistry.registrationNameModules.onClick).toBe(OnePlugin);
@@ -174,7 +175,11 @@ describe('EventPluginRegistry', () => {
 
-    expect(Object.keys(EventPluginRegistry.registrationNameModules).length).toBe(4);
-    expect(EventPluginRegistry.registrationNameModules.onMagicBubble).toBe(TwoPlugin);
     expect(
-      EventPluginRegistry.registrationNameModules.onMagicCapture
-    ).toBe(TwoPlugin);
+      Object.keys(EventPluginRegistry.registrationNameModules).length,
+    ).toBe(4);
+    expect(EventPluginRegistry.registrationNameModules.onMagicBubble).toBe(
+      TwoPlugin,
+    );
+    expect(EventPluginRegistry.registrationNameModules.onMagicCapture).toBe(
+      TwoPlugin,
+    );
   });
@@ -207,3 +212,3 @@ describe('EventPluginRegistry', () => {
       'EventPluginHub: More than one plugin attempted to publish the same ' +
-      'registration name, `onPhotoCapture`.'
+        'registration name, `onPhotoCapture`.',
     );
@@ -214,3 +219,5 @@ describe('EventPluginRegistry', () => {
       eventTypes: {
-        badEvent: {/* missing configuration */},
+        badEvent: {
+          /* missing configuration */
+        },
       },
@@ -224,3 +231,3 @@ describe('EventPluginRegistry', () => {
       'EventPluginRegistry: Failed to publish event `badEvent` for plugin ' +
-      '`one`.'
+        '`one`.',
     );
@@ -255,10 +262,9 @@ describe('EventPluginRegistry', () => {
 
-    expect(
-      EventPluginRegistry.getPluginModuleForEvent(clickEvent)
-    ).toBe(OnePlugin);
-    expect(
-      EventPluginRegistry.getPluginModuleForEvent(magicEvent)
-    ).toBe(OnePlugin);
+    expect(EventPluginRegistry.getPluginModuleForEvent(clickEvent)).toBe(
+      OnePlugin,
+    );
+    expect(EventPluginRegistry.getPluginModuleForEvent(magicEvent)).toBe(
+      OnePlugin,
+    );
   });
-
 });
diff --git a/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js b/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js
index 2f26f4f24..15601903b 100644
--- a/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js
+++ b/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js
@@ -52,3 +52,3 @@ var changeResponder = function(nextResponderInst, blockHostResponder) {
       nextResponderInst,
-      blockHostResponder
+      blockHostResponder,
     );
@@ -255,4 +255,2 @@ to return true:wantsResponderID|                            |
 
-
-
 /**
@@ -321,15 +319,16 @@ function setResponderAndExtractTransfer(
   nativeEvent,
-  nativeEventTarget
+  nativeEventTarget,
 ) {
-  var shouldSetEventType =
-    isStartish(topLevelType) ? eventTypes.startShouldSetResponder :
-    isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder :
-    topLevelType === 'topSelectionChange' ?
-      eventTypes.selectionChangeShouldSetResponder :
-    eventTypes.scrollShouldSetResponder;
+  var shouldSetEventType = isStartish(topLevelType)
+    ? eventTypes.startShouldSetResponder
+    : isMoveish(topLevelType)
+      ? eventTypes.moveShouldSetResponder
+      : topLevelType === 'topSelectionChange'
+        ? eventTypes.selectionChangeShouldSetResponder
+        : eventTypes.scrollShouldSetResponder;
 
   // TODO: stop one short of the current responder.
-  var bubbleShouldSetFrom = !responderInst ?
-    targetInst :
-    EventPluginUtils.getLowestCommonAncestor(responderInst, targetInst);
+  var bubbleShouldSetFrom = !responderInst
+    ? targetInst
+    : EventPluginUtils.getLowestCommonAncestor(responderInst, targetInst);
 
@@ -344,3 +343,3 @@ function setResponderAndExtractTransfer(
     nativeEvent,
-    nativeEventTarget
+    nativeEventTarget,
   );
@@ -365,3 +364,3 @@ function setResponderAndExtractTransfer(
     nativeEvent,
-    nativeEventTarget
+    nativeEventTarget,
   );
@@ -372,3 +371,2 @@ function setResponderAndExtractTransfer(
   if (responderInst) {
-
     var terminationRequestEvent = ResponderSyntheticEvent.getPooled(
@@ -377,7 +375,9 @@ function setResponderAndExtractTransfer(
       nativeEvent,
-      nativeEventTarget
+      nativeEventTarget,
     );
-    terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
+    terminationRequestEvent.touchHistory =
+      ResponderTouchHistoryStore.touchHistory;
     EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
-    var shouldSwitch = !hasDispatches(terminationRequestEvent) ||
+    var shouldSwitch =
+      !hasDispatches(terminationRequestEvent) ||
       executeDirectDispatch(terminationRequestEvent);
@@ -392,3 +392,3 @@ function setResponderAndExtractTransfer(
         nativeEvent,
-        nativeEventTarget
+        nativeEventTarget,
       );
@@ -403,3 +403,3 @@ function setResponderAndExtractTransfer(
         nativeEvent,
-        nativeEventTarget
+        nativeEventTarget,
       );
@@ -425,3 +425,4 @@ function setResponderAndExtractTransfer(
 function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
-  return topLevelInst && (
+  return (
+    topLevelInst &&
     // responderIgnoreScroll: We are trying to migrate away from specifically
@@ -429,8 +430,6 @@ function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
     // will send topTouchCancel to handle canceling touch events instead
-    (topLevelType === 'topScroll' &&
-      !nativeEvent.responderIgnoreScroll) ||
-    (trackedTouchCount > 0 &&
-      topLevelType === 'topSelectionChange') ||
-    isStartish(topLevelType) ||
-    isMoveish(topLevelType)
+    ((topLevelType === 'topScroll' && !nativeEvent.responderIgnoreScroll) ||
+      (trackedTouchCount > 0 && topLevelType === 'topSelectionChange') ||
+      isStartish(topLevelType) ||
+      isMoveish(topLevelType))
   );
@@ -464,5 +463,3 @@ function noResponderTouches(nativeEvent) {
 
-
 var ResponderEventPlugin = {
-
   /* For unit testing only */
@@ -483,3 +480,3 @@ var ResponderEventPlugin = {
     nativeEvent,
-    nativeEventTarget
+    nativeEventTarget,
   ) {
@@ -492,3 +489,3 @@ var ResponderEventPlugin = {
         console.error(
-          'Ended a touch event which was not counted in `trackedTouchCount`.'
+          'Ended a touch event which was not counted in `trackedTouchCount`.',
         );
@@ -500,9 +497,10 @@ var ResponderEventPlugin = {
 
-    var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ?
-      setResponderAndExtractTransfer(
-        topLevelType,
-        targetInst,
-        nativeEvent,
-        nativeEventTarget) :
-      null;
+    var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent)
+      ? setResponderAndExtractTransfer(
+          topLevelType,
+          targetInst,
+          nativeEvent,
+          nativeEventTarget,
+        )
+      : null;
     // Responder may or may not have transferred on a new touch start/move.
@@ -520,16 +518,15 @@ var ResponderEventPlugin = {
     var isResponderTouchEnd = responderInst && isEndish(topLevelType);
-    var incrementalTouch =
-      isResponderTouchStart ? eventTypes.responderStart :
-      isResponderTouchMove ? eventTypes.responderMove :
-      isResponderTouchEnd ? eventTypes.responderEnd :
-      null;
+    var incrementalTouch = isResponderTouchStart
+      ? eventTypes.responderStart
+      : isResponderTouchMove
+        ? eventTypes.responderMove
+        : isResponderTouchEnd ? eventTypes.responderEnd : null;
 
     if (incrementalTouch) {
-      var gesture =
-        ResponderSyntheticEvent.getPooled(
-          incrementalTouch,
-          responderInst,
-          nativeEvent,
-          nativeEventTarget
-        );
+      var gesture = ResponderSyntheticEvent.getPooled(
+        incrementalTouch,
+        responderInst,
+        nativeEvent,
+        nativeEventTarget,
+      );
       gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;
@@ -540,4 +537,3 @@ var ResponderEventPlugin = {
     var isResponderTerminate =
-      responderInst &&
-      topLevelType === 'topTouchCancel';
+      responderInst && topLevelType === 'topTouchCancel';
     var isResponderRelease =
@@ -547,9 +543,11 @@ var ResponderEventPlugin = {
       noResponderTouches(nativeEvent);
-    var finalTouch =
-      isResponderTerminate ? eventTypes.responderTerminate :
-      isResponderRelease ? eventTypes.responderRelease :
-      null;
+    var finalTouch = isResponderTerminate
+      ? eventTypes.responderTerminate
+      : isResponderRelease ? eventTypes.responderRelease : null;
     if (finalTouch) {
       var finalEvent = ResponderSyntheticEvent.getPooled(
-        finalTouch, responderInst, nativeEvent, nativeEventTarget
+        finalTouch,
+        responderInst,
+        nativeEvent,
+        nativeEventTarget,
       );
@@ -563,6 +561,8 @@ var ResponderEventPlugin = {
       ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
-    if (ResponderEventPlugin.GlobalInteractionHandler &&
-      numberActiveTouches !== previousActiveTouches) {
+    if (
+      ResponderEventPlugin.GlobalInteractionHandler &&
+      numberActiveTouches !== previousActiveTouches
+    ) {
       ResponderEventPlugin.GlobalInteractionHandler.onChange(
-        numberActiveTouches
+        numberActiveTouches,
       );
diff --git a/src/renderers/shared/stack/event/eventPlugins/ResponderSyntheticEvent.js b/src/renderers/shared/stack/event/eventPlugins/ResponderSyntheticEvent.js
index f1cf77fea..f8e2132d5 100644
--- a/src/renderers/shared/stack/event/eventPlugins/ResponderSyntheticEvent.js
+++ b/src/renderers/shared/stack/event/eventPlugins/ResponderSyntheticEvent.js
@@ -32,4 +32,15 @@ var ResponderEventInterface = {
  */
-function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
-  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
+function ResponderSyntheticEvent(
+  dispatchConfig,
+  dispatchMarker,
+  nativeEvent,
+  nativeEventTarget,
+) {
+  return SyntheticEvent.call(
+    this,
+    dispatchConfig,
+    dispatchMarker,
+    nativeEvent,
+    nativeEventTarget,
+  );
 }
diff --git a/src/renderers/shared/stack/event/eventPlugins/ResponderTouchHistoryStore.js b/src/renderers/shared/stack/event/eventPlugins/ResponderTouchHistoryStore.js
index 94012a655..5bebd29d1 100644
--- a/src/renderers/shared/stack/event/eventPlugins/ResponderTouchHistoryStore.js
+++ b/src/renderers/shared/stack/event/eventPlugins/ResponderTouchHistoryStore.js
@@ -19,7 +19,3 @@ const warning = require('warning');
 
-const {
-  isEndish,
-  isMoveish,
-  isStartish,
-} = EventPluginUtils;
+const {isEndish, isMoveish, isStartish} = EventPluginUtils;
 
@@ -110,5 +106,5 @@ function getTouchIdentifier({identifier}: Touch): number {
     'Touch identifier %s is greater than maximum supported %s which causes ' +
-    'performance issues backfilling array locations for all of the indices.',
+      'performance issues backfilling array locations for all of the indices.',
     identifier,
-    MAX_TOUCH_BANK
+    MAX_TOUCH_BANK,
   );
@@ -141,7 +137,6 @@ function recordTouchMove(touch: Touch): void {
     console.error(
-      'Cannot record touch move without a touch start.\n' +
-      'Touch Move: %s\n',
+      'Cannot record touch move without a touch start.\n' + 'Touch Move: %s\n',
       'Touch Bank: %s',
       printTouch(touch),
-      printTouchBank()
+      printTouchBank(),
     );
@@ -163,7 +158,6 @@ function recordTouchEnd(touch: Touch): void {
     console.error(
-      'Cannot record touch end without a touch start.\n' +
-      'Touch End: %s\n',
+      'Cannot record touch end without a touch start.\n' + 'Touch End: %s\n',
       'Touch Bank: %s',
       printTouch(touch),
-      printTouchBank()
+      printTouchBank(),
     );
@@ -214,5 +208,4 @@ const ResponderTouchHistoryStore = {
           warning(
-            activeRecord != null &&
-            activeRecord.touchActive,
-            'Cannot find single active touch.'
+            activeRecord != null && activeRecord.touchActive,
+            'Cannot find single active touch.',
           );
@@ -226,3 +219,2 @@ const ResponderTouchHistoryStore = {
 
-
 module.exports = ResponderTouchHistoryStore;
diff --git a/src/renderers/shared/stack/event/eventPlugins/TouchHistoryMath.js b/src/renderers/shared/stack/event/eventPlugins/TouchHistoryMath.js
index a2a725bd2..a841e00af 100644
--- a/src/renderers/shared/stack/event/eventPlugins/TouchHistoryMath.js
+++ b/src/renderers/shared/stack/event/eventPlugins/TouchHistoryMath.js
@@ -23,3 +23,8 @@ var TouchHistoryMath = {
    */
-  centroidDimension: function(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
+  centroidDimension: function(
+    touchHistory,
+    touchesChangedAfter,
+    isXAxis,
+    ofCurrent,
+  ) {
     var touchBank = touchHistory.touchBank;
@@ -28,11 +33,18 @@ var TouchHistoryMath = {
 
-    var oneTouchData = touchHistory.numberActiveTouches === 1 ?
-      touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;
+    var oneTouchData = touchHistory.numberActiveTouches === 1
+      ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]
+      : null;
 
     if (oneTouchData !== null) {
-      if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
-        total += ofCurrent && isXAxis ? oneTouchData.currentPageX :
-          ofCurrent && !isXAxis ? oneTouchData.currentPageY :
-          !ofCurrent && isXAxis ? oneTouchData.previousPageX :
-          oneTouchData.previousPageY;
+      if (
+        oneTouchData.touchActive &&
+        oneTouchData.currentTimeStamp > touchesChangedAfter
+      ) {
+        total += ofCurrent && isXAxis
+          ? oneTouchData.currentPageX
+          : ofCurrent && !isXAxis
+            ? oneTouchData.currentPageY
+            : !ofCurrent && isXAxis
+              ? oneTouchData.previousPageX
+              : oneTouchData.previousPageY;
         count = 1;
@@ -42,7 +54,9 @@ var TouchHistoryMath = {
         var touchTrack = touchBank[i];
-        if (touchTrack !== null &&
-            touchTrack !== undefined &&
-            touchTrack.touchActive &&
-            touchTrack.currentTimeStamp >= touchesChangedAfter) {
-          var toAdd;  // Yuck, program temporarily in invalid state.
+        if (
+          touchTrack !== null &&
+          touchTrack !== undefined &&
+          touchTrack.touchActive &&
+          touchTrack.currentTimeStamp >= touchesChangedAfter
+        ) {
+          var toAdd; // Yuck, program temporarily in invalid state.
           if (ofCurrent && isXAxis) {
@@ -64,3 +78,6 @@ var TouchHistoryMath = {
 
-  currentCentroidXOfTouchesChangedAfter: function(touchHistory, touchesChangedAfter) {
+  currentCentroidXOfTouchesChangedAfter: function(
+    touchHistory,
+    touchesChangedAfter,
+  ) {
     return TouchHistoryMath.centroidDimension(
@@ -68,4 +85,4 @@ var TouchHistoryMath = {
       touchesChangedAfter,
-      true,  // isXAxis
-      true   // ofCurrent
+      true, // isXAxis
+      true, // ofCurrent
     );
@@ -73,3 +90,6 @@ var TouchHistoryMath = {
 
-  currentCentroidYOfTouchesChangedAfter: function(touchHistory, touchesChangedAfter) {
+  currentCentroidYOfTouchesChangedAfter: function(
+    touchHistory,
+    touchesChangedAfter,
+  ) {
     return TouchHistoryMath.centroidDimension(
@@ -77,4 +97,4 @@ var TouchHistoryMath = {
       touchesChangedAfter,
-      false,  // isXAxis
-      true    // ofCurrent
+      false, // isXAxis
+      true, // ofCurrent
     );
@@ -82,3 +102,6 @@ var TouchHistoryMath = {
 
-  previousCentroidXOfTouchesChangedAfter: function(touchHistory, touchesChangedAfter) {
+  previousCentroidXOfTouchesChangedAfter: function(
+    touchHistory,
+    touchesChangedAfter,
+  ) {
     return TouchHistoryMath.centroidDimension(
@@ -86,4 +109,4 @@ var TouchHistoryMath = {
       touchesChangedAfter,
-      true,  // isXAxis
-      false  // ofCurrent
+      true, // isXAxis
+      false, // ofCurrent
     );
@@ -91,3 +114,6 @@ var TouchHistoryMath = {
 
-  previousCentroidYOfTouchesChangedAfter: function(touchHistory, touchesChangedAfter) {
+  previousCentroidYOfTouchesChangedAfter: function(
+    touchHistory,
+    touchesChangedAfter,
+  ) {
     return TouchHistoryMath.centroidDimension(
@@ -95,4 +121,4 @@ var TouchHistoryMath = {
       touchesChangedAfter,
-      false,  // isXAxis
-      false   // ofCurrent
+      false, // isXAxis
+      false, // ofCurrent
     );
@@ -103,5 +129,5 @@ var TouchHistoryMath = {
       touchHistory,
-      0,     // touchesChangedAfter
-      true,  // isXAxis
-      true   // ofCurrent
+      0, // touchesChangedAfter
+      true, // isXAxis
+      true, // ofCurrent
     );
@@ -112,5 +138,5 @@ var TouchHistoryMath = {
       touchHistory,
-      0,     // touchesChangedAfter
-      false,  // isXAxis
-      true    // ofCurrent
+      0, // touchesChangedAfter
+      false, // isXAxis
+      true, // ofCurrent
     );
diff --git a/src/renderers/shared/stack/event/eventPlugins/__tests__/ResponderEventPlugin-test.js b/src/renderers/shared/stack/event/eventPlugins/__tests__/ResponderEventPlugin-test.js
index 174cf9bf0..e6689decd 100644
--- a/src/renderers/shared/stack/event/eventPlugins/__tests__/ResponderEventPlugin-test.js
+++ b/src/renderers/shared/stack/event/eventPlugins/__tests__/ResponderEventPlugin-test.js
@@ -64,3 +64,3 @@ var _touchConfig = function(
   changedIndices,
-  eventTarget
+  eventTarget,
 ) {
@@ -68,8 +68,11 @@ var _touchConfig = function(
   var changedTouchObjects = subsequence(allTouchObjects, changedIndices);
-  var activeTouchObjects =
-    topType === 'topTouchStart' ? allTouchObjects :
-    topType === 'topTouchMove' ? allTouchObjects :
-    topType === 'topTouchEnd' ? antiSubsequence(allTouchObjects, changedIndices) :
-    topType === 'topTouchCancel' ? antiSubsequence(allTouchObjects, changedIndices) :
-    null;
+  var activeTouchObjects = topType === 'topTouchStart'
+    ? allTouchObjects
+    : topType === 'topTouchMove'
+      ? allTouchObjects
+      : topType === 'topTouchEnd'
+        ? antiSubsequence(allTouchObjects, changedIndices)
+        : topType === 'topTouchCancel'
+          ? antiSubsequence(allTouchObjects, changedIndices)
+          : null;
 
@@ -79,3 +82,3 @@ var _touchConfig = function(
       activeTouchObjects,
-      changedTouchObjects
+      changedTouchObjects,
     ),
@@ -110,3 +113,3 @@ var startConfig = function(nodeHandle, allTouchHandles, changedIndices) {
     changedIndices,
-    nodeHandle
+    nodeHandle,
   );
@@ -123,3 +126,3 @@ var moveConfig = function(nodeHandle, allTouchHandles, changedIndices) {
     changedIndices,
-    nodeHandle
+    nodeHandle,
   );
@@ -136,3 +139,3 @@ var endConfig = function(nodeHandle, allTouchHandles, changedIndices) {
     changedIndices,
-    nodeHandle
+    nodeHandle,
   );
@@ -171,5 +174,5 @@ var oneEventLoopTestConfig = function(readableIDToID) {
     // Negotiation
-    scrollShouldSetResponder: {bubbled:  {}, captured: {}},
-    startShouldSetResponder: {bubbled:  {}, captured: {}},
-    moveShouldSetResponder: {bubbled:  {}, captured: {}},
+    scrollShouldSetResponder: {bubbled: {}, captured: {}},
+    startShouldSetResponder: {bubbled: {}, captured: {}},
+    moveShouldSetResponder: {bubbled: {}, captured: {}},
     responderTerminationRequest: {},
@@ -177,9 +180,9 @@ var oneEventLoopTestConfig = function(readableIDToID) {
     // Non-negotiation
-    responderReject:    {}, // These do not bubble capture.
-    responderGrant:     {},
-    responderStart:     {},
-    responderMove:      {},
+    responderReject: {}, // These do not bubble capture.
+    responderGrant: {},
+    responderStart: {},
+    responderMove: {},
     responderTerminate: {},
-    responderEnd:       {},
-    responderRelease:   {},
+    responderEnd: {},
+    responderRelease: {},
   };
@@ -189,9 +192,18 @@ var oneEventLoopTestConfig = function(readableIDToID) {
         // Two phase
-        ret[eventName].bubbled[readableNodeName] =
-          {order: NA, assertEvent: null, returnVal: undefined};
-        ret[eventName].captured[readableNodeName] =
-          {order: NA, assertEvent: null, returnVal: undefined};
+        ret[eventName].bubbled[readableNodeName] = {
+          order: NA,
+          assertEvent: null,
+          returnVal: undefined,
+        };
+        ret[eventName].captured[readableNodeName] = {
+          order: NA,
+          assertEvent: null,
+          returnVal: undefined,
+        };
       } else {
-        ret[eventName][readableNodeName] =
-          {order: NA, assertEvent: null, returnVal: undefined};
+        ret[eventName][readableNodeName] = {
+          order: NA,
+          assertEvent: null,
+          returnVal: undefined,
+        };
       }
@@ -211,5 +223,9 @@ var registerTestHandlers = function(eventTestConfig, readableIDToID) {
     expect('').toBe(
-      'Event type: ' + registrationName +
-      '\nShould never occur on:' + readableID +
-      '\nFor event test config:\n' + JSON.stringify(eventTestConfig) + '\n'
+      'Event type: ' +
+        registrationName +
+        '\nShould never occur on:' +
+        readableID +
+        '\nFor event test config:\n' +
+        JSON.stringify(eventTestConfig) +
+        '\n',
     );
@@ -221,16 +237,15 @@ var registerTestHandlers = function(eventTestConfig, readableIDToID) {
       var id = readableIDToID[readableID];
-      var handler = nodeConfig.order === NA ? neverFire.bind(null, readableID, registrationName) :
-        // We partially apply readableID and nodeConfig, as they change in the
-        // parent closure across iterations.
-        function(rID, config, e) {
-          expect(
-            rID + '->' + registrationName + ' index:' + runs.dispatchCount++
-          ).toBe(
-            rID + '->' + registrationName + ' index:' + config.order
-          );
-          if (config.assertEvent) {
-            config.assertEvent(e);
-          }
-          return config.returnVal;
-        }.bind(null, readableID, nodeConfig);
+      var handler = nodeConfig.order === NA
+        ? neverFire.bind(null, readableID, registrationName)
+        : // We partially apply readableID and nodeConfig, as they change in the
+          // parent closure across iterations.
+          function(rID, config, e) {
+            expect(
+              rID + '->' + registrationName + ' index:' + runs.dispatchCount++,
+            ).toBe(rID + '->' + registrationName + ' index:' + config.order);
+            if (config.assertEvent) {
+              config.assertEvent(e);
+            }
+            return config.returnVal;
+          }.bind(null, readableID, nodeConfig);
       EventPluginHub.putListener(idToInstance[id], registrationName, handler);
@@ -243,8 +258,10 @@ var registerTestHandlers = function(eventTestConfig, readableIDToID) {
       registerOneEventType(
-        ResponderEventPlugin.eventTypes[eventName].phasedRegistrationNames.bubbled,
-        oneEventTypeTestConfig.bubbled
+        ResponderEventPlugin.eventTypes[eventName].phasedRegistrationNames
+          .bubbled,
+        oneEventTypeTestConfig.bubbled,
       );
       registerOneEventType(
-        ResponderEventPlugin.eventTypes[eventName].phasedRegistrationNames.captured,
-        oneEventTypeTestConfig.captured
+        ResponderEventPlugin.eventTypes[eventName].phasedRegistrationNames
+          .captured,
+        oneEventTypeTestConfig.captured,
       );
@@ -253,3 +270,3 @@ var registerTestHandlers = function(eventTestConfig, readableIDToID) {
         ResponderEventPlugin.eventTypes[eventName].registrationName,
-        oneEventTypeTestConfig
+        oneEventTypeTestConfig,
       );
@@ -260,5 +277,2 @@ var registerTestHandlers = function(eventTestConfig, readableIDToID) {
 
-
-
-
 var run = function(config, hierarchyConfig, nativeEventConfig) {
@@ -289,3 +303,3 @@ var run = function(config, hierarchyConfig, nativeEventConfig) {
     nativeEventConfig.nativeEvent,
-    nativeEventConfig.target
+    nativeEventConfig.target,
   );
@@ -299,6 +313,4 @@ var run = function(config, hierarchyConfig, nativeEventConfig) {
   // Ensure that every event that declared an `order`, was actually dispatched.
-  expect(
-    'number of events dispatched:' + runData.dispatchCount
-  ).toBe(
-    'number of events dispatched:' + (max + 1)
+  expect('number of events dispatched:' + runData.dispatchCount).toBe(
+    'number of events dispatched:' + (max + 1),
   ); // +1 for extra ++
@@ -329,3 +341,2 @@ var siblings = {
 describe('ResponderEventPlugin', () => {
-
   // This test is written against React IDs such as 'root.a.b[10]' but we
@@ -388,6 +399,6 @@ describe('ResponderEventPlugin', () => {
     var traverse = traverseUp ? getParentID : getNextDescendantID;
-    for (var id = start; /* until break */; id = traverse(id, stop)) {
+    for (var id = start /* until break */; ; id = traverse(id, stop)) {
       var ret;
       if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
-        ret = cb(id, traverseUp ? 'bubbled': 'captured', arg);
+        ret = cb(id, traverseUp ? 'bubbled' : 'captured', arg);
       }
@@ -437,8 +448,5 @@ describe('ResponderEventPlugin', () => {
       traverseTwoPhase: function(target, fn, arg) {
-        traverseTwoPhase(
-          target._rootNodeID,
-          function(id, phase) {
-            fn(idToInstance[id], phase, arg);
-          }
-        );
+        traverseTwoPhase(target._rootNodeID, function(id, phase) {
+          fn(idToInstance[id], phase, arg);
+        });
       },
@@ -449,8 +457,23 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
-    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.child = {
+      order: 2,
+      returnVal: false,
+    };
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: false};
-    config.startShouldSetResponder.bubbled.parent = {order: 4, returnVal: false};
-    config.startShouldSetResponder.bubbled.grandParent = {order: 5, returnVal: false};
+    config.startShouldSetResponder.bubbled.parent = {
+      order: 4,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.bubbled.grandParent = {
+      order: 5,
+      returnVal: false,
+    };
     run(config, three, startConfig(three.child, [three.child], [0]));
@@ -464,3 +487,2 @@ describe('ResponderEventPlugin', () => {
 
-
   /**
@@ -470,6 +492,8 @@ describe('ResponderEventPlugin', () => {
 
-
   it('should grant responder grandParent while capturing', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: true};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: true,
+    };
     config.responderGrant.grandParent = {order: 1};
@@ -488,4 +512,10 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: true};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: true,
+    };
     config.responderGrant.parent = {order: 2};
@@ -504,4 +534,10 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
     config.startShouldSetResponder.captured.child = {order: 2, returnVal: true};
@@ -521,5 +557,14 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
-    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.child = {
+      order: 2,
+      returnVal: false,
+    };
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: true};
@@ -539,5 +584,14 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
-    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.child = {
+      order: 2,
+      returnVal: false,
+    };
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: false};
@@ -558,8 +612,23 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
-    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.child = {
+      order: 2,
+      returnVal: false,
+    };
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: false};
-    config.startShouldSetResponder.bubbled.parent = {order: 4, returnVal: false};
-    config.startShouldSetResponder.bubbled.grandParent = {order: 5, returnVal: true};
+    config.startShouldSetResponder.bubbled.parent = {
+      order: 4,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.bubbled.grandParent = {
+      order: 5,
+      returnVal: true,
+    };
     config.responderGrant.grandParent = {order: 6};
@@ -576,4 +645,2 @@ describe('ResponderEventPlugin', () => {
 
-
-
   /**
@@ -595,3 +662,6 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: true};
+    config.moveShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: true,
+    };
     config.responderGrant.grandParent = {order: 1};
@@ -620,3 +690,6 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.moveShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
     config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: true};
@@ -646,4 +719,10 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.moveShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.moveShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
     config.moveShouldSetResponder.captured.child = {order: 2, returnVal: true};
@@ -673,4 +752,10 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.moveShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.moveShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
     config.moveShouldSetResponder.captured.child = {order: 2, returnVal: false};
@@ -701,4 +786,10 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.moveShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.moveShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
     config.moveShouldSetResponder.captured.child = {order: 2, returnVal: false};
@@ -730,4 +821,10 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.moveShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.moveShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
     config.moveShouldSetResponder.captured.child = {order: 2, returnVal: false};
@@ -735,3 +832,6 @@ describe('ResponderEventPlugin', () => {
     config.moveShouldSetResponder.bubbled.parent = {order: 4, returnVal: false};
-    config.moveShouldSetResponder.bubbled.grandParent = {order: 5, returnVal: true};
+    config.moveShouldSetResponder.bubbled.grandParent = {
+      order: 5,
+      returnVal: true,
+    };
     config.responderGrant.grandParent = {order: 6};
@@ -748,3 +848,2 @@ describe('ResponderEventPlugin', () => {
 
-
   /**
@@ -756,4 +855,10 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: true};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: true,
+    };
     config.responderGrant.parent = {order: 2};
@@ -766,5 +871,11 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-
-    config.startShouldSetResponder.bubbled.grandParent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+
+    config.startShouldSetResponder.bubbled.grandParent = {
+      order: 1,
+      returnVal: false,
+    };
     config.responderStart.parent = {order: 2};
@@ -782,4 +893,10 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: true};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: true,
+    };
     config.responderGrant.parent = {order: 2};
@@ -792,3 +909,6 @@ describe('ResponderEventPlugin', () => {
     // Parent is responder, and responder is transferred by a second touch start
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: true};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: true,
+    };
     config.responderGrant.grandParent = {order: 1};
@@ -797,3 +917,7 @@ describe('ResponderEventPlugin', () => {
     config.responderStart.grandParent = {order: 4};
-    run(config, three, startConfig(three.child, [three.child, three.child], [1]));
+    run(
+      config,
+      three,
+      startConfig(three.child, [three.child, three.child], [1]),
+    );
     expect(ResponderEventPlugin._getResponderID()).toBe(three.grandParent);
@@ -802,3 +926,3 @@ describe('ResponderEventPlugin', () => {
     config.responderEnd.grandParent = {order: 0};
-                                      // one remains\ /one ended \
+    // one remains\ /one ended \
     run(config, three, endConfig(three.child, [three.child, three.child], [1]));
@@ -820,6 +944,18 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
-    config.startShouldSetResponder.bubbled.parent = {order: 2, returnVal: false};
-    config.startShouldSetResponder.bubbled.grandParent = {order: 3, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.bubbled.parent = {
+      order: 2,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.bubbled.grandParent = {
+      order: 3,
+      returnVal: false,
+    };
 
@@ -834,5 +970,14 @@ describe('ResponderEventPlugin', () => {
     // (Even if this is the second active touch).
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
-    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.child = {
+      order: 2,
+      returnVal: false,
+    };
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: true};
@@ -841,6 +986,9 @@ describe('ResponderEventPlugin', () => {
     //                                     /  Two active touches  \  /one of them new\
-    run(config, three, startConfig(three.child, [three.parent, three.child], [1]));
+    run(
+      config,
+      three,
+      startConfig(three.child, [three.parent, three.child], [1]),
+    );
     expect(ResponderEventPlugin._getResponderID()).toBe(three.child);
 
-
     // Now we remove the original first touch, keeping the second touch that
@@ -851,3 +999,7 @@ describe('ResponderEventPlugin', () => {
     //                                      / one ended\  /one remains \
-    run(config, three, endConfig(three.child, [three.parent, three.child], [0]));
+    run(
+      config,
+      three,
+      endConfig(three.child, [three.parent, three.child], [0]),
+    );
     expect(ResponderEventPlugin._getResponderID()).toBe(three.child);
@@ -859,6 +1011,18 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
-    config.startShouldSetResponder.bubbled.parent = {order: 2, returnVal: false};
-    config.startShouldSetResponder.bubbled.grandParent = {order: 3, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.bubbled.parent = {
+      order: 2,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.bubbled.grandParent = {
+      order: 3,
+      returnVal: false,
+    };
     // Interesting: child still gets moves even though touch target is parent!
@@ -867,6 +1031,9 @@ describe('ResponderEventPlugin', () => {
     //                                           /  Two active touches  \  /one of them new\
-    run(config, three, startConfig(three.parent, [three.child, three.parent], [1]));
+    run(
+      config,
+      three,
+      startConfig(three.parent, [three.child, three.parent], [1]),
+    );
     expect(ResponderEventPlugin._getResponderID()).toBe(three.child);
 
-
     // Now, move that new touch that had no effect, and did not start within
@@ -874,6 +1041,15 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.moveShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.moveShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
     config.moveShouldSetResponder.bubbled.parent = {order: 2, returnVal: false};
-    config.moveShouldSetResponder.bubbled.grandParent = {order: 3, returnVal: false};
+    config.moveShouldSetResponder.bubbled.grandParent = {
+      order: 3,
+      returnVal: false,
+    };
     // Interesting: child still gets moves even though touch target is parent!
@@ -882,6 +1058,9 @@ describe('ResponderEventPlugin', () => {
     //                                     /  Two active touches  \  /one of them moved\
-    run(config, three, moveConfig(three.parent, [three.child, three.parent], [1]));
+    run(
+      config,
+      three,
+      moveConfig(three.parent, [three.child, three.parent], [1]),
+    );
     expect(ResponderEventPlugin._getResponderID()).toBe(three.child);
 
-
     config = oneEventLoopTestConfig(three);
@@ -890,3 +1069,7 @@ describe('ResponderEventPlugin', () => {
     //                                        /child end \ /parent remain\
-    run(config, three, endConfig(three.child, [three.child, three.parent], [0]));
+    run(
+      config,
+      three,
+      endConfig(three.child, [three.child, three.parent], [0]),
+    );
     expect(ResponderEventPlugin._getResponderID()).toBe(null);
@@ -894,3 +1077,2 @@ describe('ResponderEventPlugin', () => {
 
-
   /**
@@ -902,5 +1084,14 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(siblings);
-    config.startShouldSetResponder.captured.parent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.childOne = {order: 1, returnVal: false};
-    config.startShouldSetResponder.bubbled.childOne = {order: 2, returnVal: true};
+    config.startShouldSetResponder.captured.parent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.childOne = {
+      order: 1,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.bubbled.childOne = {
+      order: 2,
+      returnVal: true,
+    };
     config.responderGrant.childOne = {order: 3};
@@ -908,3 +1099,7 @@ describe('ResponderEventPlugin', () => {
 
-    run(config, siblings, startConfig(siblings.childOne, [siblings.childOne], [0]));
+    run(
+      config,
+      siblings,
+      startConfig(siblings.childOne, [siblings.childOne], [0]),
+    );
     expect(ResponderEventPlugin._getResponderID()).toBe(siblings.childOne);
@@ -915,8 +1110,17 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(siblings);
-    config.startShouldSetResponder.captured.parent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.bubbled.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.bubbled.parent = {
+      order: 1,
+      returnVal: false,
+    };
     config.responderStart.childOne = {order: 2};
 
-    var touchConfig =
-      startConfig(siblings.childTwo, [siblings.childOne, siblings.childTwo], [1]);
+    var touchConfig = startConfig(
+      siblings.childTwo,
+      [siblings.childOne, siblings.childTwo],
+      [1],
+    );
     run(config, siblings, touchConfig);
@@ -924,9 +1128,19 @@ describe('ResponderEventPlugin', () => {
 
-
     // move childOne
     config = oneEventLoopTestConfig(siblings);
-    config.moveShouldSetResponder.captured.parent = {order: 0, returnVal: false};
+    config.moveShouldSetResponder.captured.parent = {
+      order: 0,
+      returnVal: false,
+    };
     config.moveShouldSetResponder.bubbled.parent = {order: 1, returnVal: false};
     config.responderMove.childOne = {order: 2};
-    run(config, siblings, moveConfig(siblings.childOne, [siblings.childOne, siblings.childTwo], [0]));
+    run(
+      config,
+      siblings,
+      moveConfig(
+        siblings.childOne,
+        [siblings.childOne, siblings.childTwo],
+        [0],
+      ),
+    );
     expect(ResponderEventPlugin._getResponderID()).toBe(siblings.childOne);
@@ -935,11 +1149,20 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(siblings);
-    config.moveShouldSetResponder.captured.parent = {order: 0, returnVal: false};
+    config.moveShouldSetResponder.captured.parent = {
+      order: 0,
+      returnVal: false,
+    };
     config.moveShouldSetResponder.bubbled.parent = {order: 1, returnVal: false};
     config.responderMove.childOne = {order: 2};
-    run(config, siblings, moveConfig(siblings.childTwo, [siblings.childOne, siblings.childTwo], [1]));
+    run(
+      config,
+      siblings,
+      moveConfig(
+        siblings.childTwo,
+        [siblings.childOne, siblings.childTwo],
+        [1],
+      ),
+    );
     expect(ResponderEventPlugin._getResponderID()).toBe(siblings.childOne);
-
   });
 
-
   it('should notify of being rejected. responderStart/Move happens on current responder', () => {
@@ -947,5 +1170,14 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
-    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.child = {
+      order: 2,
+      returnVal: false,
+    };
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: true};
@@ -959,4 +1191,10 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.moveShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.moveShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
     config.moveShouldSetResponder.bubbled.parent = {order: 2, returnVal: true};
@@ -968,4 +1206,3 @@ describe('ResponderEventPlugin', () => {
 
-    var touchConfig =
-      moveConfig(three.child, [three.child], [0]);
+    var touchConfig = moveConfig(three.child, [three.child], [0]);
     run(config, three, touchConfig);
@@ -974,4 +1211,10 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
     config.startShouldSetResponder.bubbled.parent = {order: 2, returnVal: true};
@@ -983,10 +1226,7 @@ describe('ResponderEventPlugin', () => {
 
-    touchConfig =
-      startConfig(three.child, [three.child, three.child], [1]);
+    touchConfig = startConfig(three.child, [three.child, three.child], [1]);
     run(config, three, touchConfig);
     expect(ResponderEventPlugin._getResponderID()).toBe(three.child);
-
   });
 
-
   it('should negotiate scroll', () => {
@@ -994,5 +1234,14 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
-    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.child = {
+      order: 2,
+      returnVal: false,
+    };
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: true};
@@ -1008,5 +1257,14 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.scrollShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.scrollShouldSetResponder.captured.parent = {order: 1, returnVal: false};
-    config.scrollShouldSetResponder.bubbled.parent = {order: 2, returnVal: true};
+    config.scrollShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.scrollShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
+    config.scrollShouldSetResponder.bubbled.parent = {
+      order: 2,
+      returnVal: true,
+    };
     config.responderGrant.parent = {order: 3};
@@ -1022,8 +1280,16 @@ describe('ResponderEventPlugin', () => {
 
-
     // Now lets let the scroll take control this time.
     config = oneEventLoopTestConfig(three);
-    config.scrollShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.scrollShouldSetResponder.captured.parent = {order: 1, returnVal: false};
-    config.scrollShouldSetResponder.bubbled.parent = {order: 2, returnVal: true};
+    config.scrollShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.scrollShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
+    config.scrollShouldSetResponder.bubbled.parent = {
+      order: 2,
+      returnVal: true,
+    };
     config.responderGrant.parent = {order: 3};
@@ -1038,4 +1304,2 @@ describe('ResponderEventPlugin', () => {
     expect(ResponderEventPlugin._getResponderID()).toBe(three.parent);
-
-
   });
@@ -1045,5 +1309,14 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
-    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
-    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
+    config.startShouldSetResponder.captured.grandParent = {
+      order: 0,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.parent = {
+      order: 1,
+      returnVal: false,
+    };
+    config.startShouldSetResponder.captured.child = {
+      order: 2,
+      returnVal: false,
+    };
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: true};
@@ -1063,3 +1336,3 @@ describe('ResponderEventPlugin', () => {
       [three.child],
-      [0]
+      [0],
     );
diff --git a/src/renderers/shared/stack/reconciler/ReactChildReconciler.js b/src/renderers/shared/stack/reconciler/ReactChildReconciler.js
index d487e7099..1a1aa9a61 100644
--- a/src/renderers/shared/stack/reconciler/ReactChildReconciler.js
+++ b/src/renderers/shared/stack/reconciler/ReactChildReconciler.js
@@ -38,3 +38,3 @@ function instantiateChild(childInstances, child, name, selfDebugID) {
   // We found a component instance.
-  var keyUnique = (childInstances[name] === undefined);
+  var keyUnique = childInstances[name] === undefined;
   if (__DEV__) {
@@ -47,6 +47,6 @@ function instantiateChild(childInstances, child, name, selfDebugID) {
         'flattenChildren(...): Encountered two children with the same key, ' +
-        '`%s`. Child keys must be unique; when two children share a key, only ' +
-        'the first child will be used.%s',
+          '`%s`. Child keys must be unique; when two children share a key, only ' +
+          'the first child will be used.%s',
         KeyEscapeUtils.unescape(name),
-        ReactComponentTreeHook.getStackAddendumByID(selfDebugID)
+        ReactComponentTreeHook.getStackAddendumByID(selfDebugID),
       );
@@ -77,3 +77,3 @@ var ReactChildReconciler = {
     context,
-    selfDebugID // 0 in production and for roots
+    selfDebugID, // 0 in production and for roots
   ) {
@@ -87,9 +87,5 @@ var ReactChildReconciler = {
         nestedChildNodes,
-        (childInsts, child, name) => instantiateChild(
-          childInsts,
-          child,
-          name,
-          selfDebugID
-        ),
-        childInstances
+        (childInsts, child, name) =>
+          instantiateChild(childInsts, child, name, selfDebugID),
+        childInstances,
       );
@@ -120,3 +116,3 @@ var ReactChildReconciler = {
     context,
-    selfDebugID // 0 in production and for roots
+    selfDebugID, // 0 in production and for roots
   ) {
@@ -139,6 +135,11 @@ var ReactChildReconciler = {
       var nextElement = nextChildren[name];
-      if (prevChild != null &&
-          shouldUpdateReactComponent(prevElement, nextElement)) {
+      if (
+        prevChild != null &&
+        shouldUpdateReactComponent(prevElement, nextElement)
+      ) {
         ReactReconciler.receiveComponent(
-          prevChild, nextElement, transaction, context
+          prevChild,
+          nextElement,
+          transaction,
+          context,
         );
@@ -161,3 +162,3 @@ var ReactChildReconciler = {
           context,
-          selfDebugID
+          selfDebugID,
         );
@@ -168,4 +169,6 @@ var ReactChildReconciler = {
     for (name in prevChildren) {
-      if (prevChildren.hasOwnProperty(name) &&
-          !(nextChildren && nextChildren.hasOwnProperty(name))) {
+      if (
+        prevChildren.hasOwnProperty(name) &&
+        !(nextChildren && nextChildren.hasOwnProperty(name))
+      ) {
         prevChild = prevChildren[name];
@@ -192,3 +195,2 @@ var ReactChildReconciler = {
   },
-
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactComponentEnvironment.js b/src/renderers/shared/stack/reconciler/ReactComponentEnvironment.js
index bb9835d5b..cbba0c55c 100644
--- a/src/renderers/shared/stack/reconciler/ReactComponentEnvironment.js
+++ b/src/renderers/shared/stack/reconciler/ReactComponentEnvironment.js
@@ -27,3 +27,2 @@ var injected = false;
 var ReactComponentEnvironment = {
-
   /**
@@ -44,3 +43,3 @@ var ReactComponentEnvironment = {
         !injected,
-        'ReactCompositeComponent: injectEnvironment() can only be called once.'
+        'ReactCompositeComponent: injectEnvironment() can only be called once.',
       );
@@ -53,3 +52,2 @@ var ReactComponentEnvironment = {
   },
-
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js b/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js
index 9105f76c3..ec90a2106 100644
--- a/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js
+++ b/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js
@@ -32,3 +32,3 @@ var warning = require('warning');
 
-import type { ReactPropTypeLocations } from 'ReactPropTypeLocations';
+import type {ReactPropTypeLocations} from 'ReactPropTypeLocations';
 
@@ -40,4 +40,3 @@ var CompositeTypes = {
 
-function StatelessComponent(Component) {
-}
+function StatelessComponent(Component) {}
 StatelessComponent.prototype.render = function() {
@@ -54,4 +53,4 @@ function warnIfInvalidElement(Component, element) {
       '%s(...): A valid React element (or null) must be returned. You may have ' +
-      'returned undefined, an array or some other invalid object.',
-      Component.displayName || Component.name || 'Component'
+        'returned undefined, an array or some other invalid object.',
+      Component.displayName || Component.name || 'Component',
     );
@@ -60,3 +59,3 @@ function warnIfInvalidElement(Component, element) {
       '%s(...): childContextTypes cannot be defined on a functional component.',
-      Component.displayName || Component.name || 'Component'
+      Component.displayName || Component.name || 'Component',
     );
@@ -129,3 +128,2 @@ var nextMountID = 1;
 var ReactCompositeComponent = {
-
   /**
@@ -184,3 +182,3 @@ var ReactCompositeComponent = {
     hostContainerInfo,
-    context
+    context,
   ) {
@@ -204,3 +202,3 @@ var ReactCompositeComponent = {
       publicContext,
-      updateQueue
+      updateQueue,
     );
@@ -213,8 +211,6 @@ var ReactCompositeComponent = {
       invariant(
-        inst === null ||
-        inst === false ||
-        React.isValidElement(inst),
+        inst === null || inst === false || React.isValidElement(inst),
         '%s(...): A valid React element (or null) must be returned. You may have ' +
-        'returned undefined, an array or some other invalid object.',
-        Component.displayName || Component.name || 'Component'
+          'returned undefined, an array or some other invalid object.',
+        Component.displayName || Component.name || 'Component',
       );
@@ -237,4 +233,4 @@ var ReactCompositeComponent = {
           '%s(...): No `render` method found on the returned component ' +
-          'instance: you may have forgotten to define `render`.',
-          Component.displayName || Component.name || 'Component'
+            'instance: you may have forgotten to define `render`.',
+          Component.displayName || Component.name || 'Component',
         );
@@ -249,4 +245,5 @@ var ReactCompositeComponent = {
         '%s(...): When calling super() in `%s`, make sure to pass ' +
-        'up the same props that your component\'s constructor was passed.',
-        componentName, componentName
+          "up the same props that your component's constructor was passed.",
+        componentName,
+        componentName,
       );
@@ -272,16 +269,15 @@ var ReactCompositeComponent = {
         !inst.getInitialState ||
-        inst.getInitialState.isReactClassApproved ||
-        inst.state,
+          inst.getInitialState.isReactClassApproved ||
+          inst.state,
         'getInitialState was defined on %s, a plain JavaScript class. ' +
-        'This is only supported for classes created using React.createClass. ' +
-        'Did you mean to define a state property instead?',
-        this.getName() || 'a component'
+          'This is only supported for classes created using React.createClass. ' +
+          'Did you mean to define a state property instead?',
+        this.getName() || 'a component',
       );
       warning(
-        !inst.getDefaultProps ||
-        inst.getDefaultProps.isReactClassApproved,
+        !inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved,
         'getDefaultProps was defined on %s, a plain JavaScript class. ' +
-        'This is only supported for classes created using React.createClass. ' +
-        'Use a static property to define defaultProps instead.',
-        this.getName() || 'a component'
+          'This is only supported for classes created using React.createClass. ' +
+          'Use a static property to define defaultProps instead.',
+        this.getName() || 'a component',
       );
@@ -290,4 +286,4 @@ var ReactCompositeComponent = {
         'propTypes was defined as an instance property on %s. Use a static ' +
-        'property to define propTypes instead.',
-        this.getName() || 'a component'
+          'property to define propTypes instead.',
+        this.getName() || 'a component',
       );
@@ -296,4 +292,4 @@ var ReactCompositeComponent = {
         'contextTypes was defined as an instance property on %s. Use a ' +
-        'static property to define contextTypes instead.',
-        this.getName() || 'a component'
+          'static property to define contextTypes instead.',
+        this.getName() || 'a component',
       );
@@ -302,6 +298,6 @@ var ReactCompositeComponent = {
         '%s has a method called ' +
-        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
-        'The name is phrased as a question because the function is ' +
-        'expected to return a value.',
-        (this.getName() || 'A component')
+          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
+          'The name is phrased as a question because the function is ' +
+          'expected to return a value.',
+        this.getName() || 'A component',
       );
@@ -310,5 +306,5 @@ var ReactCompositeComponent = {
         '%s has a method called ' +
-        'componentDidUnmount(). But there is no such lifecycle method. ' +
-        'Did you mean componentWillUnmount()?',
-        this.getName() || 'A component'
+          'componentDidUnmount(). But there is no such lifecycle method. ' +
+          'Did you mean componentWillUnmount()?',
+        this.getName() || 'A component',
       );
@@ -317,4 +313,4 @@ var ReactCompositeComponent = {
         '%s has a method called ' +
-        'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
-        (this.getName() || 'A component')
+          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
+        this.getName() || 'A component',
       );
@@ -329,3 +325,3 @@ var ReactCompositeComponent = {
       '%s.state: must be set to an object or null',
-      this.getName() || 'ReactCompositeComponent'
+      this.getName() || 'ReactCompositeComponent',
     );
@@ -343,6 +339,12 @@ var ReactCompositeComponent = {
         transaction,
-        context
+        context,
       );
     } else {
-      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
+      markup = this.performInitialMount(
+        renderedElement,
+        hostParent,
+        hostContainerInfo,
+        transaction,
+        context,
+      );
     }
@@ -355,3 +357,3 @@ var ReactCompositeComponent = {
             this._debugID,
-            'componentDidMount'
+            'componentDidMount',
           );
@@ -370,3 +372,3 @@ var ReactCompositeComponent = {
     publicContext,
-    updateQueue
+    updateQueue,
   ) {
@@ -379,3 +381,3 @@ var ReactCompositeComponent = {
           publicContext,
-          updateQueue
+          updateQueue,
         );
@@ -389,3 +391,3 @@ var ReactCompositeComponent = {
         publicContext,
-        updateQueue
+        updateQueue,
       );
@@ -398,3 +400,3 @@ var ReactCompositeComponent = {
     publicContext,
-    updateQueue
+    updateQueue,
   ) {
@@ -407,3 +409,3 @@ var ReactCompositeComponent = {
           this._debugID,
-          'ctor'
+          'ctor',
         );
@@ -420,3 +422,3 @@ var ReactCompositeComponent = {
         this._debugID,
-        'render'
+        'render',
       );
@@ -432,3 +434,3 @@ var ReactCompositeComponent = {
     transaction,
-    context
+    context,
   ) {
@@ -437,3 +439,9 @@ var ReactCompositeComponent = {
     try {
-      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
+      markup = this.performInitialMount(
+        renderedElement,
+        hostParent,
+        hostContainerInfo,
+        transaction,
+        context,
+      );
     } catch (e) {
@@ -443,3 +451,6 @@ var ReactCompositeComponent = {
       if (this._pendingStateQueue) {
-        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
+        this._instance.state = this._processPendingState(
+          this._instance.props,
+          this._instance.context,
+        );
       }
@@ -452,3 +463,9 @@ var ReactCompositeComponent = {
       // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
-      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
+      markup = this.performInitialMount(
+        renderedElement,
+        hostParent,
+        hostContainerInfo,
+        transaction,
+        context,
+      );
     }
@@ -457,3 +474,9 @@ var ReactCompositeComponent = {
 
-  performInitialMount: function(renderedElement, hostParent, hostContainerInfo, transaction, context) {
+  performInitialMount: function(
+    renderedElement,
+    hostParent,
+    hostContainerInfo,
+    transaction,
+    context,
+  ) {
     var inst = this._instance;
@@ -470,3 +493,3 @@ var ReactCompositeComponent = {
           debugID,
-          'componentWillMount'
+          'componentWillMount',
         );
@@ -491,3 +514,3 @@ var ReactCompositeComponent = {
       renderedElement,
-      nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
+      nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */,
     );
@@ -501,3 +524,3 @@ var ReactCompositeComponent = {
       this._processChildContext(context),
-      debugID
+      debugID,
     );
@@ -536,3 +559,6 @@ var ReactCompositeComponent = {
         var name = this.getName() + '.componentWillUnmount()';
-        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
+        ReactErrorUtils.invokeGuardedCallback(
+          name,
+          inst.componentWillUnmount.bind(inst),
+        );
       } else {
@@ -542,3 +568,3 @@ var ReactCompositeComponent = {
             this._debugID,
-            'componentWillUnmount'
+            'componentWillUnmount',
           );
@@ -621,3 +647,3 @@ var ReactCompositeComponent = {
           maskedContext,
-          'context'
+          'context',
         );
@@ -655,4 +681,4 @@ var ReactCompositeComponent = {
         '%s.getChildContext(): childContextTypes must be defined in order to ' +
-        'use getChildContext().',
-        this.getName() || 'ReactCompositeComponent'
+          'use getChildContext().',
+        this.getName() || 'ReactCompositeComponent',
       );
@@ -662,3 +688,3 @@ var ReactCompositeComponent = {
           childContext,
-          'child context'
+          'child context',
         );
@@ -670,3 +696,3 @@ var ReactCompositeComponent = {
           this.getName() || 'ReactCompositeComponent',
-          name
+          name,
         );
@@ -698,3 +724,3 @@ var ReactCompositeComponent = {
         null,
-        this._debugID
+        this._debugID,
       );
@@ -714,3 +740,3 @@ var ReactCompositeComponent = {
       prevContext,
-      nextContext
+      nextContext,
     );
@@ -731,3 +757,3 @@ var ReactCompositeComponent = {
         transaction,
-        this._context
+        this._context,
       );
@@ -739,3 +765,3 @@ var ReactCompositeComponent = {
         this._context,
-        this._context
+        this._context,
       );
@@ -766,3 +792,3 @@ var ReactCompositeComponent = {
     prevUnmaskedContext,
-    nextUnmaskedContext
+    nextUnmaskedContext,
   ) {
@@ -772,4 +798,4 @@ var ReactCompositeComponent = {
       'Attempted to update component `%s` that has already been unmounted ' +
-      '(or failed to mount).',
-      this.getName() || 'ReactCompositeComponent'
+        '(or failed to mount).',
+      this.getName() || 'ReactCompositeComponent',
     );
@@ -819,6 +845,10 @@ var ReactCompositeComponent = {
             this._debugID,
-            'shouldComponentUpdate'
+            'shouldComponentUpdate',
           );
         } else {
-          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
+          shouldUpdate = inst.shouldComponentUpdate(
+            nextProps,
+            nextState,
+            nextContext,
+          );
         }
@@ -837,4 +867,4 @@ var ReactCompositeComponent = {
         '%s.shouldComponentUpdate(): Returned undefined instead of a ' +
-        'boolean value. Make sure to return true or false.',
-        this.getName() || 'ReactCompositeComponent'
+          'boolean value. Make sure to return true or false.',
+        this.getName() || 'ReactCompositeComponent',
       );
@@ -852,3 +882,3 @@ var ReactCompositeComponent = {
         transaction,
-        nextUnmaskedContext
+        nextUnmaskedContext,
       );
@@ -885,5 +915,5 @@ var ReactCompositeComponent = {
         nextState,
-        typeof partial === 'function' ?
-          partial.call(inst, nextState, props, context) :
-          partial
+        typeof partial === 'function'
+          ? partial.call(inst, nextState, props, context)
+          : partial,
       );
@@ -912,3 +942,3 @@ var ReactCompositeComponent = {
     transaction,
-    unmaskedContext
+    unmaskedContext,
   ) {
@@ -931,3 +961,3 @@ var ReactCompositeComponent = {
           this._debugID,
-          'componentWillUpdate'
+          'componentWillUpdate',
         );
@@ -950,5 +980,10 @@ var ReactCompositeComponent = {
           measureLifeCyclePerf(
-            inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),
+            inst.componentDidUpdate.bind(
+              inst,
+              prevProps,
+              prevState,
+              prevContext,
+            ),
             this._debugID,
-            'componentDidUpdate'
+            'componentDidUpdate',
           );
@@ -956,6 +991,13 @@ var ReactCompositeComponent = {
       } else {
-        transaction.getReactMountReady().enqueue(
-          inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),
-          inst
-        );
+        transaction
+          .getReactMountReady()
+          .enqueue(
+            inst.componentDidUpdate.bind(
+              inst,
+              prevProps,
+              prevState,
+              prevContext,
+            ),
+            inst,
+          );
       }
@@ -985,3 +1027,3 @@ var ReactCompositeComponent = {
         transaction,
-        this._processChildContext(context)
+        this._processChildContext(context),
       );
@@ -995,3 +1037,3 @@ var ReactCompositeComponent = {
         nextRenderedElement,
-        nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
+        nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */,
       );
@@ -1005,3 +1047,3 @@ var ReactCompositeComponent = {
         this._processChildContext(context),
-        debugID
+        debugID,
       );
@@ -1018,3 +1060,3 @@ var ReactCompositeComponent = {
         nextMarkup,
-        prevComponentInstance
+        prevComponentInstance,
       );
@@ -1032,3 +1074,3 @@ var ReactCompositeComponent = {
       nextMarkup,
-      prevInstance
+      prevInstance,
     );
@@ -1047,3 +1089,3 @@ var ReactCompositeComponent = {
         this._debugID,
-        'render'
+        'render',
       );
@@ -1055,4 +1097,3 @@ var ReactCompositeComponent = {
       // We allow auto-mocks to proceed as if they're returning null.
-      if (renderedElement === undefined &&
-          inst.render._isMockFunction) {
+      if (renderedElement === undefined && inst.render._isMockFunction) {
         // This is probably bad practice. Consider warning here and
@@ -1074,4 +1115,3 @@ var ReactCompositeComponent = {
       try {
-        renderedElement =
-          this._renderValidatedComponentWithoutOwnerOrContext();
+        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
       } finally {
@@ -1080,4 +1120,3 @@ var ReactCompositeComponent = {
     } else {
-      renderedElement =
-        this._renderValidatedComponentWithoutOwnerOrContext();
+      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
     }
@@ -1085,7 +1124,8 @@ var ReactCompositeComponent = {
       // TODO: An `isValidNode` function would probably be more appropriate
-      renderedElement === null || renderedElement === false ||
-      React.isValidElement(renderedElement),
+      renderedElement === null ||
+        renderedElement === false ||
+        React.isValidElement(renderedElement),
       '%s.render(): A valid React element (or null) must be returned. You may have ' +
         'returned undefined, an array or some other invalid object.',
-      this.getName() || 'ReactCompositeComponent'
+      this.getName() || 'ReactCompositeComponent',
     );
@@ -1108,13 +1148,14 @@ var ReactCompositeComponent = {
     if (__DEV__) {
-      var componentName = component && component.getName ?
-        component.getName() : 'a component';
+      var componentName = component && component.getName
+        ? component.getName()
+        : 'a component';
       warning(
         publicComponentInstance != null ||
-        component._compositeType !== CompositeTypes.StatelessFunctional,
+          component._compositeType !== CompositeTypes.StatelessFunctional,
         'Stateless function components cannot be given refs ' +
-        '(See ref "%s" in %s created by %s). ' +
-        'Attempts to access this ref will fail.',
+          '(See ref "%s" in %s created by %s). ' +
+          'Attempts to access this ref will fail.',
         ref,
         componentName,
-        this.getName()
+        this.getName(),
       );
@@ -1147,4 +1188,6 @@ var ReactCompositeComponent = {
     return (
-      type.displayName || (constructor && constructor.displayName) ||
-      type.name || (constructor && constructor.name) ||
+      type.displayName ||
+      (constructor && constructor.displayName) ||
+      type.name ||
+      (constructor && constructor.name) ||
       null
@@ -1171,3 +1214,2 @@ var ReactCompositeComponent = {
   _instantiateReactComponent: null,
-
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactDefaultBatchingStrategy.js b/src/renderers/shared/stack/reconciler/ReactDefaultBatchingStrategy.js
index b5db558d4..b23847d72 100644
--- a/src/renderers/shared/stack/reconciler/ReactDefaultBatchingStrategy.js
+++ b/src/renderers/shared/stack/reconciler/ReactDefaultBatchingStrategy.js
@@ -36,11 +36,7 @@ function ReactDefaultBatchingStrategyTransaction() {
 
-Object.assign(
-  ReactDefaultBatchingStrategyTransaction.prototype,
-  Transaction,
-  {
-    getTransactionWrappers: function() {
-      return TRANSACTION_WRAPPERS;
-    },
-  }
-);
+Object.assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
+  getTransactionWrappers: function() {
+    return TRANSACTION_WRAPPERS;
+  },
+});
 
diff --git a/src/renderers/shared/stack/reconciler/ReactEventEmitterMixin.js b/src/renderers/shared/stack/reconciler/ReactEventEmitterMixin.js
index 94461f880..63134a57e 100644
--- a/src/renderers/shared/stack/reconciler/ReactEventEmitterMixin.js
+++ b/src/renderers/shared/stack/reconciler/ReactEventEmitterMixin.js
@@ -21,3 +21,2 @@ function runEventQueueInBatch(events) {
 var ReactEventEmitterMixin = {
-
   /**
@@ -27,6 +26,7 @@ var ReactEventEmitterMixin = {
   handleTopLevel: function(
-      topLevelType,
-      targetInst,
-      nativeEvent,
-      nativeEventTarget) {
+    topLevelType,
+    targetInst,
+    nativeEvent,
+    nativeEventTarget,
+  ) {
     var events = EventPluginHub.extractEvents(
@@ -35,3 +35,3 @@ var ReactEventEmitterMixin = {
       nativeEvent,
-      nativeEventTarget
+      nativeEventTarget,
     );
diff --git a/src/renderers/shared/stack/reconciler/ReactHostComponent.js b/src/renderers/shared/stack/reconciler/ReactHostComponent.js
index eebe5cba4..c6c06b8b7 100644
--- a/src/renderers/shared/stack/reconciler/ReactHostComponent.js
+++ b/src/renderers/shared/stack/reconciler/ReactHostComponent.js
@@ -41,3 +41,3 @@ function createInternalComponent(element) {
     'There is no registered component for the tag %s',
-    element.type
+    element.type,
   );
diff --git a/src/renderers/shared/stack/reconciler/ReactMultiChild.js b/src/renderers/shared/stack/reconciler/ReactMultiChild.js
index a0d05a76e..d1821eade 100644
--- a/src/renderers/shared/stack/reconciler/ReactMultiChild.js
+++ b/src/renderers/shared/stack/reconciler/ReactMultiChild.js
@@ -135,6 +135,3 @@ function enqueue(queue, update) {
 function processQueue(inst, updateQueue) {
-  ReactComponentEnvironment.processChildrenUpdates(
-    inst,
-    updateQueue,
-  );
+  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
 }
@@ -160,3 +157,5 @@ if (__DEV__) {
         debugID,
-        children ? Object.keys(children).map(key => children[key]._debugID) : []
+        children
+          ? Object.keys(children).map(key => children[key]._debugID)
+          : [],
       );
@@ -173,3 +172,2 @@ if (__DEV__) {
 var ReactMultiChild = {
-
   /**
@@ -182,4 +180,7 @@ var ReactMultiChild = {
   Mixin: {
-
-    _reconcilerInstantiateChildren: function(nestedChildren, transaction, context) {
+    _reconcilerInstantiateChildren: function(
+      nestedChildren,
+      transaction,
+      context,
+    ) {
       if (__DEV__) {
@@ -190,3 +191,6 @@ var ReactMultiChild = {
             return ReactChildReconciler.instantiateChildren(
-              nestedChildren, transaction, context, selfDebugID
+              nestedChildren,
+              transaction,
+              context,
+              selfDebugID,
             );
@@ -198,3 +202,5 @@ var ReactMultiChild = {
       return ReactChildReconciler.instantiateChildren(
-        nestedChildren, transaction, context
+        nestedChildren,
+        transaction,
+        context,
       );
@@ -208,3 +214,3 @@ var ReactMultiChild = {
       transaction,
-      context
+      context,
     ) {
@@ -217,3 +223,6 @@ var ReactMultiChild = {
             ReactCurrentOwner.current = this._currentElement._owner;
-            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
+            nextChildren = flattenChildren(
+              nextNestedChildrenElements,
+              selfDebugID,
+            );
           } finally {
@@ -230,3 +239,3 @@ var ReactMultiChild = {
             context,
-            selfDebugID
+            selfDebugID,
           );
@@ -245,3 +254,3 @@ var ReactMultiChild = {
         context,
-        selfDebugID
+        selfDebugID,
       );
@@ -260,3 +269,5 @@ var ReactMultiChild = {
       var children = this._reconcilerInstantiateChildren(
-        nestedChildren, transaction, context
+        nestedChildren,
+        transaction,
+        context,
       );
@@ -279,3 +290,3 @@ var ReactMultiChild = {
             context,
-            selfDebugID
+            selfDebugID,
           );
@@ -350,3 +361,7 @@ var ReactMultiChild = {
      */
-    _updateChildren: function(nextNestedChildrenElements, transaction, context) {
+    _updateChildren: function(
+      nextNestedChildrenElements,
+      transaction,
+      context,
+    ) {
       var prevChildren = this._renderedChildren;
@@ -360,3 +375,3 @@ var ReactMultiChild = {
         transaction,
-        context
+        context,
       );
@@ -383,3 +398,3 @@ var ReactMultiChild = {
             updates,
-            this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex)
+            this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex),
           );
@@ -402,4 +417,4 @@ var ReactMultiChild = {
               transaction,
-              context
-            )
+              context,
+            ),
           );
@@ -415,3 +430,3 @@ var ReactMultiChild = {
             updates,
-            this._unmountChild(prevChildren[name], removedNodes[name])
+            this._unmountChild(prevChildren[name], removedNodes[name]),
           );
@@ -497,3 +512,4 @@ var ReactMultiChild = {
       transaction,
-      context) {
+      context,
+    ) {
       child._mountIndex = index;
@@ -515,5 +531,3 @@ var ReactMultiChild = {
     },
-
   },
-
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactMultiChildUpdateTypes.js b/src/renderers/shared/stack/reconciler/ReactMultiChildUpdateTypes.js
index acccdc497..1319db50f 100644
--- a/src/renderers/shared/stack/reconciler/ReactMultiChildUpdateTypes.js
+++ b/src/renderers/shared/stack/reconciler/ReactMultiChildUpdateTypes.js
@@ -20,6 +20,6 @@
 export type ReactMultiChildUpdateTypes =
-  'INSERT_MARKUP' |
-  'MOVE_EXISTING' |
-  'REMOVE_NODE' |
-  'SET_MARKUP' |
-  'TEXT_CONTENT';
+  | 'INSERT_MARKUP'
+  | 'MOVE_EXISTING'
+  | 'REMOVE_NODE'
+  | 'SET_MARKUP'
+  | 'TEXT_CONTENT';
diff --git a/src/renderers/shared/stack/reconciler/ReactOwner.js b/src/renderers/shared/stack/reconciler/ReactOwner.js
index c634dfb38..a25e987d8 100644
--- a/src/renderers/shared/stack/reconciler/ReactOwner.js
+++ b/src/renderers/shared/stack/reconciler/ReactOwner.js
@@ -16,3 +16,3 @@ var invariant = require('invariant');
 
-import type { ReactInstance } from 'ReactInstanceType';
+import type {ReactInstance} from 'ReactInstanceType';
 
@@ -79,5 +79,5 @@ var ReactOwner = {
       'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' +
-      'be adding a ref to a component that was not created inside a component\'s ' +
-      '`render` method, or you have multiple copies of React loaded ' +
-      '(details: https://fb.me/react-refs-must-have-owner).'
+        "be adding a ref to a component that was not created inside a component's " +
+        '`render` method, or you have multiple copies of React loaded ' +
+        '(details: https://fb.me/react-refs-must-have-owner).',
     );
@@ -103,5 +103,5 @@ var ReactOwner = {
       'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' +
-      'be removing a ref to a component that was not created inside a component\'s ' +
-      '`render` method, or you have multiple copies of React loaded ' +
-      '(details: https://fb.me/react-refs-must-have-owner).'
+        "be removing a ref to a component that was not created inside a component's " +
+        '`render` method, or you have multiple copies of React loaded ' +
+        '(details: https://fb.me/react-refs-must-have-owner).',
     );
@@ -110,3 +110,6 @@ var ReactOwner = {
     // because we do not want to detach the ref if another component stole it.
-    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
+    if (
+      ownerPublicInstance &&
+      ownerPublicInstance.refs[ref] === component.getPublicInstance()
+    ) {
       owner.detachRef(ref);
@@ -114,3 +117,2 @@ var ReactOwner = {
   },
-
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactReconciler.js b/src/renderers/shared/stack/reconciler/ReactReconciler.js
index c2d44391c..12c1b60ef 100644
--- a/src/renderers/shared/stack/reconciler/ReactReconciler.js
+++ b/src/renderers/shared/stack/reconciler/ReactReconciler.js
@@ -27,3 +27,2 @@ function attachRefs() {
 var ReactReconciler = {
-
   /**
@@ -45,3 +44,3 @@ var ReactReconciler = {
     context,
-    parentDebugID // 0 in production and for roots
+    parentDebugID, // 0 in production and for roots
   ) {
@@ -52,3 +51,3 @@ var ReactReconciler = {
           internalInstance._currentElement,
-          parentDebugID
+          parentDebugID,
         );
@@ -61,6 +60,8 @@ var ReactReconciler = {
       context,
-      parentDebugID
+      parentDebugID,
     );
-    if (internalInstance._currentElement &&
-        internalInstance._currentElement.ref != null) {
+    if (
+      internalInstance._currentElement &&
+      internalInstance._currentElement.ref != null
+    ) {
       transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
@@ -70,3 +71,3 @@ var ReactReconciler = {
         ReactInstrumentation.debugTool.onMountComponent(
-          internalInstance._debugID
+          internalInstance._debugID,
         );
@@ -95,3 +96,3 @@ var ReactReconciler = {
         ReactInstrumentation.debugTool.onBeforeUnmountComponent(
-          internalInstance._debugID
+          internalInstance._debugID,
         );
@@ -104,3 +105,3 @@ var ReactReconciler = {
         ReactInstrumentation.debugTool.onUnmountComponent(
-          internalInstance._debugID
+          internalInstance._debugID,
         );
@@ -120,3 +121,6 @@ var ReactReconciler = {
   receiveComponent: function(
-    internalInstance, nextElement, transaction, context
+    internalInstance,
+    nextElement,
+    transaction,
+    context,
   ) {
@@ -124,5 +128,3 @@ var ReactReconciler = {
 
-    if (nextElement === prevElement &&
-        context === internalInstance._context
-      ) {
+    if (nextElement === prevElement && context === internalInstance._context) {
       // Since elements are immutable after the owner is rendered,
@@ -144,3 +146,3 @@ var ReactReconciler = {
           internalInstance._debugID,
-          nextElement
+          nextElement,
         );
@@ -149,6 +151,3 @@ var ReactReconciler = {
 
-    var refsChanged = ReactRef.shouldUpdateRefs(
-      prevElement,
-      nextElement
-    );
+    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
 
@@ -160,5 +159,7 @@ var ReactReconciler = {
 
-    if (refsChanged &&
-        internalInstance._currentElement &&
-        internalInstance._currentElement.ref != null) {
+    if (
+      refsChanged &&
+      internalInstance._currentElement &&
+      internalInstance._currentElement.ref != null
+    ) {
       transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
@@ -169,3 +170,3 @@ var ReactReconciler = {
         ReactInstrumentation.debugTool.onUpdateComponent(
-          internalInstance._debugID
+          internalInstance._debugID,
         );
@@ -185,3 +186,3 @@ var ReactReconciler = {
     transaction,
-    updateBatchNumber
+    updateBatchNumber,
   ) {
@@ -192,7 +193,7 @@ var ReactReconciler = {
         internalInstance._updateBatchNumber == null ||
-        internalInstance._updateBatchNumber === updateBatchNumber + 1,
+          internalInstance._updateBatchNumber === updateBatchNumber + 1,
         'performUpdateIfNecessary: Unexpected batch number (current %s, ' +
-        'pending %s)',
+          'pending %s)',
         updateBatchNumber,
-        internalInstance._updateBatchNumber
+        internalInstance._updateBatchNumber,
       );
@@ -204,3 +205,3 @@ var ReactReconciler = {
           internalInstance._debugID,
-          internalInstance._currentElement
+          internalInstance._currentElement,
         );
@@ -212,3 +213,3 @@ var ReactReconciler = {
         ReactInstrumentation.debugTool.onUpdateComponent(
-          internalInstance._debugID
+          internalInstance._debugID,
         );
@@ -217,3 +218,2 @@ var ReactReconciler = {
   },
-
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactRef.js b/src/renderers/shared/stack/reconciler/ReactRef.js
index a7350cc6a..e5c497223 100644
--- a/src/renderers/shared/stack/reconciler/ReactRef.js
+++ b/src/renderers/shared/stack/reconciler/ReactRef.js
@@ -16,4 +16,4 @@ var ReactOwner = require('ReactOwner');
 
-import type { ReactInstance } from 'ReactInstanceType';
-import type { ReactElement } from 'ReactElementType';
+import type {ReactInstance} from 'ReactInstanceType';
+import type {ReactElement} from 'ReactElementType';
 
@@ -26,7 +26,3 @@ function attachRef(ref, component, owner) {
     // Legacy ref
-    ReactOwner.addComponentAsRefTo(
-      component,
-      ref,
-      owner,
-    );
+    ReactOwner.addComponentAsRefTo(component, ref, owner);
   }
diff --git a/src/renderers/shared/stack/reconciler/ReactSimpleEmptyComponent.js b/src/renderers/shared/stack/reconciler/ReactSimpleEmptyComponent.js
index a81793eab..fe009b0c4 100644
--- a/src/renderers/shared/stack/reconciler/ReactSimpleEmptyComponent.js
+++ b/src/renderers/shared/stack/reconciler/ReactSimpleEmptyComponent.js
@@ -15,3 +15,2 @@ var ReactReconciler = require('ReactReconciler');
 
-
 var ReactSimpleEmptyComponent = function(placeholderElement, instantiate) {
@@ -26,3 +25,3 @@ Object.assign(ReactSimpleEmptyComponent.prototype, {
     context,
-    parentDebugID // 0 in production and for roots
+    parentDebugID, // 0 in production and for roots
   ) {
@@ -34,7 +33,6 @@ Object.assign(ReactSimpleEmptyComponent.prototype, {
       context,
-      parentDebugID
+      parentDebugID,
     );
   },
-  receiveComponent: function() {
-  },
+  receiveComponent: function() {},
   getHostNode: function() {
diff --git a/src/renderers/shared/stack/reconciler/ReactUpdateQueue.js b/src/renderers/shared/stack/reconciler/ReactUpdateQueue.js
index b72cb7095..c5474d67f 100644
--- a/src/renderers/shared/stack/reconciler/ReactUpdateQueue.js
+++ b/src/renderers/shared/stack/reconciler/ReactUpdateQueue.js
@@ -30,3 +30,3 @@ function formatUnexpectedArgument(arg) {
   }
-  var displayName = arg.constructor && arg.constructor.name || type;
+  var displayName = (arg.constructor && arg.constructor.name) || type;
   var keys = Object.keys(arg);
@@ -49,7 +49,7 @@ function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
         '%s(...): Can only update a mounted or mounting component. ' +
-        'This usually means you called %s() on an unmounted component. ' +
-        'This is a no-op. Please check the code for the %s component.',
+          'This usually means you called %s() on an unmounted component. ' +
+          'This is a no-op. Please check the code for the %s component.',
         callerName,
         callerName,
-        ctor && (ctor.displayName || ctor.name) || 'ReactClass'
+        (ctor && (ctor.displayName || ctor.name)) || 'ReactClass',
       );
@@ -63,7 +63,7 @@ function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
       '%s(...): Cannot update during an existing state transition (such as ' +
-      'within `render` or another component\'s constructor). Render methods ' +
-      'should be a pure function of props and state; constructor ' +
-      'side-effects are an anti-pattern, but can be moved to ' +
-      '`componentWillMount`.',
-      callerName
+        "within `render` or another component's constructor). Render methods " +
+        'should be a pure function of props and state; constructor ' +
+        'side-effects are an anti-pattern, but can be moved to ' +
+        '`componentWillMount`.',
+      callerName,
     );
@@ -79,3 +79,2 @@ function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
 var ReactUpdateQueue = {
-
   /**
@@ -94,7 +93,7 @@ var ReactUpdateQueue = {
           '%s is accessing isMounted inside its render() function. ' +
-          'render() should be a pure function of props and state. It should ' +
-          'never access something that requires stale data from the previous ' +
-          'render, such as refs. Move this logic to componentDidMount and ' +
-          'componentDidUpdate instead.',
-          owner.getName() || 'A component'
+            'render() should be a pure function of props and state. It should ' +
+            'never access something that requires stale data from the previous ' +
+            'render, such as refs. Move this logic to componentDidMount and ' +
+            'componentDidUpdate instead.',
+          owner.getName() || 'A component',
         );
@@ -173,3 +172,3 @@ var ReactUpdateQueue = {
       publicInstance,
-      'forceUpdate'
+      'forceUpdate',
     );
@@ -199,3 +198,3 @@ var ReactUpdateQueue = {
       publicInstance,
-      'replaceState'
+      'replaceState',
     );
@@ -238,3 +237,3 @@ var ReactUpdateQueue = {
         'setState(...): You passed an undefined or null state object; ' +
-        'instead, use forceUpdate().'
+          'instead, use forceUpdate().',
       );
@@ -244,3 +243,3 @@ var ReactUpdateQueue = {
       publicInstance,
-      'setState'
+      'setState',
     );
@@ -270,8 +269,7 @@ var ReactUpdateQueue = {
       '%s(...): Expected the last optional `callback` argument to be a ' +
-      'function. Instead received: %s.',
+        'function. Instead received: %s.',
       callerName,
-      formatUnexpectedArgument(callback)
+      formatUnexpectedArgument(callback),
     );
   },
-
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactUpdates.js b/src/renderers/shared/stack/reconciler/ReactUpdates.js
index d605c5881..782af8a2a 100644
--- a/src/renderers/shared/stack/reconciler/ReactUpdates.js
+++ b/src/renderers/shared/stack/reconciler/ReactUpdates.js
@@ -32,3 +32,3 @@ function ensureInjected() {
     'ReactUpdates: must inject a reconcile transaction class and batching ' +
-    'strategy'
+      'strategy',
   );
@@ -71,3 +71,3 @@ function ReactUpdatesFlushTransaction() {
   this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
-    /* useCreateElement */ true
+    /* useCreateElement */ true,
   );
@@ -75,32 +75,28 @@ function ReactUpdatesFlushTransaction() {
 
-Object.assign(
-  ReactUpdatesFlushTransaction.prototype,
-  Transaction,
-  {
-    getTransactionWrappers: function() {
-      return TRANSACTION_WRAPPERS;
-    },
-
-    destructor: function() {
-      this.dirtyComponentsLength = null;
-      CallbackQueue.release(this.callbackQueue);
-      this.callbackQueue = null;
-      ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
-      this.reconcileTransaction = null;
-    },
-
-    perform: function(method, scope, a) {
-      // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
-      // with this transaction's wrappers around it.
-      return Transaction.perform.call(
-        this,
-        this.reconcileTransaction.perform,
-        this.reconcileTransaction,
-        method,
-        scope,
-        a
-      );
-    },
-  }
-);
+Object.assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
+  getTransactionWrappers: function() {
+    return TRANSACTION_WRAPPERS;
+  },
+
+  destructor: function() {
+    this.dirtyComponentsLength = null;
+    CallbackQueue.release(this.callbackQueue);
+    this.callbackQueue = null;
+    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
+    this.reconcileTransaction = null;
+  },
+
+  perform: function(method, scope, a) {
+    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
+    // with this transaction's wrappers around it.
+    return Transaction.perform.call(
+      this,
+      this.reconcileTransaction.perform,
+      this.reconcileTransaction,
+      method,
+      scope,
+      a,
+    );
+  },
+});
 
@@ -128,6 +124,6 @@ function runBatchedUpdates(transaction) {
     len === dirtyComponents.length,
-    'Expected flush transaction\'s stored dirty-components length (%s) to ' +
-    'match dirty-components array length (%s).',
+    "Expected flush transaction's stored dirty-components length (%s) to " +
+      'match dirty-components array length (%s).',
     len,
-    dirtyComponents.length
+    dirtyComponents.length,
   );
@@ -172,3 +168,3 @@ function runBatchedUpdates(transaction) {
       transaction.reconcileTransaction,
-      updateBatchNumber
+      updateBatchNumber,
     );
@@ -183,3 +179,3 @@ function runBatchedUpdates(transaction) {
           callbacks[j],
-          component.getPublicInstance()
+          component.getPublicInstance(),
         );
@@ -243,4 +239,4 @@ function asap(callback, context) {
     batchingStrategy.isBatchingUpdates,
-    'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' +
-    'updates are not being batched.'
+    "ReactUpdates.asap: Can't enqueue an asap callback in a context where" +
+      'updates are not being batched.',
   );
@@ -254,3 +250,3 @@ var ReactUpdatesInjection = {
       ReconcileTransaction,
-      'ReactUpdates: must provide a reconcile transaction class'
+      'ReactUpdates: must provide a reconcile transaction class',
     );
@@ -262,3 +258,3 @@ var ReactUpdatesInjection = {
       _batchingStrategy,
-      'ReactUpdates: must provide a batching strategy'
+      'ReactUpdates: must provide a batching strategy',
     );
@@ -266,3 +262,3 @@ var ReactUpdatesInjection = {
       typeof _batchingStrategy.batchedUpdates === 'function',
-      'ReactUpdates: must provide a batchedUpdates() function'
+      'ReactUpdates: must provide a batchedUpdates() function',
     );
@@ -270,3 +266,3 @@ var ReactUpdatesInjection = {
       typeof _batchingStrategy.isBatchingUpdates === 'boolean',
-      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
+      'ReactUpdates: must provide an isBatchingUpdates boolean attribute',
     );
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactChildReconciler-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactChildReconciler-test.js
index 6cc5115a0..aa591f916 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactChildReconciler-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactChildReconciler-test.js
@@ -44,3 +44,3 @@ describe('ReactChildReconciler', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Child keys must be unique; when two children share a key, only the first child will be used.'
+      'Child keys must be unique; when two children share a key, only the first child will be used.',
     );
@@ -74,9 +74,9 @@ describe('ReactChildReconciler', () => {
       'Warning: flattenChildren(...): ' +
-      'Encountered two children with the same key, `1`. ' +
-      'Child keys must be unique; when two children share a key, ' +
-      'only the first child will be used.\n' +
-      '    in div (at **)\n' +
-      '    in Component (at **)\n' +
-      '    in Parent (at **)\n' +
-      '    in GrandParent (at **)'
+        'Encountered two children with the same key, `1`. ' +
+        'Child keys must be unique; when two children share a key, ' +
+        'only the first child will be used.\n' +
+        '    in div (at **)\n' +
+        '    in Component (at **)\n' +
+        '    in Parent (at **)\n' +
+        '    in GrandParent (at **)',
     );
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactComponent-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactComponent-test.js
index 9b86c3e0a..aebbc34b5 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactComponent-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactComponent-test.js
@@ -30,3 +30,3 @@ describe('ReactComponent', () => {
     }).toThrowError(
-      '_registerComponent(...): Target container is not a DOM element.'
+      '_registerComponent(...): Target container is not a DOM element.',
     );
@@ -36,3 +36,3 @@ describe('ReactComponent', () => {
     }).toThrowError(
-      '_registerComponent(...): Target container is not a DOM element.'
+      '_registerComponent(...): Target container is not a DOM element.',
     );
@@ -56,6 +56,6 @@ describe('ReactComponent', () => {
         <Wrapper>
-          <span key={0}/>
-          <span key={1}/>
-          <span key={2}/>
-        </Wrapper>
+          <span key={0} />
+          <span key={1} />
+          <span key={2} />
+        </Wrapper>,
       );
@@ -81,6 +81,6 @@ describe('ReactComponent', () => {
         <Wrapper>
-          <span key={0}/>
-          <span key={1}/>
-          <span key={2}/>
-        </Wrapper>
+          <span key={0} />
+          <span key={1} />
+          <span key={2} />
+        </Wrapper>,
       );
@@ -159,5 +159,7 @@ describe('ReactComponent', () => {
       render() {
-        var inner = <Wrapper object={innerObj} ref={(c) => this.innerRef = c} />;
+        var inner = (
+          <Wrapper object={innerObj} ref={c => (this.innerRef = c)} />
+        );
         var outer = (
-          <Wrapper object={outerObj} ref={(c) => this.outerRef = c}>
+          <Wrapper object={outerObj} ref={c => (this.outerRef = c)}>
             {inner}
@@ -197,3 +199,3 @@ describe('ReactComponent', () => {
         // because Wrapper is the current owner when this function is called.)
-        return <div title="inner" ref={(c) => this.innerRef = c} />;
+        return <div title="inner" ref={c => (this.innerRef = c)} />;
       };
@@ -204,5 +206,5 @@ describe('ReactComponent', () => {
             title="wrapper"
-            ref={(c) => this.wrapperRef = c}
+            ref={c => (this.wrapperRef = c)}
             getContent={this.getInner}
-            />
+          />
         );
@@ -249,8 +251,14 @@ describe('ReactComponent', () => {
           <div>
-            <Inner id={1} ref={(c) => {
-              log.push(`ref 1 got ${c ? `instance ${c.props.id}` : 'null'}`);
-            }}/>
-            <Inner id={2} ref={(c) => {
-              log.push(`ref 2 got ${c ? `instance ${c.props.id}` : 'null'}`);
-            }}/>
+            <Inner
+              id={1}
+              ref={c => {
+                log.push(`ref 1 got ${c ? `instance ${c.props.id}` : 'null'}`);
+              }}
+            />
+            <Inner
+              id={2}
+              ref={c => {
+                log.push(`ref 2 got ${c ? `instance ${c.props.id}` : 'null'}`);
+              }}
+            />
           </div>
@@ -284,26 +292,26 @@ describe('ReactComponent', () => {
       'start mount',
-        'inner 1 render',
-        'inner 2 render',
-        'inner 1 componentDidMount',
-        'ref 1 got instance 1',
-        'inner 2 componentDidMount',
-        'ref 2 got instance 2',
-        'outer componentDidMount',
+      'inner 1 render',
+      'inner 2 render',
+      'inner 1 componentDidMount',
+      'ref 1 got instance 1',
+      'inner 2 componentDidMount',
+      'ref 2 got instance 2',
+      'outer componentDidMount',
       'start update',
-        // Previous (equivalent) refs get cleared
-        'ref 1 got null',
-        'inner 1 render',
-        'ref 2 got null',
-        'inner 2 render',
-        'inner 1 componentDidUpdate',
-        'ref 1 got instance 1',
-        'inner 2 componentDidUpdate',
-        'ref 2 got instance 2',
-        'outer componentDidUpdate',
+      // Previous (equivalent) refs get cleared
+      'ref 1 got null',
+      'inner 1 render',
+      'ref 2 got null',
+      'inner 2 render',
+      'inner 1 componentDidUpdate',
+      'ref 1 got instance 1',
+      'inner 2 componentDidUpdate',
+      'ref 2 got instance 2',
+      'outer componentDidUpdate',
       'start unmount',
-        'outer componentWillUnmount',
-        'ref 1 got null',
-        'inner 1 componentWillUnmount',
-        'ref 2 got null',
-        'inner 2 componentWillUnmount',
+      'outer componentWillUnmount',
+      'ref 1 got null',
+      'inner 1 componentWillUnmount',
+      'ref 2 got null',
+      'inner 2 componentWillUnmount',
     ]);
@@ -329,5 +337,5 @@ describe('ReactComponent', () => {
       'Element type is invalid: expected a string (for built-in components) ' +
-      'or a class/function (for composite components) but got: undefined. ' +
-      'You likely forgot to export your component from the file it\'s ' +
-      'defined in.'
+        'or a class/function (for composite components) but got: undefined. ' +
+        "You likely forgot to export your component from the file it's " +
+        'defined in.',
     );
@@ -337,3 +345,3 @@ describe('ReactComponent', () => {
       'Element type is invalid: expected a string (for built-in components) ' +
-      'or a class/function (for composite components) but got: null.'
+        'or a class/function (for composite components) but got: null.',
     );
@@ -354,5 +362,5 @@ describe('ReactComponent', () => {
       'Element type is invalid: expected a string (for built-in components) ' +
-      'or a class/function (for composite components) but got: undefined. ' +
-      'You likely forgot to export your component from the file it\'s ' +
-      'defined in. Check the render method of `Foo`.'
+        'or a class/function (for composite components) but got: undefined. ' +
+        "You likely forgot to export your component from the file it's " +
+        'defined in. Check the render method of `Foo`.',
     );
@@ -362,3 +370,2 @@ describe('ReactComponent', () => {
   });
-
 });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactComponentLifeCycle-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactComponentLifeCycle-test.js
index c1addcafd..a4a696695 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactComponentLifeCycle-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactComponentLifeCycle-test.js
@@ -22,3 +22,2 @@ var clone = function(o) {
 
-
 var GET_INIT_STATE_RETURN_VAL = {
@@ -73,7 +72,6 @@ type ComponentLifeCycle =
    */
-  'MOUNTED' |
-  /**
+  | 'MOUNTED' /**
    * Unmounted components are inactive and cannot receive new props.
    */
-  'UNMOUNTED';
+  | 'UNMOUNTED';
 
@@ -83,5 +81,3 @@ function getLifeCycleState(instance): ComponentLifeCycle {
   // gets unmounted, it loses that internal instance.
-  return internalInstance ?
-         'MOUNTED' :
-         'UNMOUNTED';
+  return internalInstance ? 'MOUNTED' : 'UNMOUNTED';
 }
@@ -111,5 +107,3 @@ describe('ReactComponentLifeCycle', () => {
       render() {
-        return (
-          <div />
-        );
+        return <div />;
       }
@@ -159,7 +153,5 @@ describe('ReactComponentLifeCycle', () => {
         return (
-          <div>{
-            this.state.showHasOnDOMReadyComponent ?
-            <Child /> :
-            <div />
-          }</div>
+          <div>
+            {this.state.showHasOnDOMReadyComponent ? <Child /> : <div />}
+          </div>
         );
@@ -186,5 +178,3 @@ describe('ReactComponentLifeCycle', () => {
       render() {
-        return (
-          <div />
-        );
+        return <div />;
       }
@@ -205,5 +195,3 @@ describe('ReactComponentLifeCycle', () => {
       render() {
-        return (
-          <div />
-        );
+        return <div />;
       }
@@ -229,5 +217,3 @@ describe('ReactComponentLifeCycle', () => {
       render() {
-        return (
-          <div />
-        );
+        return <div />;
       }
@@ -239,5 +225,5 @@ describe('ReactComponentLifeCycle', () => {
       'Warning: setState(...): Can only update a mounted or ' +
-      'mounting component. This usually means you called setState() on an ' +
-      'unmounted component. This is a no-op. Please check the code for the ' +
-      'StatefulComponent component.'
+        'mounting component. This usually means you called setState() on an ' +
+        'unmounted component. This is a no-op. Please check the code for the ' +
+        'StatefulComponent component.',
     );
@@ -261,3 +247,3 @@ describe('ReactComponentLifeCycle', () => {
         expect(this._isMounted()).toBeFalsy();
-        return <div/>;
+        return <div />;
       }
@@ -272,3 +258,3 @@ describe('ReactComponentLifeCycle', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Component is accessing isMounted inside its render()'
+      'Component is accessing isMounted inside its render()',
     );
@@ -303,3 +289,3 @@ describe('ReactComponentLifeCycle', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Component is accessing isMounted inside its render()'
+      'Component is accessing isMounted inside its render()',
     );
@@ -310,3 +296,3 @@ describe('ReactComponentLifeCycle', () => {
       render() {
-        return <div/>;
+        return <div />;
       }
@@ -337,3 +323,3 @@ describe('ReactComponentLifeCycle', () => {
         }
-        return <div/>;
+        return <div />;
       }
@@ -344,3 +330,3 @@ describe('ReactComponentLifeCycle', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Component is accessing findDOMNode inside its render()'
+      'Component is accessing findDOMNode inside its render()',
     );
@@ -360,4 +346,5 @@ describe('ReactComponentLifeCycle', () => {
         this._testJournal.returnedFromGetInitialState = clone(initState);
-        this._testJournal.lifeCycleAtStartOfGetInitialState =
-          getLifeCycleState(this);
+        this._testJournal.lifeCycleAtStartOfGetInitialState = getLifeCycleState(
+          this,
+        );
         this.state = initState;
@@ -367,4 +354,3 @@ describe('ReactComponentLifeCycle', () => {
         this._testJournal.stateAtStartOfWillMount = clone(this.state);
-        this._testJournal.lifeCycleAtStartOfWillMount =
-          getLifeCycleState(this);
+        this._testJournal.lifeCycleAtStartOfWillMount = getLifeCycleState(this);
         this.state.hasWillMountCompleted = true;
@@ -374,4 +360,3 @@ describe('ReactComponentLifeCycle', () => {
         this._testJournal.stateAtStartOfDidMount = clone(this.state);
-        this._testJournal.lifeCycleAtStartOfDidMount =
-          getLifeCycleState(this);
+        this._testJournal.lifeCycleAtStartOfDidMount = getLifeCycleState(this);
         this.setState({hasDidMountCompleted: true});
@@ -399,4 +384,5 @@ describe('ReactComponentLifeCycle', () => {
         this._testJournal.stateAtStartOfWillUnmount = clone(this.state);
-        this._testJournal.lifeCycleAtStartOfWillUnmount =
-          getLifeCycleState(this);
+        this._testJournal.lifeCycleAtStartOfWillUnmount = getLifeCycleState(
+          this,
+        );
         this.state.hasWillUnmountCompleted = true;
@@ -413,6 +399,7 @@ describe('ReactComponentLifeCycle', () => {
     expect(instance._testJournal.returnedFromGetInitialState).toEqual(
-      GET_INIT_STATE_RETURN_VAL
+      GET_INIT_STATE_RETURN_VAL,
+    );
+    expect(instance._testJournal.lifeCycleAtStartOfGetInitialState).toBe(
+      'UNMOUNTED',
     );
-    expect(instance._testJournal.lifeCycleAtStartOfGetInitialState)
-      .toBe('UNMOUNTED');
 
@@ -420,20 +407,17 @@ describe('ReactComponentLifeCycle', () => {
     expect(instance._testJournal.stateAtStartOfWillMount).toEqual(
-      instance._testJournal.returnedFromGetInitialState
+      instance._testJournal.returnedFromGetInitialState,
     );
-    expect(instance._testJournal.lifeCycleAtStartOfWillMount)
-      .toBe('MOUNTED');
+    expect(instance._testJournal.lifeCycleAtStartOfWillMount).toBe('MOUNTED');
 
     // componentDidMount
-    expect(instance._testJournal.stateAtStartOfDidMount)
-      .toEqual(DID_MOUNT_STATE);
-    expect(instance._testJournal.lifeCycleAtStartOfDidMount).toBe(
-      'MOUNTED'
+    expect(instance._testJournal.stateAtStartOfDidMount).toEqual(
+      DID_MOUNT_STATE,
     );
+    expect(instance._testJournal.lifeCycleAtStartOfDidMount).toBe('MOUNTED');
 
     // render
-    expect(instance._testJournal.stateInInitialRender)
-      .toEqual(INIT_RENDER_STATE);
-    expect(instance._testJournal.lifeCycleInInitialRender).toBe(
-      'MOUNTED'
+    expect(instance._testJournal.stateInInitialRender).toEqual(
+      INIT_RENDER_STATE,
     );
+    expect(instance._testJournal.lifeCycleInInitialRender).toBe('MOUNTED');
 
@@ -445,7 +429,4 @@ describe('ReactComponentLifeCycle', () => {
     // render 2nd time
-    expect(instance._testJournal.stateInLaterRender)
-      .toEqual(NEXT_RENDER_STATE);
-    expect(instance._testJournal.lifeCycleInLaterRender).toBe(
-      'MOUNTED'
-    );
+    expect(instance._testJournal.stateInLaterRender).toEqual(NEXT_RENDER_STATE);
+    expect(instance._testJournal.lifeCycleInLaterRender).toBe('MOUNTED');
 
@@ -455,8 +436,7 @@ describe('ReactComponentLifeCycle', () => {
 
-    expect(instance._testJournal.stateAtStartOfWillUnmount)
-      .toEqual(WILL_UNMOUNT_STATE);
-    // componentWillUnmount called right before unmount.
-    expect(instance._testJournal.lifeCycleAtStartOfWillUnmount).toBe(
-      'MOUNTED'
+    expect(instance._testJournal.stateAtStartOfWillUnmount).toEqual(
+      WILL_UNMOUNT_STATE,
     );
+    // componentWillUnmount called right before unmount.
+    expect(instance._testJournal.lifeCycleAtStartOfWillUnmount).toBe('MOUNTED');
 
@@ -492,5 +472,3 @@ describe('ReactComponentLifeCycle', () => {
         return (
-          <Tooltip
-              ref="tooltip"
-              tooltip={<div>{this.props.tooltipText}</div>}>
+          <Tooltip ref="tooltip" tooltip={<div>{this.props.tooltipText}</div>}>
             {this.props.text}
@@ -502,6 +480,3 @@ describe('ReactComponentLifeCycle', () => {
     var container = document.createElement('div');
-    ReactDOM.render(
-      <Component text="uno" tooltipText="one" />,
-      container
-    );
+    ReactDOM.render(<Component text="uno" tooltipText="one" />, container);
 
@@ -509,6 +484,3 @@ describe('ReactComponentLifeCycle', () => {
     // makes Tooltip rerender the tooltip component, which shouldn't throw.
-    ReactDOM.render(
-      <Component text="dos" tooltipText="two" />,
-      container
-    );
+    ReactDOM.render(<Component text="dos" tooltipText="two" />, container);
   });
@@ -529,3 +501,3 @@ describe('ReactComponentLifeCycle', () => {
       render() {
-        return (<div />);
+        return <div />;
       }
@@ -533,3 +505,3 @@ describe('ReactComponentLifeCycle', () => {
 
-    var instance =
+    var instance = (
       <SetStateInComponentDidMount
@@ -537,3 +509,4 @@ describe('ReactComponentLifeCycle', () => {
         valueToUseInOnDOMReady="goodbye"
-      />;
+      />
+    );
     instance = ReactTestUtils.renderIntoDocument(instance);
@@ -577,3 +550,2 @@ describe('ReactComponentLifeCycle', () => {
 
-
     var container = document.createElement('div');
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponent-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponent-test.js
index 66323dc6e..3a5077642 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponent-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponent-test.js
@@ -26,3 +26,2 @@ var reactComponentExpect;
 describe('ReactCompositeComponent', () => {
-
   beforeEach(() => {
@@ -47,5 +46,5 @@ describe('ReactCompositeComponent', () => {
         var toggleActivatedState = this._toggleActivatedState;
-        return !this.state.activated ?
-          <a ref="x" onClick={toggleActivatedState} /> :
-          <b ref="x" onClick={toggleActivatedState} />;
+        return !this.state.activated
+          ? <a ref="x" onClick={toggleActivatedState} />
+          : <b ref="x" onClick={toggleActivatedState} />;
       }
@@ -64,5 +63,5 @@ describe('ReactCompositeComponent', () => {
         var className = this.props.anchorClassOn ? 'anchorClass' : '';
-        return this.props.renderAnchor ?
-          <a ref="anch" className={className} /> :
-          <b />;
+        return this.props.renderAnchor
+          ? <a ref="anch" className={className} />
+          : <b />;
       }
@@ -153,16 +152,19 @@ describe('ReactCompositeComponent', () => {
     var instance = ReactDOM.render(
-      <ChildUpdates renderAnchor={true} anchorClassOn={false}/>,
-      container
+      <ChildUpdates renderAnchor={true} anchorClassOn={false} />,
+      container,
     );
-    ReactDOM.render(  // Warm any cache
-      <ChildUpdates renderAnchor={true} anchorClassOn={true}/>,
-      container
+    ReactDOM.render(
+      // Warm any cache
+      <ChildUpdates renderAnchor={true} anchorClassOn={true} />,
+      container,
     );
-    ReactDOM.render(  // Clear out the anchor
-      <ChildUpdates renderAnchor={false} anchorClassOn={true}/>,
-      container
+    ReactDOM.render(
+      // Clear out the anchor
+      <ChildUpdates renderAnchor={false} anchorClassOn={true} />,
+      container,
     );
-    ReactDOM.render(  // rerender
-      <ChildUpdates renderAnchor={true} anchorClassOn={false}/>,
-      container
+    ReactDOM.render(
+      // rerender
+      <ChildUpdates renderAnchor={true} anchorClassOn={false} />,
+      container,
     );
@@ -238,5 +240,5 @@ describe('ReactCompositeComponent', () => {
       'Warning: forceUpdate(...): Can only update a mounted or ' +
-      'mounting component. This usually means you called forceUpdate() on an ' +
-      'unmounted component. This is a no-op. Please check the code for the ' +
-      'Component component.'
+        'mounting component. This usually means you called forceUpdate() on an ' +
+        'unmounted component. This is a no-op. Please check the code for the ' +
+        'Component component.',
     );
@@ -282,5 +284,5 @@ describe('ReactCompositeComponent', () => {
       'Warning: setState(...): Can only update a mounted or ' +
-      'mounting component. This usually means you called setState() on an ' +
-      'unmounted component. This is a no-op. Please check the code for the ' +
-      'Component component.'
+        'mounting component. This usually means you called setState() on an ' +
+        'unmounted component. This is a no-op. Please check the code for the ' +
+        'Component component.',
     );
@@ -316,3 +318,2 @@ describe('ReactCompositeComponent', () => {
 
-
   it('should warn about `setState` in render', () => {
@@ -332,3 +333,3 @@ describe('ReactCompositeComponent', () => {
         if (this.state.value === 0) {
-          this.setState({ value: 1 });
+          this.setState({value: 1});
         }
@@ -345,6 +346,6 @@ describe('ReactCompositeComponent', () => {
       'Warning: setState(...): Cannot update during an existing state ' +
-      'transition (such as within `render` or another component\'s ' +
-      'constructor). Render methods should be a pure function of props and ' +
-      'state; constructor side-effects are an anti-pattern, but can be moved ' +
-      'to `componentWillMount`.'
+        "transition (such as within `render` or another component's " +
+        'constructor). Render methods should be a pure function of props and ' +
+        'state; constructor side-effects are an anti-pattern, but can be moved ' +
+        'to `componentWillMount`.',
     );
@@ -377,3 +378,3 @@ describe('ReactCompositeComponent', () => {
         if (this.state.value === 0) {
-          this.setState({ value: 1 });
+          this.setState({value: 1});
         }
@@ -393,3 +394,3 @@ describe('ReactCompositeComponent', () => {
     expect(console.error.calls.argsFor(0)[0]).toBe(
-      'Warning: setState(...): Cannot call setState() inside getChildContext()'
+      'Warning: setState(...): Cannot call setState() inside getChildContext()',
     );
@@ -466,3 +467,3 @@ describe('ReactCompositeComponent', () => {
       'Warning: Component.shouldComponentUpdate(): Returned undefined instead of a ' +
-      'boolean value. Make sure to return true or false.'
+        'boolean value. Make sure to return true or false.',
     );
@@ -474,4 +475,3 @@ describe('ReactCompositeComponent', () => {
     class Component extends React.Component {
-      componentDidUnmount = () => {
-      };
+      componentDidUnmount = () => {};
 
@@ -487,4 +487,4 @@ describe('ReactCompositeComponent', () => {
       'Warning: Component has a method called ' +
-      'componentDidUnmount(). But there is no such lifecycle method. ' +
-      'Did you mean componentWillUnmount()?'
+        'componentDidUnmount(). But there is no such lifecycle method. ' +
+        'Did you mean componentWillUnmount()?',
     );
@@ -598,3 +598,3 @@ describe('ReactCompositeComponent', () => {
     parentInstance = ReactTestUtils.renderIntoDocument(
-      <Parent><Middle><Child /></Middle></Parent>
+      <Parent><Middle><Child /></Middle></Parent>,
     );
@@ -602,3 +602,6 @@ describe('ReactCompositeComponent', () => {
     expect(parentInstance.state.flag).toBe(false);
-    reactComponentExpect(childInstance).scalarContextEqual({foo: 'bar', flag: false});
+    reactComponentExpect(childInstance).scalarContextEqual({
+      foo: 'bar',
+      flag: false,
+    });
 
@@ -607,3 +610,6 @@ describe('ReactCompositeComponent', () => {
 
-    reactComponentExpect(childInstance).scalarContextEqual({foo: 'bar', flag: true});
+    reactComponentExpect(childInstance).scalarContextEqual({
+      foo: 'bar',
+      flag: true,
+    });
   });
@@ -651,6 +657,3 @@ describe('ReactCompositeComponent', () => {
 
-
-    var wrapper = ReactTestUtils.renderIntoDocument(
-      <Wrapper />
-    );
+    var wrapper = ReactTestUtils.renderIntoDocument(<Wrapper />);
 
@@ -723,4 +726,10 @@ describe('ReactCompositeComponent', () => {
     ReactTestUtils.renderIntoDocument(<Parent />);
-    reactComponentExpect(childInstance).scalarContextEqual({foo: 'bar', depth: 0});
-    reactComponentExpect(grandchildInstance).scalarContextEqual({foo: 'bar', depth: 1});
+    reactComponentExpect(childInstance).scalarContextEqual({
+      foo: 'bar',
+      depth: 0,
+    });
+    reactComponentExpect(grandchildInstance).scalarContextEqual({
+      foo: 'bar',
+      depth: 1,
+    });
   });
@@ -778,3 +787,6 @@ describe('ReactCompositeComponent', () => {
 
-    reactComponentExpect(childInstance).scalarContextEqual({foo: 'bar', depth: 0});
+    reactComponentExpect(childInstance).scalarContextEqual({
+      foo: 'bar',
+      depth: 0,
+    });
   });
@@ -940,3 +952,7 @@ describe('ReactCompositeComponent', () => {
       render() {
-        return <div className="parent" onClick={this.onClick}>{this.props.children}</div>;
+        return (
+          <div className="parent" onClick={this.onClick}>
+            {this.props.children}
+          </div>
+        );
       }
@@ -958,3 +974,3 @@ describe('ReactCompositeComponent', () => {
       </Parent>,
-      div
+      div,
     );
@@ -987,5 +1003,5 @@ describe('ReactCompositeComponent', () => {
       'Warning: _renderNewRootComponent(): Render methods should ' +
-      'be a pure function of props and state; triggering nested component ' +
-      'updates from render is not allowed. If necessary, trigger nested ' +
-      'updates in componentDidUpdate. Check the render method of Outer.'
+        'be a pure function of props and state; triggering nested component ' +
+        'updates from render is not allowed. If necessary, trigger nested ' +
+        'updates in componentDidUpdate. Check the render method of Outer.',
     );
@@ -1221,3 +1237,3 @@ describe('ReactCompositeComponent', () => {
       constructor(props) {
-        var _props = { idx: props.idx + '!' };
+        var _props = {idx: props.idx + '!'};
         super(_props);
@@ -1237,5 +1253,4 @@ describe('ReactCompositeComponent', () => {
       'Foo(...): When calling super() in `Foo`, make sure to pass ' +
-      'up the same props that your component\'s constructor was passed.'
+        "up the same props that your component's constructor was passed.",
     );
-
   });
@@ -1270,3 +1285,3 @@ describe('ReactCompositeComponent', () => {
 
-    var setRef = (ref) => {
+    var setRef = ref => {
       if (ref) {
@@ -1282,3 +1297,2 @@ describe('ReactCompositeComponent', () => {
   });
-
 });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentDOMMinimalism-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentDOMMinimalism-test.js
index 6e479e700..ee226c93a 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentDOMMinimalism-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentDOMMinimalism-test.js
@@ -30,3 +30,2 @@ var expectSingleChildlessDiv;
 describe('ReactCompositeComponentDOMMinimalism', () => {
-
   beforeEach(() => {
@@ -60,5 +59,5 @@ describe('ReactCompositeComponentDOMMinimalism', () => {
         .toBeCompositeComponentWithType(LowerLevelComposite)
-          .expectRenderedChild()
-          .toBeDOMComponentWithTag('div')
-          .toBeDOMComponentWithNoChildren();
+        .expectRenderedChild()
+        .toBeDOMComponentWithTag('div')
+        .toBeDOMComponentWithNoChildren();
     };
@@ -98,10 +97,9 @@ describe('ReactCompositeComponentDOMMinimalism', () => {
       .toBeCompositeComponentWithType(LowerLevelComposite)
-        .expectRenderedChild()
-        .toBeDOMComponentWithTag('div')
-        .toBeDOMComponentWithChildCount(1)
-        .expectRenderedChildAt(0)
-          .toBeDOMComponentWithTag('ul')
-          .toBeDOMComponentWithNoChildren();
+      .expectRenderedChild()
+      .toBeDOMComponentWithTag('div')
+      .toBeDOMComponentWithChildCount(1)
+      .expectRenderedChildAt(0)
+      .toBeDOMComponentWithTag('ul')
+      .toBeDOMComponentWithNoChildren();
   });
-
 });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentNestedState-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentNestedState-test.js
index b44bac313..f8e7f4af2 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentNestedState-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentNestedState-test.js
@@ -18,3 +18,2 @@ var ReactTestUtils;
 describe('ReactCompositeComponentNestedState-state', () => {
-
   beforeEach(() => {
@@ -29,3 +28,3 @@ describe('ReactCompositeComponentNestedState-state', () => {
 
-      handleColor = (color) => {
+      handleColor = color => {
         this.props.logger('parent-handleColor', this.state.color);
@@ -58,9 +57,20 @@ describe('ReactCompositeComponentNestedState-state', () => {
         this.props.onSelectColor(color);
-        this.setState(function(state, props) {
-          this.props.logger('setState-this', this.state.hue, this.props.color);
-          this.props.logger('setState-args', state.hue, props.color);
-          return {hue: shade + ' ' + props.color};
-        }, function() {
-          this.props.logger('after-setState', this.state.hue, this.props.color);
-        });
+        this.setState(
+          function(state, props) {
+            this.props.logger(
+              'setState-this',
+              this.state.hue,
+              this.props.color,
+            );
+            this.props.logger('setState-args', state.hue, props.color);
+            return {hue: shade + ' ' + props.color};
+          },
+          function() {
+            this.props.logger(
+              'after-setState',
+              this.state.hue,
+              this.props.color,
+            );
+          },
+        );
       };
@@ -93,11 +103,6 @@ describe('ReactCompositeComponentNestedState-state', () => {
 
-    void ReactDOM.render(
-      <ParentComponent logger={logger} />,
-      container
-    );
+    void ReactDOM.render(<ParentComponent logger={logger} />, container);
 
     // click "light green"
-    ReactTestUtils.Simulate.click(
-      container.childNodes[0].childNodes[3]
-    );
+    ReactTestUtils.Simulate.click(container.childNodes[0].childNodes[3]);
 
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentState-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentState-test.js
index 3385d7a4d..bd3d4120a 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentState-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentState-test.js
@@ -19,3 +19,2 @@ var TestComponent;
 describe('ReactCompositeComponent-state', () => {
-
   beforeEach(() => {
@@ -34,3 +33,3 @@ describe('ReactCompositeComponent-state', () => {
         props.stateListener(from, state && state.color);
-      }
+      };
 
@@ -38,3 +37,3 @@ describe('ReactCompositeComponent-state', () => {
         return () => this.peekAtState(from);
-      }
+      };
 
@@ -43,3 +42,3 @@ describe('ReactCompositeComponent-state', () => {
           {color: nextColor},
-          this.peekAtCallback('setFavoriteColor')
+          this.peekAtCallback('setFavoriteColor'),
         );
@@ -59,3 +58,3 @@ describe('ReactCompositeComponent-state', () => {
           {color: 'sunrise'},
-          this.peekAtCallback('setState-sunrise')
+          this.peekAtCallback('setState-sunrise'),
         );
@@ -67,3 +66,3 @@ describe('ReactCompositeComponent-state', () => {
           {color: 'orange'},
-          this.peekAtCallback('setState-orange')
+          this.peekAtCallback('setState-orange'),
         );
@@ -79,3 +78,3 @@ describe('ReactCompositeComponent-state', () => {
           {color: 'yellow'},
-          this.peekAtCallback('setState-yellow')
+          this.peekAtCallback('setState-yellow'),
         );
@@ -94,9 +93,6 @@ describe('ReactCompositeComponent-state', () => {
           this.updater.enqueueReplaceState(this, {color: undefined});
-          this.setState(
-            function(state) {
-              this.peekAtState('before-setState-again-receiveProps', state);
-              return {color: newProps.nextColor};
-            },
-            this.peekAtCallback('setState-receiveProps')
-          );
+          this.setState(function(state) {
+            this.peekAtState('before-setState-again-receiveProps', state);
+            return {color: newProps.nextColor};
+          }, this.peekAtCallback('setState-receiveProps'));
           this.setState(function(state) {
@@ -140,3 +136,3 @@ describe('ReactCompositeComponent-state', () => {
         this.peekAtState('initial-callback');
-      }
+      },
     );
@@ -145,3 +141,3 @@ describe('ReactCompositeComponent-state', () => {
       container,
-      instance.peekAtCallback('setProps')
+      instance.peekAtCallback('setProps'),
     );
@@ -152,68 +148,70 @@ describe('ReactCompositeComponent-state', () => {
 
-    expect(stateListener.mock.calls.join('\n')).toEqual([
-      // there is no state when getInitialState() is called
-      ['getInitialState', null],
-      ['componentWillMount-start', 'red'],
-      // setState()'s only enqueue pending states.
-      ['componentWillMount-after-sunrise', 'red'],
-      ['componentWillMount-end', 'red'],
-      // pending state queue is processed
-      ['before-setState-sunrise', 'red'],
-      ['after-setState-sunrise', 'sunrise'],
-      ['after-setState-orange', 'orange'],
-      // pending state has been applied
-      ['render', 'orange'],
-      ['componentDidMount-start', 'orange'],
-      // setState-sunrise and setState-orange should be called here,
-      // after the bug in #1740
-      // componentDidMount() called setState({color:'yellow'}), which is async.
-      // The update doesn't happen until the next flush.
-      ['componentDidMount-end', 'orange'],
-      ['shouldComponentUpdate-currentState', 'orange'],
-      ['shouldComponentUpdate-nextState', 'yellow'],
-      ['componentWillUpdate-currentState', 'orange'],
-      ['componentWillUpdate-nextState', 'yellow'],
-      ['render', 'yellow'],
-      ['componentDidUpdate-currentState', 'yellow'],
-      ['componentDidUpdate-prevState', 'orange'],
-      ['setState-sunrise', 'yellow'],
-      ['setState-orange', 'yellow'],
-      ['setState-yellow', 'yellow'],
-      ['initial-callback', 'yellow'],
-      ['componentWillReceiveProps-start', 'yellow'],
-      // setState({color:'green'}) only enqueues a pending state.
-      ['componentWillReceiveProps-end', 'yellow'],
-      // pending state queue is processed
-      // before-setState-receiveProps never called, due to replaceState.
-      ['before-setState-again-receiveProps', undefined],
-      ['after-setState-receiveProps', 'green'],
-      ['shouldComponentUpdate-currentState', 'yellow'],
-      ['shouldComponentUpdate-nextState', 'green'],
-      ['componentWillUpdate-currentState', 'yellow'],
-      ['componentWillUpdate-nextState', 'green'],
-      ['render', 'green'],
-      ['componentDidUpdate-currentState', 'green'],
-      ['componentDidUpdate-prevState', 'yellow'],
-      ['setState-receiveProps', 'green'],
-      ['setProps', 'green'],
-      // setFavoriteColor('blue')
-      ['shouldComponentUpdate-currentState', 'green'],
-      ['shouldComponentUpdate-nextState', 'blue'],
-      ['componentWillUpdate-currentState', 'green'],
-      ['componentWillUpdate-nextState', 'blue'],
-      ['render', 'blue'],
-      ['componentDidUpdate-currentState', 'blue'],
-      ['componentDidUpdate-prevState', 'green'],
-      ['setFavoriteColor', 'blue'],
-      // forceUpdate()
-      ['componentWillUpdate-currentState', 'blue'],
-      ['componentWillUpdate-nextState', 'blue'],
-      ['render', 'blue'],
-      ['componentDidUpdate-currentState', 'blue'],
-      ['componentDidUpdate-prevState', 'blue'],
-      ['forceUpdate', 'blue'],
-      // unmountComponent()
-      // state is available within `componentWillUnmount()`
-      ['componentWillUnmount', 'blue'],
-    ].join('\n'));
+    expect(stateListener.mock.calls.join('\n')).toEqual(
+      [
+        // there is no state when getInitialState() is called
+        ['getInitialState', null],
+        ['componentWillMount-start', 'red'],
+        // setState()'s only enqueue pending states.
+        ['componentWillMount-after-sunrise', 'red'],
+        ['componentWillMount-end', 'red'],
+        // pending state queue is processed
+        ['before-setState-sunrise', 'red'],
+        ['after-setState-sunrise', 'sunrise'],
+        ['after-setState-orange', 'orange'],
+        // pending state has been applied
+        ['render', 'orange'],
+        ['componentDidMount-start', 'orange'],
+        // setState-sunrise and setState-orange should be called here,
+        // after the bug in #1740
+        // componentDidMount() called setState({color:'yellow'}), which is async.
+        // The update doesn't happen until the next flush.
+        ['componentDidMount-end', 'orange'],
+        ['shouldComponentUpdate-currentState', 'orange'],
+        ['shouldComponentUpdate-nextState', 'yellow'],
+        ['componentWillUpdate-currentState', 'orange'],
+        ['componentWillUpdate-nextState', 'yellow'],
+        ['render', 'yellow'],
+        ['componentDidUpdate-currentState', 'yellow'],
+        ['componentDidUpdate-prevState', 'orange'],
+        ['setState-sunrise', 'yellow'],
+        ['setState-orange', 'yellow'],
+        ['setState-yellow', 'yellow'],
+        ['initial-callback', 'yellow'],
+        ['componentWillReceiveProps-start', 'yellow'],
+        // setState({color:'green'}) only enqueues a pending state.
+        ['componentWillReceiveProps-end', 'yellow'],
+        // pending state queue is processed
+        // before-setState-receiveProps never called, due to replaceState.
+        ['before-setState-again-receiveProps', undefined],
+        ['after-setState-receiveProps', 'green'],
+        ['shouldComponentUpdate-currentState', 'yellow'],
+        ['shouldComponentUpdate-nextState', 'green'],
+        ['componentWillUpdate-currentState', 'yellow'],
+        ['componentWillUpdate-nextState', 'green'],
+        ['render', 'green'],
+        ['componentDidUpdate-currentState', 'green'],
+        ['componentDidUpdate-prevState', 'yellow'],
+        ['setState-receiveProps', 'green'],
+        ['setProps', 'green'],
+        // setFavoriteColor('blue')
+        ['shouldComponentUpdate-currentState', 'green'],
+        ['shouldComponentUpdate-nextState', 'blue'],
+        ['componentWillUpdate-currentState', 'green'],
+        ['componentWillUpdate-nextState', 'blue'],
+        ['render', 'blue'],
+        ['componentDidUpdate-currentState', 'blue'],
+        ['componentDidUpdate-prevState', 'green'],
+        ['setFavoriteColor', 'blue'],
+        // forceUpdate()
+        ['componentWillUpdate-currentState', 'blue'],
+        ['componentWillUpdate-nextState', 'blue'],
+        ['render', 'blue'],
+        ['componentDidUpdate-currentState', 'blue'],
+        ['componentDidUpdate-prevState', 'blue'],
+        ['forceUpdate', 'blue'],
+        // unmountComponent()
+        // state is available within `componentWillUnmount()`
+        ['componentWillUnmount', 'blue'],
+      ].join('\n'),
+    );
   });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactEmptyComponent-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactEmptyComponent-test.js
index a2e5076c0..a6b4cfaaf 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactEmptyComponent-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactEmptyComponent-test.js
@@ -68,8 +68,4 @@ describe('ReactEmptyComponent', () => {
     var instance2 = ReactTestUtils.renderIntoDocument(<Component2 />);
-    reactComponentExpect(instance1)
-      .expectRenderedChild()
-      .toBeEmptyComponent();
-    reactComponentExpect(instance2)
-      .expectRenderedChild()
-      .toBeEmptyComponent();
+    reactComponentExpect(instance1).expectRenderedChild().toBeEmptyComponent();
+    reactComponentExpect(instance2).expectRenderedChild().toBeEmptyComponent();
   });
@@ -85,3 +81,3 @@ describe('ReactEmptyComponent', () => {
       'Component.render(): A valid React element (or null) must be returned. You may ' +
-      'have returned undefined, an array or some other invalid object.'
+        'have returned undefined, an array or some other invalid object.',
     );
@@ -90,12 +86,8 @@ describe('ReactEmptyComponent', () => {
   it('should be able to switch between rendering null and a normal tag', () => {
-    var instance1 =
-      <TogglingComponent
-        firstComponent={null}
-        secondComponent={'div'}
-      />;
-    var instance2 =
-      <TogglingComponent
-        firstComponent={'div'}
-        secondComponent={null}
-      />;
+    var instance1 = (
+      <TogglingComponent firstComponent={null} secondComponent={'div'} />
+    );
+    var instance2 = (
+      <TogglingComponent firstComponent={'div'} secondComponent={null} />
+    );
 
@@ -112,7 +104,5 @@ describe('ReactEmptyComponent', () => {
   it('should be able to switch in a list of children', () => {
-    var instance1 =
-      <TogglingComponent
-        firstComponent={null}
-        secondComponent={'div'}
-      />;
+    var instance1 = (
+      <TogglingComponent firstComponent={null} secondComponent={'div'} />
+    );
 
@@ -123,3 +113,3 @@ describe('ReactEmptyComponent', () => {
         {instance1}
-      </div>
+      </div>,
     );
@@ -135,32 +125,27 @@ describe('ReactEmptyComponent', () => {
 
-  it('should distinguish between a script placeholder and an actual script tag',
-    () => {
-      var instance1 =
-        <TogglingComponent
-          firstComponent={null}
-          secondComponent={'script'}
-        />;
-      var instance2 =
-        <TogglingComponent
-          firstComponent={'script'}
-          secondComponent={null}
-        />;
+  it('should distinguish between a script placeholder and an actual script tag', () => {
+    var instance1 = (
+      <TogglingComponent firstComponent={null} secondComponent={'script'} />
+    );
+    var instance2 = (
+      <TogglingComponent firstComponent={'script'} secondComponent={null} />
+    );
 
-      expect(function() {
-        ReactTestUtils.renderIntoDocument(instance1);
-      }).not.toThrow();
-      expect(function() {
-        ReactTestUtils.renderIntoDocument(instance2);
-      }).not.toThrow();
+    expect(function() {
+      ReactTestUtils.renderIntoDocument(instance1);
+    }).not.toThrow();
+    expect(function() {
+      ReactTestUtils.renderIntoDocument(instance2);
+    }).not.toThrow();
 
-      expect(log.calls.count()).toBe(4);
-      expect(log.calls.argsFor(0)[0]).toBe(null);
-      expect(log.calls.argsFor(1)[0].tagName).toBe('SCRIPT');
-      expect(log.calls.argsFor(2)[0].tagName).toBe('SCRIPT');
-      expect(log.calls.argsFor(3)[0]).toBe(null);
-    }
-  );
+    expect(log.calls.count()).toBe(4);
+    expect(log.calls.argsFor(0)[0]).toBe(null);
+    expect(log.calls.argsFor(1)[0].tagName).toBe('SCRIPT');
+    expect(log.calls.argsFor(2)[0].tagName).toBe('SCRIPT');
+    expect(log.calls.argsFor(3)[0]).toBe(null);
+  });
 
-  it('should have findDOMNode return null when multiple layers of composite ' +
-    'components render to the same null placeholder',
+  it(
+    'should have findDOMNode return null when multiple layers of composite ' +
+      'components render to the same null placeholder',
     () => {
@@ -178,12 +163,8 @@ describe('ReactEmptyComponent', () => {
 
-      var instance1 =
-        <TogglingComponent
-          firstComponent={'div'}
-          secondComponent={Child}
-        />;
-      var instance2 =
-        <TogglingComponent
-          firstComponent={Child}
-          secondComponent={'div'}
-        />;
+      var instance1 = (
+        <TogglingComponent firstComponent={'div'} secondComponent={Child} />
+      );
+      var instance2 = (
+        <TogglingComponent firstComponent={Child} secondComponent={'div'} />
+      );
 
@@ -201,3 +182,3 @@ describe('ReactEmptyComponent', () => {
       expect(log.calls.argsFor(3)[0].tagName).toBe('DIV');
-    }
+    },
   );
@@ -256,5 +237,3 @@ describe('ReactEmptyComponent', () => {
       ReactDOM.render(null, div);
-    }).toThrowError(
-      'ReactDOM.render(): Invalid component element.'
-    );
+    }).toThrowError('ReactDOM.render(): Invalid component element.');
   });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactErrorBoundaries-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactErrorBoundaries-test.js
index 75c8654e9..b1f3f2f12 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactErrorBoundaries-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactErrorBoundaries-test.js
@@ -17,3 +17,2 @@ var ReactDOM;
 describe('ReactErrorBoundaries', () => {
-
   beforeEach(() => {
@@ -155,3 +154,3 @@ describe('ReactErrorBoundaries', () => {
       </ErrorBoundary>,
-      container
+      container,
     );
@@ -187,6 +186,3 @@ describe('ReactErrorBoundaries', () => {
     ReactDOM.render(<Boundary />, container);
-    expect(log).toEqual([
-      'Boundary render',
-      'Boundary componentDidMount',
-    ]);
+    expect(log).toEqual(['Boundary render', 'Boundary componentDidMount']);
   });
@@ -223,3 +219,3 @@ describe('ReactErrorBoundaries', () => {
       <ErrorBoundary><Broken /><Composite /></ErrorBoundary>,
-      container
+      container,
     );
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactIdentity-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactIdentity-test.js
index 809648b75..254fc50e6 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactIdentity-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactIdentity-test.js
@@ -19,3 +19,2 @@ var ReactTestUtils;
 describe('ReactIdentity', () => {
-
   beforeEach(() => {
@@ -34,4 +33,4 @@ describe('ReactIdentity', () => {
     var node;
-    var Component = (props) =>
-      <div ref={(c) => node = c}>
+    var Component = props =>
+      <div ref={c => (node = c)}>
         <div key={props.swap ? 'banana' : 'apple'} />
@@ -60,8 +59,8 @@ describe('ReactIdentity', () => {
     ReactDOM.render(
-      <Wrapper key="wrap1"><span ref={(c) => node1 = c} /></Wrapper>,
-      container
+      <Wrapper key="wrap1"><span ref={c => (node1 = c)} /></Wrapper>,
+      container,
     );
     ReactDOM.render(
-      <Wrapper key="wrap2"><span ref={(c) => node2 = c} /></Wrapper>,
-      container
+      <Wrapper key="wrap2"><span ref={c => (node2 = c)} /></Wrapper>,
+      container,
     );
@@ -93,6 +92,3 @@ describe('ReactIdentity', () => {
     var detachedContainer = document.createElement('div');
-    renderAComponentWithKeyIntoContainer(
-      "<'WEIRD/&\\key'>",
-      detachedContainer
-    );
+    renderAComponentWithKeyIntoContainer("<'WEIRD/&\\key'>", detachedContainer);
   });
@@ -105,6 +101,3 @@ describe('ReactIdentity', () => {
 
-    renderAComponentWithKeyIntoContainer(
-      "<'WEIRD/&\\key'>",
-      attachedContainer
-    );
+    renderAComponentWithKeyIntoContainer("<'WEIRD/&\\key'>", attachedContainer);
 
@@ -152,5 +145,3 @@ describe('ReactIdentity', () => {
     expect(function() {
-
       ReactTestUtils.renderIntoDocument(<TestContainer />);
-
     }).not.toThrow();
@@ -186,5 +177,3 @@ describe('ReactIdentity', () => {
     expect(function() {
-
       ReactTestUtils.renderIntoDocument(<TestContainer />);
-
     }).not.toThrow();
@@ -211,5 +200,3 @@ describe('ReactIdentity', () => {
     expect(function() {
-
       ReactTestUtils.renderIntoDocument(<TestContainer />);
-
     }).not.toThrow();
@@ -260,3 +247,3 @@ describe('ReactIdentity', () => {
   it('should not allow implicit and explicit keys to collide', () => {
-    var component =
+    var component = (
       <div>
@@ -264,3 +251,4 @@ describe('ReactIdentity', () => {
         <span key="0" />
-      </div>;
+      </div>
+    );
 
@@ -270,4 +258,2 @@ describe('ReactIdentity', () => {
   });
-
-
 });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactMockedComponent-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactMockedComponent-test.js
index 78ba7b4c8..185bd0762 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactMockedComponent-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactMockedComponent-test.js
@@ -20,3 +20,2 @@ var MockedComponent;
 describe('ReactMockedComponent', () => {
-
   beforeEach(() => {
@@ -25,4 +24,8 @@ describe('ReactMockedComponent', () => {
 
-    AutoMockedComponent = jest.genMockFromModule('ReactMockedComponentTestComponent');
-    MockedComponent = jest.genMockFromModule('ReactMockedComponentTestComponent');
+    AutoMockedComponent = jest.genMockFromModule(
+      'ReactMockedComponentTestComponent',
+    );
+    MockedComponent = jest.genMockFromModule(
+      'ReactMockedComponentTestComponent',
+    );
 
@@ -54,3 +57,3 @@ describe('ReactMockedComponent', () => {
       instance,
-      AutoMockedComponent
+      AutoMockedComponent,
     );
@@ -87,3 +90,3 @@ describe('ReactMockedComponent', () => {
       instance,
-      MockedComponent
+      MockedComponent,
     );
@@ -98,3 +101,2 @@ describe('ReactMockedComponent', () => {
   });
-
 });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChild-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChild-test.js
index 4d9bffc42..e11c3ba00 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChild-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChild-test.js
@@ -119,3 +119,3 @@ describe('ReactMultiChild', () => {
         <WrapperComponent><MockComponent /></WrapperComponent>,
-        container
+        container,
       );
@@ -177,10 +177,7 @@ describe('ReactMultiChild', () => {
 
-      ReactDOM.render(
-        <Parent>{[<div key="1"/>]}</Parent>,
-        container
-      );
+      ReactDOM.render(<Parent>{[<div key="1" />]}</Parent>, container);
 
       ReactDOM.render(
-        <Parent>{[<div key="1"/>, <div key="1"/>]}</Parent>,
-        container
+        <Parent>{[<div key="1" />, <div key="1" />]}</Parent>,
+        container,
       );
@@ -190,9 +187,9 @@ describe('ReactMultiChild', () => {
         'Warning: flattenChildren(...): ' +
-        'Encountered two children with the same key, `1`. ' +
-        'Child keys must be unique; when two children share a key, ' +
-        'only the first child will be used.\n' +
-        '    in div (at **)\n' +
-        '    in WrapperComponent (at **)\n' +
-        '    in div (at **)\n' +
-        '    in Parent (at **)'
+          'Encountered two children with the same key, `1`. ' +
+          'Child keys must be unique; when two children share a key, ' +
+          'only the first child will be used.\n' +
+          '    in div (at **)\n' +
+          '    in WrapperComponent (at **)\n' +
+          '    in div (at **)\n' +
+          '    in Parent (at **)',
       );
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildReconcile-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildReconcile-test.js
index d655536ae..644e614a1 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildReconcile-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildReconcile-test.js
@@ -88,5 +88,3 @@ class FriendsStatusDisplay extends React.Component {
     // implementation details.
-    var statusDisplays =
-      ReactInstanceMap.get(this)
-      ._renderedComponent
+    var statusDisplays = ReactInstanceMap.get(this)._renderedComponent
       ._renderedChildren;
@@ -125,3 +123,3 @@ class FriendsStatusDisplay extends React.Component {
    */
-  verifyPreviousRefsResolved = (flushedKey) => {
+  verifyPreviousRefsResolved = flushedKey => {
     var i;
@@ -144,9 +142,10 @@ class FriendsStatusDisplay extends React.Component {
       children.push(
-        !status ? null :
-        <StatusDisplay
-          key={key}
-          ref={key}
-          onFlush={this.verifyPreviousRefsResolved.bind(this, key)}
-          status={status}
-        />
+        !status
+          ? null
+          : <StatusDisplay
+              key={key}
+              ref={key}
+              onFlush={this.verifyPreviousRefsResolved.bind(this, key)}
+              status={status}
+            />,
       );
@@ -161,3 +160,2 @@ class FriendsStatusDisplay extends React.Component {
 
-
 function getInternalStateByUserName(statusDisplays) {
@@ -178,4 +176,5 @@ function verifyStatuses(statusDisplays, props) {
   var username;
-  expect(Object.keys(nonEmptyStatusDisplays).length)
-    .toEqual(Object.keys(nonEmptyStatusProps).length);
+  expect(Object.keys(nonEmptyStatusDisplays).length).toEqual(
+    Object.keys(nonEmptyStatusProps).length,
+  );
   for (username in nonEmptyStatusDisplays) {
@@ -184,4 +183,5 @@ function verifyStatuses(statusDisplays, props) {
     }
-    expect(nonEmptyStatusDisplays[username].getStatus())
-      .toEqual(nonEmptyStatusProps[username]);
+    expect(nonEmptyStatusDisplays[username].getStatus()).toEqual(
+      nonEmptyStatusProps[username],
+    );
   }
@@ -193,8 +193,10 @@ function verifyStatuses(statusDisplays, props) {
     }
-    expect(nonEmptyStatusDisplays[username].getStatus())
-      .toEqual(nonEmptyStatusProps[username]);
+    expect(nonEmptyStatusDisplays[username].getStatus()).toEqual(
+      nonEmptyStatusProps[username],
+    );
   }
 
-  expect(Object.keys(nonEmptyStatusDisplays))
-      .toEqual(Object.keys(nonEmptyStatusProps));
+  expect(Object.keys(nonEmptyStatusDisplays)).toEqual(
+    Object.keys(nonEmptyStatusProps),
+  );
 }
@@ -214,4 +216,5 @@ function verifyStatesPreserved(lastInternalStates, statusDisplays) {
     if (lastInternalStates[key]) {
-      expect(lastInternalStates[key])
-        .toEqual(statusDisplays[key].getInternalState());
+      expect(lastInternalStates[key]).toEqual(
+        statusDisplays[key].getInternalState(),
+      );
     }
@@ -220,3 +223,2 @@ function verifyStatesPreserved(lastInternalStates, statusDisplays) {
 
-
 /**
@@ -243,3 +245,3 @@ function verifyDomOrderingAccurate(parentInstance, statusDisplays) {
     orderedLogicalIDs.push(
-      ReactInstanceMap.get(statusDisplay)._renderedComponent._rootNodeID
+      ReactInstanceMap.get(statusDisplay)._renderedComponent._rootNodeID,
     );
@@ -257,3 +259,3 @@ function testPropsSequence(sequence) {
     <FriendsStatusDisplay {...sequence[0]} />,
-    container
+    container,
   );
@@ -264,6 +266,3 @@ function testPropsSequence(sequence) {
   for (i = 1; i < sequence.length; i++) {
-    ReactDOM.render(
-      <FriendsStatusDisplay {...sequence[i]} />,
-      container
-    );
+    ReactDOM.render(<FriendsStatusDisplay {...sequence[i]} />, container);
     statusDisplays = parentInstance.getStatusDisplays();
@@ -293,3 +292,3 @@ describe('ReactMultiChildReconcile', () => {
       <FriendsStatusDisplay {...props} />,
-      container
+      container,
     );
@@ -299,6 +298,3 @@ describe('ReactMultiChildReconcile', () => {
     // Now remove the child.
-    ReactDOM.render(
-      <FriendsStatusDisplay />,
-      container
-    );
+    ReactDOM.render(<FriendsStatusDisplay />, container);
     statusDisplays = parentInstance.getStatusDisplays();
@@ -307,10 +303,8 @@ describe('ReactMultiChildReconcile', () => {
     // Now reset the props that cause there to be a child
-    ReactDOM.render(
-      <FriendsStatusDisplay {...props} />,
-      container
-    );
+    ReactDOM.render(<FriendsStatusDisplay {...props} />, container);
     statusDisplays = parentInstance.getStatusDisplays();
     expect(statusDisplays.jcw).toBeTruthy();
-    expect(statusDisplays.jcw.getInternalState())
-        .not.toBe(startingInternalState);
+    expect(statusDisplays.jcw.getInternalState()).not.toBe(
+      startingInternalState,
+    );
   });
@@ -348,3 +342,3 @@ describe('ReactMultiChildReconcile', () => {
     var PROPS_SEQUENCE = [
-      {usernameToStatus: {} },
+      {usernameToStatus: {}},
       {
@@ -365,3 +359,3 @@ describe('ReactMultiChildReconcile', () => {
       },
-      {usernameToStatus: {} },
+      {usernameToStatus: {}},
     ];
@@ -410,4 +404,2 @@ describe('ReactMultiChildReconcile', () => {
 
-
-
   /**
@@ -525,3 +517,4 @@ describe('ReactMultiChildReconcile', () => {
       {
-        usernameToStatus: {               // Full circle!
+        usernameToStatus: {
+          // Full circle!
           userOne: 'userOneStatus',
@@ -571,3 +564,4 @@ describe('ReactMultiChildReconcile', () => {
       {
-        usernameToStatus: {               // Full circle!
+        usernameToStatus: {
+          // Full circle!
           userOne: 'userOneStatus',
@@ -582,3 +576,2 @@ describe('ReactMultiChildReconcile', () => {
 
-
   it('should remove nulled out children and ignore new null children', () => {
@@ -608,3 +601,3 @@ describe('ReactMultiChildReconcile', () => {
           jordanjcw: 'jordanjcwStatus',
-          john: 'johnStatus',  // john will go away
+          john: 'johnStatus', // john will go away
           joe: 'joeStatus',
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildText-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildText-test.js
index 3db920e6b..549b0d259 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildText-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildText-test.js
@@ -90,3 +90,2 @@ var expectChildren = function(d, children) {
 
-
 /**
@@ -101,85 +100,151 @@ describe('ReactMultiChildText', () => {
       // basic values
-      undefined, [],
-      null, [],
-      false, [],
-      true, [],
-      0, '0',
-      1.2, '1.2',
-      '', '',
-      'foo', 'foo',
-
-      [], [],
-      [undefined], [],
-      [null], [],
-      [false], [],
-      [true], [],
-      [0], ['0'],
-      [1.2], ['1.2'],
-      [''], [''],
-      ['foo'], ['foo'],
-      [<div />], [<div />],
+      undefined,
+      [],
+      null,
+      [],
+      false,
+      [],
+      true,
+      [],
+      0,
+      '0',
+      1.2,
+      '1.2',
+      '',
+      '',
+      'foo',
+      'foo',
+
+      [],
+      [],
+      [undefined],
+      [],
+      [null],
+      [],
+      [false],
+      [],
+      [true],
+      [],
+      [0],
+      ['0'],
+      [1.2],
+      ['1.2'],
+      [''],
+      [''],
+      ['foo'],
+      ['foo'],
+      [<div />],
+      [<div />],
 
       // two adjacent values
-      [true, 0], ['0'],
-      [0, 0], ['0', '0'],
-      [1.2, 0], ['1.2', '0'],
-      [0, ''], ['0', ''],
-      ['foo', 0], ['foo', '0'],
-      [0, <div />], ['0', <div />],
-
-      [true, 1.2], ['1.2'],
-      [1.2, 0], ['1.2', '0'],
-      [1.2, 1.2], ['1.2', '1.2'],
-      [1.2, ''], ['1.2', ''],
-      ['foo', 1.2], ['foo', '1.2'],
-      [1.2, <div />], ['1.2', <div />],
-
-      [true, ''], [''],
-      ['', 0], ['', '0'],
-      [1.2, ''], ['1.2', ''],
-      ['', ''], ['', ''],
-      ['foo', ''], ['foo', ''],
-      ['', <div />], ['', <div />],
-
-      [true, 'foo'], ['foo'],
-      ['foo', 0], ['foo', '0'],
-      [1.2, 'foo'], ['1.2', 'foo'],
-      ['foo', ''], ['foo', ''],
-      ['foo', 'foo'], ['foo', 'foo'],
-      ['foo', <div />], ['foo', <div />],
+      [true, 0],
+      ['0'],
+      [0, 0],
+      ['0', '0'],
+      [1.2, 0],
+      ['1.2', '0'],
+      [0, ''],
+      ['0', ''],
+      ['foo', 0],
+      ['foo', '0'],
+      [0, <div />],
+      ['0', <div />],
+
+      [true, 1.2],
+      ['1.2'],
+      [1.2, 0],
+      ['1.2', '0'],
+      [1.2, 1.2],
+      ['1.2', '1.2'],
+      [1.2, ''],
+      ['1.2', ''],
+      ['foo', 1.2],
+      ['foo', '1.2'],
+      [1.2, <div />],
+      ['1.2', <div />],
+
+      [true, ''],
+      [''],
+      ['', 0],
+      ['', '0'],
+      [1.2, ''],
+      ['1.2', ''],
+      ['', ''],
+      ['', ''],
+      ['foo', ''],
+      ['foo', ''],
+      ['', <div />],
+      ['', <div />],
+
+      [true, 'foo'],
+      ['foo'],
+      ['foo', 0],
+      ['foo', '0'],
+      [1.2, 'foo'],
+      ['1.2', 'foo'],
+      ['foo', ''],
+      ['foo', ''],
+      ['foo', 'foo'],
+      ['foo', 'foo'],
+      ['foo', <div />],
+      ['foo', <div />],
 
       // values separated by an element
-      [true, <div />, true], [<div />],
-      [1.2, <div />, 1.2], ['1.2', <div />, '1.2'],
-      ['', <div />, ''], ['', <div />, ''],
-      ['foo', <div />, 'foo'], ['foo', <div />, 'foo'],
-
-      [true, 1.2, <div />, '', 'foo'], ['1.2', <div />, '', 'foo'],
-      [1.2, '', <div />, 'foo', true], ['1.2', '', <div />, 'foo'],
-      ['', 'foo', <div />, true, 1.2], ['', 'foo', <div />, '1.2'],
-
-      [true, 1.2, '', <div />, 'foo', true, 1.2], ['1.2', '', <div />, 'foo', '1.2'],
-      ['', 'foo', true, <div />, 1.2, '', 'foo'], ['', 'foo', <div />, '1.2', '', 'foo'],
+      [true, <div />, true],
+      [<div />],
+      [1.2, <div />, 1.2],
+      ['1.2', <div />, '1.2'],
+      ['', <div />, ''],
+      ['', <div />, ''],
+      ['foo', <div />, 'foo'],
+      ['foo', <div />, 'foo'],
+
+      [true, 1.2, <div />, '', 'foo'],
+      ['1.2', <div />, '', 'foo'],
+      [1.2, '', <div />, 'foo', true],
+      ['1.2', '', <div />, 'foo'],
+      ['', 'foo', <div />, true, 1.2],
+      ['', 'foo', <div />, '1.2'],
+
+      [true, 1.2, '', <div />, 'foo', true, 1.2],
+      ['1.2', '', <div />, 'foo', '1.2'],
+      ['', 'foo', true, <div />, 1.2, '', 'foo'],
+      ['', 'foo', <div />, '1.2', '', 'foo'],
 
       // values inside arrays
-      [[true], [true]], [],
-      [[1.2], [1.2]], ['1.2', '1.2'],
-      [[''], ['']], ['', ''],
-      [['foo'], ['foo']], ['foo', 'foo'],
-      [[<div />], [<div />]], [<div />, <div />],
-
-      [[true, 1.2, <div />], '', 'foo'], ['1.2', <div />, '', 'foo'],
-      [1.2, '', [<div />, 'foo', true]], ['1.2', '', <div />, 'foo'],
-      ['', ['foo', <div />, true], 1.2], ['', 'foo', <div />, '1.2'],
-
-      [true, [1.2, '', <div />, 'foo'], true, 1.2], ['1.2', '', <div />, 'foo', '1.2'],
-      ['', 'foo', [true, <div />, 1.2, ''], 'foo'], ['', 'foo', <div />, '1.2', '', 'foo'],
+      [[true], [true]],
+      [],
+      [[1.2], [1.2]],
+      ['1.2', '1.2'],
+      [[''], ['']],
+      ['', ''],
+      [['foo'], ['foo']],
+      ['foo', 'foo'],
+      [[<div />], [<div />]],
+      [<div />, <div />],
+
+      [[true, 1.2, <div />], '', 'foo'],
+      ['1.2', <div />, '', 'foo'],
+      [1.2, '', [<div />, 'foo', true]],
+      ['1.2', '', <div />, 'foo'],
+      ['', ['foo', <div />, true], 1.2],
+      ['', 'foo', <div />, '1.2'],
+
+      [true, [1.2, '', <div />, 'foo'], true, 1.2],
+      ['1.2', '', <div />, 'foo', '1.2'],
+      ['', 'foo', [true, <div />, 1.2, ''], 'foo'],
+      ['', 'foo', <div />, '1.2', '', 'foo'],
 
       // values inside elements
-      [<div>{true}{1.2}{<div />}</div>, '', 'foo'], [<div />, '', 'foo'],
-      [1.2, '', <div>{<div />}{'foo'}{true}</div>], ['1.2', '', <div />],
-      ['', <div>{'foo'}{<div />}{true}</div>, 1.2], ['', <div />, '1.2'],
-
-      [true, <div>{1.2}{''}{<div />}{'foo'}</div>, true, 1.2], [<div />, '1.2'],
-      ['', 'foo', <div>{true}{<div />}{1.2}{''}</div>, 'foo'], ['', 'foo', <div />, 'foo'],
+      [<div>{true}{1.2}{<div />}</div>, '', 'foo'],
+      [<div />, '', 'foo'],
+      [1.2, '', <div>{<div />}{'foo'}{true}</div>],
+      ['1.2', '', <div />],
+      ['', <div>{'foo'}{<div />}{true}</div>, 1.2],
+      ['', <div />, '1.2'],
+
+      [true, <div>{1.2}{''}{<div />}{'foo'}</div>, true, 1.2],
+      [<div />, '1.2'],
+      ['', 'foo', <div>{true}{<div />}{1.2}{''}</div>, 'foo'],
+      ['', 'foo', <div />, 'foo'],
     ]);
@@ -187,3 +252,3 @@ describe('ReactMultiChildText', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Warning: Each child in an array or iterator should have a unique "key" prop.'
+      'Warning: Each child in an array or iterator should have a unique "key" prop.',
     );
@@ -194,3 +259,3 @@ describe('ReactMultiChildText', () => {
       ReactTestUtils.renderIntoDocument(
-        <div dangerouslySetInnerHTML={{__html: 'abcdef'}}>ghjkl</div>
+        <div dangerouslySetInnerHTML={{__html: 'abcdef'}}>ghjkl</div>,
       );
@@ -221,3 +286,3 @@ describe('ReactMultiChildText', () => {
       <div>{new Map([['a', 'alpha'], ['b', 'beta']])}</div>,
-      container
+      container,
     );
@@ -234,3 +299,3 @@ describe('ReactMultiChildText', () => {
       <div>{new Map([['b', 'beta'], ['a', 'alpha']])}</div>,
-      container
+      container,
     );
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactStatelessComponent-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactStatelessComponent-test.js
index 39a131d96..e55850bed 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactStatelessComponent-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactStatelessComponent-test.js
@@ -13,2 +13,3 @@
 
+var PropTypes;
 var React;
@@ -22,3 +23,2 @@ function StatelessComponent(props) {
 describe('ReactStatelessComponent', () => {
-
   beforeEach(() => {
@@ -27,2 +27,3 @@ describe('ReactStatelessComponent', () => {
     ReactTestUtils = require('ReactTestUtils');
+    PropTypes = require('prop-types');
   });
@@ -64,3 +65,3 @@ describe('ReactStatelessComponent', () => {
       static contextTypes = {
-        test: React.PropTypes.string.isRequired,
+        test: PropTypes.string.isRequired,
       };
@@ -78,3 +79,3 @@ describe('ReactStatelessComponent', () => {
       static childContextTypes = {
-        test: React.PropTypes.string.isRequired,
+        test: PropTypes.string.isRequired,
       };
@@ -107,3 +108,3 @@ describe('ReactStatelessComponent', () => {
     StatelessComponentWithChildContext.childContextTypes = {
-      foo: React.PropTypes.string,
+      foo: PropTypes.string,
     };
@@ -117,3 +118,3 @@ describe('ReactStatelessComponent', () => {
       'StatelessComponentWithChildContext(...): childContextTypes cannot ' +
-      'be defined on a functional component.'
+        'be defined on a functional component.',
     );
@@ -132,3 +133,3 @@ describe('ReactStatelessComponent', () => {
       'NotAComponent(...): A valid React element (or null) must be returned. ' +
-      'You may have returned undefined, an array or some other invalid object.'
+        'You may have returned undefined, an array or some other invalid object.',
     );
@@ -143,5 +144,3 @@ describe('ReactStatelessComponent', () => {
       ReactTestUtils.renderIntoDocument(<Child test="test" />);
-    }).toThrowError(
-      'Stateless function components cannot have refs.'
-    );
+    }).toThrowError('Stateless function components cannot have refs.');
   });
@@ -155,3 +154,3 @@ describe('ReactStatelessComponent', () => {
       render() {
-        return <StatelessComponent name="A" ref="stateless"/>;
+        return <StatelessComponent name="A" ref="stateless" />;
       }
@@ -159,3 +158,3 @@ describe('ReactStatelessComponent', () => {
 
-    ReactTestUtils.renderIntoDocument(<Parent/>);
+    ReactTestUtils.renderIntoDocument(<Parent />);
 
@@ -164,4 +163,4 @@ describe('ReactStatelessComponent', () => {
       'Stateless function components cannot be given refs ' +
-      '(See ref "stateless" in StatelessComponent created by Parent). ' +
-      'Attempts to access this ref will fail.'
+        '(See ref "stateless" in StatelessComponent created by Parent). ' +
+        'Attempts to access this ref will fail.',
     );
@@ -195,3 +194,3 @@ describe('ReactStatelessComponent', () => {
     Child.defaultProps = {test: 2};
-    Child.propTypes = {test: React.PropTypes.string};
+    Child.propTypes = {test: PropTypes.string};
 
@@ -201,7 +200,7 @@ describe('ReactStatelessComponent', () => {
     expect(
-      console.error.calls.argsFor(0)[0].replace(/\(at .+?:\d+\)/g, '(at **)')
+      console.error.calls.argsFor(0)[0].replace(/\(at .+?:\d+\)/g, '(at **)'),
     ).toBe(
       'Warning: Failed prop type: Invalid prop `test` of type `number` ' +
-      'supplied to `Child`, expected `string`.\n' +
-      '    in Child (at **)'
+        'supplied to `Child`, expected `string`.\n' +
+        '    in Child (at **)',
     );
@@ -212,3 +211,3 @@ describe('ReactStatelessComponent', () => {
       static childContextTypes = {
-        lang: React.PropTypes.string,
+        lang: PropTypes.string,
       };
@@ -227,3 +226,3 @@ describe('ReactStatelessComponent', () => {
     }
-    Child.contextTypes = {lang: React.PropTypes.string};
+    Child.contextTypes = {lang: PropTypes.string};
 
@@ -266,3 +265,3 @@ describe('ReactStatelessComponent', () => {
       ReactTestUtils.renderIntoDocument(<div><NotAComponent /></div>);
-    }).toThrow();  // has no method 'render'
+    }).toThrow(); // has no method 'render'
     expect(console.error.calls.count()).toBe(1);
@@ -270,3 +269,3 @@ describe('ReactStatelessComponent', () => {
       'NotAComponent(...): A valid React element (or null) must be returned. You may ' +
-      'have returned undefined, an array or some other invalid object.'
+        'have returned undefined, an array or some other invalid object.',
     );
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactUpdates-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactUpdates-test.js
index 026a938eb..e676e87a2 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactUpdates-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactUpdates-test.js
@@ -482,3 +482,3 @@ describe('ReactUpdates', () => {
       ['Switcher', 'Box'],
-      ['Box', 'Switcher']
+      ['Box', 'Switcher'],
     );
@@ -489,3 +489,3 @@ describe('ReactUpdates', () => {
       ['Box', 'Child'],
-      ['Box', 'Child']
+      ['Box', 'Child'],
     );
@@ -496,3 +496,3 @@ describe('ReactUpdates', () => {
       ['Switcher', 'Box', 'Child'],
-      ['Box', 'Switcher', 'Child']
+      ['Box', 'Switcher', 'Child'],
     );
@@ -619,13 +619,13 @@ describe('ReactUpdates', () => {
       'Outer-render-0',
-        'Inner-render-0-0',
+      'Inner-render-0-0',
 
       'Outer-setState-1',
-        'Outer-render-1',
-          'Inner-render-1-0',
-          'Inner-didUpdate-1-0',
-        'Outer-didUpdate-1',
-          'Inner-setState-1',
-            'Inner-render-1-1',
-            'Inner-didUpdate-1-1',
-          'Inner-callback-1',
+      'Outer-render-1',
+      'Inner-render-1-0',
+      'Inner-didUpdate-1-0',
+      'Outer-didUpdate-1',
+      'Inner-setState-1',
+      'Inner-render-1-1',
+      'Inner-didUpdate-1-1',
+      'Inner-callback-1',
       'Outer-callback-1',
@@ -633,10 +633,10 @@ describe('ReactUpdates', () => {
       'Outer-setState-2',
-        'Outer-render-2',
-          'Inner-render-2-1',
-          'Inner-didUpdate-2-1',
-        'Outer-didUpdate-2',
-          'Inner-setState-2',
-            'Inner-render-2-2',
-            'Inner-didUpdate-2-2',
-          'Inner-callback-2',
+      'Outer-render-2',
+      'Inner-render-2-1',
+      'Inner-didUpdate-2-1',
+      'Outer-didUpdate-2',
+      'Inner-setState-2',
+      'Inner-render-2-2',
+      'Inner-didUpdate-2-2',
+      'Inner-callback-2',
       'Outer-callback-2',
@@ -664,3 +664,3 @@ describe('ReactUpdates', () => {
             />,
-            ReactDOM.findDOMNode(this)
+            ReactDOM.findDOMNode(this),
           );
@@ -771,3 +771,3 @@ describe('ReactUpdates', () => {
           <B />
-        </div>
+        </div>,
       );
@@ -971,3 +971,3 @@ describe('ReactUpdates', () => {
       'setState(...): Expected the last optional `callback` argument ' +
-      'to be a function. Instead received: string.'
+        'to be a function. Instead received: string.',
     );
@@ -975,3 +975,3 @@ describe('ReactUpdates', () => {
       'setState(...): Expected the last optional `callback` argument ' +
-      'to be a function. Instead received: Object.'
+        'to be a function. Instead received: Object.',
     );
@@ -979,3 +979,3 @@ describe('ReactUpdates', () => {
       'setState(...): Expected the last optional `callback` argument ' +
-      'to be a function. Instead received: Foo (keys: a, b).'
+        'to be a function. Instead received: Foo (keys: a, b).',
     );
@@ -1001,3 +1001,3 @@ describe('ReactUpdates', () => {
       'forceUpdate(...): Expected the last optional `callback` argument ' +
-      'to be a function. Instead received: string.'
+        'to be a function. Instead received: string.',
     );
@@ -1005,3 +1005,3 @@ describe('ReactUpdates', () => {
       'forceUpdate(...): Expected the last optional `callback` argument ' +
-      'to be a function. Instead received: Object.'
+        'to be a function. Instead received: Object.',
     );
@@ -1009,3 +1009,3 @@ describe('ReactUpdates', () => {
       'forceUpdate(...): Expected the last optional `callback` argument ' +
-      'to be a function. Instead received: Foo (keys: a, b).'
+        'to be a function. Instead received: Foo (keys: a, b).',
     );
@@ -1072,6 +1072,6 @@ describe('ReactUpdates', () => {
         super(props);
-        this.state = { showChild: true };
+        this.state = {showChild: true};
       }
       componentDidMount() {
-        this.setState({ showChild: false });
+        this.setState({showChild: false});
       }
@@ -1103,3 +1103,3 @@ describe('ReactUpdates', () => {
       componentWillUnmount() {
-        callbacks = callbacks.filter((c) => c !== this.onChange);
+        callbacks = callbacks.filter(c => c !== this.onChange);
       }
diff --git a/src/renderers/shared/stack/reconciler/__tests__/refs-destruction-test.js b/src/renderers/shared/stack/reconciler/__tests__/refs-destruction-test.js
index 1fdc948a2..44df2d61b 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/refs-destruction-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/refs-destruction-test.js
@@ -31,7 +31,7 @@ describe('refs-destruction', () => {
           <div>
-            {this.props.destroy ? null :
-              <div ref="theInnerDiv">
-                Lets try to destroy this.
-              </div>
-            }
+            {this.props.destroy
+              ? null
+              : <div ref="theInnerDiv">
+                  Lets try to destroy this.
+                </div>}
           </div>
@@ -45,4 +45,5 @@ describe('refs-destruction', () => {
     var testInstance = ReactDOM.render(<TestComponent />, container);
-    expect(ReactTestUtils.isDOMComponent(testInstance.refs.theInnerDiv))
-      .toBe(true);
+    expect(ReactTestUtils.isDOMComponent(testInstance.refs.theInnerDiv)).toBe(
+      true,
+    );
     expect(Object.keys(testInstance.refs || {}).length).toEqual(1);
@@ -55,4 +56,5 @@ describe('refs-destruction', () => {
     var testInstance = ReactDOM.render(<TestComponent />, container);
-    expect(ReactTestUtils.isDOMComponent(testInstance.refs.theInnerDiv))
-      .toBe(true);
+    expect(ReactTestUtils.isDOMComponent(testInstance.refs.theInnerDiv)).toBe(
+      true,
+    );
     expect(Object.keys(testInstance.refs || {}).length).toEqual(1);
@@ -92,5 +94,7 @@ describe('refs-destruction', () => {
       render() {
-        return (<Modal>
-          <a ref="ref"/>
-        </Modal>);
+        return (
+          <Modal>
+            <a ref="ref" />
+          </Modal>
+        );
       }
@@ -100,3 +104,3 @@ describe('refs-destruction', () => {
       render() {
-        return this.props.hidden ? null : <AppModal onClose={this.close}/>;
+        return this.props.hidden ? null : <AppModal onClose={this.close} />;
       }
@@ -106,3 +110,3 @@ describe('refs-destruction', () => {
     ReactDOM.render(<App />, container);
-    ReactDOM.render(<App hidden={true}/>, container);
+    ReactDOM.render(<App hidden={true} />, container);
     jest.runAllTimers();
diff --git a/src/renderers/shared/stack/reconciler/__tests__/refs-test.js b/src/renderers/shared/stack/reconciler/__tests__/refs-test.js
index d33a4aeac..b7b835bfc 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/refs-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/refs-test.js
@@ -18,3 +18,2 @@ var reactComponentExpect = require('reactComponentExpect');
 
-
 /**
@@ -43,3 +42,3 @@ class ClickCounter extends React.Component {
           ref={'clickLog' + i}
-        />
+        />,
       );
@@ -81,3 +80,3 @@ class TestRefsComponent extends React.Component {
         <GeneralContainerComponent ref="myContainer">
-          <ClickCounter ref="myCounter" initialCount={1}/>
+          <ClickCounter ref="myCounter" initialCount={1} />
         </GeneralContainerComponent>
@@ -92,7 +91,9 @@ class TestRefsComponent extends React.Component {
 var renderTestRefsComponent = function() {
-  var testRefsComponent =
-      ReactTestUtils.renderIntoDocument(<TestRefsComponent />);
+  var testRefsComponent = ReactTestUtils.renderIntoDocument(
+    <TestRefsComponent />,
+  );
 
-  reactComponentExpect(testRefsComponent)
-      .toBeCompositeComponentWithType(TestRefsComponent);
+  reactComponentExpect(testRefsComponent).toBeCompositeComponentWithType(
+    TestRefsComponent,
+  );
 
@@ -101,6 +102,6 @@ var renderTestRefsComponent = function() {
 
-  reactComponentExpect(generalContainer)
-      .toBeCompositeComponentWithType(GeneralContainerComponent);
-  reactComponentExpect(counter)
-      .toBeCompositeComponentWithType(ClickCounter);
+  reactComponentExpect(generalContainer).toBeCompositeComponentWithType(
+    GeneralContainerComponent,
+  );
+  reactComponentExpect(counter).toBeCompositeComponentWithType(ClickCounter);
 
@@ -109,6 +110,7 @@ var renderTestRefsComponent = function() {
 
-
 var expectClickLogsLengthToBe = function(instance, length) {
-  var clickLogs =
-    ReactTestUtils.scryRenderedDOMComponentsWithClass(instance, 'clickLogDiv');
+  var clickLogs = ReactTestUtils.scryRenderedDOMComponentsWithClass(
+    instance,
+    'clickLogDiv',
+  );
   expect(clickLogs.length).toBe(length);
@@ -128,7 +130,6 @@ describe('reactiverefs', () => {
     var testRefsComponent = renderTestRefsComponent();
-    var clickIncrementer =
-      ReactTestUtils.findRenderedDOMComponentWithClass(
-        testRefsComponent,
-        'clickIncrementer'
-      );
+    var clickIncrementer = ReactTestUtils.findRenderedDOMComponentWithClass(
+      testRefsComponent,
+      'clickIncrementer',
+    );
 
@@ -150,9 +151,5 @@ describe('reactiverefs', () => {
     expectClickLogsLengthToBe(testRefsComponent, 1);
-
   });
-
 });
 
-
-
 /**
@@ -202,8 +199,14 @@ describe('ref swapping', () => {
 
-    var firstDiv =
-      ReactTestUtils.findRenderedDOMComponentWithClass(refHopsAround, 'first');
-    var secondDiv =
-      ReactTestUtils.findRenderedDOMComponentWithClass(refHopsAround, 'second');
-    var thirdDiv =
-      ReactTestUtils.findRenderedDOMComponentWithClass(refHopsAround, 'third');
+    var firstDiv = ReactTestUtils.findRenderedDOMComponentWithClass(
+      refHopsAround,
+      'first',
+    );
+    var secondDiv = ReactTestUtils.findRenderedDOMComponentWithClass(
+      refHopsAround,
+      'second',
+    );
+    var thirdDiv = ReactTestUtils.findRenderedDOMComponentWithClass(
+      refHopsAround,
+      'third',
+    );
 
@@ -233,3 +236,2 @@ describe('ref swapping', () => {
 
-
   it('always has a value for this.refs', () => {
diff --git a/src/renderers/shared/stack/reconciler/instantiateReactComponent.js b/src/renderers/shared/stack/reconciler/instantiateReactComponent.js
index bc5b1eeec..08484b27c 100644
--- a/src/renderers/shared/stack/reconciler/instantiateReactComponent.js
+++ b/src/renderers/shared/stack/reconciler/instantiateReactComponent.js
@@ -68,6 +68,3 @@ function instantiateReactComponent(node, shouldHaveDebugID) {
     var type = element.type;
-    if (
-      typeof type !== 'function' &&
-      typeof type !== 'string'
-    ) {
+    if (typeof type !== 'function' && typeof type !== 'string') {
       var info = '';
@@ -76,5 +73,5 @@ function instantiateReactComponent(node, shouldHaveDebugID) {
           type === undefined ||
-          typeof type === 'object' &&
-          type !== null &&
-          Object.keys(type).length === 0
+          (typeof type === 'object' &&
+            type !== null &&
+            Object.keys(type).length === 0)
         ) {
@@ -82,3 +79,3 @@ function instantiateReactComponent(node, shouldHaveDebugID) {
             ' You likely forgot to export your component from the file ' +
-            'it\'s defined in.';
+            "it's defined in.";
         }
@@ -89,3 +86,3 @@ function instantiateReactComponent(node, shouldHaveDebugID) {
         'Element type is invalid: expected a string (for built-in components) ' +
-        'or a class/function (for composite components) but got: %s.%s',
+          'or a class/function (for composite components) but got: %s.%s',
         type == null ? type : typeof type,
@@ -114,7 +111,3 @@ function instantiateReactComponent(node, shouldHaveDebugID) {
   } else {
-    invariant(
-      false,
-      'Encountered invalid React node of type %s',
-      typeof node
-    );
+    invariant(false, 'Encountered invalid React node of type %s', typeof node);
   }
@@ -124,6 +117,6 @@ function instantiateReactComponent(node, shouldHaveDebugID) {
       typeof instance.mountComponent === 'function' &&
-      typeof instance.receiveComponent === 'function' &&
-      typeof instance.getHostNode === 'function' &&
-      typeof instance.unmountComponent === 'function',
-      'Only React Components can be mounted.'
+        typeof instance.receiveComponent === 'function' &&
+        typeof instance.getHostNode === 'function' &&
+        typeof instance.unmountComponent === 'function',
+      'Only React Components can be mounted.',
     );
@@ -157,3 +150,3 @@ Object.assign(
     _instantiateReactComponent: instantiateReactComponent,
-  }
+  },
 );
diff --git a/src/renderers/shared/utils/CallbackQueue.js b/src/renderers/shared/utils/CallbackQueue.js
index 4a24366e7..00284508b 100644
--- a/src/renderers/shared/utils/CallbackQueue.js
+++ b/src/renderers/shared/utils/CallbackQueue.js
@@ -67,3 +67,3 @@ class CallbackQueue<T> {
         callbacks.length === contexts.length,
-        'Mismatched list of contexts in callback queue'
+        'Mismatched list of contexts in callback queue',
       );
diff --git a/src/renderers/shared/utils/ReactErrorUtils.js b/src/renderers/shared/utils/ReactErrorUtils.js
index 1295908b8..d9b1c067e 100644
--- a/src/renderers/shared/utils/ReactErrorUtils.js
+++ b/src/renderers/shared/utils/ReactErrorUtils.js
@@ -65,6 +65,8 @@ if (__DEV__) {
    */
-  if (typeof window !== 'undefined' &&
-      typeof window.dispatchEvent === 'function' &&
-      typeof document !== 'undefined' &&
-      typeof document.createEvent === 'function') {
+  if (
+    typeof window !== 'undefined' &&
+    typeof window.dispatchEvent === 'function' &&
+    typeof document !== 'undefined' &&
+    typeof document.createEvent === 'function'
+  ) {
     var fakeNode = document.createElement('react');
diff --git a/src/renderers/shared/utils/Transaction.js b/src/renderers/shared/utils/Transaction.js
index afa8bc9b3..4fbe9d88e 100644
--- a/src/renderers/shared/utils/Transaction.js
+++ b/src/renderers/shared/utils/Transaction.js
@@ -109,2 +109,4 @@ var TransactionImpl = {
 
+  /* eslint-disable space-before-function-paren */
+
   /**
@@ -127,8 +129,12 @@ var TransactionImpl = {
   perform: function<
-    A, B, C, D, E, F, G,
-    T: (a: A, b: B, c: C, d: D, e: E, f: F) => G // eslint-disable-line space-before-function-paren
-  >(
-    method: T, scope: any,
-    a: A, b: B, c: C, d: D, e: E, f: F,
-  ): G {
+    A,
+    B,
+    C,
+    D,
+    E,
+    F,
+    G,
+    T: (a: A, b: B, c: C, d: D, e: E, f: F) => G,
+  >(method: T, scope: any, a: A, b: B, c: C, d: D, e: E, f: F): G {
+    /* eslint-enable space-before-function-paren */
     invariant(
@@ -136,3 +142,3 @@ var TransactionImpl = {
       'Transaction.perform(...): Cannot initialize a transaction when there ' +
-      'is already an outstanding transaction.'
+        'is already an outstanding transaction.',
     );
@@ -157,4 +163,3 @@ var TransactionImpl = {
             this.closeAll(0);
-          } catch (err) {
-          }
+          } catch (err) {}
         } else {
@@ -181,5 +186,5 @@ var TransactionImpl = {
         this.wrapperInitData[i] = OBSERVED_ERROR;
-        this.wrapperInitData[i] = wrapper.initialize ?
-          wrapper.initialize.call(this) :
-          null;
+        this.wrapperInitData[i] = wrapper.initialize
+          ? wrapper.initialize.call(this)
+          : null;
       } finally {
@@ -191,4 +196,3 @@ var TransactionImpl = {
             this.initializeAll(i + 1);
-          } catch (err) {
-          }
+          } catch (err) {}
         }
@@ -207,3 +211,3 @@ var TransactionImpl = {
       this.isInTransaction(),
-      'Transaction.closeAll(): Cannot close transaction when none are open.'
+      'Transaction.closeAll(): Cannot close transaction when none are open.',
     );
@@ -231,4 +235,3 @@ var TransactionImpl = {
             this.closeAll(i + 1);
-          } catch (e) {
-          }
+          } catch (e) {}
         }
diff --git a/src/renderers/shared/utils/__tests__/Transaction-test.js b/src/renderers/shared/utils/__tests__/Transaction-test.js
index e087ae0b4..768815626 100644
--- a/src/renderers/shared/utils/__tests__/Transaction-test.js
+++ b/src/renderers/shared/utils/__tests__/Transaction-test.js
@@ -13,6 +13,5 @@
 
-
 var Transaction;
 
-var INIT_ERRORED = 'initErrored';     // Just a dummy value to check for.
+var INIT_ERRORED = 'initErrored'; // Just a dummy value to check for.
 describe('Transaction', () => {
@@ -43,5 +42,5 @@ describe('Transaction', () => {
       this.reinitializeTransaction();
-      this.firstCloseParam = INIT_ERRORED;   // WON'T be set to something else
-      this.secondCloseParam = INIT_ERRORED;  // WILL be set to something else
-      this.lastCloseParam = INIT_ERRORED;    // WON'T be set to something else
+      this.firstCloseParam = INIT_ERRORED; // WON'T be set to something else
+      this.secondCloseParam = INIT_ERRORED; // WILL be set to something else
+      this.lastCloseParam = INIT_ERRORED; // WON'T be set to something else
     };
@@ -87,3 +86,2 @@ describe('Transaction', () => {
   it('should invoke closers and wrapped method when inits success', () => {
-
     var performSideEffect;
@@ -94,5 +92,5 @@ describe('Transaction', () => {
       this.reinitializeTransaction();
-      this.firstCloseParam = INIT_ERRORED;   // WILL be set to something else
-      this.secondCloseParam = INIT_ERRORED;  // WILL be set to something else
-      this.lastCloseParam = INIT_ERRORED;    // WILL be set to something else
+      this.firstCloseParam = INIT_ERRORED; // WILL be set to something else
+      this.secondCloseParam = INIT_ERRORED; // WILL be set to something else
+      this.lastCloseParam = INIT_ERRORED; // WILL be set to something else
     };
@@ -148,3 +146,2 @@ describe('Transaction', () => {
   it('should throw when wrapped operation throws', () => {
-
     var performSideEffect;
@@ -155,5 +152,5 @@ describe('Transaction', () => {
       this.reinitializeTransaction();
-      this.firstCloseParam = INIT_ERRORED;   // WILL be set to something else
-      this.secondCloseParam = INIT_ERRORED;  // WILL be set to something else
-      this.lastCloseParam = INIT_ERRORED;    // WILL be set to something else
+      this.firstCloseParam = INIT_ERRORED; // WILL be set to something else
+      this.secondCloseParam = INIT_ERRORED; // WILL be set to something else
+      this.lastCloseParam = INIT_ERRORED; // WILL be set to something else
     };
@@ -200,13 +197,15 @@ describe('Transaction', () => {
 
-    expect(function() {
-      var isTypeError = false;
-      try {
-        transaction.perform(function() {
-          throw new TypeError('Thrown in main wrapped operation');
-        });
-      } catch (err) {
-        isTypeError = (err instanceof TypeError);
-      }
-      return isTypeError;
-    }()).toBe(true);
+    expect(
+      (function() {
+        var isTypeError = false;
+        try {
+          transaction.perform(function() {
+            throw new TypeError('Thrown in main wrapped operation');
+          });
+        } catch (err) {
+          isTypeError = err instanceof TypeError;
+        }
+        return isTypeError;
+      })(),
+    ).toBe(true);
 
diff --git a/src/renderers/shared/utils/__tests__/accumulateInto-test.js b/src/renderers/shared/utils/__tests__/accumulateInto-test.js
index d400eb9a0..ab6ebbee5 100644
--- a/src/renderers/shared/utils/__tests__/accumulateInto-test.js
+++ b/src/renderers/shared/utils/__tests__/accumulateInto-test.js
@@ -16,3 +16,2 @@ var accumulateInto;
 describe('accumulateInto', () => {
-
   beforeEach(() => {
@@ -25,3 +24,3 @@ describe('accumulateInto', () => {
     }).toThrowError(
-      'accumulateInto(...): Accumulated items must not be null or undefined.'
+      'accumulateInto(...): Accumulated items must not be null or undefined.',
     );
diff --git a/src/renderers/shared/utils/__tests__/adler32-test.js b/src/renderers/shared/utils/__tests__/adler32-test.js
index 16be434f6..ab6c7a028 100644
--- a/src/renderers/shared/utils/__tests__/adler32-test.js
+++ b/src/renderers/shared/utils/__tests__/adler32-test.js
@@ -28,3 +28,3 @@ describe('adler32', () => {
 
-  it('doesn\'t barf on large inputs', () => {
+  it("doesn't barf on large inputs", () => {
     var str = '';
@@ -36,3 +36,3 @@ describe('adler32', () => {
 
-  it('doesn\'t barf on international inputs', () => {
+  it("doesn't barf on international inputs", () => {
     var str = 'Linux 是一個真棒操作系統!';
diff --git a/src/renderers/shared/utils/accumulate.js b/src/renderers/shared/utils/accumulate.js
index 4c84da6f9..ee6261261 100644
--- a/src/renderers/shared/utils/accumulate.js
+++ b/src/renderers/shared/utils/accumulate.js
@@ -23,6 +23,9 @@ var invariant = require('invariant');
  */
-function accumulate<T>(current: ?(T | Array<T>), next: T | Array<T>): T | Array<T> {
+function accumulate<T>(
+  current: ?(T | Array<T>),
+  next: T | Array<T>,
+): T | Array<T> {
   invariant(
     next != null,
-    'accumulate(...): Accumulated items must be not be null or undefined.'
+    'accumulate(...): Accumulated items must be not be null or undefined.',
   );
diff --git a/src/renderers/shared/utils/accumulateInto.js b/src/renderers/shared/utils/accumulateInto.js
index 3e212ce13..803dbd466 100644
--- a/src/renderers/shared/utils/accumulateInto.js
+++ b/src/renderers/shared/utils/accumulateInto.js
@@ -29,6 +29,9 @@ var invariant = require('invariant');
 
-function accumulateInto<T>(current: ?(T | Array<T>), next: T | Array<T>): T | Array<T> {
+function accumulateInto<T>(
+  current: ?(T | Array<T>),
+  next: T | Array<T>,
+): T | Array<T> {
   invariant(
     next != null,
-    'accumulateInto(...): Accumulated items must not be null or undefined.'
+    'accumulateInto(...): Accumulated items must not be null or undefined.',
   );
diff --git a/src/renderers/shared/utils/adler32.js b/src/renderers/shared/utils/adler32.js
index 45d7c005b..4013f2b26 100644
--- a/src/renderers/shared/utils/adler32.js
+++ b/src/renderers/shared/utils/adler32.js
@@ -30,3 +30,3 @@ function adler32(data: string): number {
     for (; i < n; i += 4) {
-      b += (
+      b +=
         (a += data.charCodeAt(i)) +
@@ -34,4 +34,3 @@ function adler32(data: string): number {
         (a += data.charCodeAt(i + 2)) +
-        (a += data.charCodeAt(i + 3))
-      );
+        (a += data.charCodeAt(i + 3));
     }
@@ -41,3 +40,3 @@ function adler32(data: string): number {
   for (; i < l; i++) {
-    b += (a += data.charCodeAt(i));
+    b += a += data.charCodeAt(i);
   }
diff --git a/src/renderers/shared/utils/forEachAccumulated.js b/src/renderers/shared/utils/forEachAccumulated.js
index bdab3ca86..4ee784d5e 100644
--- a/src/renderers/shared/utils/forEachAccumulated.js
+++ b/src/renderers/shared/utils/forEachAccumulated.js
@@ -23,3 +23,3 @@ function forEachAccumulated<T>(
   arr: ?(T | Array<T>),
-  cb: ((elem: T) => void),
+  cb: (elem: T) => void,
   scope: ?any,
diff --git a/src/renderers/shared/utils/isTextInputElement.js b/src/renderers/shared/utils/isTextInputElement.js
index e464daae3..633c19ce3 100644
--- a/src/renderers/shared/utils/isTextInputElement.js
+++ b/src/renderers/shared/utils/isTextInputElement.js
@@ -18,17 +18,17 @@
 var supportedInputTypes: {[key: string]: true | void} = {
-  'color': true,
-  'date': true,
-  'datetime': true,
+  color: true,
+  date: true,
+  datetime: true,
   'datetime-local': true,
-  'email': true,
-  'month': true,
-  'number': true,
-  'password': true,
-  'range': true,
-  'search': true,
-  'tel': true,
-  'text': true,
-  'time': true,
-  'url': true,
-  'week': true,
+  email: true,
+  month: true,
+  number: true,
+  password: true,
+  range: true,
+  search: true,
+  tel: true,
+  text: true,
+  time: true,
+  url: true,
+  week: true,
 };
diff --git a/src/renderers/testing/ReactShallowRenderer.js b/src/renderers/testing/ReactShallowRenderer.js
index b6b565f82..17fe612f7 100644
--- a/src/renderers/testing/ReactShallowRenderer.js
+++ b/src/renderers/testing/ReactShallowRenderer.js
@@ -25,8 +25,4 @@ var invariant = require('invariant');
 function injectDefaults() {
-  ReactUpdates.injection.injectReconcileTransaction(
-    ReactReconcileTransaction
-  );
-  ReactUpdates.injection.injectBatchingStrategy(
-    ReactDefaultBatchingStrategy
-  );
+  ReactUpdates.injection.injectReconcileTransaction(ReactReconcileTransaction);
+  ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
 }
@@ -64,16 +60,11 @@ var ShallowComponentWrapper = function(element) {
 };
-Object.assign(
-  ShallowComponentWrapper.prototype,
-  ReactCompositeComponent, {
-    _constructComponent:
-      ReactCompositeComponent._constructComponentWithoutOwner,
-    _instantiateReactComponent: function(element) {
-      return new NoopInternalComponent(element);
-    },
-    _replaceNodeWithMarkup: function() {},
-    _renderValidatedComponent:
-      ReactCompositeComponent
-        ._renderValidatedComponentWithoutOwnerOrContext,
-  }
-);
+Object.assign(ShallowComponentWrapper.prototype, ReactCompositeComponent, {
+  _constructComponent: ReactCompositeComponent._constructComponentWithoutOwner,
+  _instantiateReactComponent: function(element) {
+    return new NoopInternalComponent(element);
+  },
+  _replaceNodeWithMarkup: function() {},
+  _renderValidatedComponent:
+    ReactCompositeComponent._renderValidatedComponentWithoutOwnerOrContext,
+});
 
@@ -99,6 +90,6 @@ class ReactShallowRenderer {
       'ReactShallowRenderer render(): Invalid component element.%s',
-      typeof element === 'function' ?
-        ' Instead of passing a component class, make sure to instantiate ' +
-        'it by passing it to React.createElement.' :
-        ''
+      typeof element === 'function'
+        ? ' Instead of passing a component class, make sure to instantiate ' +
+            'it by passing it to React.createElement.'
+        : '',
     );
@@ -107,5 +98,5 @@ class ReactShallowRenderer {
       'ReactShallowRenderer render(): Shallow rendering works only with custom ' +
-      'components, not primitives (%s). Instead of calling `.render(el)` and ' +
-      'inspecting the rendered output, look at `el.props` directly instead.',
-      element.type
+        'components, not primitives (%s). Instead of calling `.render(el)` and ' +
+        'inspecting the rendered output, look at `el.props` directly instead.',
+      element.type,
     );
@@ -121,5 +112,6 @@ class ReactShallowRenderer {
     return (
-      (this._instance && this._instance._renderedComponent &&
-      this._instance._renderedComponent._renderedOutput)
-      || null
+      (this._instance &&
+        this._instance._renderedComponent &&
+        this._instance._renderedComponent._renderedOutput) ||
+      null
     );
@@ -131,2 +123,7 @@ class ReactShallowRenderer {
   }
+  unstable_batchedUpdates(callback, bookkeeping) {
+    // This is used by Enzyme for fake-simulating events in shallow mode.
+    injectDefaults();
+    return ReactUpdates.batchedUpdates(callback, bookkeeping);
+  }
   _render(element, transaction, context) {
@@ -137,3 +134,3 @@ class ReactShallowRenderer {
         transaction,
-        context
+        context,
       );
@@ -141,3 +138,10 @@ class ReactShallowRenderer {
       var instance = new ShallowComponentWrapper(element);
-      ReactReconciler.mountComponent(instance, transaction, null, null, context, 0);
+      ReactReconciler.mountComponent(
+        instance,
+        transaction,
+        null,
+        null,
+        context,
+        0,
+      );
       this._instance = instance;
diff --git a/src/renderers/testing/ReactTestMount.js b/src/renderers/testing/ReactTestMount.js
index 132c80135..ce4f2162f 100644
--- a/src/renderers/testing/ReactTestMount.js
+++ b/src/renderers/testing/ReactTestMount.js
@@ -56,7 +56,7 @@ TopLevelWrapper.isReactTopLevelWrapper = true;
 function mountComponentIntoNode(
-    componentInstance,
-    transaction,
-    hostParent,
-    hostContainerInfo
-  ) {
+  componentInstance,
+  transaction,
+  hostParent,
+  hostContainerInfo,
+) {
   var image = ReactReconciler.mountComponent(
@@ -66,3 +66,3 @@ function mountComponentIntoNode(
     hostContainerInfo,
-    emptyObject
+    emptyObject,
   );
@@ -79,6 +79,3 @@ function mountComponentIntoNode(
  */
-function batchedMountComponentIntoNode(
-    componentInstance,
-    options,
-  ) {
+function batchedMountComponentIntoNode(componentInstance, options) {
   var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(true);
@@ -90,3 +87,3 @@ function batchedMountComponentIntoNode(
     null,
-    options
+    options,
   );
@@ -105,8 +102,7 @@ ReactTestInstance.prototype.update = function(nextElement) {
     this._component,
-    "ReactTestRenderer: .update() can't be called after unmount."
-  );
-  var nextWrappedElement = React.createElement(
-    TopLevelWrapper,
-    { child: nextElement }
+    "ReactTestRenderer: .update() can't be called after unmount.",
   );
+  var nextWrappedElement = React.createElement(TopLevelWrapper, {
+    child: nextElement,
+  });
   var component = this._component;
@@ -119,3 +115,3 @@ ReactTestInstance.prototype.update = function(nextElement) {
         transaction,
-        emptyObject
+        emptyObject,
       );
@@ -130,6 +126,3 @@ ReactTestInstance.prototype.unmount = function(nextElement) {
     transaction.perform(function() {
-      ReactReconciler.unmountComponent(
-        component,
-        false
-      );
+      ReactReconciler.unmountComponent(component, false);
     });
@@ -152,3 +145,2 @@ ReactTestInstance.prototype.toJSON = function() {
 var ReactTestMount = {
-
   render: function(
@@ -157,6 +149,5 @@ var ReactTestMount = {
   ): ReactTestInstance {
-    var nextWrappedElement = React.createElement(
-      TopLevelWrapper,
-      {child: nextElement},
-    );
+    var nextWrappedElement = React.createElement(TopLevelWrapper, {
+      child: nextElement,
+    });
 
@@ -174,3 +165,2 @@ var ReactTestMount = {
   },
-
 };
diff --git a/src/renderers/testing/ReactTestReconcileTransaction.js b/src/renderers/testing/ReactTestReconcileTransaction.js
index 50585e08b..379be398e 100644
--- a/src/renderers/testing/ReactTestReconcileTransaction.js
+++ b/src/renderers/testing/ReactTestReconcileTransaction.js
@@ -18,3 +18,3 @@ var ReactUpdateQueue = require('ReactUpdateQueue');
 
-import type { TestRendererOptions } from 'ReactTestMount';
+import type {TestRendererOptions} from 'ReactTestMount';
 
@@ -128,3 +128,3 @@ Object.assign(
   ReactTestReconcileTransaction,
-  Mixin
+  Mixin,
 );
diff --git a/src/renderers/testing/ReactTestRenderer.js b/src/renderers/testing/ReactTestRenderer.js
index dc808f3cd..ea63638ba 100644
--- a/src/renderers/testing/ReactTestRenderer.js
+++ b/src/renderers/testing/ReactTestRenderer.js
@@ -26,4 +26,4 @@ var invariant = require('invariant');
 
-import type { ReactElement } from 'ReactElementType';
-import type { ReactInstance } from 'ReactInstanceType';
+import type {ReactElement} from 'ReactElementType';
+import type {ReactInstance} from 'ReactInstanceType';
 
@@ -31,6 +31,6 @@ type ReactTestRendererJSON = {
   type: string,
-  props: { [propName: string]: string },
+  props: {[propName: string]: string},
   children: null | Array<string | ReactTestRendererJSON>,
-  $$typeof?: any
-}
+  $$typeof?: any,
+};
 
@@ -92,3 +92,3 @@ class ReactTestComponent {
       'hostContainerInfo should be populated before ' +
-      'getPublicInstance is called.'
+        'getPublicInstance is called.',
     );
@@ -133,3 +133,3 @@ Object.assign(ReactTestComponent.prototype, ReactMultiChild.Mixin);
 ReactUpdates.injection.injectReconcileTransaction(
-  ReactTestReconcileTransaction
+  ReactTestReconcileTransaction,
 );
diff --git a/src/renderers/testing/ReactTestTextComponent.js b/src/renderers/testing/ReactTestTextComponent.js
index 7c6c4de90..deb2c674e 100644
--- a/src/renderers/testing/ReactTestTextComponent.js
+++ b/src/renderers/testing/ReactTestTextComponent.js
@@ -14,3 +14,3 @@
 
-import type { ReactText } from 'ReactTypes';
+import type {ReactText} from 'ReactTypes';
 
diff --git a/src/renderers/testing/__tests__/ReactTestRenderer-test.js b/src/renderers/testing/__tests__/ReactTestRenderer-test.js
index 5eac2c1c1..bc793202a 100644
--- a/src/renderers/testing/__tests__/ReactTestRenderer-test.js
+++ b/src/renderers/testing/__tests__/ReactTestRenderer-test.js
@@ -17,3 +17,2 @@ var ReactTestRenderer = require('ReactTestRenderer');
 describe('ReactTestRenderer', () => {
-
   it('renders a simple component', () => {
@@ -25,3 +24,3 @@ describe('ReactTestRenderer', () => {
       type: 'a',
-      props: { role: 'link' },
+      props: {role: 'link'},
       children: null,
@@ -89,7 +88,4 @@ describe('ReactTestRenderer', () => {
       type: 'div',
-      props: { className: 'purple' },
-      children: [
-        7,
-        { type: 'moo', props: {}, children: null },
-      ],
+      props: {className: 'purple'},
+      children: [7, {type: 'moo', props: {}, children: null}],
     });
@@ -150,3 +146,3 @@ describe('ReactTestRenderer', () => {
         <span key="c">C</span>
-      </div>
+      </div>,
     );
@@ -167,3 +163,3 @@ describe('ReactTestRenderer', () => {
         <span key="b">B</span>
-      </div>
+      </div>,
     );
@@ -211,3 +207,3 @@ describe('ReactTestRenderer', () => {
     var log = [];
-    ReactTestRenderer.create(<div ref={(r) => log.push(r)} />);
+    ReactTestRenderer.create(<div ref={r => log.push(r)} />);
     expect(log).toEqual([null]);
@@ -235,4 +231,4 @@ describe('ReactTestRenderer', () => {
       'Stateless function components cannot be given refs ' +
-      '(See ref "foo" in Bar created by Foo). ' +
-      'Attempts to access this ref will fail.'
+        '(See ref "foo" in Bar created by Foo). ' +
+        'Attempts to access this ref will fail.',
     );
@@ -241,6 +237,6 @@ describe('ReactTestRenderer', () => {
   it('allows an optional createNodeMock function', () => {
-    var mockDivInstance = { appendChild: () => {} };
-    var mockInputInstance = { focus: () => {} };
-    var mockListItemInstance = { click: () => {} };
-    var mockAnchorInstance = { hover: () => {} };
+    var mockDivInstance = {appendChild: () => {}};
+    var mockInputInstance = {focus: () => {}};
+    var mockListItemInstance = {click: () => {}};
+    var mockAnchorInstance = {hover: () => {}};
     var log = [];
@@ -251,5 +247,3 @@ describe('ReactTestRenderer', () => {
       render() {
-        return (
-          <a ref="bar">Hello, world</a>
-        );
+        return <a ref="bar">Hello, world</a>;
       }
@@ -270,10 +264,6 @@ describe('ReactTestRenderer', () => {
     }
-    ReactTestRenderer.create(
-      <div ref={(r) => log.push(r)} />,
-      {createNodeMock}
-    );
-    ReactTestRenderer.create(
-      <input ref={(r) => log.push(r)} />,
-      {createNodeMock},
-    );
+    ReactTestRenderer.create(<div ref={r => log.push(r)} />, {createNodeMock});
+    ReactTestRenderer.create(<input ref={r => log.push(r)} />, {
+      createNodeMock,
+    });
     ReactTestRenderer.create(
@@ -282,7 +272,7 @@ describe('ReactTestRenderer', () => {
           <ul>
-            <li ref={(r) => log.push(r)} />
+            <li ref={r => log.push(r)} />
           </ul>
           <ul>
-            <li ref={(r) => log.push(r)} />
-            <li ref={(r) => log.push(r)} />
+            <li ref={r => log.push(r)} />
+            <li ref={r => log.push(r)} />
           </ul>
@@ -292,13 +282,5 @@ describe('ReactTestRenderer', () => {
     );
-    ReactTestRenderer.create(
-      <Foo />,
-      {createNodeMock},
-    );
-    ReactTestRenderer.create(
-      <div ref={(r) => log.push(r)} />,
-    );
-    ReactTestRenderer.create(
-      <div ref={(r) => log.push(r)} />,
-      {}
-    );
+    ReactTestRenderer.create(<Foo />, {createNodeMock});
+    ReactTestRenderer.create(<div ref={r => log.push(r)} />);
+    ReactTestRenderer.create(<div ref={r => log.push(r)} />, {});
     expect(log).toEqual([
@@ -321,6 +303,5 @@ describe('ReactTestRenderer', () => {
     }
-    const inst = ReactTestRenderer.create(
-      <Foo />,
-      {createNodeMock: () => 'foo'}
-    );
+    const inst = ReactTestRenderer.create(<Foo />, {
+      createNodeMock: () => 'foo',
+    });
     expect(() => inst.unmount()).not.toThrow();
@@ -338,6 +319,5 @@ describe('ReactTestRenderer', () => {
     }
-    const inst = ReactTestRenderer.create(
-      <div><Foo /></div>,
-      {createNodeMock: () => 'foo'}
-    );
+    const inst = ReactTestRenderer.create(<div><Foo /></div>, {
+      createNodeMock: () => 'foo',
+    });
     expect(() => inst.unmount()).not.toThrow();
@@ -354,11 +334,8 @@ describe('ReactTestRenderer', () => {
       render() {
-        return this.props.useDiv
-          ? <div ref="foo" />
-          : <span ref="foo" />;
+        return this.props.useDiv ? <div ref="foo" /> : <span ref="foo" />;
       }
     }
-    const inst = ReactTestRenderer.create(
-      <Foo useDiv={true} />,
-      {createNodeMock}
-    );
+    const inst = ReactTestRenderer.create(<Foo useDiv={true} />, {
+      createNodeMock,
+    });
     inst.update(<Foo useDiv={false} />);
@@ -425,3 +402,2 @@ describe('ReactTestRenderer', () => {
   });
-
 });
diff --git a/src/shared/types/ReactPropTypeLocationNames.js b/src/shared/types/ReactPropTypeLocationNames.js
index 1b36b04cc..f416a1344 100644
--- a/src/shared/types/ReactPropTypeLocationNames.js
+++ b/src/shared/types/ReactPropTypeLocationNames.js
@@ -14,3 +14,3 @@
 
-import type { ReactPropTypeLocations } from 'ReactPropTypeLocations';
+import type {ReactPropTypeLocations} from 'ReactPropTypeLocations';
 
diff --git a/src/shared/types/ReactPropTypeLocations.js b/src/shared/types/ReactPropTypeLocations.js
index a2cb905e1..9b0752a75 100644
--- a/src/shared/types/ReactPropTypeLocations.js
+++ b/src/shared/types/ReactPropTypeLocations.js
@@ -14,5 +14,2 @@
 
-export type ReactPropTypeLocations =
-  'prop' |
-  'context' |
-  'childContext';
+export type ReactPropTypeLocations = 'prop' | 'context' | 'childContext';
diff --git a/src/shared/types/checkReactTypeSpec.js b/src/shared/types/checkReactTypeSpec.js
index 06c2904a7..44f45786b 100644
--- a/src/shared/types/checkReactTypeSpec.js
+++ b/src/shared/types/checkReactTypeSpec.js
@@ -19,3 +19,3 @@ var warning = require('warning');
 
-import type { ReactPropTypeLocations } from 'ReactPropTypeLocations';
+import type {ReactPropTypeLocations} from 'ReactPropTypeLocations';
 
@@ -70,8 +70,15 @@ function checkReactTypeSpec(
           '%s: %s type `%s` is invalid; it must be a function, usually from ' +
-          'React.PropTypes.',
+            'React.PropTypes.',
           componentName || 'React class',
           ReactPropTypeLocationNames[location],
-          typeSpecName
+          typeSpecName,
+        );
+        error = typeSpecs[typeSpecName](
+          values,
+          typeSpecName,
+          componentName,
+          location,
+          null,
+          ReactPropTypesSecret,
         );
-        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
       } catch (ex) {
@@ -82,6 +89,6 @@ function checkReactTypeSpec(
         '%s: type specification of %s `%s` is invalid; the type checker ' +
-        'function must return `null` or an `Error` but returned a %s. ' +
-        'You may have forgotten to pass an argument to the type checker ' +
-        'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
-        'shape all require an argument).',
+          'function must return `null` or an `Error` but returned a %s. ' +
+          'You may have forgotten to pass an argument to the type checker ' +
+          'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
+          'shape all require an argument).',
         componentName || 'React class',
@@ -89,3 +96,3 @@ function checkReactTypeSpec(
         typeSpecName,
-        typeof error
+        typeof error,
       );
@@ -103,5 +110,9 @@ function checkReactTypeSpec(
           if (debugID !== null) {
-            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
+            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(
+              debugID,
+            );
           } else if (element !== null) {
-            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
+            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(
+              element,
+            );
           }
@@ -114,3 +125,3 @@ function checkReactTypeSpec(
           error.message,
-          componentStackInfo
+          componentStackInfo,
         );
diff --git a/src/shared/utils/KeyEscapeUtils.js b/src/shared/utils/KeyEscapeUtils.js
index 223b2c6b6..b7ed7a00b 100644
--- a/src/shared/utils/KeyEscapeUtils.js
+++ b/src/shared/utils/KeyEscapeUtils.js
@@ -26,8 +26,5 @@ function escape(key: string): string {
   };
-  var escapedString = ('' + key).replace(
-    escapeRegex,
-    function(match) {
-      return escaperLookup[match];
-    }
-  );
+  var escapedString = ('' + key).replace(escapeRegex, function(match) {
+    return escaperLookup[match];
+  });
 
@@ -48,11 +45,9 @@ function unescape(key: string): string {
   };
-  var keySubstring = (key[0] === '.' && key[1] === '$')
-    ? key.substring(2) : key.substring(1);
+  var keySubstring = key[0] === '.' && key[1] === '$'
+    ? key.substring(2)
+    : key.substring(1);
 
-  return ('' + keySubstring).replace(
-    unescapeRegex,
-    function(match) {
-      return unescaperLookup[match];
-    }
-  );
+  return ('' + keySubstring).replace(unescapeRegex, function(match) {
+    return unescaperLookup[match];
+  });
 }
diff --git a/src/shared/utils/PooledClass.js b/src/shared/utils/PooledClass.js
index 406a3f1ef..10674b8d9 100644
--- a/src/shared/utils/PooledClass.js
+++ b/src/shared/utils/PooledClass.js
@@ -71,3 +71,3 @@ var standardReleaser = function(instance) {
     instance instanceof Klass,
-    'Trying to release an instance into a pool of a different type.'
+    'Trying to release an instance into a pool of a different type.',
   );
@@ -97,3 +97,3 @@ var addPoolingTo = function<T>(
 ): Class<T> & {
-  getPooled(/* arguments of the constructor */): T,
+  getPooled(): /* arguments of the constructor */ T,
   release(): void,
diff --git a/src/shared/utils/__tests__/PooledClass-test.js b/src/shared/utils/__tests__/PooledClass-test.js
index 43ead312d..3c206b74a 100644
--- a/src/shared/utils/__tests__/PooledClass-test.js
+++ b/src/shared/utils/__tests__/PooledClass-test.js
@@ -33,10 +33,8 @@ describe('Pooled class', () => {
 
-  it('should return the instance back into the pool when it gets released',
-    () => {
-      var instance = PoolableClass.getPooled();
-      PoolableClass.release(instance);
-      expect(PoolableClass.instancePool.length).toBe(1);
-      expect(PoolableClass.instancePool[0]).toBe(instance);
-    }
-  );
+  it('should return the instance back into the pool when it gets released', () => {
+    var instance = PoolableClass.getPooled();
+    PoolableClass.release(instance);
+    expect(PoolableClass.instancePool.length).toBe(1);
+    expect(PoolableClass.instancePool[0]).toBe(instance);
+  });
 
@@ -69,3 +67,3 @@ describe('Pooled class', () => {
       PoolableClassWithMultiArguments,
-      PooledClass.twoArgumentPooler
+      PooledClass.twoArgumentPooler,
     );
@@ -81,5 +79,3 @@ describe('Pooled class', () => {
     PoolableClassWithOneArgument.prototype.destructor = function() {};
-    PooledClass.addPoolingTo(
-      PoolableClassWithOneArgument
-    );
+    PooledClass.addPoolingTo(PoolableClassWithOneArgument);
     PoolableClassWithOneArgument.getPooled('new');
@@ -94,5 +90,3 @@ describe('Pooled class', () => {
     PoolableClassWithOneArgument.prototype.destructor = function() {};
-    PooledClass.addPoolingTo(
-      PoolableClassWithOneArgument
-    );
+    PooledClass.addPoolingTo(PoolableClassWithOneArgument);
     var instance = PoolableClassWithOneArgument.getPooled('new');
@@ -103,16 +97,14 @@ describe('Pooled class', () => {
 
-  it('should throw when the class releases an instance of a different type',
-    () => {
-      var RandomClass = function() {};
-      RandomClass.prototype.destructor = function() {};
-      PooledClass.addPoolingTo(RandomClass);
-      var randomInstance = RandomClass.getPooled();
-      PoolableClass.getPooled();
-      expect(function() {
-        PoolableClass.release(randomInstance);
-      }).toThrowError(
-        'Trying to release an instance into a pool of a different type.'
-      );
-    }
-  );
+  it('should throw when the class releases an instance of a different type', () => {
+    var RandomClass = function() {};
+    RandomClass.prototype.destructor = function() {};
+    PooledClass.addPoolingTo(RandomClass);
+    var randomInstance = RandomClass.getPooled();
+    PoolableClass.getPooled();
+    expect(function() {
+      PoolableClass.release(randomInstance);
+    }).toThrowError(
+      'Trying to release an instance into a pool of a different type.',
+    );
+  });
 
diff --git a/src/shared/utils/__tests__/reactProdInvariant-test.js b/src/shared/utils/__tests__/reactProdInvariant-test.js
index 37f8e6b6d..d4348818d 100644
--- a/src/shared/utils/__tests__/reactProdInvariant-test.js
+++ b/src/shared/utils/__tests__/reactProdInvariant-test.js
@@ -25,5 +25,5 @@ describe('reactProdInvariant', () => {
       'Minified React error #124; visit ' +
-      'http://facebook.github.io/react/docs/error-decoder.html?invariant=124&args[]=foo&args[]=bar' +
-      ' for the full message or use the non-minified dev environment' +
-      ' for full errors and additional helpful warnings.'
+        'http://facebook.github.io/react/docs/error-decoder.html?invariant=124&args[]=foo&args[]=bar' +
+        ' for the full message or use the non-minified dev environment' +
+        ' for full errors and additional helpful warnings.',
     );
@@ -34,5 +34,5 @@ describe('reactProdInvariant', () => {
       'Minified React error #20; visit ' +
-      'http://facebook.github.io/react/docs/error-decoder.html?invariant=20' +
-      ' for the full message or use the non-minified dev environment' +
-      ' for full errors and additional helpful warnings.'
+        'http://facebook.github.io/react/docs/error-decoder.html?invariant=20' +
+        ' for the full message or use the non-minified dev environment' +
+        ' for full errors and additional helpful warnings.',
     );
@@ -43,5 +43,5 @@ describe('reactProdInvariant', () => {
       'Minified React error #77; visit ' +
-      'http://facebook.github.io/react/docs/error-decoder.html?invariant=77&args[]=%3Cdiv%3E&args[]=%26%3Fbar' +
-      ' for the full message or use the non-minified dev environment' +
-      ' for full errors and additional helpful warnings.'
+        'http://facebook.github.io/react/docs/error-decoder.html?invariant=77&args[]=%3Cdiv%3E&args[]=%26%3Fbar' +
+        ' for the full message or use the non-minified dev environment' +
+        ' for full errors and additional helpful warnings.',
     );
diff --git a/src/shared/utils/__tests__/traverseAllChildren-test.js b/src/shared/utils/__tests__/traverseAllChildren-test.js
index 0514bf0d5..b339f6419 100644
--- a/src/shared/utils/__tests__/traverseAllChildren-test.js
+++ b/src/shared/utils/__tests__/traverseAllChildren-test.js
@@ -33,4 +33,5 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn =
-      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
+    var traverseFn = jasmine
+      .createSpy()
+      .and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -46,3 +47,3 @@ describe('traverseAllChildren', () => {
       simpleKid,
-      '.$simple'
+      '.$simple',
     );
@@ -53,4 +54,5 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn =
-      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
+    var traverseFn = jasmine
+      .createSpy()
+      .and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -61,7 +63,3 @@ describe('traverseAllChildren', () => {
     traverseAllChildren(instance.props.children, traverseFn, traverseContext);
-    expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext,
-      simpleKid,
-      '.0'
-    );
+    expect(traverseFn).toHaveBeenCalledWith(traverseContext, simpleKid, '.0');
     expect(traverseContext.length).toEqual(1);
@@ -72,4 +70,5 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn =
-      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
+    var traverseFn = jasmine
+      .createSpy()
+      .and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -80,7 +79,3 @@ describe('traverseAllChildren', () => {
     traverseAllChildren(instance.props.children, traverseFn, traverseContext);
-    expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext,
-      simpleKid,
-      '.0'
-    );
+    expect(traverseFn).toHaveBeenCalledWith(traverseContext, simpleKid, '.0');
     expect(traverseContext.length).toEqual(1);
@@ -88,3 +83,3 @@ describe('traverseAllChildren', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Warning: Each child in an array or iterator should have a unique "key" prop.'
+      'Warning: Each child in an array or iterator should have a unique "key" prop.',
     );
@@ -100,4 +95,5 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn =
-      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
+    var traverseFn = jasmine
+      .createSpy()
+      .and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -116,19 +112,7 @@ describe('traverseAllChildren', () => {
     traverseAllChildren(instance.props.children, traverseFn, traverseContext);
-    expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext,
-      zero,
-      '.$keyZero'
-    );
+    expect(traverseFn).toHaveBeenCalledWith(traverseContext, zero, '.$keyZero');
     expect(traverseFn).toHaveBeenCalledWith(traverseContext, one, '.1');
-    expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext,
-      two,
-      '.$keyTwo'
-    );
+    expect(traverseFn).toHaveBeenCalledWith(traverseContext, two, '.$keyTwo');
     expect(traverseFn).toHaveBeenCalledWith(traverseContext, three, '.3');
-    expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext,
-      four,
-      '.$keyFour'
-    );
+    expect(traverseFn).toHaveBeenCalledWith(traverseContext, four, '.$keyFour');
   });
@@ -141,4 +125,5 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn =
-      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
+    var traverseFn = jasmine
+      .createSpy()
+      .and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -165,29 +150,19 @@ describe('traverseAllChildren', () => {
 
+    expect(traverseFn).toHaveBeenCalledWith(traverseContext, div, '.$divNode');
     expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext, div, '.$divNode'
-    );
-    expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext, <span key="span/.$spanNode" />, '.1:0:$span/.$spanNode'
-    );
-    expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext, <a key="a/.$aNode" />, '.2:$a/.$aNode'
-    );
-    expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext, 'string', '.3'
-    );
-    expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext, 1234, '.4'
-    );
-    expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext, null, '.5'
-    );
-    expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext, null, '.6'
-    );
-    expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext, null, '.7'
+      traverseContext,
+      <span key="span/.$spanNode" />,
+      '.1:0:$span/.$spanNode',
     );
     expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext, null, '.8'
-    );
+      traverseContext,
+      <a key="a/.$aNode" />,
+      '.2:$a/.$aNode',
+    );
+    expect(traverseFn).toHaveBeenCalledWith(traverseContext, 'string', '.3');
+    expect(traverseFn).toHaveBeenCalledWith(traverseContext, 1234, '.4');
+    expect(traverseFn).toHaveBeenCalledWith(traverseContext, null, '.5');
+    expect(traverseFn).toHaveBeenCalledWith(traverseContext, null, '.6');
+    expect(traverseFn).toHaveBeenCalledWith(traverseContext, null, '.7');
+    expect(traverseFn).toHaveBeenCalledWith(traverseContext, null, '.8');
   });
@@ -207,6 +182,6 @@ describe('traverseAllChildren', () => {
 
-
     var traverseContext = [];
-    var traverseFn =
-      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
+    var traverseFn = jasmine
+      .createSpy()
+      .and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -215,9 +190,11 @@ describe('traverseAllChildren', () => {
     var instance = (
-      <div>{[
-        frag({
-          firstHalfKey: [zero, one, two],
-          secondHalfKey: [three, four],
-          keyFive: five,
-        }),
-      ]}</div>
+      <div>
+        {[
+          frag({
+            firstHalfKey: [zero, one, two],
+            secondHalfKey: [three, four],
+            keyFive: five,
+          }),
+        ]}
+      </div>
     );
@@ -230,3 +207,3 @@ describe('traverseAllChildren', () => {
       <div key="firstHalfKey/.$keyZero" />,
-      '.0:$firstHalfKey/.$keyZero'
+      '.0:$firstHalfKey/.$keyZero',
     );
@@ -236,3 +213,3 @@ describe('traverseAllChildren', () => {
       <div key="firstHalfKey/.$keyTwo" />,
-      '.0:$firstHalfKey/.$keyTwo'
+      '.0:$firstHalfKey/.$keyTwo',
     );
@@ -242,3 +219,3 @@ describe('traverseAllChildren', () => {
       <div key="secondHalfKey/.$keyFour" />,
-      '.0:$secondHalfKey/.$keyFour'
+      '.0:$secondHalfKey/.$keyFour',
     );
@@ -248,3 +225,3 @@ describe('traverseAllChildren', () => {
       <div key="keyFive/.$keyFiveInner" />,
-      '.0:$keyFive/.$keyFiveInner'
+      '.0:$keyFive/.$keyFiveInner',
     );
@@ -256,4 +233,5 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn =
-      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
+    var traverseFn = jasmine
+      .createSpy()
+      .and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -273,3 +251,3 @@ describe('traverseAllChildren', () => {
       zeroForceKey,
-      '.$keyZero'
+      '.$keyZero',
     );
@@ -278,3 +256,3 @@ describe('traverseAllChildren', () => {
       oneForceKey,
-      '.$keyOne'
+      '.$keyOne',
     );
@@ -300,4 +278,5 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn =
-      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
+    var traverseFn = jasmine
+      .createSpy()
+      .and.callFake(function(context, kid, key, index) {
         context.push(kid);
@@ -317,3 +296,3 @@ describe('traverseAllChildren', () => {
       traverseContext[0],
-      '.0'
+      '.0',
     );
@@ -322,3 +301,3 @@ describe('traverseAllChildren', () => {
       traverseContext[1],
-      '.1'
+      '.1',
     );
@@ -327,3 +306,3 @@ describe('traverseAllChildren', () => {
       traverseContext[2],
-      '.2'
+      '.2',
     );
@@ -332,3 +311,3 @@ describe('traverseAllChildren', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Warning: Each child in an array or iterator should have a unique "key" prop.'
+      'Warning: Each child in an array or iterator should have a unique "key" prop.',
     );
@@ -353,4 +332,5 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn =
-      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
+    var traverseFn = jasmine
+      .createSpy()
+      .and.callFake(function(context, kid, key, index) {
         context.push(kid);
@@ -370,3 +350,3 @@ describe('traverseAllChildren', () => {
       traverseContext[0],
-      '.$#1'
+      '.$#1',
     );
@@ -375,3 +355,3 @@ describe('traverseAllChildren', () => {
       traverseContext[1],
-      '.$#2'
+      '.$#2',
     );
@@ -380,3 +360,3 @@ describe('traverseAllChildren', () => {
       traverseContext[2],
-      '.$#3'
+      '.$#3',
     );
@@ -404,4 +384,5 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn =
-      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
+    var traverseFn = jasmine
+      .createSpy()
+      .and.callFake(function(context, kid, key, index) {
         context.push(kid);
@@ -421,3 +402,3 @@ describe('traverseAllChildren', () => {
       traverseContext[0],
-      '.$#1:0'
+      '.$#1:0',
     );
@@ -426,3 +407,3 @@ describe('traverseAllChildren', () => {
       traverseContext[1],
-      '.$#2:0'
+      '.$#2:0',
     );
@@ -431,3 +412,3 @@ describe('traverseAllChildren', () => {
       traverseContext[2],
-      '.$#3:0'
+      '.$#3:0',
     );
@@ -437,4 +418,4 @@ describe('traverseAllChildren', () => {
       'Warning: Using Maps as children is not yet fully supported. It is an ' +
-      'experimental feature that might be removed. Convert it to a sequence ' +
-      '/ iterable of keyed ReactElements instead.'
+        'experimental feature that might be removed. Convert it to a sequence ' +
+        '/ iterable of keyed ReactElements instead.',
     );
@@ -463,17 +444,5 @@ describe('traverseAllChildren', () => {
 
-      expect(traverseFn).toHaveBeenCalledWith(
-        null,
-        5,
-        '.0'
-      );
-      expect(traverseFn).toHaveBeenCalledWith(
-        null,
-        12,
-        '.1'
-      );
-      expect(traverseFn).toHaveBeenCalledWith(
-        null,
-        13,
-        '.2'
-      );
+      expect(traverseFn).toHaveBeenCalledWith(null, 5, '.0');
+      expect(traverseFn).toHaveBeenCalledWith(null, 12, '.1');
+      expect(traverseFn).toHaveBeenCalledWith(null, 13, '.2');
     } finally {
@@ -501,12 +470,4 @@ describe('traverseAllChildren', () => {
 
-    expect(traverseFn).toHaveBeenCalledWith(
-      null,
-      'a',
-      '.0'
-    );
-    expect(traverseFn).toHaveBeenCalledWith(
-      null,
-      13,
-      '.1'
-    );
+    expect(traverseFn).toHaveBeenCalledWith(null, 'a', '.0');
+    expect(traverseFn).toHaveBeenCalledWith(null, 13, '.1');
 
@@ -521,5 +482,5 @@ describe('traverseAllChildren', () => {
       'Objects are not valid as a React child (found: object with keys ' +
-      '{a, b}). If you meant to render a collection of children, use an ' +
-      'array instead or wrap the object using createFragment(object) from ' +
-      'the React add-ons.'
+        '{a, b}). If you meant to render a collection of children, use an ' +
+        'array instead or wrap the object using createFragment(object) from ' +
+        'the React add-ons.',
     );
@@ -534,4 +495,4 @@ describe('traverseAllChildren', () => {
       'Objects are not valid as a React child (found: /abc/). If you meant ' +
-      'to render a collection of children, use an array instead or wrap the ' +
-      'object using createFragment(object) from the React add-ons.'
+        'to render a collection of children, use an array instead or wrap the ' +
+        'object using createFragment(object) from the React add-ons.',
     );
@@ -544,5 +505,3 @@ describe('traverseAllChildren', () => {
       render() {
-        return (
-          <div>{new Map([['foo', 0], ['bar', 1]])}</div>
-        );
+        return <div>{new Map([['foo', 0], ['bar', 1]])}</div>;
       }
@@ -555,4 +514,4 @@ describe('traverseAllChildren', () => {
       'Warning: Using Maps as children is not yet fully supported. It is an ' +
-      'experimental feature that might be removed. Convert it to a sequence ' +
-      '/ iterable of keyed ReactElements instead. Check the render method of `Parent`.'
+        'experimental feature that might be removed. Convert it to a sequence ' +
+        '/ iterable of keyed ReactElements instead. Check the render method of `Parent`.',
     );
diff --git a/src/shared/utils/deprecated.js b/src/shared/utils/deprecated.js
index e8cc2e153..81e24cfd9 100644
--- a/src/shared/utils/deprecated.js
+++ b/src/shared/utils/deprecated.js
@@ -14,3 +14,3 @@
 
-var warning = require('warning');
+var lowPriorityWarning = require('lowPriorityWarning');
 
@@ -37,3 +37,3 @@ function deprecated<T: Function>(
     var newFn = function() {
-      warning(
+      lowPriorityWarning(
         warned,
@@ -43,4 +43,5 @@ function deprecated<T: Function>(
         // Otherwise the build tools will attempt to build a '%s' module.
-        'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' +
-        'instead.',
+        'React.%s is deprecated. Please use %s.%s from require' +
+          "('%s') " +
+          'instead.',
         fnName,
@@ -48,3 +49,3 @@ function deprecated<T: Function>(
         fnName,
-        newPackage
+        newPackage,
       );
diff --git a/src/shared/utils/flattenChildren.js b/src/shared/utils/flattenChildren.js
index d3625bc4b..7274bb6dd 100644
--- a/src/shared/utils/flattenChildren.js
+++ b/src/shared/utils/flattenChildren.js
@@ -48,3 +48,3 @@ function flattenSingleChildIntoContext(
     const result = traverseContext;
-    const keyUnique = (result[name] === undefined);
+    const keyUnique = result[name] === undefined;
     if (__DEV__) {
@@ -57,6 +57,6 @@ function flattenSingleChildIntoContext(
           'flattenChildren(...): Encountered two children with the same key, ' +
-          '`%s`. Child keys must be unique; when two children share a key, only ' +
-          'the first child will be used.%s',
+            '`%s`. Child keys must be unique; when two children share a key, only ' +
+            'the first child will be used.%s',
           KeyEscapeUtils.unescape(name),
-          ReactComponentTreeHook.getStackAddendumByID(selfDebugID)
+          ReactComponentTreeHook.getStackAddendumByID(selfDebugID),
         );
@@ -78,3 +78,3 @@ function flattenChildren(
   selfDebugID?: number,
-): ?{ [name: string]: ReactElement<any> } {
+): ?{[name: string]: ReactElement<any>} {
   if (children == null) {
@@ -87,9 +87,10 @@ function flattenChildren(
       children,
-      (traverseContext, child, name) => flattenSingleChildIntoContext(
-        traverseContext,
-        child,
-        name,
-        selfDebugID
-      ),
-      result
+      (traverseContext, child, name) =>
+        flattenSingleChildIntoContext(
+          traverseContext,
+          child,
+          name,
+          selfDebugID,
+        ),
+      result,
     );
diff --git a/src/shared/utils/getIteratorFn.js b/src/shared/utils/getIteratorFn.js
index 4ed780aa2..017e5537b 100644
--- a/src/shared/utils/getIteratorFn.js
+++ b/src/shared/utils/getIteratorFn.js
@@ -33,6 +33,6 @@ var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
 function getIteratorFn(maybeIterable: ?any): ?(p: ReactElement<any>) => void {
-  var iteratorFn = maybeIterable && (
-    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
-    maybeIterable[FAUX_ITERATOR_SYMBOL]
-  );
+  var iteratorFn =
+    maybeIterable &&
+    ((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
+      maybeIterable[FAUX_ITERATOR_SYMBOL]);
   if (typeof iteratorFn === 'function') {
diff --git a/src/shared/utils/lowPriorityWarning.js b/src/shared/utils/lowPriorityWarning.js
new file mode 100644
index 000000000..6de5fee71
--- /dev/null
+++ b/src/shared/utils/lowPriorityWarning.js
@@ -0,0 +1,58 @@
+/**
+ * Copyright 2014-2015, Facebook, Inc.
+ * All rights reserved.
+ *
+ * This source code is licensed under the BSD-style license found in the
+ * LICENSE file in the root directory of this source tree. An additional grant
+ * of patent rights can be found in the PATENTS file in the same directory.
+ *
+ * @providesModule lowPriorityWarning
+ */
+
+'use strict';
+
+/**
+ * Forked from fbjs/warning:
+ * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
+ *
+ * Only change is we use console.warn instead of console.error,
+ * and do nothing when 'console' is not supported.
+ * This really simplifies the code.
+ * ---
+ * Similar to invariant but only logs a warning if the condition is not met.
+ * This can be used to log issues in development environments in critical
+ * paths. Removing the logging code for production environments will keep the
+ * same logic and follow the same code paths.
+ */
+
+var lowPriorityWarning = function() {};
+
+if (__DEV__) {
+  const printWarning = function(format, ...args) {
+    var argIndex = 0;
+    var message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);
+    if (typeof console !== 'undefined') {
+      console.warn(message);
+    }
+    try {
+      // --- Welcome to debugging React ---
+      // This error was thrown as a convenience so that you can use this stack
+      // to find the callsite that caused this warning to fire.
+      throw new Error(message);
+    } catch (x) {}
+  };
+
+  lowPriorityWarning = function(condition, format, ...args) {
+    if (format === undefined) {
+      throw new Error(
+        '`warning(condition, format, ...args)` requires a warning ' +
+          'message argument',
+      );
+    }
+    if (!condition) {
+      printWarning(format, ...args);
+    }
+  };
+}
+
+module.exports = lowPriorityWarning;
diff --git a/src/shared/utils/reactProdInvariant.js b/src/shared/utils/reactProdInvariant.js
index ed61b5958..9390b9eaa 100644
--- a/src/shared/utils/reactProdInvariant.js
+++ b/src/shared/utils/reactProdInvariant.js
@@ -22,6 +22,8 @@ function reactProdInvariant(code: string): void {
 
-  var message = (
-    'Minified React error #' + code + '; visit ' +
-    'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code
-  );
+  var message =
+    'Minified React error #' +
+    code +
+    '; visit ' +
+    'http://facebook.github.io/react/docs/error-decoder.html?invariant=' +
+    code;
 
@@ -31,8 +33,7 @@ function reactProdInvariant(code: string): void {
 
-  message += (
+  message +=
     ' for the full message or use the non-minified dev environment' +
-    ' for full errors and additional helpful warnings.'
-  );
+    ' for full errors and additional helpful warnings.';
 
-  var error: Error & { framesToPop?: number } = new Error(message);
+  var error: Error & {framesToPop?: number} = new Error(message);
   error.name = 'Invariant Violation';
diff --git a/src/shared/utils/traverseAllChildren.js b/src/shared/utils/traverseAllChildren.js
index 60b5f147a..8bad6e6a9 100644
--- a/src/shared/utils/traverseAllChildren.js
+++ b/src/shared/utils/traverseAllChildren.js
@@ -67,3 +67,3 @@ function traverseAllChildrenImpl(
   callback,
-  traverseContext
+  traverseContext,
 ) {
@@ -76,8 +76,10 @@ function traverseAllChildrenImpl(
 
-  if (children === null ||
-      type === 'string' ||
-      type === 'number' ||
-      // The following is inlined from ReactElement. This means we can optimize
-      // some checks. React Fiber also inlines this logic for similar purposes.
-      (type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE)) {
+  if (
+    children === null ||
+    type === 'string' ||
+    type === 'number' ||
+    // The following is inlined from ReactElement. This means we can optimize
+    // some checks. React Fiber also inlines this logic for similar purposes.
+    (type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE)
+  ) {
     callback(
@@ -87,3 +89,3 @@ function traverseAllChildrenImpl(
       // so that it's consistent if the number of children grows.
-      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar
+      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,
     );
@@ -105,3 +107,3 @@ function traverseAllChildrenImpl(
         callback,
-        traverseContext
+        traverseContext,
       );
@@ -122,3 +124,3 @@ function traverseAllChildrenImpl(
             callback,
-            traverseContext
+            traverseContext,
           );
@@ -131,3 +133,6 @@ function traverseAllChildrenImpl(
             if (mapsAsChildrenOwnerName) {
-              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
+              mapsAsChildrenAddendum =
+                ' Check the render method of `' +
+                mapsAsChildrenOwnerName +
+                '`.';
             }
@@ -137,5 +142,5 @@ function traverseAllChildrenImpl(
             'Using Maps as children is not yet fully supported. It is an ' +
-            'experimental feature that might be removed. Convert it to a ' +
-            'sequence / iterable of keyed ReactElements instead.%s',
-            mapsAsChildrenAddendum
+              'experimental feature that might be removed. Convert it to a ' +
+              'sequence / iterable of keyed ReactElements instead.%s',
+            mapsAsChildrenAddendum,
           );
@@ -148,7 +153,7 @@ function traverseAllChildrenImpl(
             child = entry[1];
-            nextName = (
+            nextName =
               nextNamePrefix +
-              KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR +
-              getComponentKey(child, 0)
-            );
+              KeyEscapeUtils.escape(entry[0]) +
+              SUBSEPARATOR +
+              getComponentKey(child, 0);
             subtreeCount += traverseAllChildrenImpl(
@@ -157,3 +162,3 @@ function traverseAllChildrenImpl(
               callback,
-              traverseContext
+              traverseContext,
             );
@@ -171,3 +176,3 @@ function traverseAllChildrenImpl(
           addendum =
-            ' It looks like you\'re using an element created by a different ' +
+            " It looks like you're using an element created by a different " +
             'version of React. Make sure to use only one copy of React.';
@@ -185,6 +190,6 @@ function traverseAllChildrenImpl(
         'Objects are not valid as a React child (found: %s).%s',
-        childrenString === '[object Object]' ?
-          'object with keys {' + Object.keys(children).join(', ') + '}' :
-          childrenString,
-        addendum
+        childrenString === '[object Object]'
+          ? 'object with keys {' + Object.keys(children).join(', ') + '}'
+          : childrenString,
+        addendum,
       );
diff --git a/src/test/ReactComponentTreeTestUtils.js b/src/test/ReactComponentTreeTestUtils.js
index fd7ed9b1a..889e72b11 100644
--- a/src/test/ReactComponentTreeTestUtils.js
+++ b/src/test/ReactComponentTreeTestUtils.js
@@ -16,4 +16,5 @@ var ReactComponentTreeHook = require('ReactComponentTreeHook');
 function getRootDisplayNames() {
-  return ReactComponentTreeHook.getRootIDs()
-    .map(ReactComponentTreeHook.getDisplayName);
+  return ReactComponentTreeHook.getRootIDs().map(
+    ReactComponentTreeHook.getDisplayName,
+  );
 }
@@ -21,4 +22,5 @@ function getRootDisplayNames() {
 function getRegisteredDisplayNames() {
-  return ReactComponentTreeHook.getRegisteredIDs()
-    .map(ReactComponentTreeHook.getDisplayName);
+  return ReactComponentTreeHook.getRegisteredIDs().map(
+    ReactComponentTreeHook.getDisplayName,
+  );
 }
@@ -50,3 +52,3 @@ function expectTree(rootID, expectedTree, parentPath) {
       expectedTree.parentDisplayName,
-      'parentDisplayName'
+      'parentDisplayName',
     );
@@ -57,3 +59,3 @@ function expectTree(rootID, expectedTree, parentPath) {
       expectedTree.ownerDisplayName,
-      'ownerDisplayName'
+      'ownerDisplayName',
     );
@@ -75,3 +77,3 @@ function expectTree(rootID, expectedTree, parentPath) {
       expectedTree.element && expectedTree.element.type,
-      'element.type'
+      'element.type',
     );
@@ -84,3 +86,3 @@ function expectTree(rootID, expectedTree, parentPath) {
       expectedTree.children.length,
-      'children.length'
+      'children.length',
     );
@@ -90,3 +92,3 @@ function expectTree(rootID, expectedTree, parentPath) {
         {parentID: rootID, ...expectedTree.children[i]},
-        path
+        path,
       );
diff --git a/src/test/ReactTestUtils.js b/src/test/ReactTestUtils.js
index 40d6cecc8..13e1b2770 100644
--- a/src/test/ReactTestUtils.js
+++ b/src/test/ReactTestUtils.js
@@ -42,3 +42,3 @@ function createRendererWithWarning() {
     'Shallow renderer has been moved to react-test-renderer/shallow. ' +
-    'Update references to remove this warning.'
+      'Update references to remove this warning.',
   );
@@ -68,6 +68,3 @@ function findAllInRenderedTreeInternal(inst, test) {
       ret = ret.concat(
-        findAllInRenderedTreeInternal(
-          renderedChildren[key],
-          test
-        )
+        findAllInRenderedTreeInternal(renderedChildren[key], test),
       );
@@ -79,3 +76,3 @@ function findAllInRenderedTreeInternal(inst, test) {
     ret = ret.concat(
-      findAllInRenderedTreeInternal(inst._renderedComponent, test)
+      findAllInRenderedTreeInternal(inst._renderedComponent, test),
     );
@@ -110,6 +107,3 @@ var ReactTestUtils = {
   isElementOfType: function(inst, convenienceConstructor) {
-    return (
-      React.isValidElement(inst) &&
-      inst.type === convenienceConstructor
-    );
+    return React.isValidElement(inst) && inst.type === convenienceConstructor;
   },
@@ -121,5 +115,3 @@ var ReactTestUtils = {
   isDOMComponentElement: function(inst) {
-    return !!(inst &&
-              React.isValidElement(inst) &&
-              !!inst.tagName);
+    return !!(inst && React.isValidElement(inst) && !!inst.tagName);
   },
@@ -132,5 +124,7 @@ var ReactTestUtils = {
     }
-    return inst != null &&
-           typeof inst.render === 'function' &&
-           typeof inst.setState === 'function';
+    return (
+      inst != null &&
+      typeof inst.render === 'function' &&
+      typeof inst.setState === 'function'
+    );
   },
@@ -142,7 +136,5 @@ var ReactTestUtils = {
     var internalInstance = ReactInstanceMap.get(inst);
-    var constructor = internalInstance
-      ._currentElement
-      .type;
+    var constructor = internalInstance._currentElement.type;
 
-    return (constructor === type);
+    return constructor === type;
   },
@@ -164,8 +156,7 @@ var ReactTestUtils = {
     var internalInstance = ReactInstanceMap.get(inst);
-    var constructor = internalInstance
-      ._currentElement
-      .type;
+    var constructor = internalInstance._currentElement.type;
 
-    return !!(ReactTestUtils.isCompositeComponentElement(inst) &&
-             (constructor === type));
+    return !!(
+      ReactTestUtils.isCompositeComponentElement(inst) && constructor === type
+    );
   },
@@ -186,3 +177,3 @@ var ReactTestUtils = {
       ReactTestUtils.isCompositeComponent(inst),
-      'findAllInRenderedTree(...): instance must be a composite component'
+      'findAllInRenderedTree(...): instance must be a composite component',
     );
@@ -210,3 +201,3 @@ var ReactTestUtils = {
             'TestUtils.scryRenderedDOMComponentsWithClass expects a ' +
-            'className as a second argument.'
+              'className as a second argument.',
           );
@@ -229,8 +220,13 @@ var ReactTestUtils = {
   findRenderedDOMComponentWithClass: function(root, className) {
-    var all =
-      ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);
+    var all = ReactTestUtils.scryRenderedDOMComponentsWithClass(
+      root,
+      className,
+    );
     if (all.length !== 1) {
       throw new Error(
-        'Did not find exactly one match (found: ' + all.length + ') ' +
-        'for class:' + className
+        'Did not find exactly one match (found: ' +
+          all.length +
+          ') ' +
+          'for class:' +
+          className,
       );
@@ -240,3 +236,2 @@ var ReactTestUtils = {
 
-
   /**
@@ -248,4 +243,6 @@ var ReactTestUtils = {
     return ReactTestUtils.findAllInRenderedTree(root, function(inst) {
-      return ReactTestUtils.isDOMComponent(inst) &&
-            inst.tagName.toUpperCase() === tagName.toUpperCase();
+      return (
+        ReactTestUtils.isDOMComponent(inst) &&
+        inst.tagName.toUpperCase() === tagName.toUpperCase()
+      );
     });
@@ -263,4 +260,7 @@ var ReactTestUtils = {
       throw new Error(
-        'Did not find exactly one match (found: ' + all.length + ') ' +
-        'for tag:' + tagName
+        'Did not find exactly one match (found: ' +
+          all.length +
+          ') ' +
+          'for tag:' +
+          tagName,
       );
@@ -270,3 +270,2 @@ var ReactTestUtils = {
 
-
   /**
@@ -277,6 +276,3 @@ var ReactTestUtils = {
     return ReactTestUtils.findAllInRenderedTree(root, function(inst) {
-      return ReactTestUtils.isCompositeComponentWithType(
-        inst,
-        componentType
-      );
+      return ReactTestUtils.isCompositeComponentWithType(inst, componentType);
     });
@@ -293,3 +289,3 @@ var ReactTestUtils = {
       root,
-      componentType
+      componentType,
     );
@@ -297,4 +293,7 @@ var ReactTestUtils = {
       throw new Error(
-        'Did not find exactly one match (found: ' + all.length + ') ' +
-        'for componentType:' + componentType
+        'Did not find exactly one match (found: ' +
+          all.length +
+          ') ' +
+          'for componentType:' +
+          componentType,
       );
@@ -321,7 +320,3 @@ var ReactTestUtils = {
     module.prototype.render.mockImplementation(function() {
-      return React.createElement(
-        mockTagName,
-        null,
-        this.props.children
-      );
+      return React.createElement(mockTagName, null, this.props.children);
     });
@@ -340,5 +335,6 @@ var ReactTestUtils = {
     fakeNativeEvent.target = node;
+    fakeNativeEvent.simulated = true;
     ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
       topLevelType,
-      fakeNativeEvent
+      fakeNativeEvent,
     );
@@ -354,5 +350,6 @@ var ReactTestUtils = {
   simulateNativeEventOnDOMComponent: function(
-      topLevelType,
-      comp,
-      fakeNativeEvent) {
+    topLevelType,
+    comp,
+    fakeNativeEvent,
+  ) {
     ReactTestUtils.simulateNativeEventOnNode(
@@ -360,3 +357,3 @@ var ReactTestUtils = {
       findDOMNode(comp),
-      fakeNativeEvent
+      fakeNativeEvent,
     );
@@ -366,5 +363,3 @@ var ReactTestUtils = {
     return {
-      touches: [
-        {pageX: x, pageY: y},
-      ],
+      touches: [{pageX: x, pageY: y}],
     };
@@ -392,3 +387,3 @@ function makeSimulator(eventType) {
       'TestUtils.Simulate expects a component instance and not a ReactElement.' +
-      'TestUtils.Simulate will not work if you are using shallow rendering.'
+        'TestUtils.Simulate will not work if you are using shallow rendering.',
     );
@@ -413,3 +408,3 @@ function makeSimulator(eventType) {
       fakeNativeEvent,
-      node
+      node,
     );
@@ -484,3 +479,3 @@ function makeNativeSimulator(eventType) {
         domComponentOrNode,
-        fakeNativeEvent
+        fakeNativeEvent,
       );
@@ -491,3 +486,3 @@ function makeNativeSimulator(eventType) {
         domComponentOrNode,
-        fakeNativeEvent
+        fakeNativeEvent,
       );
@@ -499,4 +494,5 @@ Object.keys(topLevelTypes).forEach(function(eventType) {
   // Event type is stored as 'topClick' - we transform that to 'click'
-  var convenienceName = eventType.indexOf('top') === 0 ?
-    eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;
+  var convenienceName = eventType.indexOf('top') === 0
+    ? eventType.charAt(3).toLowerCase() + eventType.substr(4)
+    : eventType;
   /**
@@ -505,4 +501,5 @@ Object.keys(topLevelTypes).forEach(function(eventType) {
    */
-  ReactTestUtils.SimulateNative[convenienceName] =
-    makeNativeSimulator(eventType);
+  ReactTestUtils.SimulateNative[convenienceName] = makeNativeSimulator(
+    eventType,
+  );
 });
diff --git a/src/test/__tests__/ReactTestUtils-test.js b/src/test/__tests__/ReactTestUtils-test.js
index f63200f6f..d53db7121 100644
--- a/src/test/__tests__/ReactTestUtils-test.js
+++ b/src/test/__tests__/ReactTestUtils-test.js
@@ -17,5 +17,6 @@ var ReactDOMServer;
 var ReactTestUtils;
+var ReactShallowRenderer;
+var PropTypes;
 
 describe('ReactTestUtils', () => {
-
   beforeEach(() => {
@@ -25,2 +26,4 @@ describe('ReactTestUtils', () => {
     ReactTestUtils = require('ReactTestUtils');
+    ReactShallowRenderer = require('ReactShallowRenderer');
+    PropTypes = require('prop-types');
   });
@@ -39,3 +42,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     var result = shallowRenderer.render(<SomeComponent />);
@@ -59,3 +62,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     var result = shallowRenderer.render(<SomeComponent />);
@@ -76,7 +79,7 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     expect(() => shallowRenderer.render(SomeComponent)).toThrowError(
       'ReactShallowRenderer render(): Invalid component element. Instead of ' +
-      'passing a component class, make sure to instantiate it by passing it ' +
-      'to React.createElement.'
+        'passing a component class, make sure to instantiate it by passing it ' +
+        'to React.createElement.',
     );
@@ -84,5 +87,5 @@ describe('ReactTestUtils', () => {
       'ReactShallowRenderer render(): Shallow rendering works only with ' +
-      'custom components, not primitives (div). Instead of calling ' +
-      '`.render(el)` and inspecting the rendered output, look at `el.props` ' +
-      'directly instead.'
+        'custom components, not primitives (div). Instead of calling ' +
+        '`.render(el)` and inspecting the rendered output, look at `el.props` ' +
+        'directly instead.',
     );
@@ -100,3 +103,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     shallowRenderer.render(<SomeComponent />);
@@ -114,3 +117,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     var result = shallowRenderer.render(<SomeComponent />);
@@ -127,3 +130,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     // Shouldn't crash.
@@ -145,6 +148,3 @@ describe('ReactTestUtils', () => {
           return (
-            <a
-              href="#"
-              onClick={this.onClick}
-              className={className}>
+            <a href="#" onClick={this.onClick} className={className}>
               Test link
@@ -163,3 +163,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     var result = shallowRenderer.render(<SomeComponent />);
@@ -193,3 +193,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     shallowRenderer.render(<SimpleComponent n={5} />);
@@ -201,3 +201,3 @@ describe('ReactTestUtils', () => {
       static contextTypes = {
-        name: React.PropTypes.string,
+        name: PropTypes.string,
       };
@@ -209,3 +209,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     var result = shallowRenderer.render(<SimpleComponent />);
@@ -219,3 +219,3 @@ describe('ReactTestUtils', () => {
       handleUserClick = () => {
-        this.setState({ clicked: true });
+        this.setState({clicked: true});
       };
@@ -233,3 +233,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     shallowRenderer.render(<SimpleComponent />);
@@ -256,3 +256,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     var result = shallowRenderer.render(<SimpleComponent />);
@@ -264,3 +264,3 @@ describe('ReactTestUtils', () => {
       static contextTypes = {
-        name: React.PropTypes.string,
+        name: PropTypes.string,
       };
@@ -272,3 +272,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     var result = shallowRenderer.render(<SimpleComponent />, {
@@ -284,3 +284,3 @@ describe('ReactTestUtils', () => {
       static contextTypes = {
-        name: React.PropTypes.string.isRequired,
+        name: PropTypes.string.isRequired,
       };
@@ -292,3 +292,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = ReactTestUtils.createRenderer();
+    var shallowRenderer = new ReactShallowRenderer();
     shallowRenderer.render(<SimpleComponent />);
@@ -296,7 +296,7 @@ describe('ReactTestUtils', () => {
     expect(
-      console.error.calls.argsFor(0)[0].replace(/\(at .+?:\d+\)/g, '(at **)')
+      console.error.calls.argsFor(0)[0].replace(/\(at .+?:\d+\)/g, '(at **)'),
     ).toBe(
       'Warning: Failed context type: The context `name` is marked as ' +
-      'required in `SimpleComponent`, but its value is `undefined`.\n' +
-      '    in SimpleComponent (at **)'
+        'required in `SimpleComponent`, but its value is `undefined`.\n' +
+        '    in SimpleComponent (at **)',
     );
@@ -314,3 +314,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      'NonExistentClass'
+      'NonExistentClass',
     );
@@ -329,3 +329,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      'x'
+      'x',
     );
@@ -344,3 +344,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      'x y'
+      'x y',
     );
@@ -350,3 +350,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      'x z'
+      'x z',
     );
@@ -356,3 +356,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      ['x', 'y']
+      ['x', 'y'],
     );
@@ -365,3 +365,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      ['x', 'a']
+      ['x', 'a'],
     );
@@ -371,3 +371,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      ['x a']
+      ['x a'],
     );
@@ -389,3 +389,3 @@ describe('ReactTestUtils', () => {
       </Wrapper>,
-      container
+      container,
     );
@@ -396,3 +396,3 @@ describe('ReactTestUtils', () => {
       </Wrapper>,
-      container
+      container,
     );
@@ -426,3 +426,3 @@ describe('ReactTestUtils', () => {
       var testComponent = ReactTestUtils.renderIntoDocument(
-        React.createElement(type)
+        React.createElement(type),
       );
@@ -469,3 +469,6 @@ describe('ReactTestUtils', () => {
     var container = document.createElement('div');
-    var instance = ReactDOM.render(<input type="text" onChange={obj.handler} />, container);
+    var instance = ReactDOM.render(
+      <input type="text" onChange={obj.handler} />,
+      container,
+    );
 
@@ -475,3 +478,5 @@ describe('ReactTestUtils', () => {
 
-    expect(obj.handler).toHaveBeenCalledWith(jasmine.objectContaining({target: node}));
+    expect(obj.handler).toHaveBeenCalledWith(
+      jasmine.objectContaining({target: node}),
+    );
   });
@@ -496,3 +501,6 @@ describe('ReactTestUtils', () => {
     var container = document.createElement('div');
-    var instance = ReactDOM.render(<SomeComponent handleChange={obj.handler} />, container);
+    var instance = ReactDOM.render(
+      <SomeComponent handleChange={obj.handler} />,
+      container,
+    );
 
@@ -502,3 +510,5 @@ describe('ReactTestUtils', () => {
 
-    expect(obj.handler).toHaveBeenCalledWith(jasmine.objectContaining({target: node}));
+    expect(obj.handler).toHaveBeenCalledWith(
+      jasmine.objectContaining({target: node}),
+    );
   });
@@ -517,4 +527,6 @@ describe('ReactTestUtils', () => {
     var handler = jasmine.createSpy('spy');
-    var shallowRenderer = ReactTestUtils.createRenderer();
-    var result = shallowRenderer.render(<SomeComponent handleClick={handler} />);
+    var shallowRenderer = new ReactShallowRenderer();
+    var result = shallowRenderer.render(
+      <SomeComponent handleClick={handler} />,
+    );
 
@@ -522,3 +534,3 @@ describe('ReactTestUtils', () => {
       'TestUtils.Simulate expects a component instance and not a ReactElement.' +
-      'TestUtils.Simulate will not work if you are using shallow rendering.'
+        'TestUtils.Simulate will not work if you are using shallow rendering.',
     );
@@ -533,3 +545,3 @@ describe('ReactTestUtils', () => {
     class Component extends React.Component {
-      handleClick = (e) => {
+      handleClick = e => {
         expect(e.clientX).toBe(CLIENT_X);
@@ -544,6 +556,5 @@ describe('ReactTestUtils', () => {
     var instance = ReactDOM.render(<Component />, element);
-    ReactTestUtils.Simulate.click(
-      ReactDOM.findDOMNode(instance),
-      {clientX: CLIENT_X}
-    );
+    ReactTestUtils.Simulate.click(ReactDOM.findDOMNode(instance), {
+      clientX: CLIENT_X,
+    });
     expect(console.error.calls.count()).toBe(0);
@@ -573,3 +584,3 @@ describe('ReactTestUtils', () => {
       let event;
-      const stub = jest.genMockFn().mockImplementation((e) => {
+      const stub = jest.genMockFn().mockImplementation(e => {
         e.persist();
@@ -588,3 +599,2 @@ describe('ReactTestUtils', () => {
   });
-
 });
diff --git a/src/test/__tests__/reactComponentExpect-test.js b/src/test/__tests__/reactComponentExpect-test.js
index c9646f9ab..a522d43aa 100644
--- a/src/test/__tests__/reactComponentExpect-test.js
+++ b/src/test/__tests__/reactComponentExpect-test.js
@@ -18,3 +18,2 @@ var reactComponentExpect;
 describe('reactComponentExpect', () => {
-
   beforeEach(() => {
diff --git a/src/test/getTestDocument.js b/src/test/getTestDocument.js
index 8f681cd42..bd0c0e9cb 100644
--- a/src/test/getTestDocument.js
+++ b/src/test/getTestDocument.js
@@ -16,3 +16,4 @@ function getTestDocument(markup) {
   document.write(
-    markup || '<!doctype html><html><meta charset=utf-8><title>test doc</title>'
+    markup ||
+      '<!doctype html><html><meta charset=utf-8><title>test doc</title>',
   );
diff --git a/src/test/reactComponentExpect.js b/src/test/reactComponentExpect.js
index d31b0d08a..7ba2ab1d8 100644
--- a/src/test/reactComponentExpect.js
+++ b/src/test/reactComponentExpect.js
@@ -32,3 +32,3 @@ function reactComponentExpect(instance) {
     ReactTestUtils.isCompositeComponent(instance),
-    'reactComponentExpect(...): instance must be a composite component'
+    'reactComponentExpect(...): instance must be a composite component',
   );
@@ -85,4 +85,3 @@ Object.assign(reactComponentExpectInternal.prototype, {
     this.toBeDOMComponent();
-    var renderedChildren =
-      this._instance._renderedChildren || {};
+    var renderedChildren = this._instance._renderedChildren || {};
     for (var name in renderedChildren) {
@@ -117,5 +116,3 @@ Object.assign(reactComponentExpectInternal.prototype, {
   toBeComponentOfType: function(constructor) {
-    expect(
-      this._instance._currentElement.type === constructor
-    ).toBe(true);
+    expect(this._instance._currentElement.type === constructor).toBe(true);
     return this;
@@ -130,3 +127,3 @@ Object.assign(reactComponentExpectInternal.prototype, {
       typeof this.instance() === 'object' &&
-      typeof this.instance().render === 'function'
+        typeof this.instance().render === 'function',
     ).toBe(true);
@@ -137,5 +134,3 @@ Object.assign(reactComponentExpectInternal.prototype, {
     this.toBeCompositeComponent();
-    expect(
-      this._instance._currentElement.type === constructor
-    ).toBe(true);
+    expect(this._instance._currentElement.type === constructor).toBe(true);
     return this;
@@ -188,4 +183,5 @@ Object.assign(reactComponentExpectInternal.prototype, {
       }
-      expect(this.instance().state[stateName])
-        .toEqual(stateNameToExpectedValue[stateName]);
+      expect(this.instance().state[stateName]).toEqual(
+        stateNameToExpectedValue[stateName],
+      );
     }
@@ -204,4 +200,5 @@ Object.assign(reactComponentExpectInternal.prototype, {
       }
-      expect(this.instance().props[propName])
-        .toEqual(propNameToExpectedValue[propName]);
+      expect(this.instance().props[propName]).toEqual(
+        propNameToExpectedValue[propName],
+      );
     }
@@ -220,4 +217,5 @@ Object.assign(reactComponentExpectInternal.prototype, {
       }
-      expect(this.instance().context[contextName])
-        .toEqual(contextNameToExpectedValue[contextName]);
+      expect(this.instance().context[contextName]).toEqual(
+        contextNameToExpectedValue[contextName],
+      );
     }
diff --git a/src/umd/ReactUMDEntry.js b/src/umd/ReactUMDEntry.js
index 88487a281..0a31c66f3 100644
--- a/src/umd/ReactUMDEntry.js
+++ b/src/umd/ReactUMDEntry.js
@@ -16,3 +16,3 @@ var React = require('React');
 // `version` will be added here by the React module.
-var ReactUMDEntry = Object.assign({
+var ReactUMDEntry = Object.assign(React, {
   __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
@@ -20,3 +20,3 @@ var ReactUMDEntry = Object.assign({
   },
-}, React);
+});
 
@@ -29,3 +29,3 @@ if (__DEV__) {
       getNextDebugID: require('getNextDebugID'),
-    }
+    },
   );
diff --git a/src/umd/ReactWithAddonsUMDEntry.js b/src/umd/ReactWithAddonsUMDEntry.js
index bc350782f..102b3e68e 100644
--- a/src/umd/ReactWithAddonsUMDEntry.js
+++ b/src/umd/ReactWithAddonsUMDEntry.js
@@ -30,3 +30,3 @@ if (__DEV__) {
       getNextDebugID: require('getNextDebugID'),
-    }
+    },
   );
diff --git a/src/umd/shims/ReactAddonsDOMDependenciesUMDShim.js b/src/umd/shims/ReactAddonsDOMDependenciesUMDShim.js
index f4c06de04..a72615f75 100644
--- a/src/umd/shims/ReactAddonsDOMDependenciesUMDShim.js
+++ b/src/umd/shims/ReactAddonsDOMDependenciesUMDShim.js
@@ -20,3 +20,4 @@ function getReactDOM() {
     // This is injected by the ReactDOM UMD build:
-    ReactDOM = ReactWithAddonsUMDEntry.__SECRET_INJECTED_REACT_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
+    ReactDOM =
+      ReactWithAddonsUMDEntry.__SECRET_INJECTED_REACT_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
   }
@@ -29,3 +30,4 @@ if (__DEV__) {
   exports.getReactPerf = function() {
-    return getReactDOM().__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactPerf;
+    return getReactDOM().__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
+      .ReactPerf;
   };
@@ -33,3 +35,4 @@ if (__DEV__) {
   exports.getReactTestUtils = function() {
-    return getReactDOM().__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactTestUtils;
+    return getReactDOM().__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
+      .ReactTestUtils;
   };
diff --git a/src/umd/shims/getNextDebugIDUMDShim.js b/src/umd/shims/getNextDebugIDUMDShim.js
index 3c8855d20..2fb7ac255 100644
--- a/src/umd/shims/getNextDebugIDUMDShim.js
+++ b/src/umd/shims/getNextDebugIDUMDShim.js
@@ -18,2 +18 @@ var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
 module.exports = ReactInternals.getNextDebugID;
-
