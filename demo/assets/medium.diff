diff --git a/src/ReactVersion.js b/src/ReactVersion.js
index 4972f9494..54befdc07 100644
--- a/src/ReactVersion.js
+++ b/src/ReactVersion.js
@@ -13,2 +13,2 @@
 
-module.exports = '15.6.0';
+module.exports = '15.5.0';
diff --git a/src/addons/ReactFragment.js b/src/addons/ReactFragment.js
index 0ed35d4ae..5d83e8453 100644
--- a/src/addons/ReactFragment.js
+++ b/src/addons/ReactFragment.js
@@ -43,3 +43,3 @@ var ReactFragment = {
         'React.addons.createFragment only accepts a single object. Got: %s',
-        object,
+        object
       );
@@ -51,3 +51,3 @@ var ReactFragment = {
         'React.addons.createFragment does not accept a ReactElement ' +
-          'without a wrapper object.',
+        'without a wrapper object.'
       );
@@ -59,3 +59,3 @@ var ReactFragment = {
       'React.addons.createFragment(...): Encountered an invalid child; DOM ' +
-        'elements are not valid children of React components.',
+      'elements are not valid children of React components.'
     );
@@ -70,3 +70,3 @@ var ReactFragment = {
             'React.addons.createFragment(...): Child objects should have ' +
-              'non-numeric keys so ordering is preserved.',
+            'non-numeric keys so ordering is preserved.'
           );
@@ -79,3 +79,3 @@ var ReactFragment = {
         key,
-        emptyFunction.thatReturnsArgument,
+        emptyFunction.thatReturnsArgument
       );
diff --git a/src/addons/ReactWithAddons.js b/src/addons/ReactWithAddons.js
index 8cf081c98..4d556e922 100644
--- a/src/addons/ReactWithAddons.js
+++ b/src/addons/ReactWithAddons.js
@@ -16,3 +16,4 @@ var React = require('React');
 var ReactAddonsDOMDependencies = require('ReactAddonsDOMDependencies');
-var ReactComponentWithPureRenderMixin = require('ReactComponentWithPureRenderMixin');
+var ReactComponentWithPureRenderMixin =
+  require('ReactComponentWithPureRenderMixin');
 var ReactCSSTransitionGroup = require('ReactCSSTransitionGroup');
diff --git a/src/addons/__tests__/ReactDOMFactories-test.js b/src/addons/__tests__/ReactDOMFactories-test.js
deleted file mode 100644
index 641faa3f0..000000000
--- a/src/addons/__tests__/ReactDOMFactories-test.js
+++ /dev/null
@@ -1,41 +0,0 @@
-/**
- * Copyright 2013-present, Facebook, Inc.
- * All rights reserved.
- *
- * This source code is licensed under the BSD-style license found in the
- * LICENSE file in the root directory of this source tree. An additional grant
- * of patent rights can be found in the PATENTS file in the same directory.
- *
- * @emails react-core
- */
-
-'use strict';
-
-var React = require('React');
-var {div} = require('ReactDOMFactories');
-
-describe('ReactDOMFactories', () => {
-  it('allow factories to be called without warnings', () => {
-    spyOn(console, 'error');
-    spyOn(console, 'warn');
-    var element = div();
-    expect(element.type).toBe('div');
-    expect(console.error).not.toHaveBeenCalled();
-    expect(console.warn).not.toHaveBeenCalled();
-  });
-
-  it('warns once when accessing React.DOM methods', () => {
-    spyOn(console, 'warn');
-
-    var a = React.DOM.a();
-    var p = React.DOM.p();
-
-    expect(a.type).toBe('a');
-    expect(p.type).toBe('p');
-
-    expect(console.warn).toHaveBeenCalledTimes(1);
-    expect(console.warn.calls.first().args[0]).toContain(
-      'Warning: Accessing factories like React.DOM.a has been deprecated',
-    );
-  });
-});
diff --git a/src/addons/__tests__/ReactFragment-test.js b/src/addons/__tests__/ReactFragment-test.js
index 1fc6f03d2..0f278686a 100644
--- a/src/addons/__tests__/ReactFragment-test.js
+++ b/src/addons/__tests__/ReactFragment-test.js
@@ -18,2 +18,3 @@ var ReactFragment;
 describe('ReactFragment', () => {
+
   beforeEach(() => {
@@ -34,5 +35,5 @@ describe('ReactFragment', () => {
       'Objects are not valid as a React child (found: object with keys ' +
-        '{x, y, z}). If you meant to render a collection of children, use an ' +
-        'array instead or wrap the object using createFragment(object) from ' +
-        'the React add-ons.',
+      '{x, y, z}). If you meant to render a collection of children, use an ' +
+      'array instead or wrap the object using createFragment(object) from ' +
+      'the React add-ons.'
     );
@@ -54,5 +55,5 @@ describe('ReactFragment', () => {
       'Objects are not valid as a React child (found: object with keys ' +
-        '{a, b, c}). If you meant to render a collection of children, use an ' +
-        'array instead or wrap the object using createFragment(object) from ' +
-        'the React add-ons. Check the render method of `Foo`.',
+      '{a, b, c}). If you meant to render a collection of children, use an ' +
+      'array instead or wrap the object using createFragment(object) from ' +
+      'the React add-ons. Check the render method of `Foo`.'
     );
@@ -65,5 +66,5 @@ describe('ReactFragment', () => {
       'Objects are not valid as a React child (found: object with keys ' +
-        "{_isReactElement, type, props}). It looks like you're using an " +
-        'element created by a different version of React. Make sure to use ' +
-        'only one copy of React.',
+      '{_isReactElement, type, props}). It looks like you\'re using an ' +
+      'element created by a different version of React. Make sure to use ' +
+      'only one copy of React.'
     );
@@ -78,3 +79,3 @@ describe('ReactFragment', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Child objects should have non-numeric keys so ordering is preserved.',
+      'Child objects should have non-numeric keys so ordering is preserved.'
     );
@@ -87,3 +88,3 @@ describe('ReactFragment', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'React.addons.createFragment only accepts a single object.',
+      'React.addons.createFragment only accepts a single object.'
     );
@@ -96,3 +97,3 @@ describe('ReactFragment', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'React.addons.createFragment only accepts a single object.',
+      'React.addons.createFragment only accepts a single object.'
     );
@@ -106,5 +107,6 @@ describe('ReactFragment', () => {
       'React.addons.createFragment does not accept a ReactElement without a ' +
-        'wrapper object.',
+      'wrapper object.'
     );
   });
+
 });
diff --git a/src/addons/__tests__/renderSubtreeIntoContainer-test.js b/src/addons/__tests__/renderSubtreeIntoContainer-test.js
index 0af5d7962..1ee3bd6a9 100644
--- a/src/addons/__tests__/renderSubtreeIntoContainer-test.js
+++ b/src/addons/__tests__/renderSubtreeIntoContainer-test.js
@@ -13,3 +13,2 @@
 
-var PropTypes = require('prop-types');
 var React = require('React');
@@ -20,2 +19,3 @@ var renderSubtreeIntoContainer = require('renderSubtreeIntoContainer');
 describe('renderSubtreeIntoContainer', () => {
+
   it('should pass context when rendering subtree elsewhere', () => {
@@ -25,3 +25,3 @@ describe('renderSubtreeIntoContainer', () => {
       static contextTypes = {
-        foo: PropTypes.string.isRequired,
+        foo: React.PropTypes.string.isRequired,
       };
@@ -35,3 +35,3 @@ describe('renderSubtreeIntoContainer', () => {
       static childContextTypes = {
-        foo: PropTypes.string.isRequired,
+        foo: React.PropTypes.string.isRequired,
       };
@@ -49,7 +49,5 @@ describe('renderSubtreeIntoContainer', () => {
       componentDidMount() {
-        expect(
-          function() {
-            renderSubtreeIntoContainer(this, <Component />, portal);
-          }.bind(this),
-        ).not.toThrow();
+        expect(function() {
+          renderSubtreeIntoContainer(this, <Component />, portal);
+        }.bind(this)).not.toThrow();
       }
@@ -66,3 +64,3 @@ describe('renderSubtreeIntoContainer', () => {
       static contextTypes = {
-        foo: PropTypes.string.isRequired,
+        foo: React.PropTypes.string.isRequired,
       };
@@ -79,3 +77,3 @@ describe('renderSubtreeIntoContainer', () => {
       static childContextTypes = {
-        foo: PropTypes.string.isRequired,
+        foo: React.PropTypes.string.isRequired,
       };
@@ -107,4 +105,4 @@ describe('renderSubtreeIntoContainer', () => {
       static contextTypes = {
-        foo: PropTypes.string.isRequired,
-        getFoo: PropTypes.func.isRequired,
+        foo: React.PropTypes.string.isRequired,
+        getFoo: React.PropTypes.func.isRequired,
       };
@@ -118,4 +116,4 @@ describe('renderSubtreeIntoContainer', () => {
       static childContextTypes = {
-        foo: PropTypes.string.isRequired,
-        getFoo: PropTypes.func.isRequired,
+        foo: React.PropTypes.string.isRequired,
+        getFoo: React.PropTypes.func.isRequired,
       };
@@ -159,4 +157,4 @@ describe('renderSubtreeIntoContainer', () => {
       static contextTypes = {
-        foo: PropTypes.string.isRequired,
-        getFoo: PropTypes.func.isRequired,
+        foo: React.PropTypes.string.isRequired,
+        getFoo: React.PropTypes.func.isRequired,
       };
@@ -170,4 +168,4 @@ describe('renderSubtreeIntoContainer', () => {
       static childContextTypes = {
-        foo: PropTypes.string.isRequired,
-        getFoo: PropTypes.func.isRequired,
+        foo: React.PropTypes.string.isRequired,
+        getFoo: React.PropTypes.func.isRequired,
       };
@@ -199,2 +197,3 @@ describe('renderSubtreeIntoContainer', () => {
   });
+
 });
diff --git a/src/addons/__tests__/update-test.js b/src/addons/__tests__/update-test.js
index 15cf7ff75..fe557da38 100644
--- a/src/addons/__tests__/update-test.js
+++ b/src/addons/__tests__/update-test.js
@@ -16,2 +16,3 @@ var update = require('update');
 describe('update', () => {
+
   describe('$push', () => {
@@ -28,3 +29,3 @@ describe('update', () => {
         'update(): expected spec of $push to be an array; got 7. Did you ' +
-          'forget to wrap your parameter in an array?',
+        'forget to wrap your parameter in an array?'
       );
@@ -33,3 +34,3 @@ describe('update', () => {
       expect(update.bind(null, 1, {$push: 7})).toThrowError(
-        'update(): expected target of $push to be an array; got 1.',
+        'update(): expected target of $push to be an array; got 1.'
       );
@@ -50,3 +51,3 @@ describe('update', () => {
         'update(): expected spec of $unshift to be an array; got 7. Did you ' +
-          'forget to wrap your parameter in an array?',
+        'forget to wrap your parameter in an array?'
       );
@@ -55,3 +56,3 @@ describe('update', () => {
       expect(update.bind(null, 1, {$unshift: 7})).toThrowError(
-        'update(): expected target of $unshift to be an array; got 1.',
+        'update(): expected target of $unshift to be an array; got 1.'
       );
@@ -72,3 +73,3 @@ describe('update', () => {
         'update(): expected spec of $splice to be an array of arrays; got 1. ' +
-          'Did you forget to wrap your parameters in an array?',
+        'Did you forget to wrap your parameters in an array?'
       );
@@ -76,3 +77,3 @@ describe('update', () => {
         'update(): expected spec of $splice to be an array of arrays; got 1. ' +
-          'Did you forget to wrap your parameters in an array?',
+        'Did you forget to wrap your parameters in an array?'
       );
@@ -81,3 +82,3 @@ describe('update', () => {
       expect(update.bind(null, 1, {$splice: 7})).toThrowError(
-        'Expected $splice target to be an array; got 1',
+        'Expected $splice target to be an array; got 1'
       );
@@ -97,3 +98,3 @@ describe('update', () => {
       expect(update.bind(null, {}, {$merge: 7})).toThrowError(
-        "update(): $merge expects a spec of type 'object'; got 7",
+        'update(): $merge expects a spec of type \'object\'; got 7'
       );
@@ -102,3 +103,3 @@ describe('update', () => {
       expect(update.bind(null, 7, {$merge: {a: 'b'}})).toThrowError(
-        "update(): $merge expects a target of type 'object'; got 7",
+        'update(): $merge expects a target of type \'object\'; got 7'
       );
@@ -132,3 +133,3 @@ describe('update', () => {
       expect(update.bind(null, 2, {$apply: 123})).toThrowError(
-        'update(): expected spec of $apply to be a function; got 123.',
+        'update(): expected spec of $apply to be a function; got 123.'
       );
@@ -138,27 +139,22 @@ describe('update', () => {
   it('should support deep updates', () => {
-    expect(
-      update(
-        {
-          a: 'b',
-          c: {
-            d: 'e',
-            f: [1],
-            g: [2],
-            h: [3],
-            i: {j: 'k'},
-            l: 4,
-          },
-        },
-        {
-          c: {
-            d: {$set: 'm'},
-            f: {$push: [5]},
-            g: {$unshift: [6]},
-            h: {$splice: [[0, 1, 7]]},
-            i: {$merge: {n: 'o'}},
-            l: {$apply: x => x * 2},
-          },
-        },
-      ),
-    ).toEqual({
+    expect(update({
+      a: 'b',
+      c: {
+        d: 'e',
+        f: [1],
+        g: [2],
+        h: [3],
+        i: {j: 'k'},
+        l: 4,
+      },
+    }, {
+      c: {
+        d: {$set: 'm'},
+        f: {$push: [5]},
+        g: {$unshift: [6]},
+        h: {$splice: [[0, 1, 7]]},
+        i: {$merge: {n: 'o'}},
+        l: {$apply: (x) => x * 2},
+      },
+    })).toEqual({
       a: 'b',
@@ -178,4 +174,4 @@ describe('update', () => {
       'update(): You provided a key path to update() that did not contain ' +
-        'one of $push, $unshift, $splice, $set, $merge, $apply. Did you ' +
-        'forget to include {$set: ...}?',
+      'one of $push, $unshift, $splice, $set, $merge, $apply. Did you ' +
+      'forget to include {$set: ...}?'
     );
@@ -184,4 +180,4 @@ describe('update', () => {
   it('should perform safe hasOwnProperty check', () => {
-    expect(update({}, {hasOwnProperty: {$set: 'a'}})).toEqual({
-      hasOwnProperty: 'a',
+    expect(update({}, {'hasOwnProperty': {$set: 'a'}})).toEqual({
+      'hasOwnProperty': 'a',
     });
diff --git a/src/addons/link/LinkedStateMixin.js b/src/addons/link/LinkedStateMixin.js
index 4a646095d..9e446f483 100644
--- a/src/addons/link/LinkedStateMixin.js
+++ b/src/addons/link/LinkedStateMixin.js
@@ -32,3 +32,3 @@ var LinkedStateMixin = {
       this.state[key],
-      ReactStateSetters.createStateKeySetter(this, key),
+      ReactStateSetters.createStateKeySetter(this, key)
     );
diff --git a/src/addons/link/ReactLink.js b/src/addons/link/ReactLink.js
index 273c4fdcc..d327b4f8e 100644
--- a/src/addons/link/ReactLink.js
+++ b/src/addons/link/ReactLink.js
@@ -50,2 +50,24 @@ function ReactLink(value, requestChange) {
 
+/**
+ * Creates a PropType that enforces the ReactLink API and optionally checks the
+ * type of the value being passed inside the link. Example:
+ *
+ * MyComponent.propTypes = {
+ *   tabIndexLink: ReactLink.PropTypes.link(React.PropTypes.number)
+ * }
+ */
+function createLinkTypeChecker(linkType) {
+  var shapes = {
+    value: linkType === undefined ?
+      React.PropTypes.any.isRequired :
+      linkType.isRequired,
+    requestChange: React.PropTypes.func.isRequired,
+  };
+  return React.PropTypes.shape(shapes);
+}
+
+ReactLink.PropTypes = {
+  link: createLinkTypeChecker,
+};
+
 module.exports = ReactLink;
diff --git a/src/addons/transitions/ReactCSSTransitionGroup.js b/src/addons/transitions/ReactCSSTransitionGroup.js
index 4c1fb3b6e..517c4faee 100644
--- a/src/addons/transitions/ReactCSSTransitionGroup.js
+++ b/src/addons/transitions/ReactCSSTransitionGroup.js
@@ -30,15 +30,12 @@ function createTransitionTimeoutPropValidator(transitionType) {
         return new Error(
-          timeoutPropName +
-            " wasn't supplied to ReactCSSTransitionGroup: " +
-            "this can cause unreliable animations and won't be supported in " +
-            'a future version of React. See ' +
-            'https://fb.me/react-animation-transition-group-timeout for more ' +
-            'information.',
+          timeoutPropName + ' wasn\'t supplied to ReactCSSTransitionGroup: ' +
+          'this can cause unreliable animations and won\'t be supported in ' +
+          'a future version of React. See ' +
+          'https://fb.me/react-animation-transition-group-timeout for more ' +
+          'information.'
         );
 
-        // If the duration isn't a number
+      // If the duration isn't a number
       } else if (typeof props[timeoutPropName] !== 'number') {
-        return new Error(
-          timeoutPropName + ' must be a number (in milliseconds)',
-        );
+        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
       }
@@ -73,3 +70,3 @@ class ReactCSSTransitionGroup extends React.Component {
 
-  _wrapChild = child => {
+  _wrapChild = (child) => {
     // We need to provide this childFactory so that
@@ -88,3 +85,3 @@ class ReactCSSTransitionGroup extends React.Component {
       },
-      child,
+      child
     );
@@ -95,3 +92,3 @@ class ReactCSSTransitionGroup extends React.Component {
       ReactTransitionGroup,
-      Object.assign({}, this.props, {childFactory: this._wrapChild}),
+      Object.assign({}, this.props, {childFactory: this._wrapChild})
     );
diff --git a/src/addons/transitions/ReactCSSTransitionGroupChild.js b/src/addons/transitions/ReactCSSTransitionGroupChild.js
index 94bf1fd6f..536d0a254 100644
--- a/src/addons/transitions/ReactCSSTransitionGroupChild.js
+++ b/src/addons/transitions/ReactCSSTransitionGroupChild.js
@@ -19,2 +19,3 @@ var PropTypes = propTypesFactory(React.isValidElement);
 
+
 var CSSCore = require('CSSCore');
@@ -68,6 +69,4 @@ class ReactCSSTransitionGroupChild extends React.Component {
 
-    var className =
-      this.props.name[animationType] || this.props.name + '-' + animationType;
-    var activeClassName =
-      this.props.name[animationType + 'Active'] || className + '-active';
+    var className = this.props.name[animationType] || this.props.name + '-' + animationType;
+    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';
     var timeout = null;
@@ -152,3 +151,3 @@ class ReactCSSTransitionGroupChild extends React.Component {
 
-  componentWillAppear = done => {
+  componentWillAppear = (done) => {
     if (this.props.appear) {
@@ -158,5 +157,5 @@ class ReactCSSTransitionGroupChild extends React.Component {
     }
-  };
+  }
 
-  componentWillEnter = done => {
+  componentWillEnter = (done) => {
     if (this.props.enter) {
@@ -166,5 +165,5 @@ class ReactCSSTransitionGroupChild extends React.Component {
     }
-  };
+  }
 
-  componentWillLeave = done => {
+  componentWillLeave = (done) => {
     if (this.props.leave) {
@@ -174,3 +173,3 @@ class ReactCSSTransitionGroupChild extends React.Component {
     }
-  };
+  }
 
diff --git a/src/addons/transitions/ReactTransitionChildMapping.js b/src/addons/transitions/ReactTransitionChildMapping.js
index 4ba6795df..a01bd4252 100644
--- a/src/addons/transitions/ReactTransitionChildMapping.js
+++ b/src/addons/transitions/ReactTransitionChildMapping.js
@@ -88,3 +88,3 @@ var ReactTransitionChildMapping = {
           childMapping[nextKeysPending[nextKey][i]] = getValueForKey(
-            pendingNextKey,
+            pendingNextKey
           );
diff --git a/src/addons/transitions/ReactTransitionGroup.js b/src/addons/transitions/ReactTransitionGroup.js
index cd576aa85..f067a7efb 100644
--- a/src/addons/transitions/ReactTransitionGroup.js
+++ b/src/addons/transitions/ReactTransitionGroup.js
@@ -61,3 +61,3 @@ class ReactTransitionGroup extends React.Component {
     var nextChildMapping = ReactTransitionChildMapping.getChildMapping(
-      nextProps.children,
+      nextProps.children
     );
@@ -68,3 +68,3 @@ class ReactTransitionGroup extends React.Component {
         prevChildMapping,
-        nextChildMapping,
+        nextChildMapping
       ),
@@ -76,7 +76,4 @@ class ReactTransitionGroup extends React.Component {
       var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
-      if (
-        nextChildMapping[key] &&
-        !hasPrev &&
-        !this.currentlyTransitioningKeys[key]
-      ) {
+      if (nextChildMapping[key] && !hasPrev &&
+          !this.currentlyTransitioningKeys[key]) {
         this.keysToEnter.push(key);
@@ -87,7 +84,4 @@ class ReactTransitionGroup extends React.Component {
       var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);
-      if (
-        prevChildMapping[key] &&
-        !hasNext &&
-        !this.currentlyTransitioningKeys[key]
-      ) {
+      if (prevChildMapping[key] && !hasNext &&
+          !this.currentlyTransitioningKeys[key]) {
         this.keysToLeave.push(key);
@@ -109,3 +103,3 @@ class ReactTransitionGroup extends React.Component {
 
-  performAppear = key => {
+  performAppear = (key) => {
     this.currentlyTransitioningKeys[key] = true;
@@ -115,3 +109,5 @@ class ReactTransitionGroup extends React.Component {
     if (component.componentWillAppear) {
-      component.componentWillAppear(this._handleDoneAppearing.bind(this, key));
+      component.componentWillAppear(
+        this._handleDoneAppearing.bind(this, key)
+      );
     } else {
@@ -121,3 +117,3 @@ class ReactTransitionGroup extends React.Component {
 
-  _handleDoneAppearing = key => {
+  _handleDoneAppearing = (key) => {
     var component = this.refs[key];
@@ -130,3 +126,3 @@ class ReactTransitionGroup extends React.Component {
     var currentChildMapping = ReactTransitionChildMapping.getChildMapping(
-      this.props.children,
+      this.props.children
     );
@@ -139,3 +135,3 @@ class ReactTransitionGroup extends React.Component {
 
-  performEnter = key => {
+  performEnter = (key) => {
     this.currentlyTransitioningKeys[key] = true;
@@ -145,3 +141,5 @@ class ReactTransitionGroup extends React.Component {
     if (component.componentWillEnter) {
-      component.componentWillEnter(this._handleDoneEntering.bind(this, key));
+      component.componentWillEnter(
+        this._handleDoneEntering.bind(this, key)
+      );
     } else {
@@ -151,3 +149,3 @@ class ReactTransitionGroup extends React.Component {
 
-  _handleDoneEntering = key => {
+  _handleDoneEntering = (key) => {
     var component = this.refs[key];
@@ -160,3 +158,3 @@ class ReactTransitionGroup extends React.Component {
     var currentChildMapping = ReactTransitionChildMapping.getChildMapping(
-      this.props.children,
+      this.props.children
     );
@@ -169,3 +167,3 @@ class ReactTransitionGroup extends React.Component {
 
-  performLeave = key => {
+  performLeave = (key) => {
     this.currentlyTransitioningKeys[key] = true;
@@ -183,3 +181,3 @@ class ReactTransitionGroup extends React.Component {
 
-  _handleDoneLeaving = key => {
+  _handleDoneLeaving = (key) => {
     var component = this.refs[key];
@@ -193,3 +191,3 @@ class ReactTransitionGroup extends React.Component {
     var currentChildMapping = ReactTransitionChildMapping.getChildMapping(
-      this.props.children,
+      this.props.children
     );
@@ -220,8 +218,6 @@ class ReactTransitionGroup extends React.Component {
         // leaving.
-        childrenToRender.push(
-          React.cloneElement(this.props.childFactory(child), {
-            ref: key,
-            key: key,
-          }),
-        );
+        childrenToRender.push(React.cloneElement(
+          this.props.childFactory(child),
+          {ref: key, key: key}
+        ));
       }
@@ -241,3 +237,7 @@ class ReactTransitionGroup extends React.Component {
 
-    return React.createElement(this.props.component, props, childrenToRender);
+    return React.createElement(
+      this.props.component,
+      props,
+      childrenToRender
+    );
   }
diff --git a/src/addons/transitions/__tests__/ReactTransitionChildMapping-test.js b/src/addons/transitions/__tests__/ReactTransitionChildMapping-test.js
index b6c705898..621549691 100644
--- a/src/addons/transitions/__tests__/ReactTransitionChildMapping-test.js
+++ b/src/addons/transitions/__tests__/ReactTransitionChildMapping-test.js
@@ -29,3 +29,3 @@ describe('ReactTransitionChildMapping', () => {
     expect(
-      ReactTransitionChildMapping.getChildMapping(component.props.children),
+      ReactTransitionChildMapping.getChildMapping(component.props.children)
     ).toEqual({
diff --git a/src/addons/update.js b/src/addons/update.js
index ce5fa018d..6e3c41785 100644
--- a/src/addons/update.js
+++ b/src/addons/update.js
@@ -11,3 +11,3 @@
 
-/* global hasOwnProperty:true */
+ /* global hasOwnProperty:true */
 
@@ -55,3 +55,3 @@ function invariantArrayCase(value, spec, command) {
     command,
-    value,
+    value
   );
@@ -61,5 +61,5 @@ function invariantArrayCase(value, spec, command) {
     'update(): expected spec of %s to be an array; got %s. ' +
-      'Did you forget to wrap your parameter in an array?',
+    'Did you forget to wrap your parameter in an array?',
     command,
-    specValue,
+    specValue
   );
@@ -75,5 +75,5 @@ function update(value, spec) {
     'update(): You provided a key path to update() that did not contain one ' +
-      'of %s. Did you forget to include {%s: ...}?',
+    'of %s. Did you forget to include {%s: ...}?',
     ALL_COMMANDS_LIST.join(', '),
-    COMMAND_SET,
+    COMMAND_SET
   );
@@ -84,3 +84,3 @@ function update(value, spec) {
       'Cannot have more than one key in an object with %s',
-      COMMAND_SET,
+      COMMAND_SET
     );
@@ -96,5 +96,5 @@ function update(value, spec) {
       mergeObj && typeof mergeObj === 'object',
-      "update(): %s expects a spec of type 'object'; got %s",
+      'update(): %s expects a spec of type \'object\'; got %s',
       COMMAND_MERGE,
-      mergeObj,
+      mergeObj
     );
@@ -102,5 +102,5 @@ function update(value, spec) {
       nextValue && typeof nextValue === 'object',
-      "update(): %s expects a target of type 'object'; got %s",
+      'update(): %s expects a target of type \'object\'; got %s',
       COMMAND_MERGE,
-      nextValue,
+      nextValue
     );
@@ -128,3 +128,3 @@ function update(value, spec) {
       COMMAND_SPLICE,
-      value,
+      value
     );
@@ -133,5 +133,5 @@ function update(value, spec) {
       'update(): expected spec of %s to be an array of arrays; got %s. ' +
-        'Did you forget to wrap your parameters in an array?',
+      'Did you forget to wrap your parameters in an array?',
       COMMAND_SPLICE,
-      spec[COMMAND_SPLICE],
+      spec[COMMAND_SPLICE]
     );
@@ -141,5 +141,5 @@ function update(value, spec) {
         'update(): expected spec of %s to be an array of arrays; got %s. ' +
-          'Did you forget to wrap your parameters in an array?',
+        'Did you forget to wrap your parameters in an array?',
         COMMAND_SPLICE,
-        spec[COMMAND_SPLICE],
+        spec[COMMAND_SPLICE]
       );
@@ -154,3 +154,3 @@ function update(value, spec) {
       COMMAND_APPLY,
-      spec[COMMAND_APPLY],
+      spec[COMMAND_APPLY]
     );
diff --git a/src/isomorphic/React.js b/src/isomorphic/React.js
index 29cfea6da..39b6aa31c 100644
--- a/src/isomorphic/React.js
+++ b/src/isomorphic/React.js
@@ -13,4 +13,6 @@
 
-var ReactBaseClasses = require('ReactBaseClasses');
 var ReactChildren = require('ReactChildren');
+var ReactComponent = require('ReactComponent');
+var ReactPureComponent = require('ReactPureComponent');
+var ReactClass = require('ReactClass');
 var ReactDOMFactories = require('ReactDOMFactories');
@@ -20,4 +22,4 @@ var ReactVersion = require('ReactVersion');
 
-var createReactClass = require('createClass');
 var onlyChild = require('onlyChild');
+var warning = require('warning');
 
@@ -28,3 +30,2 @@ var cloneElement = ReactElement.cloneElement;
 if (__DEV__) {
-  var lowPriorityWarning = require('lowPriorityWarning');
   var canDefineProperty = require('canDefineProperty');
@@ -38,32 +39,16 @@ if (__DEV__) {
 var __spread = Object.assign;
-var createMixin = function(mixin) {
-  return mixin;
-};
 
 if (__DEV__) {
-  var warnedForSpread = false;
-  var warnedForCreateMixin = false;
+  var warned = false;
   __spread = function() {
-    lowPriorityWarning(
-      warnedForSpread,
+    warning(
+      warned,
       'React.__spread is deprecated and should not be used. Use ' +
-        'Object.assign directly or another helper function with similar ' +
-        'semantics. You may be seeing this warning due to your compiler. ' +
-        'See https://fb.me/react-spread-deprecation for more details.',
+      'Object.assign directly or another helper function with similar ' +
+      'semantics. You may be seeing this warning due to your compiler. ' +
+      'See https://fb.me/react-spread-deprecation for more details.'
     );
-    warnedForSpread = true;
+    warned = true;
     return Object.assign.apply(null, arguments);
   };
-
-  createMixin = function(mixin) {
-    lowPriorityWarning(
-      warnedForCreateMixin,
-      'React.createMixin is deprecated and should not be used. ' +
-        'In React v16.0, it will be removed. ' +
-        'You can use this mixin directly instead. ' +
-        'See https://fb.me/createmixin-was-never-implemented for more info.',
-    );
-    warnedForCreateMixin = true;
-    return mixin;
-  };
 }
@@ -71,2 +56,3 @@ if (__DEV__) {
 var React = {
+
   // Modern
@@ -81,4 +67,4 @@ var React = {
 
-  Component: ReactBaseClasses.Component,
-  PureComponent: ReactBaseClasses.PureComponent,
+  Component: ReactComponent,
+  PureComponent: ReactPureComponent,
 
@@ -91,5 +77,8 @@ var React = {
   PropTypes: ReactPropTypes,
-  createClass: createReactClass,
+  createClass: ReactClass.createClass,
   createFactory: createFactory,
-  createMixin: createMixin,
+  createMixin: function(mixin) {
+    // Currently a noop. Will be used to validate and trace mixins.
+    return mixin;
+  },
 
@@ -105,4 +94,4 @@ var React = {
 
+// TODO: Fix tests so that this deprecation warning doesn't cause failures.
 if (__DEV__) {
-  let warnedForCreateClass = false;
   if (canDefineProperty) {
@@ -110,9 +99,6 @@ if (__DEV__) {
       get() {
-        lowPriorityWarning(
+        warning(
           didWarnPropTypesDeprecated,
-          'Accessing PropTypes via the main React package is deprecated,' +
-            ' and will be removed in  React v16.0.' +
-            ' Use the latest available v15.* prop-types package from npm instead.' +
-            ' For info on usage, compatibility, migration and more, see ' +
-            'https://fb.me/prop-types-docs',
+          'Accessing PropTypes via the main React package is deprecated. Use ' +
+          'the prop-types package from npm instead.'
         );
@@ -122,42 +108,3 @@ if (__DEV__) {
     });
-
-    Object.defineProperty(React, 'createClass', {
-      get: function() {
-        lowPriorityWarning(
-          warnedForCreateClass,
-          'Accessing createClass via the main React package is deprecated,' +
-            ' and will be removed in React v16.0.' +
-            " Use a plain JavaScript class instead. If you're not yet " +
-            'ready to migrate, create-react-class v15.* is available ' +
-            'on npm as a temporary, drop-in replacement. ' +
-            'For more info see https://fb.me/react-create-class',
-        );
-        warnedForCreateClass = true;
-        return createReactClass;
-      },
-    });
   }
-
-  // React.DOM factories are deprecated. Wrap these methods so that
-  // invocations of the React.DOM namespace and alert users to switch
-  // to the `react-dom-factories` package.
-  React.DOM = {};
-  var warnedForFactories = false;
-  Object.keys(ReactDOMFactories).forEach(function(factory) {
-    React.DOM[factory] = function(...args) {
-      if (!warnedForFactories) {
-        lowPriorityWarning(
-          false,
-          'Accessing factories like React.DOM.%s has been deprecated ' +
-            'and will be removed in v16.0+. Use the ' +
-            'react-dom-factories package instead. ' +
-            ' Version 1.0 provides a drop-in replacement.' +
-            ' For more info, see https://fb.me/react-dom-factories',
-          factory,
-        );
-        warnedForFactories = true;
-      }
-      return ReactDOMFactories[factory](...args);
-    };
-  });
 }
diff --git a/src/isomorphic/__tests__/React-test.js b/src/isomorphic/__tests__/React-test.js
deleted file mode 100644
index 7a2d0c9ac..000000000
--- a/src/isomorphic/__tests__/React-test.js
+++ /dev/null
@@ -1,71 +0,0 @@
-/**
- * Copyright 2013-present, Facebook, Inc.
- * All rights reserved.
- *
- * This source code is licensed under the BSD-style license found in the
- * LICENSE file in the root directory of this source tree. An additional grant
- * of patent rights can be found in the PATENTS file in the same directory.
- *
- * @emails react-core
- */
-
-'use strict';
-
-describe('React', () => {
-  var React;
-
-  beforeEach(() => {
-    React = require('React');
-  });
-
-  it('should log a deprecation warning once when using React.__spread', () => {
-    spyOn(console, 'warn');
-    React.__spread({});
-    React.__spread({});
-    expect(console.warn.calls.count()).toBe(1);
-    expect(console.warn.calls.argsFor(0)[0]).toContain(
-      'React.__spread is deprecated and should not be used',
-    );
-  });
-
-  it('should log a deprecation warning once when using React.createMixin', () => {
-    spyOn(console, 'warn');
-    React.createMixin();
-    React.createMixin();
-    expect(console.warn.calls.count()).toBe(1);
-    expect(console.warn.calls.argsFor(0)[0]).toContain(
-      'React.createMixin is deprecated and should not be used',
-    );
-  });
-
-  it('should warn once when attempting to access React.createClass', () => {
-    spyOn(console, 'warn');
-    let createClass = React.createClass;
-    createClass = React.createClass;
-    expect(createClass).not.toBe(undefined);
-    expect(console.warn.calls.count()).toBe(1);
-    expect(console.warn.calls.argsFor(0)[0]).toContain(
-      'Warning: Accessing createClass via the main React package is ' +
-        'deprecated, and will be removed in React v16.0. ' +
-        "Use a plain JavaScript class instead. If you're not yet ready " +
-        'to migrate, create-react-class v15.* is available on npm as ' +
-        'a temporary, drop-in replacement. ' +
-        'For more info see https://fb.me/react-create-class',
-    );
-  });
-
-  it('should warn once when attempting to access React.PropTypes', () => {
-    spyOn(console, 'warn');
-    let PropTypes = React.PropTypes;
-    PropTypes = React.PropTypes;
-    expect(PropTypes).not.toBe(undefined);
-    expect(console.warn.calls.count()).toBe(1);
-    expect(console.warn.calls.argsFor(0)[0]).toContain(
-      'Warning: Accessing PropTypes via the main React package is ' +
-        'deprecated, and will be removed in  React v16.0. ' +
-        'Use the latest available v15.* prop-types package from ' +
-        'npm instead. For info on usage, compatibility, migration ' +
-        'and more, see https://fb.me/prop-types-docs',
-    );
-  });
-});
diff --git a/src/isomorphic/children/ReactChildren.js b/src/isomorphic/children/ReactChildren.js
index 645c361ff..75670dbe3 100644
--- a/src/isomorphic/children/ReactChildren.js
+++ b/src/isomorphic/children/ReactChildren.js
@@ -22,2 +22,3 @@ var fourArgumentPooler = PooledClass.fourArgumentPooler;
 
+
 var userProvidedKeyEscapeRegex = /\/+/g;
@@ -27,2 +28,3 @@ function escapeUserProvidedKey(text) {
 
+
 /**
@@ -68,6 +70,4 @@ function forEachChildren(children, forEachFunc, forEachContext) {
   }
-  var traverseContext = ForEachBookKeeping.getPooled(
-    forEachFunc,
-    forEachContext,
-  );
+  var traverseContext =
+    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
   traverseAllChildren(children, forEachSingleChild, traverseContext);
@@ -76,2 +76,3 @@ function forEachChildren(children, forEachFunc, forEachContext) {
 
+
 /**
@@ -110,3 +111,3 @@ function mapSingleChildIntoContext(bookKeeping, child, childKey) {
       childKey,
-      emptyFunction.thatReturnsArgument,
+      emptyFunction.thatReturnsArgument
     );
@@ -119,6 +120,8 @@ function mapSingleChildIntoContext(bookKeeping, child, childKey) {
         keyPrefix +
-          (mappedChild.key && (!child || child.key !== mappedChild.key)
-            ? escapeUserProvidedKey(mappedChild.key) + '/'
-            : '') +
-          childKey,
+        (
+          (mappedChild.key && (!child || (child.key !== mappedChild.key))) ?
+          escapeUserProvidedKey(mappedChild.key) + '/' :
+          ''
+        ) +
+        childKey
       );
@@ -138,3 +141,3 @@ function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
     func,
-    context,
+    context
   );
@@ -166,2 +169,4 @@ function mapChildren(children, func, context) {
 
+
+
 function forEachSingleChildDummy(traverseContext, child, name) {
@@ -183,2 +188,3 @@ function countChildren(children, context) {
 
+
 /**
@@ -195,3 +201,3 @@ function toArray(children) {
     null,
-    emptyFunction.thatReturnsArgument,
+    emptyFunction.thatReturnsArgument
   );
@@ -200,2 +206,3 @@ function toArray(children) {
 
+
 var ReactChildren = {
diff --git a/src/isomorphic/children/__tests__/ReactChildren-test.js b/src/isomorphic/children/__tests__/ReactChildren-test.js
index d6e6a8bfc..6eb4c89e2 100644
--- a/src/isomorphic/children/__tests__/ReactChildren-test.js
+++ b/src/isomorphic/children/__tests__/ReactChildren-test.js
@@ -71,2 +71,3 @@ describe('ReactChildren', () => {
     expect(mappedChildren[0]).toEqual(<span key=".$simple" />);
+
   });
@@ -104,7 +105,4 @@ describe('ReactChildren', () => {
 
-    var mappedChildren = ReactChildren.map(
-      instance.props.children,
-      callback,
-      scopeTester,
-    );
+    var mappedChildren =
+      ReactChildren.map(instance.props.children, callback, scopeTester);
 
@@ -122,5 +120,5 @@ describe('ReactChildren', () => {
     var mapped = [
-      <div key="giraffe" />, // Key should be joined to obj key
-      null, // Key should be added even if we don't supply it!
-      <div />, // Key should be added even if not supplied!
+      <div key="giraffe" />,  // Key should be joined to obj key
+      null,  // Key should be added even if we don't supply it!
+      <div />,  // Key should be added even if not supplied!
       <span />, // Map from null to something.
@@ -150,3 +148,4 @@ describe('ReactChildren', () => {
 
-    var mappedChildren = ReactChildren.map(instance.props.children, callback);
+    var mappedChildren =
+      ReactChildren.map(instance.props.children, callback);
     expect(callback.calls.count()).toBe(5);
@@ -159,3 +158,5 @@ describe('ReactChildren', () => {
       mappedChildren[3].key,
-    ]).toEqual(['giraffe/.$keyZero', '.$keyTwo', '.3', '.$keyFour']);
+    ]).toEqual(
+      ['giraffe/.$keyZero', '.$keyTwo', '.3', '.$keyFour']
+    );
 
@@ -186,4 +187,4 @@ describe('ReactChildren', () => {
 
-    var zeroMapped = <div key="giraffe" />; // Key should be overridden
-    var twoMapped = <div />; // Key should be added even if not supplied!
+    var zeroMapped = <div key="giraffe" />;  // Key should be overridden
+    var twoMapped = <div />;  // Key should be added even if not supplied!
     var fourMapped = <div key="keyFour" />;
@@ -192,5 +193,5 @@ describe('ReactChildren', () => {
     var callback = jasmine.createSpy().and.callFake(function(kid, index) {
-      return index === 0
-        ? zeroMapped
-        : index === 1 ? twoMapped : index === 2 ? fourMapped : fiveMapped;
+      return index === 0 ? zeroMapped :
+        index === 1 ? twoMapped :
+        index === 2 ? fourMapped : fiveMapped;
     });
@@ -204,3 +205,8 @@ describe('ReactChildren', () => {
 
-    expect([frag[0].key, frag[1].key, frag[2].key, frag[3].key]).toEqual([
+    expect([
+      frag[0].key,
+      frag[1].key,
+      frag[2].key,
+      frag[3].key,
+    ]).toEqual([
       'firstHalfKey/.$keyZero',
@@ -240,9 +246,5 @@ describe('ReactChildren', () => {
 
-    expect(mappedChildren[0]).toEqual(
-      <div key="giraffe/.0:$firstHalfKey/.$keyZero" />,
-    );
+    expect(mappedChildren[0]).toEqual(<div key="giraffe/.0:$firstHalfKey/.$keyZero" />);
     expect(mappedChildren[1]).toEqual(<div key=".0:$firstHalfKey/.$keyTwo" />);
-    expect(mappedChildren[2]).toEqual(
-      <div key="keyFour/.0:$secondHalfKey/.$keyFour" />,
-    );
+    expect(mappedChildren[2]).toEqual(<div key="keyFour/.0:$secondHalfKey/.$keyFour" />);
     expect(mappedChildren[3]).toEqual(<div key=".0:$keyFive/.$keyFiveInner" />);
@@ -271,7 +273,5 @@ describe('ReactChildren', () => {
     var expectedForcedKeys = ['giraffe/.$keyZero', '.$keyOne'];
-    var mappedChildrenForcedKeys = ReactChildren.map(
-      forcedKeys.props.children,
-      mapFn,
-    );
-    var mappedForcedKeys = mappedChildrenForcedKeys.map(c => c.key);
+    var mappedChildrenForcedKeys =
+      ReactChildren.map(forcedKeys.props.children, mapFn);
+    var mappedForcedKeys = mappedChildrenForcedKeys.map((c) => c.key);
     expect(mappedForcedKeys).toEqual(expectedForcedKeys);
@@ -282,9 +282,8 @@ describe('ReactChildren', () => {
     ];
-    var remappedChildrenForcedKeys = ReactChildren.map(
-      mappedChildrenForcedKeys,
-      mapFn,
-    );
-    expect(remappedChildrenForcedKeys.map(c => c.key)).toEqual(
-      expectedRemappedForcedKeys,
-    );
+    var remappedChildrenForcedKeys =
+      ReactChildren.map(mappedChildrenForcedKeys, mapFn);
+    expect(
+      remappedChildrenForcedKeys.map((c) => c.key)
+    ).toEqual(expectedRemappedForcedKeys);
+
   });
@@ -318,6 +317,10 @@ describe('ReactChildren', () => {
 
-    var mapped = ReactChildren.map(instance.props.children, element => element);
+    var mapped = ReactChildren.map(
+      instance.props.children,
+      element => element,
+    );
 
-    var mappedWithClone = ReactChildren.map(instance.props.children, element =>
-      React.cloneElement(element),
+    var mappedWithClone = ReactChildren.map(
+      instance.props.children,
+      element => React.cloneElement(element),
     );
@@ -334,6 +337,10 @@ describe('ReactChildren', () => {
 
-    var mapped = ReactChildren.map(instance.props.children, element => element);
+    var mapped = ReactChildren.map(
+      instance.props.children,
+      element => element,
+    );
 
-    var mappedWithClone = ReactChildren.map(instance.props.children, element =>
-      React.cloneElement(element, {key: 'unique'}),
+    var mappedWithClone = ReactChildren.map(
+      instance.props.children,
+      element => React.cloneElement(element, {key: 'unique'}),
     );
@@ -394,12 +401,10 @@ describe('ReactChildren', () => {
     var instance = (
-      <div>
-        {[
-          ReactFragment.create({
-            firstHalfKey: [zero, one, two],
-            secondHalfKey: [three, four],
-            keyFive: five,
-          }),
-          null,
-        ]}
-      </div>
+      <div>{[
+        ReactFragment.create({
+          firstHalfKey: [zero, one, two],
+          secondHalfKey: [three, four],
+          keyFive: five,
+        }),
+        null,
+      ]}</div>
     );
@@ -415,4 +420,6 @@ describe('ReactChildren', () => {
     expect(ReactChildren.toArray([<div />]).length).toBe(1);
-    expect(ReactChildren.toArray(<div />)[0].key).toBe(
-      ReactChildren.toArray([<div />])[0].key,
+    expect(
+      ReactChildren.toArray(<div />)[0].key
+    ).toBe(
+      ReactChildren.toArray([<div />])[0].key
     );
@@ -440,7 +447,7 @@ describe('ReactChildren', () => {
     // null/undefined/bool are all omitted
-    expect(ReactChildren.toArray([1, 'two', null, undefined, true])).toEqual([
-      1,
-      'two',
-    ]);
+    expect(ReactChildren.toArray([1, 'two', null, undefined, true])).toEqual(
+      [1, 'two']
+    );
   });
+
 });
diff --git a/src/isomorphic/children/__tests__/onlyChild-test.js b/src/isomorphic/children/__tests__/onlyChild-test.js
index 0c8870c6d..8de1c9b80 100644
--- a/src/isomorphic/children/__tests__/onlyChild-test.js
+++ b/src/isomorphic/children/__tests__/onlyChild-test.js
@@ -14,2 +14,3 @@
 describe('onlyChild', () => {
+
   var React;
@@ -36,3 +37,3 @@ describe('onlyChild', () => {
     expect(function() {
-      var instance = (
+      var instance =
         <WrapComponent>
@@ -40,4 +41,3 @@ describe('onlyChild', () => {
           <span />
-        </WrapComponent>
-      );
+        </WrapComponent>;
       onlyChild(instance.props.children);
@@ -48,7 +48,6 @@ describe('onlyChild', () => {
     expect(function() {
-      var instance = (
+      var instance =
         <WrapComponent>
           {null}
-        </WrapComponent>
-      );
+        </WrapComponent>;
       onlyChild(instance.props.children);
@@ -57,7 +56,6 @@ describe('onlyChild', () => {
     expect(function() {
-      var instance = (
+      var instance =
         <WrapComponent>
           {undefined}
-        </WrapComponent>
-      );
+        </WrapComponent>;
       onlyChild(instance.props.children);
@@ -68,7 +66,6 @@ describe('onlyChild', () => {
     expect(function() {
-      var instance = (
+      var instance =
         <WrapComponent>
           {ReactFragment.create({oneThing: <span />})}
-        </WrapComponent>
-      );
+        </WrapComponent>;
       onlyChild(instance.props.children);
@@ -77,9 +74,9 @@ describe('onlyChild', () => {
 
+
   it('should not fail when passed interpolated single child', () => {
     expect(function() {
-      var instance = (
+      var instance =
         <WrapComponent>
           {<span />}
-        </WrapComponent>
-      );
+        </WrapComponent>;
       onlyChild(instance.props.children);
@@ -88,9 +85,9 @@ describe('onlyChild', () => {
 
+
   it('should return the only child', () => {
     expect(function() {
-      var instance = (
+      var instance =
         <WrapComponent>
           <span />
-        </WrapComponent>
-      );
+        </WrapComponent>;
       onlyChild(instance.props.children);
@@ -98,2 +95,3 @@ describe('onlyChild', () => {
   });
+
 });
diff --git a/src/isomorphic/children/__tests__/sliceChildren-test.js b/src/isomorphic/children/__tests__/sliceChildren-test.js
index d255324a7..5b41e1f24 100644
--- a/src/isomorphic/children/__tests__/sliceChildren-test.js
+++ b/src/isomorphic/children/__tests__/sliceChildren-test.js
@@ -14,2 +14,3 @@
 describe('sliceChildren', () => {
+
   var React;
@@ -25,3 +26,7 @@ describe('sliceChildren', () => {
   it('should render the whole set if start zero is supplied', () => {
-    var fullSet = [<div key="A" />, <div key="B" />, <div key="C" />];
+    var fullSet = [
+      <div key="A" />,
+      <div key="B" />,
+      <div key="C" />,
+    ];
     var children = sliceChildren(fullSet, 0);
@@ -35,5 +40,12 @@ describe('sliceChildren', () => {
   it('should render the remaining set if no end index is supplied', () => {
-    var fullSet = [<div key="A" />, <div key="B" />, <div key="C" />];
+    var fullSet = [
+      <div key="A" />,
+      <div key="B" />,
+      <div key="C" />,
+    ];
     var children = sliceChildren(fullSet, 1);
-    expect(children).toEqual([<div key=".$B" />, <div key=".$C" />]);
+    expect(children).toEqual([
+      <div key=".$B" />,
+      <div key=".$C" />,
+    ]);
   });
@@ -48,3 +60,5 @@ describe('sliceChildren', () => {
     var children = sliceChildren(fullSet, 1, 2);
-    expect(children).toEqual([<div key=".$B" />]);
+    expect(children).toEqual([
+      <div key=".$B" />,
+    ]);
   });
@@ -58,3 +72,5 @@ describe('sliceChildren', () => {
     var children = sliceChildren(el.props.children, 1, 2);
-    expect(children).toEqual([<b key=".1" />]);
+    expect(children).toEqual([
+      <b key=".1" />,
+    ]);
   });
@@ -64,3 +80,6 @@ describe('sliceChildren', () => {
       <div key="A" />,
-      [<div key="B" />, <div key="C" />],
+      [
+        <div key="B" />,
+        <div key="C" />,
+      ],
       <div key="D" />,
@@ -68,4 +87,7 @@ describe('sliceChildren', () => {
     var children = sliceChildren(fullSet, 1, 2);
-    expect(children).toEqual([<div key=".1:$B" />]);
+    expect(children).toEqual([
+      <div key=".1:$B" />,
+    ]);
   });
+
 });
diff --git a/src/isomorphic/children/onlyChild.js b/src/isomorphic/children/onlyChild.js
index 8801fd6dc..43ec44f29 100644
--- a/src/isomorphic/children/onlyChild.js
+++ b/src/isomorphic/children/onlyChild.js
@@ -33,3 +33,3 @@ function onlyChild(children) {
     ReactElement.isValidElement(children),
-    'React.Children.only expected to receive a single React element child.',
+    'React.Children.only expected to receive a single React element child.'
   );
diff --git a/src/isomorphic/classic/__tests__/ReactContextValidator-test.js b/src/isomorphic/classic/__tests__/ReactContextValidator-test.js
index 29a9ac891..f6efecc9b 100644
--- a/src/isomorphic/classic/__tests__/ReactContextValidator-test.js
+++ b/src/isomorphic/classic/__tests__/ReactContextValidator-test.js
@@ -19,3 +19,2 @@
 
-var PropTypes;
 var React;
@@ -37,3 +36,2 @@ describe('ReactContextValidator', () => {
     ReactTestUtils = require('ReactTestUtils');
-    PropTypes = require('prop-types');
     reactComponentExpect = require('reactComponentExpect');
@@ -51,3 +49,3 @@ describe('ReactContextValidator', () => {
     Component.contextTypes = {
-      foo: PropTypes.string,
+      foo: React.PropTypes.string,
     };
@@ -67,12 +65,8 @@ describe('ReactContextValidator', () => {
     ComponentInFooBarContext.childContextTypes = {
-      foo: PropTypes.string,
-      bar: PropTypes.number,
+      foo: React.PropTypes.string,
+      bar: React.PropTypes.number,
     };
 
-    var instance = ReactTestUtils.renderIntoDocument(
-      <ComponentInFooBarContext />,
-    );
-    reactComponentExpect(instance)
-      .expectRenderedChild()
-      .scalarContextEqual({foo: 'abc'});
+    var instance = ReactTestUtils.renderIntoDocument(<ComponentInFooBarContext />);
+    reactComponentExpect(instance).expectRenderedChild().scalarContextEqual({foo: 'abc'});
   });
@@ -98,4 +92,4 @@ describe('ReactContextValidator', () => {
     Parent.childContextTypes = {
-      foo: PropTypes.string.isRequired,
-      bar: PropTypes.string.isRequired,
+      foo: React.PropTypes.string.isRequired,
+      bar: React.PropTypes.string.isRequired,
     };
@@ -126,5 +120,6 @@ describe('ReactContextValidator', () => {
     Component.contextTypes = {
-      foo: PropTypes.string,
+      foo: React.PropTypes.string,
     };
 
+
     var container = document.createElement('div');
@@ -147,3 +142,3 @@ describe('ReactContextValidator', () => {
     Component.contextTypes = {
-      foo: PropTypes.string.isRequired,
+      foo: React.PropTypes.string.isRequired,
     };
@@ -155,5 +150,5 @@ describe('ReactContextValidator', () => {
       'Warning: Failed context type: ' +
-        'The context `foo` is marked as required in `Component`, but its value ' +
-        'is `undefined`.\n' +
-        '    in Component (at **)',
+      'The context `foo` is marked as required in `Component`, but its value ' +
+      'is `undefined`.\n' +
+      '    in Component (at **)'
     );
@@ -172,3 +167,3 @@ describe('ReactContextValidator', () => {
     ComponentInFooStringContext.childContextTypes = {
-      foo: PropTypes.string,
+      foo: React.PropTypes.string,
     };
@@ -176,3 +171,3 @@ describe('ReactContextValidator', () => {
     ReactTestUtils.renderIntoDocument(
-      <ComponentInFooStringContext fooValue={'bar'} />,
+      <ComponentInFooStringContext fooValue={'bar'} />
     );
@@ -194,8 +189,6 @@ describe('ReactContextValidator', () => {
     ComponentInFooNumberContext.childContextTypes = {
-      foo: PropTypes.number,
+      foo: React.PropTypes.number,
     };
 
-    ReactTestUtils.renderIntoDocument(
-      <ComponentInFooNumberContext fooValue={123} />,
-    );
+    ReactTestUtils.renderIntoDocument(<ComponentInFooNumberContext fooValue={123} />);
 
@@ -204,6 +197,6 @@ describe('ReactContextValidator', () => {
       'Warning: Failed context type: ' +
-        'Invalid context `foo` of type `number` supplied ' +
-        'to `Component`, expected `string`.\n' +
-        '    in Component (at **)\n' +
-        '    in ComponentInFooNumberContext (at **)',
+      'Invalid context `foo` of type `number` supplied ' +
+      'to `Component`, expected `string`.\n' +
+      '    in Component (at **)\n' +
+      '    in ComponentInFooNumberContext (at **)'
     );
@@ -224,4 +217,4 @@ describe('ReactContextValidator', () => {
     Component.childContextTypes = {
-      foo: PropTypes.string.isRequired,
-      bar: PropTypes.number,
+      foo: React.PropTypes.string.isRequired,
+      bar: React.PropTypes.number,
     };
@@ -232,5 +225,5 @@ describe('ReactContextValidator', () => {
       'Warning: Failed child context type: ' +
-        'The child context `foo` is marked as required in `Component`, but its ' +
-        'value is `undefined`.\n' +
-        '    in Component (at **)',
+      'The child context `foo` is marked as required in `Component`, but its ' +
+      'value is `undefined`.\n' +
+      '    in Component (at **)'
     );
@@ -242,5 +235,5 @@ describe('ReactContextValidator', () => {
       'Warning: Failed child context type: ' +
-        'Invalid child context `foo` of type `number` ' +
-        'supplied to `Component`, expected `string`.\n' +
-        '    in Component (at **)',
+      'Invalid child context `foo` of type `number` ' +
+      'supplied to `Component`, expected `string`.\n' +
+      '    in Component (at **)'
     );
@@ -248,6 +241,8 @@ describe('ReactContextValidator', () => {
     ReactTestUtils.renderIntoDocument(
-      <Component testContext={{foo: 'foo', bar: 123}} />,
+      <Component testContext={{foo: 'foo', bar: 123}} />
     );
 
-    ReactTestUtils.renderIntoDocument(<Component testContext={{foo: 'foo'}} />);
+    ReactTestUtils.renderIntoDocument(
+      <Component testContext={{foo: 'foo'}} />
+    );
 
@@ -256,2 +251,3 @@ describe('ReactContextValidator', () => {
   });
+
 });
diff --git a/src/isomorphic/classic/class/ReactClass.js b/src/isomorphic/classic/class/ReactClass.js
new file mode 100644
index 000000000..9c9506e63
--- /dev/null
+++ b/src/isomorphic/classic/class/ReactClass.js
@@ -0,0 +1,902 @@
+/**
+ * Copyright 2013-present, Facebook, Inc.
+ * All rights reserved.
+ *
+ * This source code is licensed under the BSD-style license found in the
+ * LICENSE file in the root directory of this source tree. An additional grant
+ * of patent rights can be found in the PATENTS file in the same directory.
+ *
+ * @providesModule ReactClass
+ */
+
+'use strict';
+
+var ReactComponent = require('ReactComponent');
+var ReactElement = require('ReactElement');
+var ReactPropTypeLocationNames = require('ReactPropTypeLocationNames');
+var ReactNoopUpdateQueue = require('ReactNoopUpdateQueue');
+
+var emptyObject = require('emptyObject');
+var invariant = require('invariant');
+var warning = require('warning');
+
+import type { ReactPropTypeLocations } from 'ReactPropTypeLocations';
+
+var MIXINS_KEY = 'mixins';
+
+// Helper function to allow the creation of anonymous functions which do not
+// have .name set to the name of the variable being assigned to.
+function identity(fn) {
+  return fn;
+}
+
+/**
+ * Policies that describe methods in `ReactClassInterface`.
+ */
+type SpecPolicy =
+  /**
+   * These methods may be defined only once by the class specification or mixin.
+   */
+  'DEFINE_ONCE' |
+  /**
+   * These methods may be defined by both the class specification and mixins.
+   * Subsequent definitions will be chained. These methods must return void.
+   */
+  'DEFINE_MANY' |
+  /**
+   * These methods are overriding the base class.
+   */
+  'OVERRIDE_BASE' |
+  /**
+   * These methods are similar to DEFINE_MANY, except we assume they return
+   * objects. We try to merge the keys of the return values of all the mixed in
+   * functions. If there is a key conflict we throw.
+   */
+  'DEFINE_MANY_MERGED';
+
+
+var injectedMixins = [];
+
+/**
+ * Composite components are higher-level components that compose other composite
+ * or host components.
+ *
+ * To create a new type of `ReactClass`, pass a specification of
+ * your new class to `React.createClass`. The only requirement of your class
+ * specification is that you implement a `render` method.
+ *
+ *   var MyComponent = React.createClass({
+ *     render: function() {
+ *       return <div>Hello World</div>;
+ *     }
+ *   });
+ *
+ * The class specification supports a specific protocol of methods that have
+ * special meaning (e.g. `render`). See `ReactClassInterface` for
+ * more the comprehensive protocol. Any other properties and methods in the
+ * class specification will be available on the prototype.
+ *
+ * @interface ReactClassInterface
+ * @internal
+ */
+var ReactClassInterface: {[key: string]: SpecPolicy} = {
+
+  /**
+   * An array of Mixin objects to include when defining your component.
+   *
+   * @type {array}
+   * @optional
+   */
+  mixins: 'DEFINE_MANY',
+
+  /**
+   * An object containing properties and methods that should be defined on
+   * the component's constructor instead of its prototype (static methods).
+   *
+   * @type {object}
+   * @optional
+   */
+  statics: 'DEFINE_MANY',
+
+  /**
+   * Definition of prop types for this component.
+   *
+   * @type {object}
+   * @optional
+   */
+  propTypes: 'DEFINE_MANY',
+
+  /**
+   * Definition of context types for this component.
+   *
+   * @type {object}
+   * @optional
+   */
+  contextTypes: 'DEFINE_MANY',
+
+  /**
+   * Definition of context types this component sets for its children.
+   *
+   * @type {object}
+   * @optional
+   */
+  childContextTypes: 'DEFINE_MANY',
+
+  // ==== Definition methods ====
+
+  /**
+   * Invoked when the component is mounted. Values in the mapping will be set on
+   * `this.props` if that prop is not specified (i.e. using an `in` check).
+   *
+   * This method is invoked before `getInitialState` and therefore cannot rely
+   * on `this.state` or use `this.setState`.
+   *
+   * @return {object}
+   * @optional
+   */
+  getDefaultProps: 'DEFINE_MANY_MERGED',
+
+  /**
+   * Invoked once before the component is mounted. The return value will be used
+   * as the initial value of `this.state`.
+   *
+   *   getInitialState: function() {
+   *     return {
+   *       isOn: false,
+   *       fooBaz: new BazFoo()
+   *     }
+   *   }
+   *
+   * @return {object}
+   * @optional
+   */
+  getInitialState: 'DEFINE_MANY_MERGED',
+
+  /**
+   * @return {object}
+   * @optional
+   */
+  getChildContext: 'DEFINE_MANY_MERGED',
+
+  /**
+   * Uses props from `this.props` and state from `this.state` to render the
+   * structure of the component.
+   *
+   * No guarantees are made about when or how often this method is invoked, so
+   * it must not have side effects.
+   *
+   *   render: function() {
+   *     var name = this.props.name;
+   *     return <div>Hello, {name}!</div>;
+   *   }
+   *
+   * @return {ReactComponent}
+   * @required
+   */
+  render: 'DEFINE_ONCE',
+
+
+
+  // ==== Delegate methods ====
+
+  /**
+   * Invoked when the component is initially created and about to be mounted.
+   * This may have side effects, but any external subscriptions or data created
+   * by this method must be cleaned up in `componentWillUnmount`.
+   *
+   * @optional
+   */
+  componentWillMount: 'DEFINE_MANY',
+
+  /**
+   * Invoked when the component has been mounted and has a DOM representation.
+   * However, there is no guarantee that the DOM node is in the document.
+   *
+   * Use this as an opportunity to operate on the DOM when the component has
+   * been mounted (initialized and rendered) for the first time.
+   *
+   * @param {DOMElement} rootNode DOM element representing the component.
+   * @optional
+   */
+  componentDidMount: 'DEFINE_MANY',
+
+  /**
+   * Invoked before the component receives new props.
+   *
+   * Use this as an opportunity to react to a prop transition by updating the
+   * state using `this.setState`. Current props are accessed via `this.props`.
+   *
+   *   componentWillReceiveProps: function(nextProps, nextContext) {
+   *     this.setState({
+   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
+   *     });
+   *   }
+   *
+   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
+   * transition may cause a state change, but the opposite is not true. If you
+   * need it, you are probably looking for `componentWillUpdate`.
+   *
+   * @param {object} nextProps
+   * @optional
+   */
+  componentWillReceiveProps: 'DEFINE_MANY',
+
+  /**
+   * Invoked while deciding if the component should be updated as a result of
+   * receiving new props, state and/or context.
+   *
+   * Use this as an opportunity to `return false` when you're certain that the
+   * transition to the new props/state/context will not require a component
+   * update.
+   *
+   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
+   *     return !equal(nextProps, this.props) ||
+   *       !equal(nextState, this.state) ||
+   *       !equal(nextContext, this.context);
+   *   }
+   *
+   * @param {object} nextProps
+   * @param {?object} nextState
+   * @param {?object} nextContext
+   * @return {boolean} True if the component should update.
+   * @optional
+   */
+  shouldComponentUpdate: 'DEFINE_ONCE',
+
+  /**
+   * Invoked when the component is about to update due to a transition from
+   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
+   * and `nextContext`.
+   *
+   * Use this as an opportunity to perform preparation before an update occurs.
+   *
+   * NOTE: You **cannot** use `this.setState()` in this method.
+   *
+   * @param {object} nextProps
+   * @param {?object} nextState
+   * @param {?object} nextContext
+   * @param {ReactReconcileTransaction} transaction
+   * @optional
+   */
+  componentWillUpdate: 'DEFINE_MANY',
+
+  /**
+   * Invoked when the component's DOM representation has been updated.
+   *
+   * Use this as an opportunity to operate on the DOM when the component has
+   * been updated.
+   *
+   * @param {object} prevProps
+   * @param {?object} prevState
+   * @param {?object} prevContext
+   * @param {DOMElement} rootNode DOM element representing the component.
+   * @optional
+   */
+  componentDidUpdate: 'DEFINE_MANY',
+
+  /**
+   * Invoked when the component is about to be removed from its parent and have
+   * its DOM representation destroyed.
+   *
+   * Use this as an opportunity to deallocate any external resources.
+   *
+   * NOTE: There is no `componentDidUnmount` since your component will have been
+   * destroyed by that point.
+   *
+   * @optional
+   */
+  componentWillUnmount: 'DEFINE_MANY',
+
+
+
+  // ==== Advanced methods ====
+
+  /**
+   * Updates the component's currently mounted DOM representation.
+   *
+   * By default, this implements React's rendering and reconciliation algorithm.
+   * Sophisticated clients may wish to override this.
+   *
+   * @param {ReactReconcileTransaction} transaction
+   * @internal
+   * @overridable
+   */
+  updateComponent: 'OVERRIDE_BASE',
+
+};
+
+/**
+ * Mapping from class specification keys to special processing functions.
+ *
+ * Although these are declared like instance properties in the specification
+ * when defining classes using `React.createClass`, they are actually static
+ * and are accessible on the constructor instead of the prototype. Despite
+ * being static, they must be defined outside of the "statics" key under
+ * which all other static methods are defined.
+ */
+var RESERVED_SPEC_KEYS = {
+  displayName: function(Constructor, displayName) {
+    Constructor.displayName = displayName;
+  },
+  mixins: function(Constructor, mixins) {
+    if (mixins) {
+      for (var i = 0; i < mixins.length; i++) {
+        mixSpecIntoComponent(Constructor, mixins[i]);
+      }
+    }
+  },
+  childContextTypes: function(Constructor, childContextTypes) {
+    if (__DEV__) {
+      validateTypeDef(
+        Constructor,
+        childContextTypes,
+        'childContext'
+      );
+    }
+    Constructor.childContextTypes = Object.assign(
+      {},
+      Constructor.childContextTypes,
+      childContextTypes
+    );
+  },
+  contextTypes: function(Constructor, contextTypes) {
+    if (__DEV__) {
+      validateTypeDef(
+        Constructor,
+        contextTypes,
+        'context'
+      );
+    }
+    Constructor.contextTypes = Object.assign(
+      {},
+      Constructor.contextTypes,
+      contextTypes
+    );
+  },
+  /**
+   * Special case getDefaultProps which should move into statics but requires
+   * automatic merging.
+   */
+  getDefaultProps: function(Constructor, getDefaultProps) {
+    if (Constructor.getDefaultProps) {
+      Constructor.getDefaultProps = createMergedResultFunction(
+        Constructor.getDefaultProps,
+        getDefaultProps
+      );
+    } else {
+      Constructor.getDefaultProps = getDefaultProps;
+    }
+  },
+  propTypes: function(Constructor, propTypes) {
+    if (__DEV__) {
+      validateTypeDef(
+        Constructor,
+        propTypes,
+        'prop'
+      );
+    }
+    Constructor.propTypes = Object.assign(
+      {},
+      Constructor.propTypes,
+      propTypes
+    );
+  },
+  statics: function(Constructor, statics) {
+    mixStaticSpecIntoComponent(Constructor, statics);
+  },
+  autobind: function() {}, // noop
+};
+
+function validateTypeDef(
+  Constructor,
+  typeDef,
+  location: ReactPropTypeLocations,
+) {
+  for (var propName in typeDef) {
+    if (typeDef.hasOwnProperty(propName)) {
+      // use a warning instead of an invariant so components
+      // don't show up in prod but only in __DEV__
+      warning(
+        typeof typeDef[propName] === 'function',
+        '%s: %s type `%s` is invalid; it must be a function, usually from ' +
+        'React.PropTypes.',
+        Constructor.displayName || 'ReactClass',
+        ReactPropTypeLocationNames[location],
+        propName
+      );
+    }
+  }
+}
+
+function validateMethodOverride(isAlreadyDefined, name) {
+  var specPolicy = ReactClassInterface.hasOwnProperty(name) ?
+    ReactClassInterface[name] :
+    null;
+
+  // Disallow overriding of base class methods unless explicitly allowed.
+  if (ReactClassMixin.hasOwnProperty(name)) {
+    invariant(
+      specPolicy === 'OVERRIDE_BASE',
+      'ReactClassInterface: You are attempting to override ' +
+      '`%s` from your class specification. Ensure that your method names ' +
+      'do not overlap with React methods.',
+      name
+    );
+  }
+
+  // Disallow defining methods more than once unless explicitly allowed.
+  if (isAlreadyDefined) {
+    invariant(
+      specPolicy === 'DEFINE_MANY' ||
+      specPolicy === 'DEFINE_MANY_MERGED',
+      'ReactClassInterface: You are attempting to define ' +
+      '`%s` on your component more than once. This conflict may be due ' +
+      'to a mixin.',
+      name
+    );
+  }
+}
+
+/**
+ * Mixin helper which handles policy validation and reserved
+ * specification keys when building React classes.
+ */
+function mixSpecIntoComponent(Constructor, spec) {
+  if (!spec) {
+    if (__DEV__) {
+      var typeofSpec = typeof spec;
+      var isMixinValid = typeofSpec === 'object' && spec !== null;
+
+      warning(
+        isMixinValid,
+        '%s: You\'re attempting to include a mixin that is either null ' +
+        'or not an object. Check the mixins included by the component, ' +
+        'as well as any mixins they include themselves. ' +
+        'Expected object but got %s.',
+        Constructor.displayName || 'ReactClass',
+        spec === null ? null : typeofSpec
+      );
+    }
+
+    return;
+  }
+
+  invariant(
+    typeof spec !== 'function',
+    'ReactClass: You\'re attempting to ' +
+    'use a component class or function as a mixin. Instead, just use a ' +
+    'regular object.'
+  );
+  invariant(
+    !ReactElement.isValidElement(spec),
+    'ReactClass: You\'re attempting to ' +
+    'use a component as a mixin. Instead, just use a regular object.'
+  );
+
+  var proto = Constructor.prototype;
+  var autoBindPairs = proto.__reactAutoBindPairs;
+
+  // By handling mixins before any other properties, we ensure the same
+  // chaining order is applied to methods with DEFINE_MANY policy, whether
+  // mixins are listed before or after these methods in the spec.
+  if (spec.hasOwnProperty(MIXINS_KEY)) {
+    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
+  }
+
+  for (var name in spec) {
+    if (!spec.hasOwnProperty(name)) {
+      continue;
+    }
+
+    if (name === MIXINS_KEY) {
+      // We have already handled mixins in a special case above.
+      continue;
+    }
+
+    var property = spec[name];
+    var isAlreadyDefined = proto.hasOwnProperty(name);
+    validateMethodOverride(isAlreadyDefined, name);
+
+    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
+      RESERVED_SPEC_KEYS[name](Constructor, property);
+    } else {
+      // Setup methods on prototype:
+      // The following member methods should not be automatically bound:
+      // 1. Expected ReactClass methods (in the "interface").
+      // 2. Overridden methods (that were mixed in).
+      var isReactClassMethod =
+        ReactClassInterface.hasOwnProperty(name);
+      var isFunction = typeof property === 'function';
+      var shouldAutoBind =
+        isFunction &&
+        !isReactClassMethod &&
+        !isAlreadyDefined &&
+        spec.autobind !== false;
+
+      if (shouldAutoBind) {
+        autoBindPairs.push(name, property);
+        proto[name] = property;
+      } else {
+        if (isAlreadyDefined) {
+          var specPolicy = ReactClassInterface[name];
+
+          // These cases should already be caught by validateMethodOverride.
+          invariant(
+            isReactClassMethod && (
+              specPolicy === 'DEFINE_MANY_MERGED' ||
+              specPolicy === 'DEFINE_MANY'
+            ),
+            'ReactClass: Unexpected spec policy %s for key %s ' +
+            'when mixing in component specs.',
+            specPolicy,
+            name
+          );
+
+          // For methods which are defined more than once, call the existing
+          // methods before calling the new property, merging if appropriate.
+          if (specPolicy === 'DEFINE_MANY_MERGED') {
+            proto[name] = createMergedResultFunction(proto[name], property);
+          } else if (specPolicy === 'DEFINE_MANY') {
+            proto[name] = createChainedFunction(proto[name], property);
+          }
+        } else {
+          proto[name] = property;
+          if (__DEV__) {
+            // Add verbose displayName to the function, which helps when looking
+            // at profiling tools.
+            if (typeof property === 'function' && spec.displayName) {
+              proto[name].displayName = spec.displayName + '_' + name;
+            }
+          }
+        }
+      }
+    }
+  }
+}
+
+function mixStaticSpecIntoComponent(Constructor, statics) {
+  if (!statics) {
+    return;
+  }
+  for (var name in statics) {
+    var property = statics[name];
+    if (!statics.hasOwnProperty(name)) {
+      continue;
+    }
+
+    var isReserved = name in RESERVED_SPEC_KEYS;
+    invariant(
+      !isReserved,
+      'ReactClass: You are attempting to define a reserved ' +
+      'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
+      'as an instance property instead; it will still be accessible on the ' +
+      'constructor.',
+      name
+    );
+
+    var isInherited = name in Constructor;
+    invariant(
+      !isInherited,
+      'ReactClass: You are attempting to define ' +
+      '`%s` on your component more than once. This conflict may be ' +
+      'due to a mixin.',
+      name
+    );
+    Constructor[name] = property;
+  }
+}
+
+/**
+ * Merge two objects, but throw if both contain the same key.
+ *
+ * @param {object} one The first object, which is mutated.
+ * @param {object} two The second object
+ * @return {object} one after it has been mutated to contain everything in two.
+ */
+function mergeIntoWithNoDuplicateKeys(one, two) {
+  invariant(
+    one && two && typeof one === 'object' && typeof two === 'object',
+    'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
+  );
+
+  for (var key in two) {
+    if (two.hasOwnProperty(key)) {
+      invariant(
+        one[key] === undefined,
+        'mergeIntoWithNoDuplicateKeys(): ' +
+        'Tried to merge two objects with the same key: `%s`. This conflict ' +
+        'may be due to a mixin; in particular, this may be caused by two ' +
+        'getInitialState() or getDefaultProps() methods returning objects ' +
+        'with clashing keys.',
+        key
+      );
+      one[key] = two[key];
+    }
+  }
+  return one;
+}
+
+/**
+ * Creates a function that invokes two functions and merges their return values.
+ *
+ * @param {function} one Function to invoke first.
+ * @param {function} two Function to invoke second.
+ * @return {function} Function that invokes the two argument functions.
+ * @private
+ */
+function createMergedResultFunction(one, two) {
+  return function mergedResult() {
+    var a = one.apply(this, arguments);
+    var b = two.apply(this, arguments);
+    if (a == null) {
+      return b;
+    } else if (b == null) {
+      return a;
+    }
+    var c = {};
+    mergeIntoWithNoDuplicateKeys(c, a);
+    mergeIntoWithNoDuplicateKeys(c, b);
+    return c;
+  };
+}
+
+/**
+ * Creates a function that invokes two functions and ignores their return vales.
+ *
+ * @param {function} one Function to invoke first.
+ * @param {function} two Function to invoke second.
+ * @return {function} Function that invokes the two argument functions.
+ * @private
+ */
+function createChainedFunction(one, two) {
+  return function chainedFunction() {
+    one.apply(this, arguments);
+    two.apply(this, arguments);
+  };
+}
+
+/**
+ * Binds a method to the component.
+ *
+ * @param {object} component Component whose method is going to be bound.
+ * @param {function} method Method to be bound.
+ * @return {function} The bound method.
+ */
+function bindAutoBindMethod(component, method) {
+  var boundMethod = method.bind(component);
+  if (__DEV__) {
+    boundMethod.__reactBoundContext = component;
+    boundMethod.__reactBoundMethod = method;
+    boundMethod.__reactBoundArguments = null;
+    var componentName = component.constructor.displayName;
+    var _bind = boundMethod.bind;
+    boundMethod.bind = function(newThis, ...args) {
+      // User is trying to bind() an autobound method; we effectively will
+      // ignore the value of "this" that the user is trying to use, so
+      // let's warn.
+      if (newThis !== component && newThis !== null) {
+        warning(
+          false,
+          'bind(): React component methods may only be bound to the ' +
+          'component instance. See %s',
+          componentName
+        );
+      } else if (!args.length) {
+        warning(
+          false,
+          'bind(): You are binding a component method to the component. ' +
+          'React does this for you automatically in a high-performance ' +
+          'way, so you can safely remove this call. See %s',
+          componentName
+        );
+        return boundMethod;
+      }
+      var reboundMethod = _bind.apply(boundMethod, arguments);
+      reboundMethod.__reactBoundContext = component;
+      reboundMethod.__reactBoundMethod = method;
+      reboundMethod.__reactBoundArguments = args;
+      return reboundMethod;
+    };
+  }
+  return boundMethod;
+}
+
+/**
+ * Binds all auto-bound methods in a component.
+ *
+ * @param {object} component Component whose method is going to be bound.
+ */
+function bindAutoBindMethods(component) {
+  var pairs = component.__reactAutoBindPairs;
+  for (var i = 0; i < pairs.length; i += 2) {
+    var autoBindKey = pairs[i];
+    var method = pairs[i + 1];
+    component[autoBindKey] = bindAutoBindMethod(
+      component,
+      method
+    );
+  }
+}
+
+/**
+ * Add more to the ReactClass base class. These are all legacy features and
+ * therefore not already part of the modern ReactComponent.
+ */
+var ReactClassMixin = {
+
+  /**
+   * TODO: This will be deprecated because state should always keep a consistent
+   * type signature and the only use case for this, is to avoid that.
+   */
+  replaceState: function(newState, callback) {
+    this.updater.enqueueReplaceState(this, newState);
+    if (callback) {
+      this.updater.enqueueCallback(this, callback, 'replaceState');
+    }
+  },
+
+  /**
+   * Checks whether or not this composite component is mounted.
+   * @return {boolean} True if mounted, false otherwise.
+   * @protected
+   * @final
+   */
+  isMounted: function() {
+    return this.updater.isMounted(this);
+  },
+};
+
+var ReactClassComponent = function() {};
+Object.assign(
+  ReactClassComponent.prototype,
+  ReactComponent.prototype,
+  ReactClassMixin
+);
+
+let didWarnDeprecated = false;
+
+/**
+ * Module for creating composite components.
+ *
+ * @class ReactClass
+ */
+var ReactClass = {
+
+  /**
+   * Creates a composite component class given a class specification.
+   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
+   *
+   * @param {object} spec Class specification (which must define `render`).
+   * @return {function} Component constructor function.
+   * @public
+   */
+  createClass: function(spec) {
+    if (__DEV__) {
+      warning(
+        didWarnDeprecated,
+        '%s: React.createClass is deprecated and will be removed in version 16. ' +
+        'Use plain JavaScript classes instead. If you\'re not yet ready to ' +
+        'migrate, create-react-class is available on npm as a ' +
+        'drop-in replacement.',
+        (spec && spec.displayName) || 'A Component',
+      );
+      didWarnDeprecated = true;
+    }
+
+    // To keep our warnings more understandable, we'll use a little hack here to
+    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
+    // unnecessarily identify a class without displayName as 'Constructor'.
+    var Constructor = identity(function(props, context, updater) {
+      // This constructor gets overridden by mocks. The argument is used
+      // by mocks to assert on what gets mounted.
+
+      if (__DEV__) {
+        warning(
+          this instanceof Constructor,
+          'Something is calling a React component directly. Use a factory or ' +
+          'JSX instead. See: https://fb.me/react-legacyfactory'
+        );
+      }
+
+      // Wire up auto-binding
+      if (this.__reactAutoBindPairs.length) {
+        bindAutoBindMethods(this);
+      }
+
+      this.props = props;
+      this.context = context;
+      this.refs = emptyObject;
+      this.updater = updater || ReactNoopUpdateQueue;
+
+      this.state = null;
+
+      // ReactClasses doesn't have constructors. Instead, they use the
+      // getInitialState and componentWillMount methods for initialization.
+
+      var initialState = this.getInitialState ? this.getInitialState() : null;
+      if (__DEV__) {
+        // We allow auto-mocks to proceed as if they're returning null.
+        if (initialState === undefined &&
+            this.getInitialState._isMockFunction) {
+          // This is probably bad practice. Consider warning here and
+          // deprecating this convenience.
+          initialState = null;
+        }
+      }
+      invariant(
+        typeof initialState === 'object' && !Array.isArray(initialState),
+        '%s.getInitialState(): must return an object or null',
+        Constructor.displayName || 'ReactCompositeComponent'
+      );
+
+      this.state = initialState;
+    });
+    Constructor.prototype = new ReactClassComponent();
+    Constructor.prototype.constructor = Constructor;
+    Constructor.prototype.__reactAutoBindPairs = [];
+
+    injectedMixins.forEach(
+      mixSpecIntoComponent.bind(null, Constructor)
+    );
+
+    mixSpecIntoComponent(Constructor, spec);
+
+    // Initialize the defaultProps property after all mixins have been merged.
+    if (Constructor.getDefaultProps) {
+      Constructor.defaultProps = Constructor.getDefaultProps();
+    }
+
+    if (__DEV__) {
+      // This is a tag to indicate that the use of these method names is ok,
+      // since it's used with createClass. If it's not, then it's likely a
+      // mistake so we'll warn you to use the static property, property
+      // initializer or constructor respectively.
+      if (Constructor.getDefaultProps) {
+        Constructor.getDefaultProps.isReactClassApproved = {};
+      }
+      if (Constructor.prototype.getInitialState) {
+        Constructor.prototype.getInitialState.isReactClassApproved = {};
+      }
+    }
+
+    invariant(
+      Constructor.prototype.render,
+      'createClass(...): Class specification must implement a `render` method.'
+    );
+
+    if (__DEV__) {
+      warning(
+        !Constructor.prototype.componentShouldUpdate,
+        '%s has a method called ' +
+        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
+        'The name is phrased as a question because the function is ' +
+        'expected to return a value.',
+        spec.displayName || 'A component'
+      );
+      warning(
+        !Constructor.prototype.componentWillRecieveProps,
+        '%s has a method called ' +
+        'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
+        spec.displayName || 'A component'
+      );
+    }
+
+    // Reduce time spent doing lookups by setting these on the prototype.
+    for (var methodName in ReactClassInterface) {
+      if (!Constructor.prototype[methodName]) {
+        Constructor.prototype[methodName] = null;
+      }
+    }
+
+    return Constructor;
+  },
+
+  injection: {
+    injectMixin: function(mixin) {
+      injectedMixins.push(mixin);
+    },
+  },
+
+};
+
+module.exports = ReactClass;
diff --git a/src/isomorphic/classic/class/__tests__/create-react-class-integration-test.js b/src/isomorphic/classic/class/__tests__/ReactClass-test.js
similarity index 67%
rename from src/isomorphic/classic/class/__tests__/create-react-class-integration-test.js
rename to src/isomorphic/classic/class/__tests__/ReactClass-test.js
index 4c89c732a..5f315f0ca 100644
--- a/src/isomorphic/classic/class/__tests__/create-react-class-integration-test.js
+++ b/src/isomorphic/classic/class/__tests__/ReactClass-test.js
@@ -16,5 +16,5 @@ var ReactDOM;
 var ReactTestUtils;
-var createReactClass;
 
-describe('create-react-class-integration', () => {
+describe('ReactClass-spec', () => {
+
   beforeEach(() => {
@@ -23,8 +23,23 @@ describe('create-react-class-integration', () => {
     ReactTestUtils = require('ReactTestUtils');
-    var createReactClassFactory = require('create-react-class/factory');
-    createReactClass = createReactClassFactory(
-      React.Component,
-      React.isValidElement,
-      require('ReactNoopUpdateQueue'),
+  });
+
+  it('should warn on first call to React.createClass', () => {
+    spyOn(console, 'error');
+    const spec = {
+      displayName: 'MyComponent',
+      render() {
+        return <div />;
+      },
+    };
+    React.createClass(spec);
+    React.createClass(spec);
+    expect(console.error.calls.count()).toEqual(1);
+    expect(console.error.calls.count()).toEqual(1);
+    expect(console.error.calls.argsFor(0)[0]).toBe(
+      'Warning: MyComponent: React.createClass is deprecated and will be removed in ' +
+      'version 16. Use plain JavaScript classes instead. If you\'re not yet ' +
+      'ready to migrate, create-react-class is available on npm as a ' +
+      'drop-in replacement.'
     );
+    console.error.calls.reset();
   });
@@ -33,5 +48,5 @@ describe('create-react-class-integration', () => {
     expect(function() {
-      createReactClass({});
+      React.createClass({});
     }).toThrowError(
-      'createClass(...): Class specification must implement a `render` method.',
+      'createClass(...): Class specification must implement a `render` method.'
     );
@@ -39,5 +54,16 @@ describe('create-react-class-integration', () => {
 
+  it('should copy `displayName` onto the Constructor', () => {
+    var TestComponent = React.createClass({
+      render: function() {
+        return <div />;
+      },
+    });
+
+    expect(TestComponent.displayName)
+      .toBe('TestComponent');
+  });
+
   it('should copy prop types onto the Constructor', () => {
     var propValidator = jest.fn();
-    var TestComponent = createReactClass({
+    var TestComponent = React.createClass({
       propTypes: {
@@ -51,3 +77,4 @@ describe('create-react-class-integration', () => {
     expect(TestComponent.propTypes).toBeDefined();
-    expect(TestComponent.propTypes.value).toBe(propValidator);
+    expect(TestComponent.propTypes.value)
+      .toBe(propValidator);
   });
@@ -56,3 +83,3 @@ describe('create-react-class-integration', () => {
     spyOn(console, 'error');
-    createReactClass({
+    React.createClass({
       displayName: 'Component',
@@ -68,3 +95,3 @@ describe('create-react-class-integration', () => {
       'Warning: Component: prop type `prop` is invalid; ' +
-        'it must be a function, usually from React.PropTypes.',
+      'it must be a function, usually from React.PropTypes.'
     );
@@ -74,3 +101,3 @@ describe('create-react-class-integration', () => {
     spyOn(console, 'error');
-    createReactClass({
+    React.createClass({
       displayName: 'Component',
@@ -86,3 +113,3 @@ describe('create-react-class-integration', () => {
       'Warning: Component: context type `prop` is invalid; ' +
-        'it must be a function, usually from React.PropTypes.',
+      'it must be a function, usually from React.PropTypes.'
     );
@@ -92,3 +119,3 @@ describe('create-react-class-integration', () => {
     spyOn(console, 'error');
-    createReactClass({
+    React.createClass({
       displayName: 'Component',
@@ -104,3 +131,3 @@ describe('create-react-class-integration', () => {
       'Warning: Component: child context type `prop` is invalid; ' +
-        'it must be a function, usually from React.PropTypes.',
+      'it must be a function, usually from React.PropTypes.'
     );
@@ -111,3 +138,3 @@ describe('create-react-class-integration', () => {
 
-    createReactClass({
+    React.createClass({
       componentShouldUpdate: function() {
@@ -122,7 +149,7 @@ describe('create-react-class-integration', () => {
       'Warning: A component has a method called componentShouldUpdate(). Did you ' +
-        'mean shouldComponentUpdate()? The name is phrased as a question ' +
-        'because the function is expected to return a value.',
+      'mean shouldComponentUpdate()? The name is phrased as a question ' +
+      'because the function is expected to return a value.'
     );
 
-    createReactClass({
+    React.createClass({
       displayName: 'NamedComponent',
@@ -138,4 +165,4 @@ describe('create-react-class-integration', () => {
       'Warning: NamedComponent has a method called componentShouldUpdate(). Did you ' +
-        'mean shouldComponentUpdate()? The name is phrased as a question ' +
-        'because the function is expected to return a value.',
+      'mean shouldComponentUpdate()? The name is phrased as a question ' +
+      'because the function is expected to return a value.'
     );
@@ -145,3 +172,3 @@ describe('create-react-class-integration', () => {
     spyOn(console, 'error');
-    createReactClass({
+    React.createClass({
       componentWillRecieveProps: function() {
@@ -156,3 +183,3 @@ describe('create-react-class-integration', () => {
       'Warning: A component has a method called componentWillRecieveProps(). Did you ' +
-        'mean componentWillReceiveProps()?',
+      'mean componentWillReceiveProps()?'
     );
@@ -162,3 +189,3 @@ describe('create-react-class-integration', () => {
     expect(function() {
-      createReactClass({
+      React.createClass({
         statics: {
@@ -177,5 +204,5 @@ describe('create-react-class-integration', () => {
       'ReactClass: You are attempting to define a reserved property, ' +
-        '`getDefaultProps`, that shouldn\'t be on the "statics" key. Define ' +
-        'it as an instance property instead; it will still be accessible on ' +
-        'the constructor.',
+      '`getDefaultProps`, that shouldn\'t be on the "statics" key. Define ' +
+      'it as an instance property instead; it will still be accessible on ' +
+      'the constructor.'
     );
@@ -187,3 +214,3 @@ describe('create-react-class-integration', () => {
     spyOn(console, 'error');
-    createReactClass({
+    React.createClass({
       mixins: [{}],
@@ -205,3 +232,3 @@ describe('create-react-class-integration', () => {
       'createClass(...): `mixins` is now a static property and should ' +
-        'be defined inside "statics".',
+      'be defined inside "statics".'
     );
@@ -209,3 +236,3 @@ describe('create-react-class-integration', () => {
       'createClass(...): `propTypes` is now a static property and should ' +
-        'be defined inside "statics".',
+      'be defined inside "statics".'
     );
@@ -213,3 +240,3 @@ describe('create-react-class-integration', () => {
       'createClass(...): `contextTypes` is now a static property and ' +
-        'should be defined inside "statics".',
+      'should be defined inside "statics".'
     );
@@ -217,3 +244,3 @@ describe('create-react-class-integration', () => {
       'createClass(...): `childContextTypes` is now a static property and ' +
-        'should be defined inside "statics".',
+      'should be defined inside "statics".'
     );
@@ -222,3 +249,3 @@ describe('create-react-class-integration', () => {
   it('should support statics', () => {
-    var Component = createReactClass({
+    var Component = React.createClass({
       statics: {
@@ -252,3 +279,3 @@ describe('create-react-class-integration', () => {
   it('should work with object getInitialState() return values', () => {
-    var Component = createReactClass({
+    var Component = React.createClass({
       getInitialState: function() {
@@ -268,3 +295,3 @@ describe('create-react-class-integration', () => {
   it('renders based on context getInitialState', () => {
-    var Foo = createReactClass({
+    var Foo = React.createClass({
       contextTypes: {
@@ -280,3 +307,3 @@ describe('create-react-class-integration', () => {
 
-    var Outer = createReactClass({
+    var Outer = React.createClass({
       childContextTypes: {
@@ -299,3 +326,3 @@ describe('create-react-class-integration', () => {
     [['an array'], 'a string', 1234].forEach(function(state) {
-      var Component = createReactClass({
+      var Component = React.createClass({
         getInitialState: function() {
@@ -311,3 +338,3 @@ describe('create-react-class-integration', () => {
       }).toThrowError(
-        'Component.getInitialState(): must return an object or null',
+        'Component.getInitialState(): must return an object or null'
       );
@@ -317,3 +344,3 @@ describe('create-react-class-integration', () => {
   it('should work with a null getInitialState() return value', () => {
-    var Component = createReactClass({
+    var Component = React.createClass({
       getInitialState: function() {
@@ -325,4 +352,4 @@ describe('create-react-class-integration', () => {
     });
-    expect(() =>
-      ReactTestUtils.renderIntoDocument(<Component />),
+    expect(
+      () => ReactTestUtils.renderIntoDocument(<Component />)
     ).not.toThrow();
@@ -332,3 +359,3 @@ describe('create-react-class-integration', () => {
     spyOn(console, 'error');
-    var Component = createReactClass({
+    var Component = React.createClass({
       render() {
@@ -342,3 +369,3 @@ describe('create-react-class-integration', () => {
       'Warning: Something is calling a React component directly. Use a ' +
-        'factory or JSX instead. See: https://fb.me/react-legacyfactory',
+      'factory or JSX instead. See: https://fb.me/react-legacyfactory'
     );
@@ -346,81 +373,2 @@ describe('create-react-class-integration', () => {
 
-  it('replaceState and callback works', () => {
-    var ops = [];
-    var Component = createReactClass({
-      getInitialState() {
-        return {step: 0};
-      },
-      render() {
-        ops.push('Render: ' + this.state.step);
-        return <div />;
-      },
-    });
-
-    var instance = ReactTestUtils.renderIntoDocument(<Component />);
-    instance.replaceState({step: 1}, () => {
-      ops.push('Callback: ' + instance.state.step);
-    });
-    expect(ops).toEqual(['Render: 0', 'Render: 1', 'Callback: 1']);
-  });
-
-  it('isMounted works', () => {
-    spyOn(console, 'error');
-
-    var ops = [];
-    var instance;
-    var Component = createReactClass({
-      displayName: 'MyComponent',
-      log(name) {
-        ops.push(`${name}: ${this.isMounted()}`);
-      },
-      getInitialState() {
-        this.log('getInitialState');
-        return {};
-      },
-      componentWillMount() {
-        this.log('componentWillMount');
-      },
-      componentDidMount() {
-        this.log('componentDidMount');
-      },
-      componentWillUpdate() {
-        this.log('componentWillUpdate');
-      },
-      componentDidUpdate() {
-        this.log('componentDidUpdate');
-      },
-      componentWillUnmount() {
-        this.log('componentWillUnmount');
-      },
-      render() {
-        instance = this;
-        this.log('render');
-        return <div />;
-      },
-    });
-
-    var container = document.createElement('div');
-    ReactDOM.render(<Component />, container);
-    ReactDOM.render(<Component />, container);
-    ReactDOM.unmountComponentAtNode(container);
-    instance.log('after unmount');
-    expect(ops).toEqual([
-      'getInitialState: false',
-      'componentWillMount: false',
-      'render: false',
-      'componentDidMount: true',
-      'componentWillUpdate: true',
-      'render: true',
-      'componentDidUpdate: true',
-      'componentWillUnmount: false',
-      'after unmount: false',
-    ]);
-
-    expect(console.error.calls.count()).toBe(1);
-    expect(console.error.calls.argsFor(0)[0]).toEqual(
-      'Warning: MyComponent: isMounted is deprecated. Instead, make sure to ' +
-        'clean up subscriptions and pending requests in componentWillUnmount ' +
-        'to prevent memory leaks.',
-    );
-  });
 });
diff --git a/src/isomorphic/classic/class/__tests__/ReactCreateClass-test.js b/src/isomorphic/classic/class/__tests__/ReactCreateClass-test.js
index 61f4fafa0..9c1a44ea5 100644
--- a/src/isomorphic/classic/class/__tests__/ReactCreateClass-test.js
+++ b/src/isomorphic/classic/class/__tests__/ReactCreateClass-test.js
@@ -13,3 +13,2 @@
 
-var PropTypes;
 var React;
@@ -20,4 +19,4 @@ var createReactClass;
 describe('ReactClass-spec', () => {
+
   beforeEach(() => {
-    PropTypes = require('prop-types');
     React = require('React');
@@ -37,3 +36,3 @@ describe('ReactClass-spec', () => {
     }).toThrowError(
-      'createClass(...): Class specification must implement a `render` method.',
+      'createClass(...): Class specification must implement a `render` method.'
     );
@@ -49,3 +48,4 @@ describe('ReactClass-spec', () => {
 
-    expect(TestComponent.displayName).toBe('TestComponent');
+    expect(TestComponent.displayName)
+      .toBe('TestComponent');
   });
@@ -64,3 +64,4 @@ describe('ReactClass-spec', () => {
     expect(TestComponent.propTypes).toBeDefined();
-    expect(TestComponent.propTypes.value).toBe(propValidator);
+    expect(TestComponent.propTypes.value)
+      .toBe(propValidator);
   });
@@ -81,3 +82,3 @@ describe('ReactClass-spec', () => {
       'Warning: Component: prop type `prop` is invalid; ' +
-        'it must be a function, usually from React.PropTypes.',
+      'it must be a function, usually from React.PropTypes.'
     );
@@ -99,3 +100,3 @@ describe('ReactClass-spec', () => {
       'Warning: Component: context type `prop` is invalid; ' +
-        'it must be a function, usually from React.PropTypes.',
+      'it must be a function, usually from React.PropTypes.'
     );
@@ -117,3 +118,3 @@ describe('ReactClass-spec', () => {
       'Warning: Component: child context type `prop` is invalid; ' +
-        'it must be a function, usually from React.PropTypes.',
+      'it must be a function, usually from React.PropTypes.'
     );
@@ -135,4 +136,4 @@ describe('ReactClass-spec', () => {
       'Warning: A component has a method called componentShouldUpdate(). Did you ' +
-        'mean shouldComponentUpdate()? The name is phrased as a question ' +
-        'because the function is expected to return a value.',
+      'mean shouldComponentUpdate()? The name is phrased as a question ' +
+      'because the function is expected to return a value.'
     );
@@ -151,4 +152,4 @@ describe('ReactClass-spec', () => {
       'Warning: NamedComponent has a method called componentShouldUpdate(). Did you ' +
-        'mean shouldComponentUpdate()? The name is phrased as a question ' +
-        'because the function is expected to return a value.',
+      'mean shouldComponentUpdate()? The name is phrased as a question ' +
+      'because the function is expected to return a value.'
     );
@@ -169,3 +170,3 @@ describe('ReactClass-spec', () => {
       'Warning: A component has a method called componentWillRecieveProps(). Did you ' +
-        'mean componentWillReceiveProps()?',
+      'mean componentWillReceiveProps()?'
     );
@@ -190,5 +191,5 @@ describe('ReactClass-spec', () => {
       'ReactClass: You are attempting to define a reserved property, ' +
-        '`getDefaultProps`, that shouldn\'t be on the "statics" key. Define ' +
-        'it as an instance property instead; it will still be accessible on ' +
-        'the constructor.',
+      '`getDefaultProps`, that shouldn\'t be on the "statics" key. Define ' +
+      'it as an instance property instead; it will still be accessible on ' +
+      'the constructor.'
     );
@@ -203,9 +204,9 @@ describe('ReactClass-spec', () => {
       propTypes: {
-        foo: PropTypes.string,
+        foo: React.PropTypes.string,
       },
       contextTypes: {
-        foo: PropTypes.string,
+        foo: React.PropTypes.string,
       },
       childContextTypes: {
-        foo: PropTypes.string,
+        foo: React.PropTypes.string,
       },
@@ -218,3 +219,3 @@ describe('ReactClass-spec', () => {
       'createClass(...): `mixins` is now a static property and should ' +
-        'be defined inside "statics".',
+      'be defined inside "statics".'
     );
@@ -222,3 +223,3 @@ describe('ReactClass-spec', () => {
       'createClass(...): `propTypes` is now a static property and should ' +
-        'be defined inside "statics".',
+      'be defined inside "statics".'
     );
@@ -226,3 +227,3 @@ describe('ReactClass-spec', () => {
       'createClass(...): `contextTypes` is now a static property and ' +
-        'should be defined inside "statics".',
+      'should be defined inside "statics".'
     );
@@ -230,3 +231,3 @@ describe('ReactClass-spec', () => {
       'createClass(...): `childContextTypes` is now a static property and ' +
-        'should be defined inside "statics".',
+      'should be defined inside "statics".'
     );
@@ -283,3 +284,3 @@ describe('ReactClass-spec', () => {
       contextTypes: {
-        className: PropTypes.string,
+        className: React.PropTypes.string,
       },
@@ -295,3 +296,3 @@ describe('ReactClass-spec', () => {
       childContextTypes: {
-        className: PropTypes.string,
+        className: React.PropTypes.string,
       },
@@ -324,3 +325,3 @@ describe('ReactClass-spec', () => {
       }).toThrowError(
-        'Component.getInitialState(): must return an object or null',
+        'Component.getInitialState(): must return an object or null'
       );
@@ -338,4 +339,4 @@ describe('ReactClass-spec', () => {
     });
-    expect(() =>
-      ReactTestUtils.renderIntoDocument(<Component />),
+    expect(
+      () => ReactTestUtils.renderIntoDocument(<Component />)
     ).not.toThrow();
@@ -355,3 +356,3 @@ describe('ReactClass-spec', () => {
       'Warning: Something is calling a React component directly. Use a ' +
-        'factory or JSX instead. See: https://fb.me/react-legacyfactory',
+      'factory or JSX instead. See: https://fb.me/react-legacyfactory'
     );
@@ -363,3 +364,3 @@ describe('ReactClass-spec', () => {
       getInitialState() {
-        return {step: 0};
+        return { step: 0 };
       },
@@ -368,3 +369,3 @@ describe('ReactClass-spec', () => {
         return <div />;
-      },
+      }
     });
@@ -372,6 +373,10 @@ describe('ReactClass-spec', () => {
     var instance = ReactTestUtils.renderIntoDocument(<Component />);
-    instance.replaceState({step: 1}, () => {
+    instance.replaceState({ step: 1 }, () => {
       ops.push('Callback: ' + instance.state.step);
     });
-    expect(ops).toEqual(['Render: 0', 'Render: 1', 'Callback: 1']);
+    expect(ops).toEqual([
+      'Render: 0',
+      'Render: 1',
+      'Callback: 1',
+    ]);
   });
@@ -411,3 +416,3 @@ describe('ReactClass-spec', () => {
         return <div />;
-      },
+      }
     });
@@ -434,4 +439,4 @@ describe('ReactClass-spec', () => {
       'Warning: MyComponent: isMounted is deprecated. Instead, make sure to ' +
-        'clean up subscriptions and pending requests in componentWillUnmount ' +
-        'to prevent memory leaks.',
+      'clean up subscriptions and pending requests in componentWillUnmount ' +
+      'to prevent memory leaks.'
     );
diff --git a/src/isomorphic/classic/class/createClass.js b/src/isomorphic/classic/class/createClass.js
deleted file mode 100644
index 3791e5392..000000000
--- a/src/isomorphic/classic/class/createClass.js
+++ /dev/null
@@ -1,19 +0,0 @@
-/**
- * Copyright 2013-present, Facebook, Inc.
- * All rights reserved.
- *
- * This source code is licensed under the BSD-style license found in the
- * LICENSE file in the root directory of this source tree. An additional grant
- * of patent rights can be found in the PATENTS file in the same directory.
- *
- * @providesModule createClass
- */
-
-'use strict';
-
-var {Component} = require('ReactBaseClasses');
-var {isValidElement} = require('ReactElement');
-var ReactNoopUpdateQueue = require('ReactNoopUpdateQueue');
-var factory = require('create-react-class/factory');
-
-module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);
diff --git a/src/isomorphic/classic/element/ReactCurrentOwner.js b/src/isomorphic/classic/element/ReactCurrentOwner.js
index a095fe009..da5786e87 100644
--- a/src/isomorphic/classic/element/ReactCurrentOwner.js
+++ b/src/isomorphic/classic/element/ReactCurrentOwner.js
@@ -14,3 +14,3 @@
 
-import type {ReactInstance} from 'ReactInstanceType';
+import type { ReactInstance } from 'ReactInstanceType';
 
@@ -23,2 +23,3 @@ import type {ReactInstance} from 'ReactInstanceType';
 var ReactCurrentOwner = {
+
   /**
@@ -28,2 +29,3 @@ var ReactCurrentOwner = {
   current: (null: null | ReactInstance),
+
 };
diff --git a/src/addons/ReactDOMFactories.js b/src/isomorphic/classic/element/ReactDOMFactories.js
similarity index 98%
rename from src/addons/ReactDOMFactories.js
rename to src/isomorphic/classic/element/ReactDOMFactories.js
index f1f82c3a0..4890fa676 100644
--- a/src/addons/ReactDOMFactories.js
+++ b/src/isomorphic/classic/element/ReactDOMFactories.js
@@ -28,2 +28,3 @@ if (__DEV__) {
  * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
+ * This is also accessible via `React.DOM`.
  *
@@ -142,3 +143,3 @@ var ReactDOMFactories = {
   ul: createDOMFactory('ul'),
-  var: createDOMFactory('var'),
+  'var': createDOMFactory('var'),
   video: createDOMFactory('video'),
diff --git a/src/isomorphic/classic/element/ReactElement.js b/src/isomorphic/classic/element/ReactElement.js
index 15ff17764..90080c7ff 100644
--- a/src/isomorphic/classic/element/ReactElement.js
+++ b/src/isomorphic/classic/element/ReactElement.js
@@ -61,6 +61,6 @@ function defineKeyPropWarningGetter(props, displayName) {
         '%s: `key` is not a prop. Trying to access it will result ' +
-          'in `undefined` being returned. If you need to access the same ' +
-          'value within the child component, you should pass it as a different ' +
-          'prop. (https://fb.me/react-special-props)',
-        displayName,
+        'in `undefined` being returned. If you need to access the same ' +
+        'value within the child component, you should pass it as a different ' +
+        'prop. (https://fb.me/react-special-props)',
+        displayName
       );
@@ -82,6 +82,6 @@ function defineRefPropWarningGetter(props, displayName) {
         '%s: `ref` is not a prop. Trying to access it will result ' +
-          'in `undefined` being returned. If you need to access the same ' +
-          'value within the child component, you should pass it as a different ' +
-          'prop. (https://fb.me/react-special-props)',
-        displayName,
+        'in `undefined` being returned. If you need to access the same ' +
+        'value within the child component, you should pass it as a different ' +
+        'prop. (https://fb.me/react-special-props)',
+        displayName
       );
@@ -205,6 +205,4 @@ ReactElement.createElement = function(type, config, children) {
     for (propName in config) {
-      if (
-        hasOwnProperty.call(config, propName) &&
-        !RESERVED_PROPS.hasOwnProperty(propName)
-      ) {
+      if (hasOwnProperty.call(config, propName) &&
+          !RESERVED_PROPS.hasOwnProperty(propName)) {
         props[propName] = config[propName];
@@ -243,9 +241,7 @@ ReactElement.createElement = function(type, config, children) {
     if (key || ref) {
-      if (
-        typeof props.$$typeof === 'undefined' ||
-        props.$$typeof !== REACT_ELEMENT_TYPE
-      ) {
-        var displayName = typeof type === 'function'
-          ? type.displayName || type.name || 'Unknown'
-          : type;
+      if (typeof props.$$typeof === 'undefined' ||
+          props.$$typeof !== REACT_ELEMENT_TYPE) {
+        var displayName = typeof type === 'function' ?
+          (type.displayName || type.name || 'Unknown') :
+          type;
         if (key) {
@@ -266,3 +262,3 @@ ReactElement.createElement = function(type, config, children) {
     ReactCurrentOwner.current,
-    props,
+    props
   );
@@ -293,3 +289,3 @@ ReactElement.cloneAndReplaceKey = function(oldElement, newKey) {
     oldElement._owner,
-    oldElement.props,
+    oldElement.props
   );
@@ -338,6 +334,4 @@ ReactElement.cloneElement = function(element, config, children) {
     for (propName in config) {
-      if (
-        hasOwnProperty.call(config, propName) &&
-        !RESERVED_PROPS.hasOwnProperty(propName)
-      ) {
+      if (hasOwnProperty.call(config, propName) &&
+          !RESERVED_PROPS.hasOwnProperty(propName)) {
         if (config[propName] === undefined && defaultProps !== undefined) {
@@ -365,3 +359,11 @@ ReactElement.cloneElement = function(element, config, children) {
 
-  return ReactElement(element.type, key, ref, self, source, owner, props);
+  return ReactElement(
+    element.type,
+    key,
+    ref,
+    self,
+    source,
+    owner,
+    props
+  );
 };
diff --git a/src/isomorphic/classic/element/ReactElementType.js b/src/isomorphic/classic/element/ReactElementType.js
index a0d8427b1..9702b0f77 100644
--- a/src/isomorphic/classic/element/ReactElementType.js
+++ b/src/isomorphic/classic/element/ReactElementType.js
@@ -14,3 +14,3 @@
 
-import type {ReactInstance} from 'ReactInstanceType';
+import type { ReactInstance } from 'ReactInstanceType';
 
diff --git a/src/isomorphic/classic/element/ReactElementValidator.js b/src/isomorphic/classic/element/ReactElementValidator.js
index 17f0332f8..6613aeeb6 100644
--- a/src/isomorphic/classic/element/ReactElementValidator.js
+++ b/src/isomorphic/classic/element/ReactElementValidator.js
@@ -29,3 +29,2 @@ var getIteratorFn = require('getIteratorFn');
 var warning = require('warning');
-var lowPriorityWarning = require('lowPriorityWarning');
 
@@ -66,5 +65,4 @@ function getCurrentComponentErrorInfo(parentType) {
   if (!info) {
-    var parentName = typeof parentType === 'string'
-      ? parentType
-      : parentType.displayName || parentType.name;
+    var parentName = typeof parentType === 'string' ?
+      parentType : parentType.displayName || parentType.name;
     if (parentName) {
@@ -93,4 +91,5 @@ function validateExplicitKey(element, parentType) {
 
-  var memoizer =
-    ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
+  var memoizer = ownerHasKeyUseWarning.uniqueKey || (
+    ownerHasKeyUseWarning.uniqueKey = {}
+  );
 
@@ -106,9 +105,8 @@ function validateExplicitKey(element, parentType) {
   var childOwner = '';
-  if (
-    element &&
-    element._owner &&
-    element._owner !== ReactCurrentOwner.current
-  ) {
+  if (element &&
+      element._owner &&
+      element._owner !== ReactCurrentOwner.current) {
     // Give the component that originally created this child.
-    childOwner = ` It was passed a child from ${element._owner.getName()}.`;
+    childOwner =
+      ` It was passed a child from ${element._owner.getName()}.`;
   }
@@ -118,6 +116,6 @@ function validateExplicitKey(element, parentType) {
     'Each child in an array or iterator should have a unique "key" prop.' +
-      '%s%s See https://fb.me/react-warning-keys for more information.%s',
+    '%s%s See https://fb.me/react-warning-keys for more information.%s',
     currentComponentErrorInfo,
     childOwner,
-    ReactComponentTreeHook.getCurrentStackAddendum(element),
+    ReactComponentTreeHook.getCurrentStackAddendum(element)
   );
@@ -186,3 +184,3 @@ function validatePropTypes(element) {
       element,
-      null,
+      null
     );
@@ -193,3 +191,3 @@ function validatePropTypes(element) {
       'getDefaultProps is only used on classic React.createClass ' +
-        'definitions. Use a static property named `defaultProps` instead.',
+      'definitions. Use a static property named `defaultProps` instead.'
     );
@@ -199,2 +197,3 @@ function validatePropTypes(element) {
 var ReactElementValidator = {
+
   createElement: function(type, props, children) {
@@ -204,3 +203,6 @@ var ReactElementValidator = {
     if (!validType) {
-      if (typeof type !== 'function' && typeof type !== 'string') {
+      if (
+        typeof type !== 'function' &&
+        typeof type !== 'string'
+      ) {
         var info = '';
@@ -208,5 +210,5 @@ var ReactElementValidator = {
           type === undefined ||
-          (typeof type === 'object' &&
-            type !== null &&
-            Object.keys(type).length === 0)
+          typeof type === 'object' &&
+          type !== null &&
+          Object.keys(type).length === 0
         ) {
@@ -214,3 +216,3 @@ var ReactElementValidator = {
             ' You likely forgot to export your component from the file ' +
-            "it's defined in.";
+            'it\'s defined in.';
         }
@@ -226,8 +228,2 @@ var ReactElementValidator = {
 
-        var currentSource = props !== null &&
-          props !== undefined &&
-          props.__source !== undefined
-          ? props.__source
-          : null;
-        ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);
         warning(
@@ -235,4 +231,4 @@ var ReactElementValidator = {
           'React.createElement: type is invalid -- expected a string (for ' +
-            'built-in components) or a class/function (for composite ' +
-            'components) but got: %s.%s',
+          'built-in components) or a class/function (for composite ' +
+          'components) but got: %s.%s',
           type == null ? type : typeof type,
@@ -240,3 +236,2 @@ var ReactElementValidator = {
         );
-        ReactComponentTreeHook.popNonStandardWarningStack();
       }
@@ -269,3 +264,6 @@ var ReactElementValidator = {
   createFactory: function(type) {
-    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
+    var validatedFactory = ReactElementValidator.createElement.bind(
+      null,
+      type
+    );
     // Legacy hook TODO: Warn if this is accessed
@@ -275,16 +273,20 @@ var ReactElementValidator = {
       if (canDefineProperty) {
-        Object.defineProperty(validatedFactory, 'type', {
-          enumerable: false,
-          get: function() {
-            lowPriorityWarning(
-              false,
-              'Factory.type is deprecated. Access the class directly ' +
-                'before passing it to createFactory.',
-            );
-            Object.defineProperty(this, 'type', {
-              value: type,
-            });
-            return type;
-          },
-        });
+        Object.defineProperty(
+          validatedFactory,
+          'type',
+          {
+            enumerable: false,
+            get: function() {
+              warning(
+                false,
+                'Factory.type is deprecated. Access the class directly ' +
+                'before passing it to createFactory.'
+              );
+              Object.defineProperty(this, 'type', {
+                value: type,
+              });
+              return type;
+            },
+          }
+        );
       }
@@ -292,2 +294,3 @@ var ReactElementValidator = {
 
+
     return validatedFactory;
@@ -303,2 +306,3 @@ var ReactElementValidator = {
   },
+
 };
diff --git a/src/isomorphic/classic/element/__tests__/ReactElement-test.js b/src/isomorphic/classic/element/__tests__/ReactElement-test.js
index de83b4e91..cf82a9530 100644
--- a/src/isomorphic/classic/element/__tests__/ReactElement-test.js
+++ b/src/isomorphic/classic/element/__tests__/ReactElement-test.js
@@ -83,5 +83,5 @@ describe('ReactElement', () => {
       'Child: `key` is not a prop. Trying to access it will result ' +
-        'in `undefined` being returned. If you need to access the same ' +
-        'value within the child component, you should pass it as a different ' +
-        'prop. (https://fb.me/react-special-props)',
+      'in `undefined` being returned. If you need to access the same ' +
+      'value within the child component, you should pass it as a different ' +
+      'prop. (https://fb.me/react-special-props)'
     );
@@ -97,5 +97,5 @@ describe('ReactElement', () => {
       'div: `key` is not a prop. Trying to access it will result ' +
-        'in `undefined` being returned. If you need to access the same ' +
-        'value within the child component, you should pass it as a different ' +
-        'prop. (https://fb.me/react-special-props)',
+      'in `undefined` being returned. If you need to access the same ' +
+      'value within the child component, you should pass it as a different ' +
+      'prop. (https://fb.me/react-special-props)'
     );
@@ -125,5 +125,5 @@ describe('ReactElement', () => {
       'Child: `ref` is not a prop. Trying to access it will result ' +
-        'in `undefined` being returned. If you need to access the same ' +
-        'value within the child component, you should pass it as a different ' +
-        'prop. (https://fb.me/react-special-props)',
+      'in `undefined` being returned. If you need to access the same ' +
+      'value within the child component, you should pass it as a different ' +
+      'prop. (https://fb.me/react-special-props)'
     );
@@ -143,3 +143,3 @@ describe('ReactElement', () => {
     var element = React.createFactory(ComponentClass)();
-    expect(() => (element.type = 'div')).toThrow();
+    expect(() => element.type = 'div').toThrow();
   });
@@ -235,3 +235,3 @@ describe('ReactElement', () => {
     var instance = ReactTestUtils.renderIntoDocument(
-      React.createElement(Wrapper),
+      React.createElement(Wrapper)
     );
@@ -244,8 +244,5 @@ describe('ReactElement', () => {
     var a = 1;
-    var element = React.createFactory(ComponentClass)(
-      {
-        children: 'text',
-      },
-      a,
-    );
+    var element = React.createFactory(ComponentClass)({
+      children: 'text',
+    }, a);
     expect(element.props.children).toBe(a);
@@ -265,8 +262,5 @@ describe('ReactElement', () => {
     spyOn(console, 'error');
-    var element = React.createFactory(ComponentClass)(
-      {
-        children: 'text',
-      },
-      null,
-    );
+    var element = React.createFactory(ComponentClass)({
+      children: 'text',
+    }, null);
     expect(element.props.children).toBe(null);
@@ -311,4 +305,6 @@ describe('ReactElement', () => {
 
-    expect(React.isValidElement(React.createElement('div'))).toEqual(true);
-    expect(React.isValidElement(React.createElement(Component))).toEqual(true);
+    expect(React.isValidElement(React.createElement('div')))
+      .toEqual(true);
+    expect(React.isValidElement(React.createElement(Component)))
+      .toEqual(true);
 
@@ -318,5 +314,5 @@ describe('ReactElement', () => {
     expect(React.isValidElement('string')).toEqual(false);
-    expect(React.isValidElement(React.createFactory('div'))).toEqual(false);
+    expect(React.isValidElement(React.DOM.div)).toEqual(false);
     expect(React.isValidElement(Component)).toEqual(false);
-    expect(React.isValidElement({type: 'div', props: {}})).toEqual(false);
+    expect(React.isValidElement({ type: 'div', props: {} })).toEqual(false);
 
@@ -347,3 +343,3 @@ describe('ReactElement', () => {
       React.createElement(Component, {fruit: 'mango'}),
-      container,
+      container
     );
@@ -366,3 +362,3 @@ describe('ReactElement', () => {
     var instance = ReactTestUtils.renderIntoDocument(
-      React.createElement(Component),
+      React.createElement(Component)
     );
@@ -371,3 +367,3 @@ describe('ReactElement', () => {
     var inst2 = ReactTestUtils.renderIntoDocument(
-      React.createElement(Component, {prop: null}),
+      React.createElement(Component, {prop: null})
     );
@@ -454,4 +450,6 @@ describe('ReactElement', () => {
 
-    expect(React.isValidElement(React.createElement('div'))).toEqual(true);
-    expect(React.isValidElement(React.createElement(Component))).toEqual(true);
+    expect(React.isValidElement(React.createElement('div')))
+      .toEqual(true);
+    expect(React.isValidElement(React.createElement(Component)))
+      .toEqual(true);
 
@@ -461,5 +459,5 @@ describe('ReactElement', () => {
     expect(React.isValidElement('string')).toEqual(false);
-    expect(React.isValidElement(React.createFactory('div'))).toEqual(false);
+    expect(React.isValidElement(React.DOM.div)).toEqual(false);
     expect(React.isValidElement(Component)).toEqual(false);
-    expect(React.isValidElement({type: 'div', props: {}})).toEqual(false);
+    expect(React.isValidElement({ type: 'div', props: {} })).toEqual(false);
 
@@ -468,2 +466,3 @@ describe('ReactElement', () => {
   });
+
 });
@@ -481,2 +480,3 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
 
+
   describe('when using jsx only', () => {
@@ -493,3 +493,3 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
       };
-      instance = ReactTestUtils.renderIntoDocument(<Parent />);
+      instance = ReactTestUtils.renderIntoDocument(<Parent/>);
     });
@@ -497,6 +497,3 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
     it('should scry children but cannot', () => {
-      var children = ReactTestUtils.scryRenderedComponentsWithType(
-        instance,
-        Child,
-      );
+      var children = ReactTestUtils.scryRenderedComponentsWithType(instance, Child);
       expect(children.length).toBe(1);
@@ -509,6 +506,3 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
     it('can capture Child instantiation calls', () => {
-      expect(Child.mock.calls[0][0]).toEqual({
-        foo: 'foo value',
-        children: 'children value',
-      });
+      expect(Child.mock.calls[0][0]).toEqual({ foo: 'foo value', children: 'children value' });
     });
@@ -522,7 +516,3 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
         render() {
-          return React.createElement(
-            'div',
-            {},
-            childFactory({ref: 'child', foo: 'foo value'}, 'children value'),
-          );
+          return React.DOM.div({}, childFactory({ ref: 'child', foo: 'foo value' }, 'children value'));
         }
@@ -534,6 +524,3 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
     it('can properly scry children', () => {
-      var children = ReactTestUtils.scryRenderedComponentsWithType(
-        instance,
-        Child,
-      );
+      var children = ReactTestUtils.scryRenderedComponentsWithType(instance, Child);
       expect(children.length).toBe(1);
@@ -546,6 +533,3 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
     it('can capture Child instantiation calls', () => {
-      expect(Child.mock.calls[0][0]).toEqual({
-        foo: 'foo value',
-        children: 'children value',
-      });
+      expect(Child.mock.calls[0][0]).toEqual({ foo: 'foo value', children: 'children value' });
     });
@@ -558,11 +542,3 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
         render() {
-          return React.createElement(
-            'div',
-            {},
-            React.createElement(
-              Child,
-              {ref: 'child', foo: 'foo value'},
-              'children value',
-            ),
-          );
+          return React.DOM.div({}, React.createElement(Child, { ref: 'child', foo: 'foo value' }, 'children value'));
         }
@@ -574,6 +550,3 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
     it('should scry children but cannot', () => {
-      var children = ReactTestUtils.scryRenderedComponentsWithType(
-        instance,
-        Child,
-      );
+      var children = ReactTestUtils.scryRenderedComponentsWithType(instance, Child);
       expect(children.length).toBe(1);
@@ -586,8 +559,6 @@ describe('comparing jsx vs .createFactory() vs .createElement()', () => {
     it('can capture Child instantiation calls', () => {
-      expect(Child.mock.calls[0][0]).toEqual({
-        foo: 'foo value',
-        children: 'children value',
-      });
+      expect(Child.mock.calls[0][0]).toEqual({ foo: 'foo value', children: 'children value' });
     });
   });
+
 });
diff --git a/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js b/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js
index a29bdff98..69e8984ca 100644
--- a/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js
+++ b/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js
@@ -13,3 +13,2 @@
 
-var PropTypes;
 var React;
@@ -25,3 +24,2 @@ describe('ReactElementClone', () => {
     ReactTestUtils = require('ReactTestUtils');
-    PropTypes = require('prop-types');
 
@@ -46,3 +44,3 @@ describe('ReactElementClone', () => {
           <div className="parent">
-            {React.cloneElement(this.props.child, {className: 'xyz'})}
+            {React.cloneElement(this.props.child, { className: 'xyz' })}
           </div>
@@ -70,3 +68,3 @@ describe('ReactElementClone', () => {
           <div className="parent">
-            {React.cloneElement(this.props.child, {className: 'xyz'})}
+            {React.cloneElement(this.props.child, { className: 'xyz' })}
           </div>
@@ -95,3 +93,3 @@ describe('ReactElementClone', () => {
           <div>
-            {React.cloneElement(this.props.child, {className: 'xyz'})}
+            {React.cloneElement(this.props.child, { className: 'xyz' })}
           </div>
@@ -124,3 +122,3 @@ describe('ReactElementClone', () => {
     ReactTestUtils.renderIntoDocument(
-      React.cloneElement(<Component />, {children: 'xyz'}),
+      React.cloneElement(<Component />, {children: 'xyz'})
     );
@@ -137,3 +135,3 @@ describe('ReactElementClone', () => {
     ReactTestUtils.renderIntoDocument(
-      React.cloneElement(<Component>xyz</Component>, {}),
+      React.cloneElement(<Component>xyz</Component>, {})
     );
@@ -150,8 +148,11 @@ describe('ReactElementClone', () => {
       <Component>xyz</Component>,
-      {children: <Component />},
+      { children: <Component /> },
       <div />,
-      <span />,
+      <span />
     );
 
-    expect(clone.props.children).toEqual([<div />, <span />]);
+    expect(clone.props.children).toEqual([
+      <div />,
+      <span />,
+    ]);
   });
@@ -159,18 +160,10 @@ describe('ReactElementClone', () => {
   it('should override children if undefined is provided as an argument', () => {
-    var element = React.createElement(
-      ComponentClass,
-      {
-        children: 'text',
-      },
-      undefined,
-    );
+    var element = React.createElement(ComponentClass, {
+      children: 'text',
+    }, undefined);
     expect(element.props.children).toBe(undefined);
 
-    var element2 = React.cloneElement(
-      React.createElement(ComponentClass, {
-        children: 'text',
-      }),
-      {},
-      undefined,
-    );
+    var element2 = React.cloneElement(React.createElement(ComponentClass, {
+      children: 'text',
+    }), {}, undefined);
     expect(element2.props.children).toBe(undefined);
@@ -181,6 +174,4 @@ describe('ReactElementClone', () => {
       render() {
-        var clone = React.cloneElement(this.props.children, {
-          key: 'xyz',
-          ref: 'xyz',
-        });
+        var clone =
+          React.cloneElement(this.props.children, {key: 'xyz', ref: 'xyz'});
         expect(clone.key).toBe('xyz');
@@ -229,3 +220,3 @@ describe('ReactElementClone', () => {
     ReactTestUtils.renderIntoDocument(
-      React.cloneElement(<Component myprop="abc" />, {myprop: 'xyz'}),
+      React.cloneElement(<Component myprop="abc" />, {myprop: 'xyz'})
     );
@@ -261,3 +252,3 @@ describe('ReactElementClone', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Each child in an array or iterator should have a unique "key" prop.',
+      'Each child in an array or iterator should have a unique "key" prop.'
     );
@@ -297,3 +288,3 @@ describe('ReactElementClone', () => {
     Component.propTypes = {
-      color: PropTypes.string.isRequired,
+      color: React.PropTypes.string.isRequired,
     };
@@ -306,5 +297,6 @@ describe('ReactElementClone', () => {
       render() {
-        return React.createElement(Parent, {
-          child: React.createElement(Component, {color: 'red'}),
-        });
+        return React.createElement(
+          Parent,
+          { child: React.createElement(Component, {color: 'red'}) }
+        );
       }
@@ -315,7 +307,7 @@ describe('ReactElementClone', () => {
       'Warning: Failed prop type: ' +
-        'Invalid prop `color` of type `number` supplied to `Component`, ' +
-        'expected `string`.\n' +
-        '    in Component (created by GrandParent)\n' +
-        '    in Parent (created by GrandParent)\n' +
-        '    in GrandParent',
+      'Invalid prop `color` of type `number` supplied to `Component`, ' +
+      'expected `string`.\n' +
+      '    in Component (created by GrandParent)\n' +
+      '    in Parent (created by GrandParent)\n' +
+      '    in GrandParent'
     );
@@ -369,2 +361,3 @@ describe('ReactElementClone', () => {
   });
+
 });
diff --git a/src/isomorphic/classic/element/__tests__/ReactElementValidator-test.js b/src/isomorphic/classic/element/__tests__/ReactElementValidator-test.js
index a772395aa..f2e403c5a 100644
--- a/src/isomorphic/classic/element/__tests__/ReactElementValidator-test.js
+++ b/src/isomorphic/classic/element/__tests__/ReactElementValidator-test.js
@@ -16,3 +16,2 @@
 
-var PropTypes;
 var React;
@@ -34,3 +33,2 @@ describe('ReactElementValidator', () => {
     ReactTestUtils = require('ReactTestUtils');
-    PropTypes = require('prop-types');
     ComponentClass = class extends React.Component {
@@ -50,3 +48,3 @@ describe('ReactElementValidator', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Each child in an array or iterator should have a unique "key" prop.',
+      'Each child in an array or iterator should have a unique "key" prop.'
     );
@@ -68,3 +66,3 @@ describe('ReactElementValidator', () => {
       render() {
-        return InnerComponent({childSet: [Component(), Component()]});
+        return InnerComponent({childSet: [Component(), Component()] });
       }
@@ -72,3 +70,5 @@ describe('ReactElementValidator', () => {
 
-    ReactTestUtils.renderIntoDocument(React.createElement(ComponentWrapper));
+    ReactTestUtils.renderIntoDocument(
+      React.createElement(ComponentWrapper)
+    );
 
@@ -77,4 +77,4 @@ describe('ReactElementValidator', () => {
       'Each child in an array or iterator should have a unique "key" prop. ' +
-        'Check the render method of `InnerClass`. ' +
-        'It was passed a child from ComponentWrapper. ',
+      'Check the render method of `InnerClass`. ' +
+      'It was passed a child from ComponentWrapper. '
     );
@@ -88,5 +88,8 @@ describe('ReactElementValidator', () => {
     }
-    Object.defineProperty(Anonymous, 'name', {value: undefined});
+    Object.defineProperty(Anonymous, 'name', { value: undefined });
 
-    var divs = [<div />, <div />];
+    var divs = [
+      <div />,
+      <div />,
+    ];
     ReactTestUtils.renderIntoDocument(<Anonymous>{divs}</Anonymous>);
@@ -96,4 +99,4 @@ describe('ReactElementValidator', () => {
       'Warning: Each child in an array or iterator should have a unique ' +
-        '"key" prop. See https://fb.me/react-warning-keys for more information.\n' +
-        '    in div (at **)',
+      '"key" prop. See https://fb.me/react-warning-keys for more information.\n' +
+      '    in div (at **)'
     );
@@ -104,3 +107,6 @@ describe('ReactElementValidator', () => {
 
-    var divs = [<div />, <div />];
+    var divs = [
+      <div />,
+      <div />,
+    ];
     ReactTestUtils.renderIntoDocument(<div>{divs}</div>);
@@ -110,5 +116,5 @@ describe('ReactElementValidator', () => {
       'Warning: Each child in an array or iterator should have a unique ' +
-        '"key" prop. Check the top-level render call using <div>. See ' +
-        'https://fb.me/react-warning-keys for more information.\n' +
-        '    in div (at **)',
+      '"key" prop. Check the top-level render call using <div>. See ' +
+      'https://fb.me/react-warning-keys for more information.\n' +
+      '    in div (at **)'
     );
@@ -136,8 +142,8 @@ describe('ReactElementValidator', () => {
       'Warning: Each child in an array or iterator should have a unique ' +
-        '"key" prop. Check the render method of `Component`. See ' +
-        'https://fb.me/react-warning-keys for more information.\n' +
-        '    in div (at **)\n' +
-        '    in Component (at **)\n' +
-        '    in Parent (at **)\n' +
-        '    in GrandParent (at **)',
+      '"key" prop. Check the render method of `Component`. See ' +
+      'https://fb.me/react-warning-keys for more information.\n' +
+      '    in div (at **)\n' +
+      '    in Component (at **)\n' +
+      '    in Parent (at **)\n' +
+      '    in GrandParent (at **)'
     );
@@ -161,3 +167,3 @@ describe('ReactElementValidator', () => {
         <span />
-      </Wrapper>,
+      </Wrapper>
     );
@@ -187,3 +193,3 @@ describe('ReactElementValidator', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Each child in an array or iterator should have a unique "key" prop.',
+      'Each child in an array or iterator should have a unique "key" prop.'
     );
@@ -254,3 +260,3 @@ describe('ReactElementValidator', () => {
     MyComp.propTypes = {
-      color: PropTypes.string,
+      color: React.PropTypes.string,
     };
@@ -262,6 +268,6 @@ describe('ReactElementValidator', () => {
       'Warning: Failed prop type: ' +
-        'Invalid prop `color` of type `number` supplied to `MyComp`, ' +
-        'expected `string`.\n' +
-        '    in MyComp (created by ParentComp)\n' +
-        '    in ParentComp',
+      'Invalid prop `color` of type `number` supplied to `MyComp`, ' +
+      'expected `string`.\n' +
+      '    in MyComp (created by ParentComp)\n' +
+      '    in ParentComp'
     );
@@ -280,5 +286,5 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-        '(for built-in components) or a class/function (for composite ' +
-        'components) but got: undefined. You likely forgot to export your ' +
-        "component from the file it's defined in.",
+      '(for built-in components) or a class/function (for composite ' +
+      'components) but got: undefined. You likely forgot to export your ' +
+      'component from the file it\'s defined in.'
     );
@@ -286,4 +292,4 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-        '(for built-in components) or a class/function (for composite ' +
-        'components) but got: null.',
+      '(for built-in components) or a class/function (for composite ' +
+      'components) but got: null.'
     );
@@ -291,4 +297,4 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-        '(for built-in components) or a class/function (for composite ' +
-        'components) but got: boolean.',
+      '(for built-in components) or a class/function (for composite ' +
+      'components) but got: boolean.'
     );
@@ -296,4 +302,4 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-        '(for built-in components) or a class/function (for composite ' +
-        'components) but got: number.',
+      '(for built-in components) or a class/function (for composite ' +
+      'components) but got: number.'
     );
@@ -301,4 +307,4 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-        '(for built-in components) or a class/function (for composite ' +
-        'components) but got: object.',
+      '(for built-in components) or a class/function (for composite ' +
+      'components) but got: object.'
     );
@@ -306,5 +312,5 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-        '(for built-in components) or a class/function (for composite ' +
-        'components) but got: object. You likely forgot to export your ' +
-        "component from the file it's defined in.",
+      '(for built-in components) or a class/function (for composite ' +
+      'components) but got: object. You likely forgot to export your ' +
+      'component from the file it\'s defined in.'
     );
@@ -323,4 +329,4 @@ describe('ReactElementValidator', () => {
       'Element type is invalid: expected a string (for built-in components) ' +
-        'or a class/function (for composite components) but got: null. Check ' +
-        'the render method of `ParentComp`.',
+      'or a class/function (for composite components) but got: null. Check ' +
+      'the render method of `ParentComp`.'
     );
@@ -329,5 +335,5 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-        '(for built-in components) or a class/function (for composite ' +
-        'components) but got: null. Check the render method of `ParentComp`.' +
-        '\n    in ParentComp',
+      '(for built-in components) or a class/function (for composite ' +
+      'components) but got: null. Check the render method of `ParentComp`.' +
+      '\n    in ParentComp'
     );
@@ -343,3 +349,3 @@ describe('ReactElementValidator', () => {
     }
-    Component.propTypes = {prop: PropTypes.string.isRequired};
+    Component.propTypes = {prop: React.PropTypes.string.isRequired};
     Component.defaultProps = {prop: null};
@@ -351,4 +357,4 @@ describe('ReactElementValidator', () => {
       'Warning: Failed prop type: The prop `prop` is marked as required in ' +
-        '`Component`, but its value is `null`.\n' +
-        '    in Component',
+      '`Component`, but its value is `null`.\n' +
+      '    in Component'
     );
@@ -364,3 +370,3 @@ describe('ReactElementValidator', () => {
     }
-    Component.propTypes = {prop: PropTypes.string.isRequired};
+    Component.propTypes = {prop: React.PropTypes.string.isRequired};
     Component.defaultProps = {prop: 'text'};
@@ -368,3 +374,3 @@ describe('ReactElementValidator', () => {
     ReactTestUtils.renderIntoDocument(
-      React.createElement(Component, {prop: null}),
+      React.createElement(Component, {prop:null})
     );
@@ -374,4 +380,4 @@ describe('ReactElementValidator', () => {
       'Warning: Failed prop type: The prop `prop` is marked as required in ' +
-        '`Component`, but its value is `null`.\n' +
-        '    in Component',
+      '`Component`, but its value is `null`.\n' +
+      '    in Component'
     );
@@ -388,8 +394,10 @@ describe('ReactElementValidator', () => {
     Component.propTypes = {
-      prop: PropTypes.string.isRequired,
+      prop: React.PropTypes.string.isRequired,
     };
 
-    ReactTestUtils.renderIntoDocument(React.createElement(Component));
     ReactTestUtils.renderIntoDocument(
-      React.createElement(Component, {prop: 42}),
+      React.createElement(Component)
+    );
+    ReactTestUtils.renderIntoDocument(
+      React.createElement(Component, {prop: 42})
     );
@@ -399,5 +407,5 @@ describe('ReactElementValidator', () => {
       'Warning: Failed prop type: ' +
-        'The prop `prop` is marked as required in `Component`, but its value ' +
-        'is `undefined`.\n' +
-        '    in Component',
+      'The prop `prop` is marked as required in `Component`, but its value ' +
+      'is `undefined`.\n' +
+      '    in Component'
     );
@@ -406,5 +414,5 @@ describe('ReactElementValidator', () => {
       'Warning: Failed prop type: ' +
-        'Invalid prop `prop` of type `number` supplied to ' +
-        '`Component`, expected `string`.\n' +
-        '    in Component',
+      'Invalid prop `prop` of type `number` supplied to ' +
+      '`Component`, expected `string`.\n' +
+      '    in Component'
     );
@@ -412,3 +420,3 @@ describe('ReactElementValidator', () => {
     ReactTestUtils.renderIntoDocument(
-      React.createElement(Component, {prop: 'string'}),
+      React.createElement(Component, {prop: 'string'})
     );
@@ -425,2 +433,3 @@ describe('ReactElementValidator', () => {
         return React.createElement('span', null, this.props.myProp.value);
+
       }
@@ -428,3 +437,3 @@ describe('ReactElementValidator', () => {
     Component.propTypes = {
-      myProp: PropTypes.shape,
+      myProp: React.PropTypes.shape,
     };
@@ -432,3 +441,3 @@ describe('ReactElementValidator', () => {
     ReactTestUtils.renderIntoDocument(
-      React.createElement(Component, {myProp: {value: 'hi'}}),
+      React.createElement(Component, {myProp: {value: 'hi'}})
     );
@@ -438,6 +447,6 @@ describe('ReactElementValidator', () => {
       'Warning: Component: type specification of prop `myProp` is invalid; ' +
-        'the type checker function must return `null` or an `Error` but ' +
-        'returned a function. You may have forgotten to pass an argument to ' +
-        'the type checker creator (arrayOf, instanceOf, objectOf, oneOf, ' +
-        'oneOfType, and shape all require an argument).',
+      'the type checker function must return `null` or an `Error` but ' +
+      'returned a function. You may have forgotten to pass an argument to ' +
+      'the type checker creator (arrayOf, instanceOf, objectOf, oneOf, ' +
+      'oneOfType, and shape all require an argument).'
     );
@@ -446,3 +455,3 @@ describe('ReactElementValidator', () => {
   it('should warn when accessing .type on an element factory', () => {
-    spyOn(console, 'warn');
+    spyOn(console, 'error');
     function TestComponent() {
@@ -452,6 +461,6 @@ describe('ReactElementValidator', () => {
     expect(TestFactory.type).toBe(TestComponent);
-    expect(console.warn.calls.count()).toBe(1);
-    expect(console.warn.calls.argsFor(0)[0]).toBe(
+    expect(console.error.calls.count()).toBe(1);
+    expect(console.error.calls.argsFor(0)[0]).toBe(
       'Warning: Factory.type is deprecated. Access the class directly before ' +
-        'passing it to createFactory.',
+      'passing it to createFactory.'
     );
@@ -459,3 +468,3 @@ describe('ReactElementValidator', () => {
     expect(TestFactory.type).toBe(TestComponent);
-    expect(console.warn.calls.count()).toBe(1);
+    expect(console.error.calls.count()).toBe(1);
   });
@@ -504,3 +513,3 @@ describe('ReactElementValidator', () => {
     var child = {
-      $$typeof: <div />.$$typeof,
+      $$typeof: (<div />).$$typeof,
       type: 'span',
@@ -522,5 +531,5 @@ describe('ReactElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-        '(for built-in components) or a class/function (for composite ' +
-        'components) but got: undefined. You likely forgot to export your ' +
-        "component from the file it's defined in. Check your code at **.",
+      '(for built-in components) or a class/function (for composite ' +
+      'components) but got: undefined. You likely forgot to export your ' +
+      'component from the file it\'s defined in. Check your code at **.'
     );
@@ -528,52 +537,2 @@ describe('ReactElementValidator', () => {
 
-  it('provides stack via non-standard console.reactStack for invalid types', () => {
-    spyOn(console, 'error');
-
-    function Foo() {
-      var Bad = undefined;
-      return React.createElement(Bad);
-    }
-
-    function App() {
-      return React.createElement('div', null, React.createElement(Foo));
-    }
-
-    try {
-      console.reactStack = jest.fn();
-      console.reactStackEnd = jest.fn();
-
-      expect(() => {
-        ReactTestUtils.renderIntoDocument(React.createElement(App));
-      }).toThrow(
-        'Element type is invalid: expected a string (for built-in components) ' +
-          'or a class/function (for composite components) but got: undefined. ' +
-          "You likely forgot to export your component from the file it's " +
-          'defined in. Check the render method of `Foo`.',
-      );
-
-      expect(console.reactStack.mock.calls.length).toBe(1);
-      expect(console.reactStackEnd.mock.calls.length).toBe(1);
-
-      var stack = console.reactStack.mock.calls[0][0];
-      expect(Array.isArray(stack)).toBe(true);
-      expect(stack.map(frame => frame.name)).toEqual([
-        'Foo', // <Bad> is inside Foo
-        'App', // <Foo> is inside App
-        'App', // <div> is inside App
-        null, // <App> is outside a component
-      ]);
-      expect(
-        stack.map(frame => frame.fileName && frame.fileName.slice(-8)),
-      ).toEqual([null, null, null, null]);
-      expect(stack.map(frame => frame.lineNumber)).toEqual([
-        null,
-        null,
-        null,
-        null,
-      ]);
-    } finally {
-      delete console.reactStack;
-      delete console.reactStackEnd;
-    }
-  });
 });
diff --git a/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js b/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js
index 092d2b6f8..26cb0fa20 100644
--- a/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js
+++ b/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js
@@ -30,3 +30,3 @@ function typeCheckFail(declaration, value, message) {
     null,
-    ReactPropTypesSecret,
+    ReactPropTypesSecret
   );
@@ -37,8 +37,6 @@ function typeCheckFail(declaration, value, message) {
 function typeCheckFailRequiredValues(declaration) {
-  var specifiedButIsNullMsg =
-    'The prop `testProp` is marked as required in ' +
+  var specifiedButIsNullMsg = 'The prop `testProp` is marked as required in ' +
     '`testComponent`, but its value is `null`.';
-  var unspecifiedMsg =
-    'The prop `testProp` is marked as required in ' +
-    '`testComponent`, but its value is `undefined`.';
+  var unspecifiedMsg = 'The prop `testProp` is marked as required in ' +
+    '`testComponent`, but its value is \`undefined\`.';
   var props1 = {testProp: null};
@@ -50,3 +48,3 @@ function typeCheckFailRequiredValues(declaration) {
     null,
-    ReactPropTypesSecret,
+    ReactPropTypesSecret
   );
@@ -61,3 +59,3 @@ function typeCheckFailRequiredValues(declaration) {
     null,
-    ReactPropTypesSecret,
+    ReactPropTypesSecret
   );
@@ -72,3 +70,3 @@ function typeCheckFailRequiredValues(declaration) {
     null,
-    ReactPropTypesSecret,
+    ReactPropTypesSecret
   );
@@ -86,3 +84,3 @@ function typeCheckPass(declaration, value) {
     null,
-    ReactPropTypesSecret,
+    ReactPropTypesSecret
   );
@@ -96,3 +94,8 @@ function expectWarningInDevelopment(declaration, value) {
   for (var i = 0; i < 3; i++) {
-    declaration(props, propName, componentName, 'prop');
+    declaration(
+      props,
+      propName,
+      componentName,
+      'prop'
+    );
   }
@@ -100,3 +103,3 @@ function expectWarningInDevelopment(declaration, value) {
   expect(console.error.calls.argsFor(0)[0]).toContain(
-    'You are manually calling a React.PropTypes validation ',
+    'You are manually calling a React.PropTypes validation '
   );
@@ -120,3 +123,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `array` supplied to ' +
-          '`testComponent`, expected `string`.',
+        '`testComponent`, expected `string`.'
       );
@@ -126,3 +129,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `boolean` supplied to ' +
-          '`testComponent`, expected `string`.',
+        '`testComponent`, expected `string`.'
       );
@@ -132,3 +135,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `number` supplied to ' +
-          '`testComponent`, expected `string`.',
+        '`testComponent`, expected `string`.'
       );
@@ -138,3 +141,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `object` supplied to ' +
-          '`testComponent`, expected `string`.',
+        '`testComponent`, expected `string`.'
       );
@@ -144,3 +147,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `symbol` supplied to ' +
-          '`testComponent`, expected `string`.',
+        '`testComponent`, expected `string`.'
       );
@@ -153,3 +156,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `date` supplied to ' +
-          '`testComponent`, expected `string`.',
+        '`testComponent`, expected `string`.'
       );
@@ -159,3 +162,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `regexp` supplied to ' +
-          '`testComponent`, expected `string`.',
+        '`testComponent`, expected `string`.'
       );
@@ -259,5 +262,5 @@ describe('ReactPropTypes', () => {
       typeCheckFail(
-        PropTypes.arrayOf({foo: PropTypes.string}),
-        {foo: 'bar'},
-        'Property `testProp` of component `testComponent` has invalid PropType notation inside arrayOf.',
+        PropTypes.arrayOf({ foo: PropTypes.string }),
+        { foo: 'bar' },
+        'Property `testProp` of component `testComponent` has invalid PropType notation inside arrayOf.'
       );
@@ -275,3 +278,3 @@ describe('ReactPropTypes', () => {
         PropTypes.arrayOf(PropTypes.shape({a: PropTypes.number.isRequired})),
-        [{a: 1}, {a: 2}],
+        [{a: 1}, {a: 2}]
       );
@@ -279,6 +282,6 @@ describe('ReactPropTypes', () => {
       function Thing() {}
-      typeCheckPass(PropTypes.arrayOf(PropTypes.instanceOf(Thing)), [
-        new Thing(),
-        new Thing(),
-      ]);
+      typeCheckPass(
+        PropTypes.arrayOf(PropTypes.instanceOf(Thing)),
+        [new Thing(), new Thing()]
+      );
     });
@@ -290,3 +293,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp[2]` of type `string` supplied to ' +
-          '`testComponent`, expected `number`.',
+        '`testComponent`, expected `number`.'
       );
@@ -302,5 +305,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp[1]` of type `String` supplied to ' +
-          '`testComponent`, expected instance of `' +
-          name +
-          '`.',
+        '`testComponent`, expected instance of `' + name + '`.'
       );
@@ -313,3 +314,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `object` supplied to ' +
-          '`testComponent`, expected an array.',
+        '`testComponent`, expected an array.'
       );
@@ -319,3 +320,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `number` supplied to ' +
-          '`testComponent`, expected an array.',
+        '`testComponent`, expected an array.'
       );
@@ -325,3 +326,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `string` supplied to ' +
-          '`testComponent`, expected an array.',
+        '`testComponent`, expected an array.'
       );
@@ -340,3 +341,3 @@ describe('ReactPropTypes', () => {
       typeCheckFailRequiredValues(
-        PropTypes.arrayOf(PropTypes.number).isRequired,
+        PropTypes.arrayOf(PropTypes.number).isRequired
       );
@@ -346,22 +347,16 @@ describe('ReactPropTypes', () => {
       spyOn(console, 'error');
-      expectWarningInDevelopment(PropTypes.arrayOf({foo: PropTypes.string}), {
-        foo: 'bar',
-      });
-      expectWarningInDevelopment(PropTypes.arrayOf(PropTypes.number), [
-        1,
-        2,
-        'b',
-      ]);
-      expectWarningInDevelopment(PropTypes.arrayOf(PropTypes.number), {
-        '0': 'maybe-array',
-        length: 1,
-      });
       expectWarningInDevelopment(
-        PropTypes.arrayOf(PropTypes.number).isRequired,
-        null,
+      PropTypes.arrayOf({ foo: PropTypes.string }),
+        { foo: 'bar' }
       );
       expectWarningInDevelopment(
-        PropTypes.arrayOf(PropTypes.number).isRequired,
-        undefined,
+        PropTypes.arrayOf(PropTypes.number),
+        [1, 2, 'b']
       );
+      expectWarningInDevelopment(
+        PropTypes.arrayOf(PropTypes.number),
+        {'0': 'maybe-array', length: 1}
+      );
+      expectWarningInDevelopment(PropTypes.arrayOf(PropTypes.number).isRequired, null);
+      expectWarningInDevelopment(PropTypes.arrayOf(PropTypes.number).isRequired, undefined);
     });
@@ -391,3 +386,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `array` supplied to `testComponent`, ' +
-          'expected a single ReactElement.',
+        'expected a single ReactElement.'
       );
@@ -397,3 +392,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `number` supplied to `testComponent`, ' +
-          'expected a single ReactElement.',
+        'expected a single ReactElement.'
       );
@@ -403,3 +398,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `string` supplied to `testComponent`, ' +
-          'expected a single ReactElement.',
+        'expected a single ReactElement.'
       );
@@ -409,3 +404,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `boolean` supplied to `testComponent`, ' +
-          'expected a single ReactElement.',
+        'expected a single ReactElement.'
       );
@@ -450,2 +445,3 @@ describe('ReactPropTypes', () => {
     });
+
   });
@@ -464,5 +460,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `Boolean` supplied to ' +
-          '`testComponent`, expected instance of `' +
-          personName +
-          '`.',
+        '`testComponent`, expected instance of `' + personName + '`.'
       );
@@ -472,5 +466,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `Object` supplied to ' +
-          '`testComponent`, expected instance of `' +
-          personName +
-          '`.',
+        '`testComponent`, expected instance of `' + personName + '`.'
       );
@@ -480,5 +472,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `String` supplied to ' +
-          '`testComponent`, expected instance of `' +
-          personName +
-          '`.',
+        '`testComponent`, expected instance of `' + personName + '`.'
       );
@@ -488,5 +478,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `Object` supplied to ' +
-          '`testComponent`, expected instance of `' +
-          dateName +
-          '`.',
+        '`testComponent`, expected instance of `' + dateName + '`.'
       );
@@ -496,5 +484,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `Object` supplied to ' +
-          '`testComponent`, expected instance of `' +
-          regExpName +
-          '`.',
+        '`testComponent`, expected instance of `' + regExpName + '`.'
       );
@@ -504,5 +490,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `Cat` supplied to ' +
-          '`testComponent`, expected instance of `' +
-          personName +
-          '`.',
+        '`testComponent`, expected instance of `' + personName + '`.'
       );
@@ -512,5 +496,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `<<anonymous>>` supplied to ' +
-          '`testComponent`, expected instance of `' +
-          personName +
-          '`.',
+        '`testComponent`, expected instance of `' + personName + '`.'
       );
@@ -544,7 +526,5 @@ describe('ReactPropTypes', () => {
       expectWarningInDevelopment(PropTypes.instanceOf(Date).isRequired, {});
-      expectWarningInDevelopment(
-        PropTypes.instanceOf(Date).isRequired,
-        new Date(),
-      );
+      expectWarningInDevelopment(PropTypes.instanceOf(Date).isRequired, new Date());
     });
+
   });
@@ -561,4 +541,3 @@ describe('ReactPropTypes', () => {
     it('should warn for invalid values', () => {
-      var failMessage =
-        'Invalid prop `testProp` supplied to ' +
+      var failMessage = 'Invalid prop `testProp` supplied to ' +
         '`testComponent`, expected a ReactNode.';
@@ -588,17 +567,14 @@ describe('ReactPropTypes', () => {
       var frag = ReactFragment.create;
-      typeCheckPass(
-        PropTypes.node,
-        frag({
-          k0: 123,
-          k1: 'Some string',
-          k2: <div />,
-          k3: frag({
-            k30: <MyComponent />,
-            k31: frag({k310: <a />}),
-            k32: 'Another string',
-          }),
-          k4: null,
-          k5: undefined,
+      typeCheckPass(PropTypes.node, frag({
+        k0: 123,
+        k1: 'Some string',
+        k2: <div />,
+        k3: frag({
+          k30: <MyComponent />,
+          k31: frag({k310: <a />}),
+          k32: 'Another string',
         }),
-      );
+        k4: null,
+        k5: undefined,
+      }));
       expect(console.error.calls.count()).toBe(0);
@@ -629,6 +605,3 @@ describe('ReactPropTypes', () => {
               var done = ++i > 2;
-              return {
-                value: done ? undefined : ['#' + i, <MyComponent />],
-                done: done,
-              };
+              return {value: done ? undefined : ['#' + i, <MyComponent />], done: done};
             },
@@ -663,2 +636,3 @@ describe('ReactPropTypes', () => {
     });
+
   });
@@ -668,5 +642,5 @@ describe('ReactPropTypes', () => {
       typeCheckFail(
-        PropTypes.objectOf({foo: PropTypes.string}),
-        {foo: 'bar'},
-        'Property `testProp` of component `testComponent` has invalid PropType notation inside objectOf.',
+        PropTypes.objectOf({ foo: PropTypes.string }),
+        { foo: 'bar' },
+        'Property `testProp` of component `testComponent` has invalid PropType notation inside objectOf.'
       );
@@ -676,16 +650,14 @@ describe('ReactPropTypes', () => {
       typeCheckPass(PropTypes.objectOf(PropTypes.number), {a: 1, b: 2, c: 3});
-      typeCheckPass(PropTypes.objectOf(PropTypes.string), {
-        a: 'a',
-        b: 'b',
-        c: 'c',
-      });
-      typeCheckPass(PropTypes.objectOf(PropTypes.oneOf(['a', 'b'])), {
-        a: 'a',
-        b: 'b',
-      });
-      typeCheckPass(PropTypes.objectOf(PropTypes.symbol), {
-        a: Symbol(),
-        b: Symbol(),
-        c: Symbol(),
-      });
+      typeCheckPass(
+        PropTypes.objectOf(PropTypes.string),
+        {a: 'a', b: 'b', c: 'c'}
+      );
+      typeCheckPass(
+        PropTypes.objectOf(PropTypes.oneOf(['a', 'b'])),
+        {a: 'a', b: 'b'}
+      );
+      typeCheckPass(
+        PropTypes.objectOf(PropTypes.symbol),
+        {a: Symbol(), b: Symbol(), c: Symbol()}
+      );
     });
@@ -695,3 +667,3 @@ describe('ReactPropTypes', () => {
         PropTypes.objectOf(PropTypes.shape({a: PropTypes.number.isRequired})),
-        {a: {a: 1}, b: {a: 2}},
+        {a: {a: 1}, b: {a: 2}}
       );
@@ -699,6 +671,6 @@ describe('ReactPropTypes', () => {
       function Thing() {}
-      typeCheckPass(PropTypes.objectOf(PropTypes.instanceOf(Thing)), {
-        a: new Thing(),
-        b: new Thing(),
-      });
+      typeCheckPass(
+        PropTypes.objectOf(PropTypes.instanceOf(Thing)),
+        {a: new Thing(), b: new Thing()}
+      );
     });
@@ -710,3 +682,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp.c` of type `string` supplied to `testComponent`, ' +
-          'expected `number`.',
+        'expected `number`.'
       );
@@ -722,5 +694,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp.b` of type `String` supplied to ' +
-          '`testComponent`, expected instance of `' +
-          name +
-          '`.',
+        '`testComponent`, expected instance of `' + name + '`.'
       );
@@ -733,3 +703,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `array` supplied to ' +
-          '`testComponent`, expected an object.',
+        '`testComponent`, expected an object.'
       );
@@ -739,3 +709,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `number` supplied to ' +
-          '`testComponent`, expected an object.',
+        '`testComponent`, expected an object.'
       );
@@ -745,3 +715,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `string` supplied to ' +
-          '`testComponent`, expected an object.',
+        '`testComponent`, expected an object.'
       );
@@ -751,3 +721,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `symbol` supplied to ' +
-          '`testComponent`, expected an object.',
+        '`testComponent`, expected an object.'
       );
@@ -766,3 +736,3 @@ describe('ReactPropTypes', () => {
       typeCheckFailRequiredValues(
-        PropTypes.objectOf(PropTypes.number).isRequired,
+        PropTypes.objectOf(PropTypes.number).isRequired
       );
@@ -772,16 +742,13 @@ describe('ReactPropTypes', () => {
       spyOn(console, 'error');
-      expectWarningInDevelopment(PropTypes.objectOf({foo: PropTypes.string}), {
-        foo: 'bar',
-      });
-      expectWarningInDevelopment(PropTypes.objectOf(PropTypes.number), {
-        a: 1,
-        b: 2,
-        c: 'b',
-      });
-      expectWarningInDevelopment(PropTypes.objectOf(PropTypes.number), [1, 2]);
-      expectWarningInDevelopment(PropTypes.objectOf(PropTypes.number), null);
+      expectWarningInDevelopment(
+        PropTypes.objectOf({ foo: PropTypes.string }),
+        { foo: 'bar' }
+      );
       expectWarningInDevelopment(
         PropTypes.objectOf(PropTypes.number),
-        undefined,
+        {a: 1, b: 2, c: 'b'}
       );
+      expectWarningInDevelopment(PropTypes.objectOf(PropTypes.number), [1, 2]);
+      expectWarningInDevelopment(PropTypes.objectOf(PropTypes.number), null);
+      expectWarningInDevelopment(PropTypes.objectOf(PropTypes.number), undefined);
     });
@@ -796,5 +763,4 @@ describe('ReactPropTypes', () => {
       expect(console.error).toHaveBeenCalled();
-      expect(console.error.calls.argsFor(0)[0]).toContain(
-        'Invalid argument supplied to oneOf, expected an instance of array.',
-      );
+      expect(console.error.calls.argsFor(0)[0])
+        .toContain('Invalid argument supplied to oneOf, expected an instance of array.');
 
@@ -808,3 +774,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of value `true` supplied to ' +
-          '`testComponent`, expected one of ["red","blue"].',
+        '`testComponent`, expected one of ["red","blue"].'
       );
@@ -814,3 +780,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of value `` supplied to `testComponent`, ' +
-          'expected one of ["red","blue"].',
+        'expected one of ["red","blue"].'
       );
@@ -820,3 +786,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of value `` supplied to `testComponent`, ' +
-          'expected one of ["red","blue"].',
+        'expected one of ["red","blue"].'
       );
@@ -826,3 +792,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of value `false` supplied to ' +
-          '`testComponent`, expected one of [0,"false"].',
+        '`testComponent`, expected one of [0,"false"].'
       );
@@ -860,5 +826,4 @@ describe('ReactPropTypes', () => {
       expect(console.error).toHaveBeenCalled();
-      expect(console.error.calls.argsFor(0)[0]).toContain(
-        'Invalid argument supplied to oneOfType, expected an instance of array.',
-      );
+      expect(console.error.calls.argsFor(0)[0])
+        .toContain('Invalid argument supplied to oneOfType, expected an instance of array.');
 
@@ -871,3 +836,3 @@ describe('ReactPropTypes', () => {
         [],
-        'Invalid prop `testProp` supplied to `testComponent`.',
+        'Invalid prop `testProp` supplied to `testComponent`.'
       );
@@ -881,3 +846,3 @@ describe('ReactPropTypes', () => {
         {c: 1},
-        'Invalid prop `testProp` supplied to `testComponent`.',
+        'Invalid prop `testProp` supplied to `testComponent`.'
       );
@@ -886,3 +851,6 @@ describe('ReactPropTypes', () => {
     it('should not warn if one of the types are valid', () => {
-      var checker = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);
+      var checker = PropTypes.oneOfType([
+        PropTypes.string,
+        PropTypes.number,
+      ]);
       typeCheckPass(checker, null);
@@ -901,8 +869,6 @@ describe('ReactPropTypes', () => {
       typeCheckPass(
-        PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-        null,
+        PropTypes.oneOfType([PropTypes.string, PropTypes.number]), null
       );
       typeCheckPass(
-        PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-        undefined,
+        PropTypes.oneOfType([PropTypes.string, PropTypes.number]), undefined
       );
@@ -912,3 +878,3 @@ describe('ReactPropTypes', () => {
       typeCheckFailRequiredValues(
-        PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
+        PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired
       );
@@ -920,3 +886,3 @@ describe('ReactPropTypes', () => {
         PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-        [],
+        []
       );
@@ -924,3 +890,3 @@ describe('ReactPropTypes', () => {
         PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-        null,
+        null
       );
@@ -928,5 +894,6 @@ describe('ReactPropTypes', () => {
         PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-        undefined,
+        undefined
       );
     });
+
   });
@@ -939,3 +906,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `string` supplied to ' +
-          '`testComponent`, expected `object`.',
+        '`testComponent`, expected `object`.'
       );
@@ -945,3 +912,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `array` supplied to ' +
-          '`testComponent`, expected `object`.',
+        '`testComponent`, expected `object`.'
       );
@@ -972,3 +939,3 @@ describe('ReactPropTypes', () => {
         'The prop `testProp.key` is marked as required in `testComponent`, ' +
-          'but its value is `undefined`.',
+          'but its value is `undefined`.'
       );
@@ -984,3 +951,3 @@ describe('ReactPropTypes', () => {
         'The prop `testProp.key` is marked as required in `testComponent`, ' +
-          'but its value is `undefined`.',
+          'but its value is `undefined`.'
       );
@@ -989,7 +956,6 @@ describe('ReactPropTypes', () => {
     it('should warn for invalid key types', () => {
-      typeCheckFail(
-        PropTypes.shape({key: PropTypes.number}),
+      typeCheckFail(PropTypes.shape({key: PropTypes.number}),
         {key: 'abc'},
         'Invalid prop `testProp.key` of type `string` supplied to `testComponent`, ' +
-          'expected `number`.',
+        'expected `number`.'
       );
@@ -999,8 +965,6 @@ describe('ReactPropTypes', () => {
       typeCheckPass(
-        PropTypes.shape(PropTypes.shape({key: PropTypes.number})),
-        null,
+        PropTypes.shape(PropTypes.shape({key: PropTypes.number})), null
       );
       typeCheckPass(
-        PropTypes.shape(PropTypes.shape({key: PropTypes.number})),
-        undefined,
+        PropTypes.shape(PropTypes.shape({key: PropTypes.number})), undefined
       );
@@ -1010,3 +974,3 @@ describe('ReactPropTypes', () => {
       typeCheckFailRequiredValues(
-        PropTypes.shape({key: PropTypes.number}).isRequired,
+        PropTypes.shape({key: PropTypes.number}).isRequired
       );
@@ -1017,8 +981,6 @@ describe('ReactPropTypes', () => {
       expectWarningInDevelopment(PropTypes.shape({}), 'some string');
-      expectWarningInDevelopment(PropTypes.shape({foo: PropTypes.number}), {
-        foo: 42,
-      });
+      expectWarningInDevelopment(PropTypes.shape({ foo: PropTypes.number }), { foo: 42 });
       expectWarningInDevelopment(
         PropTypes.shape({key: PropTypes.number}).isRequired,
-        null,
+        null
       );
@@ -1026,3 +988,3 @@ describe('ReactPropTypes', () => {
         PropTypes.shape({key: PropTypes.number}).isRequired,
-        undefined,
+        undefined
       );
@@ -1038,3 +1000,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `string` supplied to ' +
-          '`testComponent`, expected `symbol`.',
+        '`testComponent`, expected `symbol`.'
       );
@@ -1042,5 +1004,5 @@ describe('ReactPropTypes', () => {
         PropTypes.symbol,
-        function() {},
+        function() { },
         'Invalid prop `testProp` of type `function` supplied to ' +
-          '`testComponent`, expected `symbol`.',
+        '`testComponent`, expected `symbol`.'
       );
@@ -1052,3 +1014,3 @@ describe('ReactPropTypes', () => {
         'Invalid prop `testProp` of type `object` supplied to ' +
-          '`testComponent`, expected `symbol`.',
+        '`testComponent`, expected `symbol`.'
       );
@@ -1101,7 +1063,6 @@ describe('ReactPropTypes', () => {
 
-    it("should have received the validator's return value", () => {
+    it('should have received the validator\'s return value', () => {
       spyOn(console, 'error');
-      var spy = jasmine
-        .createSpy()
-        .and.callFake(function(props, propName, componentName) {
+      var spy = jasmine.createSpy().and.callFake(
+        function(props, propName, componentName) {
           if (props[propName] !== 5) {
@@ -1109,3 +1070,4 @@ describe('ReactPropTypes', () => {
           }
-        });
+        }
+      );
       Component = class extends React.Component {
@@ -1122,6 +1084,6 @@ describe('ReactPropTypes', () => {
       expect(
-        console.error.calls.argsFor(0)[0].replace(/\(at .+?:\d+\)/g, '(at **)'),
+        console.error.calls.argsFor(0)[0].replace(/\(at .+?:\d+\)/g, '(at **)')
       ).toBe(
         'Warning: Failed prop type: num must be 5!\n' +
-          '    in Component (at **)',
+        '    in Component (at **)'
       );
@@ -1129,21 +1091,23 @@ describe('ReactPropTypes', () => {
 
-    it('should not warn if the validator returned null', () => {
-      spyOn(console, 'error');
-      var spy = jasmine
-        .createSpy()
-        .and.callFake(function(props, propName, componentName) {
-          return null;
-        });
-      Component = class extends React.Component {
-        static propTypes = {num: spy};
+    it('should not warn if the validator returned null',
+      () => {
+        spyOn(console, 'error');
+        var spy = jasmine.createSpy().and.callFake(
+          function(props, propName, componentName) {
+            return null;
+          }
+        );
+        Component = class extends React.Component {
+          static propTypes = {num: spy};
 
-        render() {
-          return <div />;
-        }
-      };
+          render() {
+            return <div />;
+          }
+        };
 
-      var instance = <Component num={5} />;
-      ReactTestUtils.renderIntoDocument(instance);
-      expect(console.error.calls.count()).toBe(0);
-    });
+        var instance = <Component num={5} />;
+        ReactTestUtils.renderIntoDocument(instance);
+        expect(console.error.calls.count()).toBe(0);
+      }
+    );
   });
diff --git a/src/isomorphic/hooks/ReactComponentTreeHook.js b/src/isomorphic/hooks/ReactComponentTreeHook.js
index 6ff41657a..fd778f753 100644
--- a/src/isomorphic/hooks/ReactComponentTreeHook.js
+++ b/src/isomorphic/hooks/ReactComponentTreeHook.js
@@ -19,4 +19,4 @@ var warning = require('warning');
 
-import type {ReactElement, Source} from 'ReactElementType';
-import type {DebugID} from 'ReactInstanceType';
+import type { ReactElement, Source } from 'ReactElementType';
+import type { DebugID } from 'ReactInstanceType';
 
@@ -26,15 +26,12 @@ function isNative(fn) {
   var hasOwnProperty = Object.prototype.hasOwnProperty;
-  var reIsNative = RegExp(
-    '^' +
-      funcToString
-        // Take an example native function source for comparison
-        .call(hasOwnProperty)
-        // Strip regex characters so we can use it for regex
-        .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
-        // Remove hasOwnProperty from the template to make it generic
-        .replace(
-          /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
-          '$1.*?',
-        ) +
-      '$',
+  var reIsNative = RegExp('^' + funcToString
+    // Take an example native function source for comparison
+    .call(hasOwnProperty)
+    // Strip regex characters so we can use it for regex
+    .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
+    // Remove hasOwnProperty from the template to make it generic
+    .replace(
+      /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
+      '$1.*?'
+    ) + '$'
   );
@@ -48,3 +45,3 @@ function isNative(fn) {
 
-var canUseCollections =
+var canUseCollections = (
   // Array.from
@@ -64,3 +61,4 @@ var canUseCollections =
   typeof Set.prototype.keys === 'function' &&
-  isNative(Set.prototype.keys);
+  isNative(Set.prototype.keys)
+);
 
@@ -100,2 +98,3 @@ if (canUseCollections) {
   };
+
 } else {
@@ -154,12 +153,9 @@ function purgeDeep(id) {
 function describeComponentFrame(name, source, ownerName) {
-  return (
-    '\n    in ' +
-    (name || 'Unknown') +
-    (source
-      ? ' (at ' +
-          source.fileName.replace(/^.*[\\\/]/, '') +
-          ':' +
-          source.lineNumber +
-          ')'
-      : ownerName ? ' (created by ' + ownerName + ')' : '')
+  return '\n    in ' + (name || 'Unknown') + (
+    source ?
+      ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' +
+      source.lineNumber + ')' :
+    ownerName ?
+      ' (created by ' + ownerName + ')' :
+      ''
   );
@@ -190,4 +186,4 @@ function describeID(id: DebugID): string {
     'ReactComponentTreeHook: Missing React element for debugID %s when ' +
-      'building stack',
-    id,
+    'building stack',
+    id
   );
@@ -208,3 +204,3 @@ var ReactComponentTreeHook = {
         'Expected hook events to fire for the child ' +
-          'before its parent includes it in onSetChildren().',
+        'before its parent includes it in onSetChildren().'
       );
@@ -212,6 +208,6 @@ var ReactComponentTreeHook = {
         nextChild.childIDs != null ||
-          typeof nextChild.element !== 'object' ||
-          nextChild.element == null,
+        typeof nextChild.element !== 'object' ||
+        nextChild.element == null,
         'Expected onSetChildren() to fire for a container child ' +
-          'before its parent includes it in onSetChildren().',
+        'before its parent includes it in onSetChildren().'
       );
@@ -220,3 +216,3 @@ var ReactComponentTreeHook = {
         'Expected onMountComponent() to fire for the child ' +
-          'before its parent includes it in onSetChildren().',
+        'before its parent includes it in onSetChildren().'
       );
@@ -231,6 +227,6 @@ var ReactComponentTreeHook = {
         'Expected onBeforeMountComponent() parent and onSetChildren() to ' +
-          'be consistent (%s has parents %s and %s).',
+        'be consistent (%s has parents %s and %s).',
         nextChildID,
         nextChild.parentID,
-        id,
+        id
       );
@@ -239,7 +235,3 @@ var ReactComponentTreeHook = {
 
-  onBeforeMountComponent(
-    id: DebugID,
-    element: ReactElement,
-    parentID: DebugID,
-  ): void {
+  onBeforeMountComponent(id: DebugID, element: ReactElement, parentID: DebugID): void {
     var item = {
@@ -328,3 +320,3 @@ var ReactComponentTreeHook = {
         topElement._source,
-        owner && owner.getName(),
+        owner && owner.getName()
       );
@@ -404,53 +396,2 @@ var ReactComponentTreeHook = {
   getRegisteredIDs: getItemIDs,
-
-  pushNonStandardWarningStack(
-    isCreatingElement: boolean,
-    currentSource: ?Source,
-  ) {
-    if (typeof console.reactStack !== 'function') {
-      return;
-    }
-
-    var stack = [];
-    var currentOwner = ReactCurrentOwner.current;
-    var id = currentOwner && currentOwner._debugID;
-
-    try {
-      if (isCreatingElement) {
-        stack.push({
-          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
-          fileName: currentSource ? currentSource.fileName : null,
-          lineNumber: currentSource ? currentSource.lineNumber : null,
-        });
-      }
-
-      while (id) {
-        var element = ReactComponentTreeHook.getElement(id);
-        var parentID = ReactComponentTreeHook.getParentID(id);
-        var ownerID = ReactComponentTreeHook.getOwnerID(id);
-        var ownerName = ownerID
-          ? ReactComponentTreeHook.getDisplayName(ownerID)
-          : null;
-        var source = element && element._source;
-        stack.push({
-          name: ownerName,
-          fileName: source ? source.fileName : null,
-          lineNumber: source ? source.lineNumber : null,
-        });
-        id = parentID;
-      }
-    } catch (err) {
-      // Internal state is messed up.
-      // Stop building the stack (it's just a nice to have).
-    }
-
-    console.reactStack(stack);
-  },
-
-  popNonStandardWarningStack() {
-    if (typeof console.reactStackEnd !== 'function') {
-      return;
-    }
-    console.reactStackEnd();
-  },
 };
diff --git a/src/isomorphic/modern/class/PropTypes.d.ts b/src/isomorphic/modern/class/PropTypes.d.ts
deleted file mode 100644
index a8802e66f..000000000
--- a/src/isomorphic/modern/class/PropTypes.d.ts
+++ /dev/null
@@ -1,19 +0,0 @@
-/*!
- * Copyright 2015-present, Facebook, Inc.
- * All rights reserved.
- *
- * This source code is licensed under the BSD-style license found in the
- * LICENSE file in the root directory of this source tree. An additional grant
- * of patent rights can be found in the PATENTS file in the same directory.
- */
-
-/**
- * TypeScript Definition File for React.
- *
- * Full type definitions are not yet officially supported. These are mostly
- * just helpers for the unit test.
- */
-
-declare module 'prop-types' {
-  export var string : any;
-}
diff --git a/src/isomorphic/modern/class/ReactBaseClasses.js b/src/isomorphic/modern/class/ReactComponent.js
similarity index 76%
rename from src/isomorphic/modern/class/ReactBaseClasses.js
rename to src/isomorphic/modern/class/ReactComponent.js
index ed8d31e9b..b93da63e9 100644
--- a/src/isomorphic/modern/class/ReactBaseClasses.js
+++ b/src/isomorphic/modern/class/ReactComponent.js
@@ -8,3 +8,3 @@
  *
- * @providesModule ReactBaseClasses
+ * @providesModule ReactComponent
  */
@@ -18,3 +18,3 @@ var emptyObject = require('emptyObject');
 var invariant = require('invariant');
-var lowPriorityWarning = require('lowPriorityWarning');
+var warning = require('warning');
 
@@ -62,6 +62,6 @@ ReactComponent.prototype.setState = function(partialState, callback) {
     typeof partialState === 'object' ||
-      typeof partialState === 'function' ||
-      partialState == null,
+    typeof partialState === 'function' ||
+    partialState == null,
     'setState(...): takes an object of state variables to update or a ' +
-      'function which returns an object of state variables.',
+    'function which returns an object of state variables.'
   );
@@ -104,3 +104,3 @@ if (__DEV__) {
       'Instead, make sure to clean up subscriptions and pending requests in ' +
-        'componentWillUnmount to prevent memory leaks.',
+      'componentWillUnmount to prevent memory leaks.',
     ],
@@ -109,3 +109,3 @@ if (__DEV__) {
       'Refactor your code to use setState instead (see ' +
-        'https://github.com/facebook/react/issues/3236).',
+      'https://github.com/facebook/react/issues/3236).',
     ],
@@ -116,3 +116,3 @@ if (__DEV__) {
         get: function() {
-          lowPriorityWarning(
+          warning(
             false,
@@ -120,3 +120,3 @@ if (__DEV__) {
             info[0],
-            info[1],
+            info[1]
           );
@@ -134,26 +134,2 @@ if (__DEV__) {
 
-/**
- * Base class helpers for the updating state of a component.
- */
-function ReactPureComponent(props, context, updater) {
-  // Duplicated from ReactComponent.
-  this.props = props;
-  this.context = context;
-  this.refs = emptyObject;
-  // We initialize the default updater but the real one gets injected by the
-  // renderer.
-  this.updater = updater || ReactNoopUpdateQueue;
-}
-
-function ComponentDummy() {}
-ComponentDummy.prototype = ReactComponent.prototype;
-ReactPureComponent.prototype = new ComponentDummy();
-ReactPureComponent.prototype.constructor = ReactPureComponent;
-// Avoid an extra prototype jump for these methods.
-Object.assign(ReactPureComponent.prototype, ReactComponent.prototype);
-ReactPureComponent.prototype.isPureReactComponent = true;
-
-module.exports = {
-  Component: ReactComponent,
-  PureComponent: ReactPureComponent,
-};
+module.exports = ReactComponent;
diff --git a/src/isomorphic/modern/class/ReactNoopUpdateQueue.js b/src/isomorphic/modern/class/ReactNoopUpdateQueue.js
index c9e03b723..49d4c7266 100644
--- a/src/isomorphic/modern/class/ReactNoopUpdateQueue.js
+++ b/src/isomorphic/modern/class/ReactNoopUpdateQueue.js
@@ -21,8 +21,7 @@ function warnNoop(publicInstance, callerName) {
       '%s(...): Can only update a mounted or mounting component. ' +
-        'This usually means you called %s() on an unmounted component. ' +
-        'This is a no-op. Please check the code for the %s component.',
+      'This usually means you called %s() on an unmounted component. ' +
+      'This is a no-op. Please check the code for the %s component.',
       callerName,
       callerName,
-      (constructor && (constructor.displayName || constructor.name)) ||
-        'ReactClass',
+      constructor && (constructor.displayName || constructor.name) || 'ReactClass'
     );
@@ -35,2 +34,3 @@ function warnNoop(publicInstance, callerName) {
 var ReactNoopUpdateQueue = {
+
   /**
@@ -54,3 +54,3 @@ var ReactNoopUpdateQueue = {
    */
-  enqueueCallback: function(publicInstance, callback) {},
+  enqueueCallback: function(publicInstance, callback) { },
 
diff --git a/src/isomorphic/modern/class/ReactPureComponent.js b/src/isomorphic/modern/class/ReactPureComponent.js
new file mode 100644
index 000000000..b4a808864
--- /dev/null
+++ b/src/isomorphic/modern/class/ReactPureComponent.js
@@ -0,0 +1,40 @@
+/**
+ * Copyright 2013-present, Facebook, Inc.
+ * All rights reserved.
+ *
+ * This source code is licensed under the BSD-style license found in the
+ * LICENSE file in the root directory of this source tree. An additional grant
+ * of patent rights can be found in the PATENTS file in the same directory.
+ *
+ * @providesModule ReactPureComponent
+ */
+
+'use strict';
+
+var ReactComponent = require('ReactComponent');
+var ReactNoopUpdateQueue = require('ReactNoopUpdateQueue');
+
+var emptyObject = require('emptyObject');
+
+/**
+ * Base class helpers for the updating state of a component.
+ */
+function ReactPureComponent(props, context, updater) {
+  // Duplicated from ReactComponent.
+  this.props = props;
+  this.context = context;
+  this.refs = emptyObject;
+  // We initialize the default updater but the real one gets injected by the
+  // renderer.
+  this.updater = updater || ReactNoopUpdateQueue;
+}
+
+function ComponentDummy() {}
+ComponentDummy.prototype = ReactComponent.prototype;
+ReactPureComponent.prototype = new ComponentDummy();
+ReactPureComponent.prototype.constructor = ReactPureComponent;
+// Avoid an extra prototype jump for these methods.
+Object.assign(ReactPureComponent.prototype, ReactComponent.prototype);
+ReactPureComponent.prototype.isPureReactComponent = true;
+
+module.exports = ReactPureComponent;
diff --git a/src/isomorphic/modern/class/__tests__/ReactClassEquivalence-test.js b/src/isomorphic/modern/class/__tests__/ReactClassEquivalence-test.js
index bfa6c3b21..b78a2edab 100644
--- a/src/isomorphic/modern/class/__tests__/ReactClassEquivalence-test.js
+++ b/src/isomorphic/modern/class/__tests__/ReactClassEquivalence-test.js
@@ -28,2 +28,3 @@ describe('ReactClassEquivalence', () => {
   });
+
 });
@@ -36,9 +37,10 @@ function runJest(testFile) {
     'jest',
-    'setupSpecEquivalenceReporter.js',
-  );
-  var result = spawnSync(
-    'node',
-    [jestBin, testFile, '--setupTestFrameworkScriptFile', setupFile],
-    {cwd},
+    'setupSpecEquivalenceReporter.js'
   );
+  var result = spawnSync('node', [
+    jestBin,
+    testFile,
+    '--setupTestFrameworkScriptFile',
+    setupFile,
+  ], {cwd});
 
@@ -51,8 +53,8 @@ function runJest(testFile) {
       'jest process exited with: ' +
-        result.status +
-        '\n' +
-        'stdout: ' +
-        result.stdout.toString() +
-        'stderr: ' +
-        result.stderr.toString(),
+      result.status +
+      '\n' +
+      'stdout: ' +
+      result.stdout.toString() +
+      'stderr: ' +
+      result.stderr.toString()
     );
diff --git a/src/isomorphic/modern/class/__tests__/ReactCoffeeScriptClass-test.coffee b/src/isomorphic/modern/class/__tests__/ReactCoffeeScriptClass-test.coffee
index 23661be18..de03d875b 100644
--- a/src/isomorphic/modern/class/__tests__/ReactCoffeeScriptClass-test.coffee
+++ b/src/isomorphic/modern/class/__tests__/ReactCoffeeScriptClass-test.coffee
@@ -9,3 +9,2 @@ of patent rights can be found in the PATENTS file in the same directory.
 
-PropTypes = null
 React = null
@@ -24,3 +23,2 @@ describe 'ReactCoffeeScriptClass', ->
     ReactDOM = require 'ReactDOM'
-    PropTypes = require 'prop-types'
     container = document.createElement 'div'
@@ -106,4 +104,4 @@ describe 'ReactCoffeeScriptClass', ->
       @contextTypes:
-        tag: PropTypes.string
-        className: PropTypes.string
+        tag: React.PropTypes.string
+        className: React.PropTypes.string
 
@@ -122,4 +120,4 @@ describe 'ReactCoffeeScriptClass', ->
       @childContextTypes:
-        tag: PropTypes.string
-        className: PropTypes.string
+        tag: React.PropTypes.string
+        className: React.PropTypes.string
 
@@ -380,3 +378,3 @@ describe 'ReactCoffeeScriptClass', ->
   it 'should throw AND warn when trying to access classic APIs', ->
-    spyOn console, 'warn'
+    spyOn console, 'error'
     instance =
@@ -385,7 +383,7 @@ describe 'ReactCoffeeScriptClass', ->
     expect(-> instance.isMounted()).toThrow()
-    expect(console.warn.calls.count()).toBe 2
-    expect(console.warn.calls.argsFor(0)[0]).toContain(
+    expect(console.error.calls.count()).toBe 2
+    expect(console.error.calls.argsFor(0)[0]).toContain(
       'replaceState(...) is deprecated in plain JavaScript React classes'
     )
-    expect(console.warn.calls.argsFor(1)[0]).toContain(
+    expect(console.error.calls.argsFor(1)[0]).toContain(
       'isMounted(...) is deprecated in plain JavaScript React classes'
@@ -397,3 +395,3 @@ describe 'ReactCoffeeScriptClass', ->
       @contextTypes:
-        bar: PropTypes.string
+        bar: React.PropTypes.string
       render: ->
@@ -403,3 +401,3 @@ describe 'ReactCoffeeScriptClass', ->
       @childContextTypes:
-        bar: PropTypes.string
+        bar: React.PropTypes.string
       getChildContext: ->
diff --git a/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js b/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js
index ee63a7af7..ca3408915 100644
--- a/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js
+++ b/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js
@@ -13,3 +13,2 @@
 
-var PropTypes;
 var React;
@@ -18,2 +17,3 @@ var ReactDOM;
 describe('ReactES6Class', () => {
+
   var container;
@@ -30,3 +30,2 @@ describe('ReactES6Class', () => {
     ReactDOM = require('ReactDOM');
-    PropTypes = require('prop-types');
     container = document.createElement('div');
@@ -55,3 +54,3 @@ describe('ReactES6Class', () => {
   it('preserves the name of the class for use in error messages', () => {
-    class Foo extends React.Component {}
+    class Foo extends React.Component { }
     expect(Foo.name).toBe('Foo');
@@ -61,3 +60,3 @@ describe('ReactES6Class', () => {
     spyOn(console, 'error');
-    class Foo extends React.Component {}
+    class Foo extends React.Component { }
     expect(() => ReactDOM.render(<Foo />, container)).toThrow();
@@ -67,3 +66,3 @@ describe('ReactES6Class', () => {
       'Warning: Foo(...): No `render` method found on the returned component ' +
-        'instance: you may have forgotten to define `render`.',
+      'instance: you may have forgotten to define `render`.'
     );
@@ -127,4 +126,4 @@ describe('ReactES6Class', () => {
     Foo.contextTypes = {
-      tag: PropTypes.string,
-      className: PropTypes.string,
+      tag: React.PropTypes.string,
+      className: React.PropTypes.string,
     };
@@ -140,4 +139,4 @@ describe('ReactES6Class', () => {
     Outer.childContextTypes = {
-      tag: PropTypes.string,
-      className: PropTypes.string,
+      tag: React.PropTypes.string,
+      className: React.PropTypes.string,
     };
@@ -177,3 +176,3 @@ describe('ReactES6Class', () => {
       expect(() => test(<Foo />, 'span', '')).toThrowError(
-        'Foo.state: must be set to an object or null',
+        'Foo.state: must be set to an object or null'
       );
@@ -206,3 +205,6 @@ describe('ReactES6Class', () => {
         return (
-          <Inner name={this.state.bar} onClick={this.handleClick.bind(this)} />
+          <Inner
+            name={this.state.bar}
+            onClick={this.handleClick.bind(this)}
+          />
         );
@@ -225,3 +227,8 @@ describe('ReactES6Class', () => {
       render() {
-        return <Inner name={this.state.bar} onClick={this.handleClick} />;
+        return (
+          <Inner
+            name={this.state.bar}
+            onClick={this.handleClick}
+          />
+        );
       }
@@ -290,3 +297,6 @@ describe('ReactES6Class', () => {
     test(<Foo value="foo" />, 'SPAN', 'foo');
-    expect(lifeCycles).toEqual(['will-mount', 'did-mount']);
+    expect(lifeCycles).toEqual([
+      'will-mount',
+      'did-mount',
+    ]);
     lifeCycles = []; // reset
@@ -294,13 +304,6 @@ describe('ReactES6Class', () => {
     expect(lifeCycles).toEqual([
-      'receive-props',
-      freeze({value: 'bar'}),
-      'should-update',
-      freeze({value: 'bar'}),
-      {},
-      'will-update',
-      freeze({value: 'bar'}),
-      {},
-      'did-update',
-      freeze({value: 'foo'}),
-      {},
+      'receive-props', freeze({value: 'bar'}),
+      'should-update', freeze({value: 'bar'}), {},
+      'will-update', freeze({value: 'bar'}), {},
+      'did-update', freeze({value: 'foo'}), {},
     ]);
@@ -308,3 +311,5 @@ describe('ReactES6Class', () => {
     ReactDOM.unmountComponentAtNode(container);
-    expect(lifeCycles).toEqual(['will-unmount']);
+    expect(lifeCycles).toEqual([
+      'will-unmount',
+    ]);
   });
@@ -338,12 +343,12 @@ describe('ReactES6Class', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'getInitialState was defined on Foo, a plain JavaScript class.',
+      'getInitialState was defined on Foo, a plain JavaScript class.'
     );
     expect(console.error.calls.argsFor(1)[0]).toContain(
-      'getDefaultProps was defined on Foo, a plain JavaScript class.',
+      'getDefaultProps was defined on Foo, a plain JavaScript class.'
     );
     expect(console.error.calls.argsFor(2)[0]).toContain(
-      'propTypes was defined as an instance property on Foo.',
+      'propTypes was defined as an instance property on Foo.'
     );
     expect(console.error.calls.argsFor(3)[0]).toContain(
-      'contextTypes was defined as an instance property on Foo.',
+      'contextTypes was defined as an instance property on Foo.'
     );
@@ -382,5 +387,5 @@ describe('ReactES6Class', () => {
       'Warning: ' +
-        'NamedComponent has a method called componentShouldUpdate(). Did you ' +
-        'mean shouldComponentUpdate()? The name is phrased as a question ' +
-        'because the function is expected to return a value.',
+      'NamedComponent has a method called componentShouldUpdate(). Did you ' +
+      'mean shouldComponentUpdate()? The name is phrased as a question ' +
+      'because the function is expected to return a value.'
     );
@@ -404,4 +409,4 @@ describe('ReactES6Class', () => {
       'Warning: ' +
-        'NamedComponent has a method called componentWillRecieveProps(). Did ' +
-        'you mean componentWillReceiveProps()?',
+      'NamedComponent has a method called componentWillRecieveProps(). Did ' +
+      'you mean componentWillReceiveProps()?'
     );
@@ -410,3 +415,3 @@ describe('ReactES6Class', () => {
   it('should throw AND warn when trying to access classic APIs', () => {
-    spyOn(console, 'warn');
+    spyOn(console, 'error');
     var instance = test(<Inner name="foo" />, 'DIV', 'foo');
@@ -414,8 +419,8 @@ describe('ReactES6Class', () => {
     expect(() => instance.isMounted()).toThrow();
-    expect(console.warn.calls.count()).toBe(2);
-    expect(console.warn.calls.argsFor(0)[0]).toContain(
-      'replaceState(...) is deprecated in plain JavaScript React classes',
+    expect(console.error.calls.count()).toBe(2);
+    expect(console.error.calls.argsFor(0)[0]).toContain(
+      'replaceState(...) is deprecated in plain JavaScript React classes'
     );
-    expect(console.warn.calls.argsFor(1)[0]).toContain(
-      'isMounted(...) is deprecated in plain JavaScript React classes',
+    expect(console.error.calls.argsFor(1)[0]).toContain(
+      'isMounted(...) is deprecated in plain JavaScript React classes'
     );
@@ -429,3 +434,3 @@ describe('ReactES6Class', () => {
     }
-    Bar.contextTypes = {bar: PropTypes.string};
+    Bar.contextTypes = {bar: React.PropTypes.string};
     class Foo extends React.Component {
@@ -438,3 +443,3 @@ describe('ReactES6Class', () => {
     }
-    Foo.childContextTypes = {bar: PropTypes.string};
+    Foo.childContextTypes = {bar: React.PropTypes.string};
     test(<Foo />, 'DIV', 'bar-through-context');
@@ -457,2 +462,3 @@ describe('ReactES6Class', () => {
   });
+
 });
diff --git a/src/isomorphic/modern/class/__tests__/ReactPureComponent-test.js b/src/isomorphic/modern/class/__tests__/ReactPureComponent-test.js
index 0cf7f751a..1235a1ea8 100644
--- a/src/isomorphic/modern/class/__tests__/ReactPureComponent-test.js
+++ b/src/isomorphic/modern/class/__tests__/ReactPureComponent-test.js
@@ -95,2 +95,3 @@ describe('ReactPureComponent', () => {
   });
+
 });
diff --git a/src/isomorphic/modern/class/__tests__/ReactTypeScriptClass-test.ts b/src/isomorphic/modern/class/__tests__/ReactTypeScriptClass-test.ts
index d7de7469d..6ef95ccaa 100644
--- a/src/isomorphic/modern/class/__tests__/ReactTypeScriptClass-test.ts
+++ b/src/isomorphic/modern/class/__tests__/ReactTypeScriptClass-test.ts
@@ -1,2 +1 @@
-/// <reference path="../PropTypes.d.ts" />
 /// <reference path="../React.d.ts" />
@@ -15,3 +14,2 @@ import React = require('React');
 import ReactDOM = require('ReactDOM');
-import PropTypes = require('prop-types');
 
@@ -89,4 +87,4 @@ class StateBasedOnContext extends React.Component {
   static contextTypes = {
-    tag: PropTypes.string,
-    className: PropTypes.string
+    tag: React.PropTypes.string,
+    className: React.PropTypes.string
   };
@@ -104,4 +102,4 @@ class ProvideChildContextTypes extends React.Component {
   static childContextTypes = {
-    tag: PropTypes.string,
-    className: PropTypes.string
+    tag: React.PropTypes.string,
+    className: React.PropTypes.string
   };
@@ -282,3 +280,3 @@ class MisspelledComponent2 extends React.Component {
 class ReadContext extends React.Component {
-  static contextTypes = { bar: PropTypes.string };
+  static contextTypes = { bar: React.PropTypes.string };
   render() {
@@ -288,3 +286,3 @@ class ReadContext extends React.Component {
 class ProvideContext extends React.Component {
-  static childContextTypes = { bar: PropTypes.string };
+  static childContextTypes = { bar: React.PropTypes.string };
   getChildContext() {
@@ -504,3 +502,3 @@ describe('ReactTypeScriptClass', function() {
   it('should throw AND warn when trying to access classic APIs', function() {
-    spyOn(console, 'warn');
+    spyOn(console, 'error');
     var instance = test(
@@ -511,7 +509,7 @@ describe('ReactTypeScriptClass', function() {
     expect(() => instance.isMounted()).toThrow();
-    expect((<any>console.warn).calls.count()).toBe(2);
-    expect((<any>console.warn).calls.argsFor(0)[0]).toContain(
+    expect((<any>console.error).calls.count()).toBe(2);
+    expect((<any>console.error).calls.argsFor(0)[0]).toContain(
       'replaceState(...) is deprecated in plain JavaScript React classes'
     );
-    expect((<any>console.warn).calls.argsFor(1)[0]).toContain(
+    expect((<any>console.error).calls.argsFor(1)[0]).toContain(
       'isMounted(...) is deprecated in plain JavaScript React classes'
diff --git a/src/isomorphic/modern/element/__tests__/ReactJSXElement-test.js b/src/isomorphic/modern/element/__tests__/ReactJSXElement-test.js
index fc494b436..1b897494f 100644
--- a/src/isomorphic/modern/element/__tests__/ReactJSXElement-test.js
+++ b/src/isomorphic/modern/element/__tests__/ReactJSXElement-test.js
@@ -66,3 +66,3 @@ describe('ReactJSXElement', () => {
     var element = <Component />;
-    expect(() => (element.type = 'div')).toThrow();
+    expect(() => element.type = 'div').toThrow();
   });
@@ -82,3 +82,3 @@ describe('ReactJSXElement', () => {
     expect(element.ref).toBe('34');
-    var expectation = {foo: '56'};
+    var expectation = {foo:'56'};
     Object.freeze(expectation);
@@ -92,3 +92,3 @@ describe('ReactJSXElement', () => {
     expect(element.ref).toBe(null);
-    var expectation = {foo: '56'};
+    var expectation = {foo:'56'};
     Object.freeze(expectation);
@@ -126,3 +126,3 @@ describe('ReactJSXElement', () => {
       {},
-      undefined,
+      undefined
     );
@@ -167,3 +167,3 @@ describe('ReactJSXElement', () => {
     expect(React.isValidElement(Component)).toEqual(false);
-    expect(React.isValidElement({type: 'div', props: {}})).toEqual(false);
+    expect(React.isValidElement({ type: 'div', props: {} })).toEqual(false);
   });
@@ -180,3 +180,6 @@ describe('ReactJSXElement', () => {
     var container = document.createElement('div');
-    var instance = ReactDOM.render(<Component fruit="mango" />, container);
+    var instance = ReactDOM.render(
+      <Component fruit="mango" />,
+      container
+    );
     expect(instance.props.fruit).toBe('mango');
@@ -198,7 +201,7 @@ describe('ReactJSXElement', () => {
 
-    var inst2 = ReactTestUtils.renderIntoDocument(
-      <NormalizingComponent prop={null} />,
-    );
+    var inst2 =
+      ReactTestUtils.renderIntoDocument(<NormalizingComponent prop={null} />);
     expect(inst2.props.prop).toBe(null);
   });
+
 });
diff --git a/src/isomorphic/modern/element/__tests__/ReactJSXElementValidator-test.js b/src/isomorphic/modern/element/__tests__/ReactJSXElementValidator-test.js
index 0502161aa..5bb44c694 100644
--- a/src/isomorphic/modern/element/__tests__/ReactJSXElementValidator-test.js
+++ b/src/isomorphic/modern/element/__tests__/ReactJSXElementValidator-test.js
@@ -16,3 +16,2 @@
 
-var PropTypes;
 var React;
@@ -35,3 +34,2 @@ describe('ReactJSXElementValidator', () => {
     ReactTestUtils = require('ReactTestUtils');
-    PropTypes = require('prop-types');
 
@@ -49,3 +47,3 @@ describe('ReactJSXElementValidator', () => {
     RequiredPropComponent.displayName = 'RequiredPropComponent';
-    RequiredPropComponent.propTypes = {prop: PropTypes.string.isRequired};
+    RequiredPropComponent.propTypes = {prop: React.PropTypes.string.isRequired};
   });
@@ -59,3 +57,3 @@ describe('ReactJSXElementValidator', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Each child in an array or iterator should have a unique "key" prop.',
+      'Each child in an array or iterator should have a unique "key" prop.'
     );
@@ -74,3 +72,7 @@ describe('ReactJSXElementValidator', () => {
       render() {
-        return <InnerComponent childSet={[<Component />, <Component />]} />;
+        return (
+          <InnerComponent
+            childSet={[<Component />, <Component />]}
+          />
+        );
       }
@@ -83,4 +85,4 @@ describe('ReactJSXElementValidator', () => {
       'Each child in an array or iterator should have a unique "key" prop. ' +
-        'Check the render method of `InnerComponent`. ' +
-        'It was passed a child from ComponentWrapper. ',
+      'Check the render method of `InnerComponent`. ' +
+      'It was passed a child from ComponentWrapper. '
     );
@@ -107,3 +109,3 @@ describe('ReactJSXElementValidator', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Each child in an array or iterator should have a unique "key" prop.',
+      'Each child in an array or iterator should have a unique "key" prop.'
     );
@@ -114,5 +116,3 @@ describe('ReactJSXElementValidator', () => {
 
-    void (
-      <Component>{[<Component key="#1" />, <Component key="#2" />]}</Component>
-    );
+    void <Component>{[<Component key="#1" />, <Component key="#2" />]}</Component>;
 
@@ -195,3 +195,3 @@ describe('ReactJSXElementValidator', () => {
     MyComp.propTypes = {
-      color: PropTypes.string,
+      color: React.PropTypes.string,
     };
@@ -205,6 +205,6 @@ describe('ReactJSXElementValidator', () => {
       'Warning: Failed prop type: ' +
-        'Invalid prop `color` of type `number` supplied to `MyComp`, ' +
-        'expected `string`.\n' +
-        '    in MyComp (at **)\n' +
-        '    in ParentComp (at **)',
+      'Invalid prop `color` of type `number` supplied to `MyComp`, ' +
+      'expected `string`.\n' +
+      '    in MyComp (at **)\n' +
+      '    in ParentComp (at **)'
     );
@@ -218,3 +218,3 @@ describe('ReactJSXElementValidator', () => {
     MyComp.propTypes = {
-      color: PropTypes.string,
+      color: React.PropTypes.string,
     };
@@ -241,7 +241,7 @@ describe('ReactJSXElementValidator', () => {
       'Warning: Failed prop type: ' +
-        'Invalid prop `color` of type `number` supplied to `MyComp`, ' +
-        'expected `string`.\n' +
-        '    in MyComp (at **)\n' +
-        '    in MiddleComp (at **)\n' +
-        '    in ParentComp (at **)',
+      'Invalid prop `color` of type `number` supplied to `MyComp`, ' +
+      'expected `string`.\n' +
+      '    in MyComp (at **)\n' +
+      '    in MiddleComp (at **)\n' +
+      '    in ParentComp (at **)'
     );
@@ -263,6 +263,6 @@ describe('ReactJSXElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-        '(for built-in components) or a class/function (for composite ' +
-        'components) but got: undefined. You likely forgot to export your ' +
-        "component from the file it's defined in. " +
-        'Check your code at **.',
+      '(for built-in components) or a class/function (for composite ' +
+      'components) but got: undefined. You likely forgot to export your ' +
+      'component from the file it\'s defined in. ' +
+      'Check your code at **.'
     );
@@ -270,5 +270,5 @@ describe('ReactJSXElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-        '(for built-in components) or a class/function (for composite ' +
-        'components) but got: null. ' +
-        'Check your code at **.',
+      '(for built-in components) or a class/function (for composite ' +
+      'components) but got: null. ' +
+      'Check your code at **.'
     );
@@ -276,5 +276,5 @@ describe('ReactJSXElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-        '(for built-in components) or a class/function (for composite ' +
-        'components) but got: boolean. ' +
-        'Check your code at **.',
+      '(for built-in components) or a class/function (for composite ' +
+      'components) but got: boolean. ' +
+      'Check your code at **.'
     );
@@ -282,5 +282,5 @@ describe('ReactJSXElementValidator', () => {
       'Warning: React.createElement: type is invalid -- expected a string ' +
-        '(for built-in components) or a class/function (for composite ' +
-        'components) but got: number. ' +
-        'Check your code at **.',
+      '(for built-in components) or a class/function (for composite ' +
+      'components) but got: number. ' +
+      'Check your code at **.'
     );
@@ -300,4 +300,4 @@ describe('ReactJSXElementValidator', () => {
       'Warning: Failed prop type: The prop `prop` is marked as required in ' +
-        '`RequiredPropComponent`, but its value is `null`.\n' +
-        '    in RequiredPropComponent (at **)',
+      '`RequiredPropComponent`, but its value is `null`.\n' +
+      '    in RequiredPropComponent (at **)'
     );
@@ -313,4 +313,4 @@ describe('ReactJSXElementValidator', () => {
       'Warning: Failed prop type: The prop `prop` is marked as required in ' +
-        '`RequiredPropComponent`, but its value is `null`.\n' +
-        '    in RequiredPropComponent (at **)',
+      '`RequiredPropComponent`, but its value is `null`.\n' +
+      '    in RequiredPropComponent (at **)'
     );
@@ -327,5 +327,5 @@ describe('ReactJSXElementValidator', () => {
       'Warning: Failed prop type: ' +
-        'The prop `prop` is marked as required in `RequiredPropComponent`, but ' +
-        'its value is `undefined`.\n' +
-        '    in RequiredPropComponent (at **)',
+      'The prop `prop` is marked as required in `RequiredPropComponent`, but ' +
+      'its value is `undefined`.\n' +
+      '    in RequiredPropComponent (at **)'
     );
@@ -334,5 +334,5 @@ describe('ReactJSXElementValidator', () => {
       'Warning: Failed prop type: ' +
-        'Invalid prop `prop` of type `number` supplied to ' +
-        '`RequiredPropComponent`, expected `string`.\n' +
-        '    in RequiredPropComponent (at **)',
+      'Invalid prop `prop` of type `number` supplied to ' +
+      '`RequiredPropComponent`, expected `string`.\n' +
+      '    in RequiredPropComponent (at **)'
     );
@@ -363,3 +363,3 @@ describe('ReactJSXElementValidator', () => {
       'NullPropTypeComponent: prop type `prop` is invalid; it must be a ' +
-        'function, usually from React.PropTypes.',
+      'function, usually from React.PropTypes.'
     );
@@ -381,3 +381,3 @@ describe('ReactJSXElementValidator', () => {
       'NullContextTypeComponent: context type `prop` is invalid; it must ' +
-        'be a function, usually from React.PropTypes.',
+      'be a function, usually from React.PropTypes.'
     );
@@ -399,3 +399,3 @@ describe('ReactJSXElementValidator', () => {
       'getDefaultProps is only used on classic React.createClass definitions.' +
-        ' Use a static property named `defaultProps` instead.',
+      ' Use a static property named `defaultProps` instead.'
     );
@@ -403,52 +403,2 @@ describe('ReactJSXElementValidator', () => {
 
-  it('provides stack via non-standard console.reactStack for invalid types', () => {
-    spyOn(console, 'error');
-
-    function Foo() {
-      var Bad = undefined;
-      return <Bad />;
-    }
-
-    function App() {
-      return <div><Foo /></div>;
-    }
-
-    try {
-      console.reactStack = jest.fn();
-      console.reactStackEnd = jest.fn();
-
-      expect(() => {
-        ReactTestUtils.renderIntoDocument(<App />);
-      }).toThrow(
-        'Element type is invalid: expected a string (for built-in components) ' +
-          'or a class/function (for composite components) but got: undefined. ' +
-          "You likely forgot to export your component from the file it's " +
-          'defined in. Check the render method of `Foo`.',
-      );
-
-      expect(console.reactStack.mock.calls.length).toBe(1);
-      expect(console.reactStackEnd.mock.calls.length).toBe(1);
-
-      var stack = console.reactStack.mock.calls[0][0];
-      expect(Array.isArray(stack)).toBe(true);
-      expect(stack.map(frame => frame.name)).toEqual([
-        'Foo', // <Bad> is inside Foo
-        'App', // <Foo> is inside App
-        'App', // <div> is inside App
-        null, // <App> is outside a component
-      ]);
-      expect(
-        stack.map(frame => frame.fileName && frame.fileName.slice(-8)),
-      ).toEqual(['-test.js', '-test.js', '-test.js', '-test.js']);
-      expect(stack.map(frame => typeof frame.lineNumber)).toEqual([
-        'number',
-        'number',
-        'number',
-        'number',
-      ]);
-    } finally {
-      delete console.reactStack;
-      delete console.reactStackEnd;
-    }
-  });
 });
diff --git a/src/renderers/art/ReactART.js b/src/renderers/art/ReactART.js
index 7550e330d..be85e1f23 100644
--- a/src/renderers/art/ReactART.js
+++ b/src/renderers/art/ReactART.js
@@ -14,3 +14,3 @@
 require('art/modes/current').setCurrent(
-  require('art/modes/fast-noSideEffects'), // Flip this to DOM mode for debugging
+  require('art/modes/fast-noSideEffects') // Flip this to DOM mode for debugging
 );
@@ -26,3 +26,2 @@ const ReactUpdates = require('ReactUpdates');
 
-const createReactClass = require('createClass');
 const emptyObject = require('emptyObject');
@@ -70,6 +69,4 @@ function injectAfter(parentNode, referenceNode, node) {
   let beforeNode;
-  if (
-    node.parentNode === parentNode &&
-    node.previousSibling === referenceNode
-  ) {
+  if (node.parentNode === parentNode &&
+      node.previousSibling === referenceNode) {
     return;
@@ -88,3 +85,3 @@ function injectAfter(parentNode, referenceNode, node) {
       node !== beforeNode,
-      'ReactART: Can not insert node before itself',
+      'ReactART: Can not insert node before itself'
     );
@@ -99,2 +96,3 @@ function injectAfter(parentNode, referenceNode, node) {
 const ContainerMixin = assign({}, ReactMultiChild.Mixin, {
+
   /**
@@ -157,3 +155,7 @@ const ContainerMixin = assign({}, ReactMultiChild.Mixin, {
   mountAndInjectChildren: function(children, transaction, context) {
-    const mountedImages = this.mountChildren(children, transaction, context);
+    const mountedImages = this.mountChildren(
+      children,
+      transaction,
+      context
+    );
     // Each mount image corresponds to one of the flattened children
@@ -168,3 +170,4 @@ const ContainerMixin = assign({}, ReactMultiChild.Mixin, {
     }
-  },
+  }
+
 });
@@ -174,3 +177,4 @@ const ContainerMixin = assign({}, ReactMultiChild.Mixin, {
 
-const Surface = createReactClass({
+const Surface = React.createClass({
+
   displayName: 'Surface',
@@ -190,3 +194,3 @@ const Surface = createReactClass({
       transaction,
-      ReactInstanceMap.get(this)._context,
+      ReactInstanceMap.get(this)._context
     );
@@ -197,6 +201,4 @@ const Surface = createReactClass({
     const node = this.node;
-    if (
-      this.props.width != oldProps.width ||
-      this.props.height != oldProps.height
-    ) {
+    if (this.props.width != oldProps.width ||
+        this.props.height != oldProps.height) {
       node.resize(+this.props.width, +this.props.height);
@@ -210,3 +212,3 @@ const Surface = createReactClass({
       transaction,
-      ReactInstanceMap.get(this)._context,
+      ReactInstanceMap.get(this)._context
     );
@@ -241,3 +243,4 @@ const Surface = createReactClass({
     );
-  },
+  }
+
 });
@@ -252,3 +255,3 @@ const EventTypes = {
   onMouseDown: 'mousedown',
-  onClick: 'click',
+  onClick: 'click'
 };
@@ -256,2 +259,3 @@ const EventTypes = {
 const NodeMixin = {
+
   construct: function(element) {
@@ -310,8 +314,6 @@ const NodeMixin = {
 
-    const scaleX = props.scaleX != null
-      ? props.scaleX
-      : props.scale != null ? props.scale : 1;
-    const scaleY = props.scaleY != null
-      ? props.scaleY
-      : props.scale != null ? props.scale : 1;
+    const scaleX = props.scaleX != null ? props.scaleX :
+                 props.scale != null ? props.scale : 1;
+    const scaleY = props.scaleY != null ? props.scaleY :
+                 props.scale != null ? props.scale : 1;
 
@@ -327,10 +329,5 @@ const NodeMixin = {
 
-    if (
-      node.xx !== pooledTransform.xx ||
-      node.yx !== pooledTransform.yx ||
-      node.xy !== pooledTransform.xy ||
-      node.yy !== pooledTransform.yy ||
-      node.x !== pooledTransform.x ||
-      node.y !== pooledTransform.y
-    ) {
+    if (node.xx !== pooledTransform.xx || node.yx !== pooledTransform.yx ||
+        node.xy !== pooledTransform.xy || node.yy !== pooledTransform.yy ||
+        node.x  !== pooledTransform.x  || node.y  !== pooledTransform.y) {
       node.transformTo(pooledTransform);
@@ -362,5 +359,6 @@ const NodeMixin = {
       'You cannot render an ART component standalone. ' +
-        'You need to wrap it in a Surface.',
+      'You need to wrap it in a Surface.'
     );
-  },
+  }
+
 };
@@ -370,2 +368,3 @@ const NodeMixin = {
 const Group = createComponent('Group', NodeMixin, ContainerMixin, {
+
   mountComponent: function(
@@ -374,3 +373,3 @@ const Group = createComponent('Group', NodeMixin, ContainerMixin, {
     nativeContainerInfo,
-    context,
+    context
   ) {
@@ -400,3 +399,4 @@ const Group = createComponent('Group', NodeMixin, ContainerMixin, {
     this.unmountChildren();
-  },
+  }
+
 });
@@ -405,41 +405,40 @@ const Group = createComponent('Group', NodeMixin, ContainerMixin, {
 const ClippingRectangle = createComponent(
-  'ClippingRectangle',
-  NodeMixin,
-  ContainerMixin,
-  {
-    mountComponent: function(
-      transaction,
-      nativeParent,
-      nativeContainerInfo,
-      context,
-    ) {
-      this.node = Mode.ClippingRectangle();
-      const props = this._currentElement.props;
-      this.applyClippingProps(emptyObject, props);
-      this.mountAndInjectChildren(props.children, transaction, context);
-      return this.node;
-    },
-
-    receiveComponent: function(nextComponent, transaction, context) {
-      const props = nextComponent.props;
-      const oldProps = this._currentElement.props;
-      this.applyClippingProps(oldProps, props);
-      this.updateChildren(props.children, transaction, context);
-      this._currentElement = nextComponent;
-    },
-
-    applyClippingProps: function(oldProps, props) {
-      this.node.width = props.width;
-      this.node.height = props.height;
-      this.node.x = props.x;
-      this.node.y = props.y;
-      this.applyNodeProps(oldProps, props);
-    },
-
-    unmountComponent: function() {
-      this.destroyEventListeners();
-      this.unmountChildren();
-    },
+    'ClippingRectangle', NodeMixin, ContainerMixin, {
+
+  mountComponent: function(
+    transaction,
+    nativeParent,
+    nativeContainerInfo,
+    context
+  ) {
+    this.node = Mode.ClippingRectangle();
+    const props = this._currentElement.props;
+    this.applyClippingProps(emptyObject, props);
+    this.mountAndInjectChildren(props.children, transaction, context);
+    return this.node;
+  },
+
+  receiveComponent: function(nextComponent, transaction, context) {
+    const props = nextComponent.props;
+    const oldProps = this._currentElement.props;
+    this.applyClippingProps(oldProps, props);
+    this.updateChildren(props.children, transaction, context);
+    this._currentElement = nextComponent;
+  },
+
+  applyClippingProps: function(oldProps, props) {
+    this.node.width = props.width;
+    this.node.height = props.height;
+    this.node.x = props.x;
+    this.node.y = props.y;
+    this.applyNodeProps(oldProps, props);
   },
-);
+
+  unmountComponent: function() {
+    this.destroyEventListeners();
+    this.unmountChildren();
+  }
+
+});
+
 
@@ -448,2 +447,3 @@ const ClippingRectangle = createComponent(
 const RenderableMixin = assign({}, NodeMixin, {
+
   applyRenderableProps: function(oldProps, props) {
@@ -470,3 +470,3 @@ const RenderableMixin = assign({}, NodeMixin, {
         props.strokeJoin,
-        props.strokeDash,
+        props.strokeDash
       );
@@ -478,3 +478,4 @@ const RenderableMixin = assign({}, NodeMixin, {
     this.destroyEventListeners();
-  },
+  }
+
 });
@@ -484,2 +485,3 @@ const RenderableMixin = assign({}, NodeMixin, {
 const Shape = createComponent('Shape', RenderableMixin, {
+
   construct: function(element) {
@@ -494,3 +496,3 @@ const Shape = createComponent('Shape', RenderableMixin, {
     nativeContainerInfo,
-    context,
+    context
   ) {
@@ -514,9 +516,12 @@ const Shape = createComponent('Shape', RenderableMixin, {
 
-    if (
-      path.delta !== oldDelta ||
-      path !== oldPath ||
-      oldProps.width !== props.width ||
-      oldProps.height !== props.height
-    ) {
-      this.node.draw(path, props.width, props.height);
+    if (path.delta !== oldDelta ||
+        path !== oldPath ||
+        oldProps.width !== props.width ||
+        oldProps.height !== props.height) {
+
+      this.node.draw(
+        path,
+        props.width,
+        props.height
+      );
 
@@ -527,3 +532,4 @@ const Shape = createComponent('Shape', RenderableMixin, {
     this.applyRenderableProps(oldProps, props);
-  },
+  }
+
 });
@@ -533,2 +539,3 @@ const Shape = createComponent('Shape', RenderableMixin, {
 const Text = createComponent('Text', RenderableMixin, {
+
   construct: function(element) {
@@ -542,3 +549,3 @@ const Text = createComponent('Text', RenderableMixin, {
     nativeContainerInfo,
-    context,
+    context
   ) {
@@ -575,9 +582,12 @@ const Text = createComponent('Text', RenderableMixin, {
 
-    if (
-      oldString !== newString ||
-      !this.isSameFont(oldProps.font, props.font) ||
-      oldProps.alignment !== props.alignment ||
-      oldProps.path !== props.path
-    ) {
-      this.node.draw(newString, props.font, props.alignment, props.path);
+    if (oldString !== newString ||
+        !this.isSameFont(oldProps.font, props.font) ||
+        oldProps.alignment !== props.alignment ||
+        oldProps.path !== props.path) {
+      this.node.draw(
+        newString,
+        props.font,
+        props.alignment,
+        props.path
+      );
       this._oldString = newString;
@@ -587,3 +597,4 @@ const Text = createComponent('Text', RenderableMixin, {
     this._currentElement = nextComponent;
-  },
+  }
+
 });
diff --git a/src/renderers/art/__tests__/ReactART-test.js b/src/renderers/art/__tests__/ReactART-test.js
index 7d9ce37ff..b8cfea1c2 100644
--- a/src/renderers/art/__tests__/ReactART-test.js
+++ b/src/renderers/art/__tests__/ReactART-test.js
@@ -51,2 +51,3 @@ function testDOMNodeStructure(domNode, expectedStructure) {
 describe('ReactART', () => {
+
   beforeEach(() => {
@@ -60,16 +61,14 @@ describe('ReactART', () => {
       render() {
-        var a = (
+
+        var a =
           <Shape
             d="M0,0l50,0l0,50l-50,0z"
-            fill={new ReactART.LinearGradient(['black', 'white'])}
+            fill={new ReactART.LinearGradient(["black", "white"])}
             key="a"
-            width={50}
-            height={50}
-            x={50}
-            y={50}
+            width={50} height={50}
+            x={50} y={50}
             opacity={0.1}
-          />
-        );
+          />;
 
-        var b = (
+        var b =
           <Shape
@@ -78,4 +77,3 @@ describe('ReactART', () => {
             scale={0.5}
-            x={50}
-            y={50}
+            x={50} y={50}
             title="This is an F"
@@ -85,4 +83,3 @@ describe('ReactART', () => {
             h-6.99v11.652h6.99v33.815H54V50.235h9.331L64.564,38.583z
-          </Shape>
-        );
+          </Shape>;
 
@@ -118,3 +115,3 @@ describe('ReactART', () => {
       children: [
-        {nodeName: 'defs'},
+        { nodeName: 'defs' },
         {
@@ -124,10 +121,12 @@ describe('ReactART', () => {
               nodeName: 'defs',
-              children: [{nodeName: 'linearGradient'}],
+              children: [
+                { nodeName: 'linearGradient' }
+              ]
             },
-            {nodeName: 'path'},
-            {nodeName: 'path'},
-            {nodeName: 'g'},
-          ],
-        },
-      ],
+            { nodeName: 'path' },
+            { nodeName: 'path' },
+            { nodeName: 'g' }
+          ]
+        }
+      ]
     };
@@ -140,6 +139,3 @@ describe('ReactART', () => {
     var container = document.createElement('div');
-    var instance = ReactDOM.render(
-      <TestComponent flipped={false} />,
-      container,
-    );
+    var instance = ReactDOM.render(<TestComponent flipped={false} />, container);
 
@@ -148,3 +144,3 @@ describe('ReactART', () => {
       children: [
-        {nodeName: 'defs'},
+        { nodeName: 'defs' },
         {
@@ -152,9 +148,9 @@ describe('ReactART', () => {
           children: [
-            {nodeName: 'defs'},
-            {nodeName: 'path', opacity: '0.1'},
-            {nodeName: 'path', opacity: Missing},
-            {nodeName: 'g'},
-          ],
-        },
-      ],
+            { nodeName: 'defs' },
+            { nodeName: 'path', opacity: '0.1' },
+            { nodeName: 'path', opacity: Missing },
+            { nodeName: 'g' }
+          ]
+        }
+      ]
     };
@@ -169,3 +165,3 @@ describe('ReactART', () => {
       children: [
-        {nodeName: 'defs'},
+        { nodeName: 'defs' },
         {
@@ -173,9 +169,9 @@ describe('ReactART', () => {
           children: [
-            {nodeName: 'defs'},
-            {nodeName: 'path', opacity: Missing},
-            {nodeName: 'path', opacity: '0.1'},
-            {nodeName: 'g'},
-          ],
-        },
-      ],
+            { nodeName: 'defs' },
+            { nodeName: 'path', opacity: Missing },
+            { nodeName: 'path', opacity: '0.1' },
+            { nodeName: 'g' }
+          ]
+        }
+      ]
     };
@@ -193,3 +189,3 @@ describe('ReactART', () => {
           <Surface>
-            {chars.map(text => <Shape key={text} title={text} />)}
+            {chars.map((text) => <Shape key={text} title={text} />)}
           </Surface>
@@ -231,3 +227,3 @@ describe('ReactART', () => {
         </Group>
-      </Surface>,
+      </Surface>
     );
@@ -300,2 +296,3 @@ describe('ReactART', () => {
   });
+
 });
diff --git a/src/renderers/dom/ReactDOM.js b/src/renderers/dom/ReactDOM.js
index a30ee9af4..ff39dc5aa 100644
--- a/src/renderers/dom/ReactDOM.js
+++ b/src/renderers/dom/ReactDOM.js
@@ -45,4 +45,3 @@ if (
   typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
-  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'
-) {
+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
   __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
@@ -71,2 +70,3 @@ if (__DEV__) {
   if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
+
     // First check if devtools is not installed
@@ -74,10 +74,7 @@ if (__DEV__) {
       // If we're in Chrome or Firefox, provide a download link if not installed.
-      if (
-        (navigator.userAgent.indexOf('Chrome') > -1 &&
+      if ((navigator.userAgent.indexOf('Chrome') > -1 &&
           navigator.userAgent.indexOf('Edge') === -1) ||
-        navigator.userAgent.indexOf('Firefox') > -1
-      ) {
+          navigator.userAgent.indexOf('Firefox') > -1) {
         // Firefox does not have the issue with devtools loaded over file://
-        var showFileUrlMessage =
-          window.location.protocol.indexOf('http') === -1 &&
+        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 &&
           navigator.userAgent.indexOf('Firefox') === -1;
@@ -85,7 +82,5 @@ if (__DEV__) {
           'Download the React DevTools ' +
-            (showFileUrlMessage
-              ? 'and use an HTTP server (instead of a file: URL) '
-              : '') +
-            'for a better development experience: ' +
-            'https://fb.me/react-devtools',
+          (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') +
+          'for a better development experience: ' +
+          'https://fb.me/react-devtools'
         );
@@ -97,6 +92,6 @@ if (__DEV__) {
       (testFunc.name || testFunc.toString()).indexOf('testFn') !== -1,
-      "It looks like you're using a minified copy of the development build " +
-        'of React. When deploying React apps to production, make sure to use ' +
-        'the production build which skips development warnings and is faster. ' +
-        'See https://fb.me/react-minification for more details.',
+      'It looks like you\'re using a minified copy of the development build ' +
+      'of React. When deploying React apps to production, make sure to use ' +
+      'the production build which skips development warnings and is faster. ' +
+      'See https://fb.me/react-minification for more details.'
     );
@@ -111,4 +106,4 @@ if (__DEV__) {
       'Internet Explorer is running in compatibility mode; please add the ' +
-        'following tag to your HTML to prevent this from happening: ' +
-        '<meta http-equiv="X-UA-Compatible" content="IE=edge" />',
+      'following tag to your HTML to prevent this from happening: ' +
+      '<meta http-equiv="X-UA-Compatible" content="IE=edge" />'
     );
@@ -133,3 +128,3 @@ if (__DEV__) {
           'One or more ES5 shims expected by React are not available: ' +
-            'https://fb.me/react-warning-polyfills',
+          'https://fb.me/react-warning-polyfills'
         );
diff --git a/src/renderers/dom/__mocks__/ReactDOM.js b/src/renderers/dom/__mocks__/ReactDOM.js
index c5965c9ec..00d14eb7f 100644
--- a/src/renderers/dom/__mocks__/ReactDOM.js
+++ b/src/renderers/dom/__mocks__/ReactDOM.js
@@ -15,4 +15,3 @@ var useFiber = ReactDOMFeatureFlags.useFiber;
 
-module.exports = useFiber
-  ? require('ReactDOMFiber')
-  : require.requireActual('ReactDOM');
+module.exports =
+  useFiber ? require('ReactDOMFiber') : require.requireActual('ReactDOM');
diff --git a/src/renderers/dom/__tests__/ReactDOMProduction-test.js b/src/renderers/dom/__tests__/ReactDOMProduction-test.js
index f2b4a7fc1..c25d5e759 100644
--- a/src/renderers/dom/__tests__/ReactDOMProduction-test.js
+++ b/src/renderers/dom/__tests__/ReactDOMProduction-test.js
@@ -64,3 +64,3 @@ describe('ReactDOMProduction', () => {
       </div>,
-      container,
+      container
     );
@@ -77,3 +77,3 @@ describe('ReactDOMProduction', () => {
       </div>,
-      container,
+      container
     );
@@ -121,3 +121,6 @@ describe('ReactDOMProduction', () => {
     var container = document.createElement('div');
-    var inst = ReactDOM.render(<Component x={1} />, container);
+    var inst = ReactDOM.render(
+      <Component x={1} />,
+      container
+    );
     expect(log).toEqual([
@@ -139,6 +142,11 @@ describe('ReactDOMProduction', () => {
     inst.setState({y: 2});
-    expect(log).toEqual([['shouldComponentUpdate', {x: 1}, {y: 2}]]);
+    expect(log).toEqual([
+      ['shouldComponentUpdate', {x: 1}, {y: 2}],
+    ]);
     log = [];
 
-    ReactDOM.render(<Component x={2} />, container);
+    ReactDOM.render(
+      <Component x={2} />,
+      container
+    );
     expect(log).toEqual([
@@ -152,3 +160,6 @@ describe('ReactDOMProduction', () => {
 
-    ReactDOM.render(<Component x={2} />, container);
+    ReactDOM.render(
+      <Component x={2} />,
+      container
+    );
     expect(log).toEqual([
@@ -160,3 +171,5 @@ describe('ReactDOMProduction', () => {
     ReactDOM.unmountComponentAtNode(container);
-    expect(log).toEqual([['componentWillUnmount']]);
+    expect(log).toEqual([
+      ['componentWillUnmount'],
+    ]);
   });
@@ -175,5 +188,5 @@ describe('ReactDOMProduction', () => {
       'Minified React error #109; visit ' +
-        'http://facebook.github.io/react/docs/error-decoder.html?invariant=109&args[]=Component' +
-        ' for the full message or use the non-minified dev environment' +
-        ' for full errors and additional helpful warnings.',
+      'http://facebook.github.io/react/docs/error-decoder.html?invariant=109&args[]=Component' +
+      ' for the full message or use the non-minified dev environment' +
+      ' for full errors and additional helpful warnings.'
     );
diff --git a/src/renderers/dom/client/ReactBrowserEventEmitter.js b/src/renderers/dom/client/ReactBrowserEventEmitter.js
index e51837c11..0d6a3b7a4 100644
--- a/src/renderers/dom/client/ReactBrowserEventEmitter.js
+++ b/src/renderers/dom/client/ReactBrowserEventEmitter.js
@@ -86,6 +86,4 @@ var topEventMapping = {
   topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
-  topAnimationIteration:
-    getVendorPrefixedEventName('animationiteration') || 'animationiteration',
-  topAnimationStart:
-    getVendorPrefixedEventName('animationstart') || 'animationstart',
+  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
+  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
   topBlur: 'blur',
@@ -146,4 +144,3 @@ var topEventMapping = {
   topTouchStart: 'touchstart',
-  topTransitionEnd:
-    getVendorPrefixedEventName('transitionend') || 'transitionend',
+  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
   topVolumeChange: 'volumechange',
@@ -179,2 +176,3 @@ function getListeningForDocument(mountAt) {
 var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
+
   /**
@@ -190,3 +188,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
       ReactEventListener.setHandleTopLevel(
-        ReactBrowserEventEmitter.handleTopLevel,
+        ReactBrowserEventEmitter.handleTopLevel
       );
@@ -246,5 +244,6 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
       var dependency = dependencies[i];
-      if (
-        !(isListening.hasOwnProperty(dependency) && isListening[dependency])
-      ) {
+      if (!(
+            isListening.hasOwnProperty(dependency) &&
+            isListening[dependency]
+          )) {
         if (dependency === 'topWheel') {
@@ -254,3 +253,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'wheel',
-              mountAt,
+              mountAt
             );
@@ -260,3 +259,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'mousewheel',
-              mountAt,
+              mountAt
             );
@@ -268,3 +267,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'DOMMouseScroll',
-              mountAt,
+              mountAt
             );
@@ -272,2 +271,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
         } else if (dependency === 'topScroll') {
+
           if (isEventSupported('scroll', true)) {
@@ -276,3 +276,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'scroll',
-              mountAt,
+              mountAt
             );
@@ -282,6 +282,8 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'scroll',
-              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE,
+              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE
             );
           }
-        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
+        } else if (dependency === 'topFocus' ||
+            dependency === 'topBlur') {
+
           if (isEventSupported('focus', true)) {
@@ -290,3 +292,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'focus',
-              mountAt,
+              mountAt
             );
@@ -295,3 +297,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'blur',
-              mountAt,
+              mountAt
             );
@@ -303,3 +305,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'focusin',
-              mountAt,
+              mountAt
             );
@@ -308,3 +310,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
               'focusout',
-              mountAt,
+              mountAt
             );
@@ -319,3 +321,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
             topEventMapping[dependency],
-            mountAt,
+            mountAt
           );
@@ -332,3 +334,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
       handlerBaseName,
-      handle,
+      handle
     );
@@ -340,3 +342,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
       handlerBaseName,
-      handle,
+      handle
     );
@@ -378,2 +380,3 @@ var ReactBrowserEventEmitter = Object.assign({}, ReactEventEmitterMixin, {
   },
+
 });
diff --git a/src/renderers/dom/client/ReactDOMComponentTree.js b/src/renderers/dom/client/ReactDOMComponentTree.js
index 88e2b4bf1..d440446ac 100644
--- a/src/renderers/dom/client/ReactDOMComponentTree.js
+++ b/src/renderers/dom/client/ReactDOMComponentTree.js
@@ -28,8 +28,8 @@ var internalInstanceKey =
 function shouldPrecacheNode(node, nodeID) {
-  return (
-    (node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID)) ||
-    (node.nodeType === 8 &&
-      node.nodeValue === ' react-text: ' + nodeID + ' ') ||
-    (node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ')
-  );
+  return (node.nodeType === 1 &&
+          node.getAttribute(ATTR_NAME) === String(nodeID)) ||
+         (node.nodeType === 8 &&
+          node.nodeValue === ' react-text: ' + nodeID + ' ') ||
+         (node.nodeType === 8 &&
+          node.nodeValue === ' react-empty: ' + nodeID + ' ');
 }
@@ -168,3 +168,3 @@ function getNodeFromInstance(inst) {
     inst._hostNode !== undefined,
-    'getNodeFromInstance: Invalid argument.',
+    'getNodeFromInstance: Invalid argument.'
   );
@@ -181,3 +181,3 @@ function getNodeFromInstance(inst) {
       inst._hostParent,
-      'React DOM tree root should always have a node reference.',
+      'React DOM tree root should always have a node reference.'
     );
diff --git a/src/renderers/dom/client/ReactDOMIDOperations.js b/src/renderers/dom/client/ReactDOMIDOperations.js
index e24335341..fd8c16797 100644
--- a/src/renderers/dom/client/ReactDOMIDOperations.js
+++ b/src/renderers/dom/client/ReactDOMIDOperations.js
@@ -20,2 +20,3 @@ var ReactDOMComponentTree = require('ReactDOMComponentTree');
 var ReactDOMIDOperations = {
+
   /**
diff --git a/src/renderers/dom/client/ReactDOMSelection.js b/src/renderers/dom/client/ReactDOMSelection.js
index 307d5c340..aff9e894b 100644
--- a/src/renderers/dom/client/ReactDOMSelection.js
+++ b/src/renderers/dom/client/ReactDOMSelection.js
@@ -101,3 +101,3 @@ function getModernOffsets(node) {
     selection.focusNode,
-    selection.focusOffset,
+    selection.focusOffset
   );
@@ -114,3 +114,3 @@ function getModernOffsets(node) {
     tempRange.endContainer,
-    tempRange.endOffset,
+    tempRange.endOffset
   );
@@ -178,3 +178,4 @@ function setModernOffsets(node, offsets) {
   var start = Math.min(offsets.start, length);
-  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
+  var end = offsets.end === undefined ?
+            start : Math.min(offsets.end, length);
 
@@ -206,6 +207,7 @@ function setModernOffsets(node, offsets) {
 
-var useIEOffsets =
+var useIEOffsets = (
   ExecutionEnvironment.canUseDOM &&
   'selection' in document &&
-  !('getSelection' in window);
+  !('getSelection' in window)
+);
 
diff --git a/src/renderers/dom/client/ReactDOMTreeTraversal.js b/src/renderers/dom/client/ReactDOMTreeTraversal.js
index 4d809cfdb..72cb83803 100644
--- a/src/renderers/dom/client/ReactDOMTreeTraversal.js
+++ b/src/renderers/dom/client/ReactDOMTreeTraversal.js
@@ -91,3 +91,3 @@ function traverseTwoPhase(inst, fn, arg) {
   var i;
-  for (i = path.length; i-- > 0; ) {
+  for (i = path.length; i-- > 0;) {
     fn(path[i], 'captured', arg);
@@ -122,3 +122,3 @@ function traverseEnterLeave(from, to, fn, argFrom, argTo) {
   }
-  for (i = pathTo.length; i-- > 0; ) {
+  for (i = pathTo.length; i-- > 0;) {
     fn(pathTo[i], 'captured', argTo);
diff --git a/src/renderers/dom/client/ReactEventListener.js b/src/renderers/dom/client/ReactEventListener.js
index a885cb9b9..8a329e959 100644
--- a/src/renderers/dom/client/ReactEventListener.js
+++ b/src/renderers/dom/client/ReactEventListener.js
@@ -54,3 +54,3 @@ PooledClass.addPoolingTo(
   TopLevelCallbackBookKeeping,
-  PooledClass.twoArgumentPooler,
+  PooledClass.twoArgumentPooler
 );
@@ -60,3 +60,3 @@ function handleTopLevelImpl(bookKeeping) {
   var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(
-    nativeEventTarget,
+    nativeEventTarget
   );
@@ -79,3 +79,3 @@ function handleTopLevelImpl(bookKeeping) {
       bookKeeping.nativeEvent,
-      getEventTarget(bookKeeping.nativeEvent),
+      getEventTarget(bookKeeping.nativeEvent)
     );
@@ -107,2 +107,3 @@ var ReactEventListener = {
 
+
   /**
@@ -124,3 +125,3 @@ var ReactEventListener = {
       handlerBaseName,
-      ReactEventListener.dispatchEvent.bind(null, topLevelType),
+      ReactEventListener.dispatchEvent.bind(null, topLevelType)
     );
@@ -145,3 +146,3 @@ var ReactEventListener = {
       handlerBaseName,
-      ReactEventListener.dispatchEvent.bind(null, topLevelType),
+      ReactEventListener.dispatchEvent.bind(null, topLevelType)
     );
@@ -161,3 +162,3 @@ var ReactEventListener = {
       topLevelType,
-      nativeEvent,
+      nativeEvent
     );
diff --git a/src/renderers/dom/client/ReactInputSelection.js b/src/renderers/dom/client/ReactInputSelection.js
index ee9d33ddc..46e6931a6 100644
--- a/src/renderers/dom/client/ReactInputSelection.js
+++ b/src/renderers/dom/client/ReactInputSelection.js
@@ -30,9 +30,9 @@ function isInDocument(node) {
 var ReactInputSelection = {
+
   hasSelectionCapabilities: function(elem) {
     var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
-    return (
-      nodeName &&
-      ((nodeName === 'input' && elem.type === 'text') ||
-        nodeName === 'textarea' ||
-        elem.contentEditable === 'true')
+    return nodeName && (
+      (nodeName === 'input' && elem.type === 'text') ||
+      nodeName === 'textarea' ||
+      elem.contentEditable === 'true'
     );
@@ -44,5 +44,6 @@ var ReactInputSelection = {
       focusedElem: focusedElem,
-      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem)
-        ? ReactInputSelection.getSelection(focusedElem)
-        : null,
+      selectionRange:
+          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
+          ReactInputSelection.getSelection(focusedElem) :
+          null,
     };
@@ -59,5 +60,9 @@ var ReactInputSelection = {
     var priorSelectionRange = priorSelectionInformation.selectionRange;
-    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
+    if (curFocusedElem !== priorFocusedElem &&
+        isInDocument(priorFocusedElem)) {
       if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
-        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
+        ReactInputSelection.setSelection(
+          priorFocusedElem,
+          priorSelectionRange
+        );
       }
@@ -82,6 +87,4 @@ var ReactInputSelection = {
       };
-    } else if (
-      document.selection &&
-      (input.nodeName && input.nodeName.toLowerCase() === 'input')
-    ) {
+    } else if (document.selection &&
+        (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
       // IE8 input.
@@ -120,6 +123,4 @@ var ReactInputSelection = {
       input.selectionEnd = Math.min(end, input.value.length);
-    } else if (
-      document.selection &&
-      (input.nodeName && input.nodeName.toLowerCase() === 'input')
-    ) {
+    } else if (document.selection &&
+        (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
       var range = input.createTextRange();
diff --git a/src/renderers/dom/client/ReactMount.js b/src/renderers/dom/client/ReactMount.js
index 382aff890..c0e3c9ec0 100644
--- a/src/renderers/dom/client/ReactMount.js
+++ b/src/renderers/dom/client/ReactMount.js
@@ -82,3 +82,3 @@ function internalGetID(node) {
   // the empty string, as if the attribute were missing.
-  return (node.getAttribute && node.getAttribute(ATTR_NAME)) || '';
+  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
 }
@@ -98,3 +98,3 @@ function mountComponentIntoNode(
   shouldReuseMarkup,
-  context,
+  context
 ) {
@@ -104,5 +104,6 @@ function mountComponentIntoNode(
     var type = wrappedElement.type;
-    markerName =
-      'React mount: ' +
-      (typeof type === 'string' ? type : type.displayName || type.name);
+    markerName = 'React mount: ' + (
+      typeof type === 'string' ? type :
+      type.displayName || type.name
+    );
     console.time(markerName);
@@ -116,3 +117,3 @@ function mountComponentIntoNode(
     context,
-    0 /* parentDebugID */,
+    0 /* parentDebugID */
   );
@@ -129,3 +130,3 @@ function mountComponentIntoNode(
     shouldReuseMarkup,
-    transaction,
+    transaction
   );
@@ -144,3 +145,3 @@ function batchedMountComponentIntoNode(
   shouldReuseMarkup,
-  context,
+  context
 ) {
@@ -148,3 +149,3 @@ function batchedMountComponentIntoNode(
     /* useCreateElement */
-    !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement,
+    !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement
   );
@@ -157,3 +158,3 @@ function batchedMountComponentIntoNode(
     shouldReuseMarkup,
-    context,
+    context
   );
@@ -218,7 +219,3 @@ function nodeIsRenderedByOtherInstance(container) {
   var rootEl = getReactRootElementInContainer(container);
-  return !!(
-    rootEl &&
-    isReactNode(rootEl) &&
-    !ReactDOMComponentTree.getInstanceFromNode(rootEl)
-  );
+  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
 }
@@ -233,8 +230,7 @@ function nodeIsRenderedByOtherInstance(container) {
 function isValidContainer(node) {
-  return !!(
-    node &&
-    (node.nodeType === ELEMENT_NODE_TYPE ||
-      node.nodeType === DOC_NODE_TYPE ||
-      node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)
-  );
+  return !!(node && (
+    node.nodeType === ELEMENT_NODE_TYPE ||
+    node.nodeType === DOC_NODE_TYPE ||
+    node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE
+  ));
 }
@@ -249,6 +245,3 @@ function isValidContainer(node) {
 function isReactNode(node) {
-  return (
-    isValidContainer(node) &&
-    (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME))
-  );
+  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
 }
@@ -259,5 +252,6 @@ function getHostRootInstanceInContainer(container) {
     rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
-  return prevHostInstance && !prevHostInstance._hostParent
-    ? prevHostInstance
-    : null;
+  return (
+    prevHostInstance && !prevHostInstance._hostParent ?
+    prevHostInstance : null
+  );
 }
@@ -306,2 +300,3 @@ TopLevelWrapper.isReactTopLevelWrapper = true;
 var ReactMount = {
+
   TopLevelWrapper: TopLevelWrapper,
@@ -333,14 +328,9 @@ var ReactMount = {
   _updateRootComponent: function(
-    prevComponent,
-    nextElement,
-    nextContext,
-    container,
-    callback,
-  ) {
+      prevComponent,
+      nextElement,
+      nextContext,
+      container,
+      callback) {
     ReactMount.scrollMonitor(container, function() {
-      ReactUpdateQueue.enqueueElementInternal(
-        prevComponent,
-        nextElement,
-        nextContext,
-      );
+      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
       if (callback) {
@@ -365,3 +355,3 @@ var ReactMount = {
     shouldReuseMarkup,
-    context,
+    context
   ) {
@@ -373,7 +363,7 @@ var ReactMount = {
       '_renderNewRootComponent(): Render methods should be a pure function ' +
-        'of props and state; triggering nested component updates from ' +
-        'render is not allowed. If necessary, trigger nested updates in ' +
-        'componentDidUpdate. Check the render method of %s.',
-      (ReactCurrentOwner.current && ReactCurrentOwner.current.getName()) ||
-        'ReactCompositeComponent',
+      'of props and state; triggering nested component updates from ' +
+      'render is not allowed. If necessary, trigger nested updates in ' +
+      'componentDidUpdate. Check the render method of %s.',
+      ReactCurrentOwner.current && ReactCurrentOwner.current.getName() ||
+        'ReactCompositeComponent'
     );
@@ -382,3 +372,3 @@ var ReactMount = {
       isValidContainer(container),
-      '_registerComponent(...): Target container is not a DOM element.',
+      '_registerComponent(...): Target container is not a DOM element.'
     );
@@ -397,3 +387,3 @@ var ReactMount = {
       shouldReuseMarkup,
-      context,
+      context
     );
@@ -419,11 +409,6 @@ var ReactMount = {
    */
-  renderSubtreeIntoContainer: function(
-    parentComponent,
-    nextElement,
-    container,
-    callback,
-  ) {
+  renderSubtreeIntoContainer: function(parentComponent, nextElement, container, callback) {
     invariant(
       parentComponent != null && ReactInstanceMap.has(parentComponent),
-      'parentComponent must be a valid React Component',
+      'parentComponent must be a valid React Component'
     );
@@ -433,3 +418,3 @@ var ReactMount = {
       container,
-      callback,
+      callback
     );
@@ -437,8 +422,3 @@ var ReactMount = {
 
-  _renderSubtreeIntoContainer: function(
-    parentComponent,
-    nextElement,
-    container,
-    callback,
-  ) {
+  _renderSubtreeIntoContainer: function(parentComponent, nextElement, container, callback) {
     ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
@@ -447,13 +427,15 @@ var ReactMount = {
       'ReactDOM.render(): Invalid component element.%s',
-      typeof nextElement === 'string'
-        ? " Instead of passing a string like 'div', pass " +
-            "React.createElement('div') or <div />."
-        : typeof nextElement === 'function'
-          ? ' Instead of passing a class like Foo, pass ' +
-              'React.createElement(Foo) or <Foo />.'
-          : // Check if it quacks like an element
-            nextElement != null && nextElement.props !== undefined
-            ? ' This may be caused by unintentionally loading two independent ' +
-                'copies of React.'
-            : '',
+      (
+        typeof nextElement === 'string' ?
+          ' Instead of passing a string like \'div\', pass ' +
+          'React.createElement(\'div\') or <div />.' :
+        typeof nextElement === 'function' ?
+          ' Instead of passing a class like Foo, pass ' +
+          'React.createElement(Foo) or <Foo />.' :
+        // Check if it quacks like an element
+        nextElement != null && nextElement.props !== undefined ?
+          ' This may be caused by unintentionally loading two independent ' +
+          'copies of React.' :
+          ''
+      )
     );
@@ -461,15 +443,15 @@ var ReactMount = {
     warning(
-      !container ||
-        !container.tagName ||
-        container.tagName.toUpperCase() !== 'BODY',
+      !container || !container.tagName ||
+      container.tagName.toUpperCase() !== 'BODY',
       'render(): Rendering components directly into document.body is ' +
-        'discouraged, since its children are often manipulated by third-party ' +
-        'scripts and browser extensions. This may lead to subtle ' +
-        'reconciliation issues. Try rendering into a container element created ' +
-        'for your app.',
+      'discouraged, since its children are often manipulated by third-party ' +
+      'scripts and browser extensions. This may lead to subtle ' +
+      'reconciliation issues. Try rendering into a container element created ' +
+      'for your app.'
     );
 
-    var nextWrappedElement = React.createElement(TopLevelWrapper, {
-      child: nextElement,
-    });
+    var nextWrappedElement = React.createElement(
+      TopLevelWrapper,
+      { child: nextElement }
+    );
 
@@ -490,7 +472,5 @@ var ReactMount = {
         var publicInst = prevComponent._renderedComponent.getPublicInstance();
-        var updatedCallback =
-          callback &&
-          function() {
-            callback.call(publicInst);
-          };
+        var updatedCallback = callback && function() {
+          callback.call(publicInst);
+        };
         ReactMount._updateRootComponent(
@@ -500,3 +480,3 @@ var ReactMount = {
           container,
-          updatedCallback,
+          updatedCallback
         );
@@ -517,5 +497,5 @@ var ReactMount = {
         'render(...): Replacing React-rendered children with a new root ' +
-          'component. If you intended to update the children of this node, ' +
-          'you should instead have the existing children update their state ' +
-          'and render the new components instead of calling ReactDOM.render.',
+        'component. If you intended to update the children of this node, ' +
+        'you should instead have the existing children update their state ' +
+        'and render the new components instead of calling ReactDOM.render.'
       );
@@ -529,4 +509,4 @@ var ReactMount = {
               'render(): Target node has markup rendered by React, but there ' +
-                'are unrelated nodes as well. This is most commonly caused by ' +
-                'white-space inserted around server-rendered markup.',
+              'are unrelated nodes as well. This is most commonly caused by ' +
+              'white-space inserted around server-rendered markup.'
             );
@@ -547,3 +527,3 @@ var ReactMount = {
       shouldReuseMarkup,
-      nextContext,
+      nextContext
     )._renderedComponent.getPublicInstance();
@@ -555,2 +535,3 @@ var ReactMount = {
 
+
   /**
@@ -569,8 +550,3 @@ var ReactMount = {
   render: function(nextElement, container, callback) {
-    return ReactMount._renderSubtreeIntoContainer(
-      null,
-      nextElement,
-      container,
-      callback,
-    );
+    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
   },
@@ -593,7 +569,7 @@ var ReactMount = {
       'unmountComponentAtNode(): Render methods should be a pure function ' +
-        'of props and state; triggering nested component updates from render ' +
-        'is not allowed. If necessary, trigger nested updates in ' +
-        'componentDidUpdate. Check the render method of %s.',
-      (ReactCurrentOwner.current && ReactCurrentOwner.current.getName()) ||
-        'ReactCompositeComponent',
+      'of props and state; triggering nested component updates from render ' +
+      'is not allowed. If necessary, trigger nested updates in ' +
+      'componentDidUpdate. Check the render method of %s.',
+      ReactCurrentOwner.current && ReactCurrentOwner.current.getName() ||
+        'ReactCompositeComponent'
     );
@@ -602,3 +578,3 @@ var ReactMount = {
       isValidContainer(container),
-      'unmountComponentAtNode(...): Target container is not a DOM element.',
+      'unmountComponentAtNode(...): Target container is not a DOM element.'
     );
@@ -608,4 +584,4 @@ var ReactMount = {
         !nodeIsRenderedByOtherInstance(container),
-        "unmountComponentAtNode(): The node you're attempting to unmount " +
-          'was rendered by another copy of React.',
+        'unmountComponentAtNode(): The node you\'re attempting to unmount ' +
+        'was rendered by another copy of React.'
       );
@@ -626,9 +602,11 @@ var ReactMount = {
           !containerHasNonRootReactChild,
-          "unmountComponentAtNode(): The node you're attempting to unmount " +
-            'was rendered by React and is not a top-level container. %s',
-          isContainerReactRoot
-            ? 'You may have accidentally passed in a React root node instead ' +
-                'of its container.'
-            : 'Instead, have the parent component update its state and ' +
-                'rerender in order to remove this component.',
+          'unmountComponentAtNode(): The node you\'re attempting to unmount ' +
+          'was rendered by React and is not a top-level container. %s',
+          (
+            isContainerReactRoot ?
+              'You may have accidentally passed in a React root node instead ' +
+              'of its container.' :
+              'Instead, have the parent component update its state and ' +
+              'rerender in order to remove this component.'
+          )
         );
@@ -643,3 +621,3 @@ var ReactMount = {
       container,
-      false,
+      false
     );
@@ -653,3 +631,3 @@ var ReactMount = {
     shouldReuseMarkup,
-    transaction,
+    transaction
   ) {
@@ -657,3 +635,3 @@ var ReactMount = {
       isValidContainer(container),
-      'mountComponentIntoNode(...): Target container is not valid.',
+      'mountComponentIntoNode(...): Target container is not valid.'
     );
@@ -667,3 +645,3 @@ var ReactMount = {
         var checksum = rootElement.getAttribute(
-          ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
+          ReactMarkupChecksum.CHECKSUM_ATTR_NAME
         );
@@ -674,3 +652,3 @@ var ReactMount = {
           ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
-          checksum,
+          checksum
         );
@@ -692,4 +670,3 @@ var ReactMount = {
             normalizer.contentDocument.write(markup);
-            normalizedMarkup =
-              normalizer.contentDocument.documentElement.outerHTML;
+            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
             document.body.removeChild(normalizer);
@@ -699,7 +676,5 @@ var ReactMount = {
         var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
-        var difference =
-          ' (client) ' +
+        var difference = ' (client) ' +
           normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) +
-          '\n (server) ' +
-          rootMarkup.substring(diffIndex - 20, diffIndex + 20);
+          '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
 
@@ -707,11 +682,11 @@ var ReactMount = {
           container.nodeType !== DOC_NODE_TYPE,
-          "You're trying to render a component to the document using " +
-            'server rendering but the checksum was invalid. This usually ' +
-            'means you rendered a different component type or props on ' +
-            'the client from the one on the server, or your render() ' +
-            'methods are impure. React cannot handle this case due to ' +
-            'cross-browser quirks by rendering at the document root. You ' +
-            'should look for environment dependent code in your components ' +
-            'and ensure the props are the same client and server side:\n%s',
-          difference,
+          'You\'re trying to render a component to the document using ' +
+          'server rendering but the checksum was invalid. This usually ' +
+          'means you rendered a different component type or props on ' +
+          'the client from the one on the server, or your render() ' +
+          'methods are impure. React cannot handle this case due to ' +
+          'cross-browser quirks by rendering at the document root. You ' +
+          'should look for environment dependent code in your components ' +
+          'and ensure the props are the same client and server side:\n%s',
+          difference
         );
@@ -722,10 +697,10 @@ var ReactMount = {
             'React attempted to reuse markup in a container but the ' +
-              'checksum was invalid. This generally means that you are ' +
-              'using server rendering and the markup generated on the ' +
-              'server was not what the client was expecting. React injected ' +
-              'new markup to compensate which works but you have lost many ' +
-              'of the benefits of server rendering. Instead, figure out ' +
-              'why the markup being generated is different on the client ' +
-              'or server:\n%s',
-            difference,
+            'checksum was invalid. This generally means that you are ' +
+            'using server rendering and the markup generated on the ' +
+            'server was not what the client was expecting. React injected ' +
+            'new markup to compensate which works but you have lost many ' +
+            'of the benefits of server rendering. Instead, figure out ' +
+            'why the markup being generated is different on the client ' +
+            'or server:\n%s',
+            difference
           );
@@ -737,6 +712,6 @@ var ReactMount = {
       container.nodeType !== DOC_NODE_TYPE,
-      "You're trying to render a component to the document but " +
-        "you didn't use server rendering. We can't do this " +
+      'You\'re trying to render a component to the document but ' +
+        'you didn\'t use server rendering. We can\'t do this ' +
         'without using server rendering due to cross-browser quirks. ' +
-        'See ReactDOMServer.renderToString() for server rendering.',
+        'See ReactDOMServer.renderToString() for server rendering.'
     );
@@ -754,5 +729,3 @@ var ReactMount = {
     if (__DEV__) {
-      var hostNode = ReactDOMComponentTree.getInstanceFromNode(
-        container.firstChild,
-      );
+      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
       if (hostNode._debugID !== 0) {
diff --git a/src/renderers/dom/client/ReactReconcileTransaction.js b/src/renderers/dom/client/ReactReconcileTransaction.js
index 4b3950bbf..8888dcb51 100644
--- a/src/renderers/dom/client/ReactReconcileTransaction.js
+++ b/src/renderers/dom/client/ReactReconcileTransaction.js
@@ -21,2 +21,3 @@ var ReactUpdateQueue = require('ReactUpdateQueue');
 
+
 /**
@@ -175,2 +176,3 @@ var Mixin = {
 
+
 Object.assign(ReactReconcileTransaction.prototype, Transaction, Mixin);
diff --git a/src/renderers/dom/client/__tests__/ReactBrowserEventEmitter-test.js b/src/renderers/dom/client/__tests__/ReactBrowserEventEmitter-test.js
index fb0f0619b..d76d4868a 100644
--- a/src/renderers/dom/client/__tests__/ReactBrowserEventEmitter-test.js
+++ b/src/renderers/dom/client/__tests__/ReactBrowserEventEmitter-test.js
@@ -56,2 +56,3 @@ function getInternal(node) {
 
+
 describe('ReactBrowserEventEmitter', () => {
@@ -70,7 +71,7 @@ describe('ReactBrowserEventEmitter', () => {
     ReactTestUtils.renderIntoDocument(
-      <div ref={c => (GRANDPARENT = c)}>
-        <div ref={c => (PARENT = c)}>
-          <div ref={c => (CHILD = c)} />
+      <div ref={(c) => GRANDPARENT = c}>
+        <div ref={(c) => PARENT = c}>
+          <div ref={(c) => CHILD = c} />
         </div>
-      </div>,
+      </div>
     );
@@ -109,11 +110,14 @@ describe('ReactBrowserEventEmitter', () => {
 
-  it('should not invoke handlers if ReactBrowserEventEmitter is disabled', () => {
-    registerSimpleTestHandler();
-    ReactBrowserEventEmitter.setEnabled(false);
-    ReactTestUtils.SimulateNative.click(CHILD);
-    expect(LISTENER.mock.calls.length).toBe(0);
-    ReactBrowserEventEmitter.setEnabled(true);
-    ReactTestUtils.SimulateNative.click(CHILD);
-    expect(LISTENER.mock.calls.length).toBe(1);
-  });
+  it(
+    'should not invoke handlers if ReactBrowserEventEmitter is disabled',
+    () => {
+      registerSimpleTestHandler();
+      ReactBrowserEventEmitter.setEnabled(false);
+      ReactTestUtils.SimulateNative.click(CHILD);
+      expect(LISTENER.mock.calls.length).toBe(0);
+      ReactBrowserEventEmitter.setEnabled(true);
+      ReactTestUtils.SimulateNative.click(CHILD);
+      expect(LISTENER.mock.calls.length).toBe(1);
+    }
+  );
 
@@ -123,3 +127,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(CHILD)),
+      recordID.bind(null, getInternal(CHILD))
     );
@@ -128,3 +132,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(PARENT)),
+      recordID.bind(null, getInternal(PARENT))
     );
@@ -133,3 +137,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(GRANDPARENT)),
+      recordID.bind(null, getInternal(GRANDPARENT))
     );
@@ -146,8 +150,12 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(CHILD)),
+      recordID.bind(null, getInternal(CHILD))
+    );
+    EventPluginHub.putListener(
+      getInternal(PARENT),
+      ON_CLICK_KEY,
+      function() {
+        recordID(getInternal(PARENT));
+        throw new Error('Handler interrupted');
+      }
     );
-    EventPluginHub.putListener(getInternal(PARENT), ON_CLICK_KEY, function() {
-      recordID(getInternal(PARENT));
-      throw new Error('Handler interrupted');
-    });
     EventPluginHub.putListener(
@@ -155,3 +163,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(GRANDPARENT)),
+      recordID.bind(null, getInternal(GRANDPARENT))
     );
@@ -167,20 +175,26 @@ describe('ReactBrowserEventEmitter', () => {
   it('should set currentTarget', () => {
-    EventPluginHub.putListener(getInternal(CHILD), ON_CLICK_KEY, function(
-      event,
-    ) {
-      recordID(getInternal(CHILD));
-      expect(event.currentTarget).toBe(CHILD);
-    });
-    EventPluginHub.putListener(getInternal(PARENT), ON_CLICK_KEY, function(
-      event,
-    ) {
-      recordID(getInternal(PARENT));
-      expect(event.currentTarget).toBe(PARENT);
-    });
-    EventPluginHub.putListener(getInternal(GRANDPARENT), ON_CLICK_KEY, function(
-      event,
-    ) {
-      recordID(getInternal(GRANDPARENT));
-      expect(event.currentTarget).toBe(GRANDPARENT);
-    });
+    EventPluginHub.putListener(
+      getInternal(CHILD),
+      ON_CLICK_KEY,
+      function(event) {
+        recordID(getInternal(CHILD));
+        expect(event.currentTarget).toBe(CHILD);
+      }
+    );
+    EventPluginHub.putListener(
+      getInternal(PARENT),
+      ON_CLICK_KEY,
+      function(event) {
+        recordID(getInternal(PARENT));
+        expect(event.currentTarget).toBe(PARENT);
+      }
+    );
+    EventPluginHub.putListener(
+      getInternal(GRANDPARENT),
+      ON_CLICK_KEY,
+      function(event) {
+        recordID(getInternal(GRANDPARENT));
+        expect(event.currentTarget).toBe(GRANDPARENT);
+      }
+    );
     ReactTestUtils.Simulate.click(CHILD);
@@ -196,3 +210,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(CHILD)),
+      recordID.bind(null, getInternal(CHILD))
     );
@@ -201,3 +215,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordIDAndStopPropagation.bind(null, getInternal(PARENT)),
+      recordIDAndStopPropagation.bind(null, getInternal(PARENT))
     );
@@ -206,3 +220,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(GRANDPARENT)),
+      recordID.bind(null, getInternal(GRANDPARENT))
     );
@@ -218,3 +232,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordIDAndStopPropagation.bind(null, getInternal(CHILD)),
+      recordIDAndStopPropagation.bind(null, getInternal(CHILD))
     );
@@ -223,3 +237,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(PARENT)),
+      recordID.bind(null, getInternal(PARENT))
     );
@@ -228,3 +242,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(GRANDPARENT)),
+      recordID.bind(null, getInternal(GRANDPARENT))
     );
@@ -239,3 +253,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordIDAndReturnFalse.bind(null, getInternal(CHILD)),
+      recordIDAndReturnFalse.bind(null, getInternal(CHILD))
     );
@@ -244,3 +258,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(PARENT)),
+      recordID.bind(null, getInternal(PARENT))
     );
@@ -249,3 +263,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      recordID.bind(null, getInternal(GRANDPARENT)),
+      recordID.bind(null, getInternal(GRANDPARENT))
     );
@@ -277,3 +291,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      handleChildClick,
+      handleChildClick
     );
@@ -282,3 +296,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      handleParentClick,
+      handleParentClick
     );
@@ -294,3 +308,3 @@ describe('ReactBrowserEventEmitter', () => {
         ON_CLICK_KEY,
-        handleParentClick,
+        handleParentClick
       );
@@ -300,3 +314,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_CLICK_KEY,
-      handleChildClick,
+      handleChildClick
     );
@@ -310,3 +324,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_MOUSE_ENTER_KEY,
-      recordID.bind(null, getInternal(CHILD)),
+      recordID.bind(null, getInternal(CHILD))
     );
@@ -321,3 +335,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_TOUCH_TAP_KEY,
-      recordID.bind(null, getInternal(CHILD)),
+      recordID.bind(null, getInternal(CHILD))
     );
@@ -325,3 +339,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, 0),
+      ReactTestUtils.nativeTouchData(0, 0)
     );
@@ -329,3 +343,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, 0),
+      ReactTestUtils.nativeTouchData(0, 0)
     );
@@ -339,3 +353,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_TOUCH_TAP_KEY,
-      recordID.bind(null, getInternal(CHILD)),
+      recordID.bind(null, getInternal(CHILD))
     );
@@ -343,3 +357,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, 0),
+      ReactTestUtils.nativeTouchData(0, 0)
     );
@@ -347,3 +361,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, tapMoveThreshold - 1),
+      ReactTestUtils.nativeTouchData(0, tapMoveThreshold - 1)
     );
@@ -357,3 +371,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_TOUCH_TAP_KEY,
-      recordID.bind(null, getInternal(CHILD)),
+      recordID.bind(null, getInternal(CHILD))
     );
@@ -361,3 +375,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, 0),
+      ReactTestUtils.nativeTouchData(0, 0)
     );
@@ -365,3 +379,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, tapMoveThreshold + 1),
+      ReactTestUtils.nativeTouchData(0, tapMoveThreshold + 1)
     );
@@ -414,3 +428,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_TOUCH_TAP_KEY,
-      recordID.bind(null, getInternal(CHILD)),
+      recordID.bind(null, getInternal(CHILD))
     );
@@ -419,3 +433,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_TOUCH_TAP_KEY,
-      recordID.bind(null, getInternal(PARENT)),
+      recordID.bind(null, getInternal(PARENT))
     );
@@ -424,3 +438,3 @@ describe('ReactBrowserEventEmitter', () => {
       ON_TOUCH_TAP_KEY,
-      recordID.bind(null, getInternal(GRANDPARENT)),
+      recordID.bind(null, getInternal(GRANDPARENT))
     );
@@ -428,3 +442,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, 0),
+      ReactTestUtils.nativeTouchData(0, 0)
     );
@@ -432,3 +446,3 @@ describe('ReactBrowserEventEmitter', () => {
       CHILD,
-      ReactTestUtils.nativeTouchData(0, 0),
+      ReactTestUtils.nativeTouchData(0, 0)
     );
@@ -455,2 +469,3 @@ describe('ReactBrowserEventEmitter', () => {
   });
+
 });
diff --git a/src/renderers/dom/client/__tests__/ReactDOM-test.js b/src/renderers/dom/client/__tests__/ReactDOM-test.js
index b55e913ff..76bc51e85 100644
--- a/src/renderers/dom/client/__tests__/ReactDOM-test.js
+++ b/src/renderers/dom/client/__tests__/ReactDOM-test.js
@@ -55,3 +55,5 @@ describe('ReactDOM', () => {
   it('should allow children to be passed as an argument', () => {
-    var argDiv = ReactTestUtils.renderIntoDocument(div(null, 'child'));
+    var argDiv = ReactTestUtils.renderIntoDocument(
+      div(null, 'child')
+    );
     var argNode = ReactDOM.findDOMNode(argDiv);
@@ -62,3 +64,3 @@ describe('ReactDOM', () => {
     var conflictDiv = ReactTestUtils.renderIntoDocument(
-      div({children: 'fakechild'}, 'child'),
+      div({children: 'fakechild'}, 'child')
     );
@@ -77,3 +79,3 @@ describe('ReactDOM', () => {
         <div key="theBird" className="bird" />
-      </div>,
+      </div>
     );
@@ -84,3 +86,3 @@ describe('ReactDOM', () => {
         <div key="theBird" className="bird" />,
-      </div>,
+      </div>
     );
@@ -90,3 +92,3 @@ describe('ReactDOM', () => {
         <div key="theBird" className="bird" />,
-      </div>,
+      </div>
     );
@@ -97,3 +99,3 @@ describe('ReactDOM', () => {
         <div key="theBird" className="bird" />,
-      </div>,
+      </div>
     );
@@ -104,3 +106,3 @@ describe('ReactDOM', () => {
         <div key="theBird" className="bird" />,
-      </div>,
+      </div>
     );
@@ -111,7 +113,7 @@ describe('ReactDOM', () => {
 
-  it('throws warning when  React.DOM factories are called', () => {
-    spyOn(console, 'warn');
+  it('allow React.DOM factories to be called without warnings', () => {
+    spyOn(console, 'error');
     var element = React.DOM.div();
     expect(element.type).toBe('div');
-    expect(console.warn.calls.count()).toBe(1);
+    expect(console.error.calls.count()).toBe(0);
   });
@@ -135,3 +137,3 @@ describe('ReactDOM', () => {
       'ReactDOM.render(...): Expected the last optional `callback` argument ' +
-        'to be a function. Instead received: string.',
+      'to be a function. Instead received: string.'
     );
@@ -139,3 +141,3 @@ describe('ReactDOM', () => {
       'ReactDOM.render(...): Expected the last optional `callback` argument ' +
-        'to be a function. Instead received: Object.',
+      'to be a function. Instead received: Object.'
     );
@@ -143,3 +145,3 @@ describe('ReactDOM', () => {
       'ReactDOM.render(...): Expected the last optional `callback` argument ' +
-        'to be a function. Instead received: Foo (keys: a, b).',
+      'to be a function. Instead received: Foo (keys: a, b).'
     );
@@ -166,3 +168,3 @@ describe('ReactDOM', () => {
       'ReactDOM.render(...): Expected the last optional `callback` argument ' +
-        'to be a function. Instead received: string.',
+      'to be a function. Instead received: string.'
     );
@@ -170,3 +172,3 @@ describe('ReactDOM', () => {
       'ReactDOM.render(...): Expected the last optional `callback` argument ' +
-        'to be a function. Instead received: Object.',
+      'to be a function. Instead received: Object.'
     );
@@ -174,3 +176,3 @@ describe('ReactDOM', () => {
       'ReactDOM.render(...): Expected the last optional `callback` argument ' +
-        'to be a function. Instead received: Foo (keys: a, b).',
+      'to be a function. Instead received: Foo (keys: a, b).'
     );
diff --git a/src/renderers/dom/client/__tests__/ReactDOMComponentTree-test.js b/src/renderers/dom/client/__tests__/ReactDOMComponentTree-test.js
index f6ce6f428..71733578e 100644
--- a/src/renderers/dom/client/__tests__/ReactDOMComponentTree-test.js
+++ b/src/renderers/dom/client/__tests__/ReactDOMComponentTree-test.js
@@ -90,3 +90,3 @@ describe('ReactDOMComponentTree', () => {
       return ReactDOMComponentTree.getClosestInstanceFromNode(
-        renderAndQuery(sel),
+        renderAndQuery(sel)
       );
@@ -103,5 +103,3 @@ describe('ReactDOMComponentTree', () => {
     var root = renderAndQuery(null);
-    var inst = ReactDOMComponentTree.getInstanceFromNode(
-      root.children[0].childNodes[2],
-    );
+    var inst = ReactDOMComponentTree.getInstanceFromNode(root.children[0].childNodes[2]);
     expect(inst._stringText).toBe('goodbye.');
@@ -111,2 +109,3 @@ describe('ReactDOMComponentTree', () => {
   });
+
 });
diff --git a/src/renderers/dom/client/__tests__/ReactDOMIDOperations-test.js b/src/renderers/dom/client/__tests__/ReactDOMIDOperations-test.js
index 1187c9bf5..dffd62dae 100644
--- a/src/renderers/dom/client/__tests__/ReactDOMIDOperations-test.js
+++ b/src/renderers/dom/client/__tests__/ReactDOMIDOperations-test.js
@@ -25,11 +25,9 @@ describe('ReactDOMIDOperations', () => {
       stubInstance,
-      [
-        {
-          type: 'SET_MARKUP',
-          content: html,
-          fromIndex: null,
-          toIndex: null,
-        },
-      ],
-      [],
+      [{
+        type: 'SET_MARKUP',
+        content: html,
+        fromIndex: null,
+        toIndex: null,
+      }],
+      []
     );
diff --git a/src/renderers/dom/client/__tests__/ReactDOMSVG-test.js b/src/renderers/dom/client/__tests__/ReactDOMSVG-test.js
index d7904b003..30760d3ae 100644
--- a/src/renderers/dom/client/__tests__/ReactDOMSVG-test.js
+++ b/src/renderers/dom/client/__tests__/ReactDOMSVG-test.js
@@ -17,2 +17,3 @@ var ReactDOMServer;
 describe('ReactDOMSVG', () => {
+
   beforeEach(() => {
@@ -26,3 +27,3 @@ describe('ReactDOMSVG', () => {
         <image xlinkHref="http://i.imgur.com/w7GCRPb.png" />
-      </svg>,
+      </svg>
     );
@@ -30,2 +31,3 @@ describe('ReactDOMSVG', () => {
   });
+
 });
diff --git a/src/renderers/dom/client/__tests__/ReactDOMTreeTraversal-test.js b/src/renderers/dom/client/__tests__/ReactDOMTreeTraversal-test.js
index ed40c8112..d68855d30 100644
--- a/src/renderers/dom/client/__tests__/ReactDOMTreeTraversal-test.js
+++ b/src/renderers/dom/client/__tests__/ReactDOMTreeTraversal-test.js
@@ -115,7 +115,3 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        target,
-        target,
-        argAggregator,
-        ARG,
-        ARG2,
+        target, target, argAggregator, ARG, ARG2
       );
@@ -130,7 +126,3 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave,
-        enter,
-        argAggregator,
-        ARG,
-        ARG2,
+        leave, enter, argAggregator, ARG, ARG2
       );
@@ -149,7 +141,3 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave,
-        enter,
-        argAggregator,
-        ARG,
-        ARG2,
+        leave, enter, argAggregator, ARG, ARG2
       );
@@ -166,7 +154,3 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave,
-        enter,
-        argAggregator,
-        ARG,
-        ARG2,
+        leave, enter, argAggregator, ARG, ARG2
       );
@@ -185,7 +169,3 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave,
-        enter,
-        argAggregator,
-        ARG,
-        ARG2,
+        leave, enter, argAggregator, ARG, ARG2
       );
@@ -202,7 +182,3 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave,
-        enter,
-        argAggregator,
-        ARG,
-        ARG2,
+        leave, enter, argAggregator, ARG, ARG2
       );
@@ -221,7 +197,3 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave,
-        enter,
-        argAggregator,
-        ARG,
-        ARG2,
+        leave, enter, argAggregator, ARG, ARG2
       );
@@ -240,7 +212,3 @@ describe('ReactDOMTreeTraversal', () => {
       ReactDOMTreeTraversal.traverseEnterLeave(
-        leave,
-        enter,
-        argAggregator,
-        ARG,
-        ARG2,
+        leave, enter, argAggregator, ARG, ARG2
       );
@@ -255,4 +223,3 @@ describe('ReactDOMTreeTraversal', () => {
         // Common ancestor with self is self.
-        {
-          one: parent.refs.P_P1_C1.refs.DIV_1,
+        {one: parent.refs.P_P1_C1.refs.DIV_1,
           two: parent.refs.P_P1_C1.refs.DIV_1,
@@ -298,3 +265,3 @@ describe('ReactDOMTreeTraversal', () => {
           getInst(plan.one),
-          getInst(plan.two),
+          getInst(plan.two)
         );
@@ -304,2 +271,3 @@ describe('ReactDOMTreeTraversal', () => {
   });
+
 });
diff --git a/src/renderers/dom/client/__tests__/ReactEventIndependence-test.js b/src/renderers/dom/client/__tests__/ReactEventIndependence-test.js
index ed5ce813f..695e1927b 100644
--- a/src/renderers/dom/client/__tests__/ReactEventIndependence-test.js
+++ b/src/renderers/dom/client/__tests__/ReactEventIndependence-test.js
@@ -34,3 +34,3 @@ describe('ReactEventIndependence', () => {
         }}
-      />,
+      />
     );
@@ -46,3 +46,3 @@ describe('ReactEventIndependence', () => {
       <button onClick={() => clicks++}>click me</button>,
-      outer,
+      outer
     );
@@ -57,3 +57,3 @@ describe('ReactEventIndependence', () => {
       <button onClick={() => clicks++}>click me</button>,
-      container,
+      container
     );
@@ -68,2 +68,3 @@ describe('ReactEventIndependence', () => {
   });
+
 });
diff --git a/src/renderers/dom/client/__tests__/ReactEventListener-test.js b/src/renderers/dom/client/__tests__/ReactEventListener-test.js
index 598da2c6f..f0fc24b9b 100644
--- a/src/renderers/dom/client/__tests__/ReactEventListener-test.js
+++ b/src/renderers/dom/client/__tests__/ReactEventListener-test.js
@@ -13,2 +13,3 @@
 
+
 var EVENT_TARGET_PARAM = 1;
@@ -39,12 +40,15 @@ describe('ReactEventListener', () => {
     expect(handleTopLevel.mock.calls.length).toBe(0);
-    ReactEventListener.dispatchEvent('topMouseOut', {
-      type: 'mouseout',
-      fromElement: otherNode,
-      target: otherNode,
-      srcElement: otherNode,
-      toElement: ReactDOM.findDOMNode(component),
-      relatedTarget: ReactDOM.findDOMNode(component),
-      view: window,
-      path: [otherNode, otherNode],
-    });
+    ReactEventListener.dispatchEvent(
+      'topMouseOut',
+      {
+        type: 'mouseout',
+        fromElement: otherNode,
+        target: otherNode,
+        srcElement: otherNode,
+        toElement: ReactDOM.findDOMNode(component),
+        relatedTarget: ReactDOM.findDOMNode(component),
+        view: window,
+        path: [otherNode, otherNode],
+      },
+    );
     expect(handleTopLevel.mock.calls.length).toBe(1);
@@ -59,3 +63,4 @@ describe('ReactEventListener', () => {
       childControl = ReactDOM.render(childControl, childContainer);
-      parentControl = ReactDOM.render(parentControl, parentContainer);
+      parentControl =
+        ReactDOM.render(parentControl, parentContainer);
       ReactDOM.findDOMNode(parentControl).appendChild(childContainer);
@@ -69,8 +74,6 @@ describe('ReactEventListener', () => {
       expect(calls.length).toBe(2);
-      expect(calls[0][EVENT_TARGET_PARAM]).toBe(
-        ReactDOMComponentTree.getInstanceFromNode(childControl),
-      );
-      expect(calls[1][EVENT_TARGET_PARAM]).toBe(
-        ReactDOMComponentTree.getInstanceFromNode(parentControl),
-      );
+      expect(calls[0][EVENT_TARGET_PARAM])
+        .toBe(ReactDOMComponentTree.getInstanceFromNode(childControl));
+      expect(calls[1][EVENT_TARGET_PARAM])
+        .toBe(ReactDOMComponentTree.getInstanceFromNode(parentControl));
     });
@@ -85,7 +88,6 @@ describe('ReactEventListener', () => {
       childControl = ReactDOM.render(childControl, childContainer);
-      parentControl = ReactDOM.render(parentControl, parentContainer);
-      grandParentControl = ReactDOM.render(
-        grandParentControl,
-        grandParentContainer,
-      );
+      parentControl =
+        ReactDOM.render(parentControl, parentContainer);
+      grandParentControl =
+        ReactDOM.render(grandParentControl, grandParentContainer);
       ReactDOM.findDOMNode(parentControl).appendChild(childContainer);
@@ -100,11 +102,8 @@ describe('ReactEventListener', () => {
       expect(calls.length).toBe(3);
-      expect(calls[0][EVENT_TARGET_PARAM]).toBe(
-        ReactDOMComponentTree.getInstanceFromNode(childControl),
-      );
-      expect(calls[1][EVENT_TARGET_PARAM]).toBe(
-        ReactDOMComponentTree.getInstanceFromNode(parentControl),
-      );
-      expect(calls[2][EVENT_TARGET_PARAM]).toBe(
-        ReactDOMComponentTree.getInstanceFromNode(grandParentControl),
-      );
+      expect(calls[0][EVENT_TARGET_PARAM])
+        .toBe(ReactDOMComponentTree.getInstanceFromNode(childControl));
+      expect(calls[1][EVENT_TARGET_PARAM])
+        .toBe(ReactDOMComponentTree.getInstanceFromNode(parentControl));
+      expect(calls[2][EVENT_TARGET_PARAM])
+        .toBe(ReactDOMComponentTree.getInstanceFromNode(grandParentControl));
     });
@@ -117,3 +116,4 @@ describe('ReactEventListener', () => {
       childControl = ReactDOM.render(childControl, childContainer);
-      parentControl = ReactDOM.render(parentControl, parentContainer);
+      parentControl =
+        ReactDOM.render(parentControl, parentContainer);
       ReactDOM.findDOMNode(parentControl).appendChild(childContainer);
@@ -125,12 +125,9 @@ describe('ReactEventListener', () => {
       var childNode = ReactDOM.findDOMNode(childControl);
-      handleTopLevel.mockImplementation(function(
-        topLevelType,
-        topLevelTarget,
-        topLevelTargetID,
-        nativeEvent,
-      ) {
-        if (topLevelTarget === childNode) {
-          ReactDOM.unmountComponentAtNode(childContainer);
+      handleTopLevel.mockImplementation(
+        function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
+          if (topLevelTarget === childNode) {
+            ReactDOM.unmountComponentAtNode(childContainer);
+          }
         }
-      });
+      );
 
@@ -143,8 +140,6 @@ describe('ReactEventListener', () => {
       expect(calls.length).toBe(2);
-      expect(calls[0][EVENT_TARGET_PARAM]).toBe(
-        ReactDOMComponentTree.getInstanceFromNode(childNode),
-      );
-      expect(calls[1][EVENT_TARGET_PARAM]).toBe(
-        ReactDOMComponentTree.getInstanceFromNode(parentControl),
-      );
+      expect(calls[0][EVENT_TARGET_PARAM])
+        .toBe(ReactDOMComponentTree.getInstanceFromNode(childNode));
+      expect(calls[1][EVENT_TARGET_PARAM])
+        .toBe(ReactDOMComponentTree.getInstanceFromNode(parentControl));
     });
@@ -154,4 +149,10 @@ describe('ReactEventListener', () => {
       var parentContainer = document.createElement('div');
-      var childControl = ReactDOM.render(<div>Child</div>, childContainer);
-      var parentControl = ReactDOM.render(<div>Parent</div>, parentContainer);
+      var childControl = ReactDOM.render(
+        <div>Child</div>,
+        childContainer
+      );
+      var parentControl = ReactDOM.render(
+        <div>Parent</div>,
+        parentContainer
+      );
       ReactDOM.findDOMNode(parentControl).appendChild(childContainer);
@@ -161,20 +162,15 @@ describe('ReactEventListener', () => {
       var childNode = ReactDOM.findDOMNode(childControl);
-      handleTopLevel.mockImplementation(function(
-        topLevelType,
-        topLevelTarget,
-        topLevelTargetID,
-        nativeEvent,
-      ) {
-        ReactDOM.render(
-          <div>{topLevelTarget === childNode ? '1' : '2'}</div>,
-          childContainer,
-        );
-        // Since we're batching, neither update should yet have gone through.
-        expect(childNode.textContent).toBe('Child');
-      });
-
-      var callback = ReactEventListener.dispatchEvent.bind(
-        ReactEventListener,
-        'test',
+      handleTopLevel.mockImplementation(
+        function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
+          ReactDOM.render(
+            <div>{topLevelTarget === childNode ? '1' : '2'}</div>,
+            childContainer
+          );
+          // Since we're batching, neither update should yet have gone through.
+          expect(childNode.textContent).toBe('Child');
+        }
       );
+
+      var callback =
+        ReactEventListener.dispatchEvent.bind(ReactEventListener, 'test');
       callback({
@@ -210,5 +206,4 @@ describe('ReactEventListener', () => {
     expect(calls.length).toBe(1);
-    expect(calls[0][EVENT_TARGET_PARAM]).toBe(
-      ReactDOMComponentTree.getInstanceFromNode(instance.getInner()),
-    );
+    expect(calls[0][EVENT_TARGET_PARAM])
+      .toBe(ReactDOMComponentTree.getInstanceFromNode(instance.getInner()));
   });
diff --git a/src/renderers/dom/client/__tests__/ReactMount-test.js b/src/renderers/dom/client/__tests__/ReactMount-test.js
index d83bd1108..d9d9e5eff 100644
--- a/src/renderers/dom/client/__tests__/ReactMount-test.js
+++ b/src/renderers/dom/client/__tests__/ReactMount-test.js
@@ -47,3 +47,3 @@ describe('ReactMount', () => {
       }).toThrowError(
-        'unmountComponentAtNode(...): Target container is not a DOM element.',
+        'unmountComponentAtNode(...): Target container is not a DOM element.'
       );
@@ -57,3 +57,3 @@ describe('ReactMount', () => {
       'ReactDOM.render(): Invalid component element. Instead of passing a ' +
-        "string like 'div', pass React.createElement('div') or <div />.",
+      'string like \'div\', pass React.createElement(\'div\') or <div />.'
     );
@@ -72,3 +72,3 @@ describe('ReactMount', () => {
       'ReactDOM.render(): Invalid component element. Instead of passing a ' +
-        'class like Foo, pass React.createElement(Foo) or <Foo />.',
+      'class like Foo, pass React.createElement(Foo) or <Foo />.'
     );
@@ -162,3 +162,3 @@ describe('ReactMount', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Rendering components directly into document.body is discouraged',
+      'Rendering components directly into document.body is discouraged'
     );
@@ -169,4 +169,3 @@ describe('ReactMount', () => {
     var markup = ReactDOMServer.renderToString(
-      <div>This markup contains an nbsp entity: &nbsp; server text</div>,
-    );
+      <div>This markup contains an nbsp entity: &nbsp; server text</div>);
     div.innerHTML = markup;
@@ -176,3 +175,3 @@ describe('ReactMount', () => {
       <div>This markup contains an nbsp entity: &nbsp; client text</div>,
-      div,
+      div
     );
@@ -181,3 +180,3 @@ describe('ReactMount', () => {
       ' (client) nbsp entity: &nbsp; client text</div>\n' +
-        ' (server) nbsp entity: &nbsp; server text</div>',
+      ' (server) nbsp entity: &nbsp; server text</div>'
     );
@@ -226,5 +225,5 @@ describe('ReactMount', () => {
       'Warning: render(...): Replacing React-rendered children with a new ' +
-        'root component. If you intended to update the children of this node, ' +
-        'you should instead have the existing children update their state and ' +
-        'render the new components instead of calling ReactDOM.render.',
+      'root component. If you intended to update the children of this node, ' +
+      'you should instead have the existing children update their state and ' +
+      'render the new components instead of calling ReactDOM.render.'
     );
@@ -251,4 +250,4 @@ describe('ReactMount', () => {
     expect(console.error.calls.argsFor(0)[0]).toBe(
-      "Warning: unmountComponentAtNode(): The node you're attempting to unmount " +
-        'was rendered by another copy of React.',
+      'Warning: unmountComponentAtNode(): The node you\'re attempting to unmount ' +
+      'was rendered by another copy of React.'
     );
diff --git a/src/renderers/dom/client/__tests__/ReactMountDestruction-test.js b/src/renderers/dom/client/__tests__/ReactMountDestruction-test.js
index 37cc4f5b9..6068d9933 100644
--- a/src/renderers/dom/client/__tests__/ReactMountDestruction-test.js
+++ b/src/renderers/dom/client/__tests__/ReactMountDestruction-test.js
@@ -45,7 +45,6 @@ describe('ReactMount', () => {
 
-    var component = (
+    var component =
       <div>
         <div />
-      </div>
-    );
+      </div>;
     ReactDOM.render(component, mainContainerDiv);
@@ -58,6 +57,6 @@ describe('ReactMount', () => {
     expect(console.error.calls.argsFor(0)[0]).toBe(
-      "Warning: unmountComponentAtNode(): The node you're attempting to " +
-        'unmount was rendered by React and is not a top-level container. You ' +
-        'may have accidentally passed in a React root node instead of its ' +
-        'container.',
+      'Warning: unmountComponentAtNode(): The node you\'re attempting to ' +
+      'unmount was rendered by React and is not a top-level container. You ' +
+      'may have accidentally passed in a React root node instead of its ' +
+      'container.'
     );
@@ -68,3 +67,3 @@ describe('ReactMount', () => {
 
-    var component = (
+    var component =
       <div>
@@ -73,4 +72,3 @@ describe('ReactMount', () => {
         </div>
-      </div>
-    );
+      </div>;
     ReactDOM.render(component, mainContainerDiv);
@@ -83,6 +81,6 @@ describe('ReactMount', () => {
     expect(console.error.calls.argsFor(0)[0]).toBe(
-      "Warning: unmountComponentAtNode(): The node you're attempting to " +
-        'unmount was rendered by React and is not a top-level container. ' +
-        'Instead, have the parent component update its state and rerender in ' +
-        'order to remove this component.',
+      'Warning: unmountComponentAtNode(): The node you\'re attempting to ' +
+      'unmount was rendered by React and is not a top-level container. ' +
+      'Instead, have the parent component update its state and rerender in ' +
+      'order to remove this component.'
     );
diff --git a/src/renderers/dom/client/__tests__/ReactRenderDocument-test.js b/src/renderers/dom/client/__tests__/ReactRenderDocument-test.js
index 8150a17f7..473bf9c76 100644
--- a/src/renderers/dom/client/__tests__/ReactRenderDocument-test.js
+++ b/src/renderers/dom/client/__tests__/ReactRenderDocument-test.js
@@ -168,3 +168,3 @@ describe('rendering React components at document', () => {
     var markup = ReactDOMServer.renderToString(
-      <Component text="Hello world" />,
+      <Component text="Hello world" />
     );
@@ -196,3 +196,3 @@ describe('rendering React components at document', () => {
     var markup = ReactDOMServer.renderToString(
-      <Component text="Goodbye world" />,
+      <Component text="Goodbye world" />
     );
@@ -204,12 +204,12 @@ describe('rendering React components at document', () => {
     }).toThrowError(
-      "You're trying to render a component to the document using " +
-        'server rendering but the checksum was invalid. This usually ' +
-        'means you rendered a different component type or props on ' +
-        'the client from the one on the server, or your render() methods ' +
-        'are impure. React cannot handle this case due to cross-browser ' +
-        'quirks by rendering at the document root. You should look for ' +
-        'environment dependent code in your components and ensure ' +
-        'the props are the same client and server side:\n' +
-        ' (client) dy data-reactid="4">Hello world</body></\n' +
-        ' (server) dy data-reactid="4">Goodbye world</body>',
+      'You\'re trying to render a component to the document using ' +
+      'server rendering but the checksum was invalid. This usually ' +
+      'means you rendered a different component type or props on ' +
+      'the client from the one on the server, or your render() methods ' +
+      'are impure. React cannot handle this case due to cross-browser ' +
+      'quirks by rendering at the document root. You should look for ' +
+      'environment dependent code in your components and ensure ' +
+      'the props are the same client and server side:\n' +
+      ' (client) dy data-reactid="4">Hello world</body></\n' +
+      ' (server) dy data-reactid="4">Goodbye world</body>'
     );
@@ -240,6 +240,6 @@ describe('rendering React components at document', () => {
     }).toThrowError(
-      "You're trying to render a component to the document but you didn't " +
-        "use server rendering. We can't do this without using server " +
-        'rendering due to cross-browser quirks. See ' +
-        'ReactDOMServer.renderToString() for server rendering.',
+      'You\'re trying to render a component to the document but you didn\'t ' +
+      'use server rendering. We can\'t do this without using server ' +
+      'rendering due to cross-browser quirks. See ' +
+      'ReactDOMServer.renderToString() for server rendering.'
     );
@@ -248,3 +248,3 @@ describe('rendering React components at document', () => {
   it('supports findDOMNode on full-page components', () => {
-    var tree = (
+    var tree =
       <html>
@@ -256,4 +256,3 @@ describe('rendering React components at document', () => {
         </body>
-      </html>
-    );
+      </html>;
 
diff --git a/src/renderers/dom/client/__tests__/findDOMNode-test.js b/src/renderers/dom/client/__tests__/findDOMNode-test.js
index 502e24fe7..05b76d4fb 100644
--- a/src/renderers/dom/client/__tests__/findDOMNode-test.js
+++ b/src/renderers/dom/client/__tests__/findDOMNode-test.js
@@ -40,3 +40,3 @@ describe('findDOMNode', () => {
     }).toThrowError(
-      'Element appears to be neither ReactComponent nor DOMNode (keys: foo)',
+      'Element appears to be neither ReactComponent nor DOMNode (keys: foo)'
     );
@@ -56,3 +56,3 @@ describe('findDOMNode', () => {
     expect(() => ReactDOM.findDOMNode(inst)).toThrowError(
-      'findDOMNode was called on an unmounted component.',
+      'findDOMNode was called on an unmounted component.'
     );
@@ -67,3 +67,3 @@ describe('findDOMNode', () => {
       render() {
-        return <div />;
+        return <div/>;
       }
@@ -71,4 +71,5 @@ describe('findDOMNode', () => {
 
-    expect(() => ReactTestUtils.renderIntoDocument(<Bar />)).not.toThrow();
+    expect(() => ReactTestUtils.renderIntoDocument(<Bar/>)).not.toThrow();
   });
+
 });
diff --git a/src/renderers/dom/client/__tests__/inputValueTracking-test.js b/src/renderers/dom/client/__tests__/inputValueTracking-test.js
deleted file mode 100644
index 103964cc1..000000000
--- a/src/renderers/dom/client/__tests__/inputValueTracking-test.js
+++ /dev/null
@@ -1,158 +0,0 @@
-/**
- * Copyright 2013-present, Facebook, Inc.
- * All rights reserved.
- *
- * This source code is licensed under the BSD-style license found in the
- * LICENSE file in the root directory of this source tree. An additional grant
- * of patent rights can be found in the PATENTS file in the same directory.
- *
- * @emails react-core
- */
-'use strict';
-
-var React = require('React');
-var ReactTestUtils = require('ReactTestUtils');
-var inputValueTracking = require('inputValueTracking');
-
-describe('inputValueTracking', function() {
-  var input, checkbox, mockComponent;
-
-  beforeEach(function() {
-    input = document.createElement('input');
-    input.type = 'text';
-    checkbox = document.createElement('input');
-    checkbox.type = 'checkbox';
-    mockComponent = {_hostNode: input, _wrapperState: {}};
-  });
-
-  it('should attach tracker to wrapper state', function() {
-    inputValueTracking.track(mockComponent);
-
-    expect(mockComponent._wrapperState.hasOwnProperty('valueTracker')).toBe(
-      true,
-    );
-  });
-
-  it('should define `value` on the instance node', function() {
-    inputValueTracking.track(mockComponent);
-
-    expect(input.hasOwnProperty('value')).toBe(true);
-  });
-
-  it('should define `checked` on the instance node', function() {
-    mockComponent._hostNode = checkbox;
-    inputValueTracking.track(mockComponent);
-
-    expect(checkbox.hasOwnProperty('checked')).toBe(true);
-  });
-
-  it('should initialize with the current value', function() {
-    input.value = 'foo';
-
-    inputValueTracking.track(mockComponent);
-
-    var tracker = mockComponent._wrapperState.valueTracker;
-
-    expect(tracker.getValue()).toEqual('foo');
-  });
-
-  it('should initialize with the current `checked`', function() {
-    mockComponent._hostNode = checkbox;
-    checkbox.checked = true;
-    inputValueTracking.track(mockComponent);
-
-    var tracker = mockComponent._wrapperState.valueTracker;
-
-    expect(tracker.getValue()).toEqual('true');
-  });
-
-  it('should track value changes', function() {
-    input.value = 'foo';
-
-    inputValueTracking.track(mockComponent);
-
-    var tracker = mockComponent._wrapperState.valueTracker;
-
-    input.value = 'bar';
-    expect(tracker.getValue()).toEqual('bar');
-  });
-
-  it('should tracked`checked` changes', function() {
-    mockComponent._hostNode = checkbox;
-    checkbox.checked = true;
-    inputValueTracking.track(mockComponent);
-
-    var tracker = mockComponent._wrapperState.valueTracker;
-
-    checkbox.checked = false;
-    expect(tracker.getValue()).toEqual('false');
-  });
-
-  it('should update value manually', function() {
-    input.value = 'foo';
-    inputValueTracking.track(mockComponent);
-
-    var tracker = mockComponent._wrapperState.valueTracker;
-
-    tracker.setValue('bar');
-    expect(tracker.getValue()).toEqual('bar');
-  });
-
-  it('should coerce value to a string', function() {
-    input.value = 'foo';
-    inputValueTracking.track(mockComponent);
-
-    var tracker = mockComponent._wrapperState.valueTracker;
-
-    tracker.setValue(500);
-    expect(tracker.getValue()).toEqual('500');
-  });
-
-  it('should update value if it changed and return result', function() {
-    inputValueTracking.track(mockComponent);
-    input.value = 'foo';
-
-    var tracker = mockComponent._wrapperState.valueTracker;
-
-    expect(inputValueTracking.updateValueIfChanged(mockComponent)).toBe(false);
-
-    tracker.setValue('bar');
-
-    expect(inputValueTracking.updateValueIfChanged(mockComponent)).toBe(true);
-
-    expect(tracker.getValue()).toEqual('foo');
-  });
-
-  it('should track value and return true when updating untracked instance', function() {
-    input.value = 'foo';
-
-    expect(inputValueTracking.updateValueIfChanged(mockComponent)).toBe(true);
-
-    var tracker = mockComponent._wrapperState.valueTracker;
-    expect(tracker.getValue()).toEqual('foo');
-  });
-
-  it('should return tracker from node', function() {
-    var node = ReactTestUtils.renderIntoDocument(
-      <input type="text" defaultValue="foo" />,
-    );
-    var tracker = inputValueTracking._getTrackerFromNode(node);
-    expect(tracker.getValue()).toEqual('foo');
-  });
-
-  it('should stop tracking', function() {
-    inputValueTracking.track(mockComponent);
-
-    expect(mockComponent._wrapperState.hasOwnProperty('valueTracker')).toBe(
-      true,
-    );
-
-    inputValueTracking.stopTracking(mockComponent);
-
-    expect(mockComponent._wrapperState.hasOwnProperty('valueTracker')).toBe(
-      false,
-    );
-
-    expect(input.hasOwnProperty('value')).toBe(false);
-  });
-});
diff --git a/src/renderers/dom/client/__tests__/validateDOMNesting-test.js b/src/renderers/dom/client/__tests__/validateDOMNesting-test.js
index 97aac29a5..5f0afa5cb 100644
--- a/src/renderers/dom/client/__tests__/validateDOMNesting-test.js
+++ b/src/renderers/dom/client/__tests__/validateDOMNesting-test.js
@@ -17,85 +17,12 @@ var validateDOMNesting;
 var specialTags = [
-  'address',
-  'applet',
-  'area',
-  'article',
-  'aside',
-  'base',
-  'basefont',
-  'bgsound',
-  'blockquote',
-  'body',
-  'br',
-  'button',
-  'caption',
-  'center',
-  'col',
-  'colgroup',
-  'dd',
-  'details',
-  'dir',
-  'div',
-  'dl',
-  'dt',
-  'embed',
-  'fieldset',
-  'figcaption',
-  'figure',
-  'footer',
-  'form',
-  'frame',
-  'frameset',
-  'h1',
-  'h2',
-  'h3',
-  'h4',
-  'h5',
-  'h6',
-  'head',
-  'header',
-  'hgroup',
-  'hr',
-  'html',
-  'iframe',
-  'img',
-  'input',
-  'isindex',
-  'li',
-  'link',
-  'listing',
-  'main',
-  'marquee',
-  'menu',
-  'menuitem',
-  'meta',
-  'nav',
-  'noembed',
-  'noframes',
-  'noscript',
-  'object',
-  'ol',
-  'p',
-  'param',
-  'plaintext',
-  'pre',
-  'script',
-  'section',
-  'select',
-  'source',
-  'style',
-  'summary',
-  'table',
-  'tbody',
-  'td',
-  'template',
-  'textarea',
-  'tfoot',
-  'th',
-  'thead',
-  'title',
-  'tr',
-  'track',
-  'ul',
-  'wbr',
-  'xmp',
+  'address', 'applet', 'area', 'article', 'aside', 'base', 'basefont',
+  'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col',
+  'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset',
+  'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2',
+  'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe',
+  'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu',
+  'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol',
+  'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source',
+  'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot',
+  'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp',
 ];
@@ -104,16 +31,4 @@ var specialTags = [
 var formattingTags = [
-  'a',
-  'b',
-  'big',
-  'code',
-  'em',
-  'font',
-  'i',
-  'nobr',
-  's',
-  'small',
-  'strike',
-  'strong',
-  'tt',
-  'u',
+  'a', 'b', 'big', 'code', 'em', 'font', 'i', 'nobr', 's', 'small', 'strike',
+  'strong', 'tt', 'u',
 ];
@@ -126,7 +41,4 @@ function isTagStackValid(stack) {
     }
-    ancestorInfo = validateDOMNesting.updatedAncestorInfo(
-      ancestorInfo,
-      stack[i],
-      null,
-    );
+    ancestorInfo =
+      validateDOMNesting.updatedAncestorInfo(ancestorInfo, stack[i], null);
   }
diff --git a/src/renderers/dom/client/eventPlugins/BeforeInputEventPlugin.js b/src/renderers/dom/client/eventPlugins/BeforeInputEventPlugin.js
index 5f0df7e47..e1163835f 100644
--- a/src/renderers/dom/client/eventPlugins/BeforeInputEventPlugin.js
+++ b/src/renderers/dom/client/eventPlugins/BeforeInputEventPlugin.js
@@ -19,3 +19,3 @@ var SyntheticInputEvent = require('SyntheticInputEvent');
 
-import type {TopLevelTypes} from 'EventConstants';
+import type { TopLevelTypes } from 'EventConstants';
 
@@ -24,4 +24,6 @@ var START_KEYCODE = 229;
 
-var canUseCompositionEvent =
-  ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
+var canUseCompositionEvent = (
+  ExecutionEnvironment.canUseDOM &&
+  'CompositionEvent' in window
+);
 
@@ -35,3 +37,3 @@ if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
 // useful, so we don't use it.
-var canUseTextInputEvent =
+var canUseTextInputEvent = (
   ExecutionEnvironment.canUseDOM &&
@@ -39,3 +41,4 @@ var canUseTextInputEvent =
   !documentMode &&
-  !isPresto();
+  !isPresto()
+);
 
@@ -44,6 +47,9 @@ var canUseTextInputEvent =
 // spaces, for instance (\u3000) are not recorded correctly.
-var useFallbackCompositionData =
+var useFallbackCompositionData = (
   ExecutionEnvironment.canUseDOM &&
-  (!canUseCompositionEvent ||
-    (documentMode && documentMode > 8 && documentMode <= 11));
+  (
+    !canUseCompositionEvent ||
+    (documentMode && documentMode > 8 && documentMode <= 11)
+  )
+);
 
@@ -139,2 +145,3 @@ function isKeypressCommand(nativeEvent) {
 
+
 /**
@@ -165,3 +172,6 @@ function getCompositionEventType(topLevelType) {
 function isFallbackCompositionStart(topLevelType, nativeEvent) {
-  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
+  return (
+    topLevelType === 'topKeyDown' &&
+    nativeEvent.keyCode === START_KEYCODE
+  );
 }
@@ -179,3 +189,3 @@ function isFallbackCompositionEnd(topLevelType, nativeEvent) {
       // Command keys insert or clear IME input.
-      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
+      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
     case 'topKeyDown':
@@ -183,3 +193,3 @@ function isFallbackCompositionEnd(topLevelType, nativeEvent) {
       // code we must have exited earlier.
-      return nativeEvent.keyCode !== START_KEYCODE;
+      return (nativeEvent.keyCode !== START_KEYCODE);
     case 'topKeyPress':
@@ -221,3 +231,3 @@ function extractCompositionEvent(
   nativeEvent,
-  nativeEventTarget,
+  nativeEventTarget
 ) {
@@ -244,5 +254,4 @@ function extractCompositionEvent(
     if (!currentComposition && eventType === eventTypes.compositionStart) {
-      currentComposition = FallbackCompositionState.getPooled(
-        nativeEventTarget,
-      );
+      currentComposition =
+        FallbackCompositionState.getPooled(nativeEventTarget);
     } else if (eventType === eventTypes.compositionEnd) {
@@ -258,3 +267,3 @@ function extractCompositionEvent(
     nativeEvent,
-    nativeEventTarget,
+    nativeEventTarget
   );
@@ -341,7 +350,5 @@ function getFallbackBeforeInputChars(topLevelType: TopLevelTypes, nativeEvent) {
   if (currentComposition) {
-    if (
-      topLevelType === 'topCompositionEnd' ||
-      (!canUseCompositionEvent &&
-        isFallbackCompositionEnd(topLevelType, nativeEvent))
-    ) {
+    if (topLevelType === 'topCompositionEnd'
+        || (!canUseCompositionEvent
+            && isFallbackCompositionEnd(topLevelType, nativeEvent))) {
       var chars = currentComposition.getData();
@@ -397,3 +404,3 @@ function extractBeforeInputEvent(
   nativeEvent,
-  nativeEventTarget,
+  nativeEventTarget
 ) {
@@ -417,3 +424,3 @@ function extractBeforeInputEvent(
     nativeEvent,
-    nativeEventTarget,
+    nativeEventTarget
   );
@@ -444,2 +451,3 @@ function extractBeforeInputEvent(
 var BeforeInputEventPlugin = {
+
   eventTypes: eventTypes,
@@ -450,3 +458,3 @@ var BeforeInputEventPlugin = {
     nativeEvent,
-    nativeEventTarget,
+    nativeEventTarget
   ) {
@@ -457,3 +465,3 @@ var BeforeInputEventPlugin = {
         nativeEvent,
-        nativeEventTarget,
+        nativeEventTarget
       ),
@@ -463,3 +471,3 @@ var BeforeInputEventPlugin = {
         nativeEvent,
-        nativeEventTarget,
+        nativeEventTarget
       ),
diff --git a/src/renderers/dom/client/eventPlugins/ChangeEventPlugin.js b/src/renderers/dom/client/eventPlugins/ChangeEventPlugin.js
index 473aef515..e4a1f9b91 100644
--- a/src/renderers/dom/client/eventPlugins/ChangeEventPlugin.js
+++ b/src/renderers/dom/client/eventPlugins/ChangeEventPlugin.js
@@ -20,3 +20,2 @@ var SyntheticEvent = require('SyntheticEvent');
 
-var inputValueTracking = require('inputValueTracking');
 var getEventTarget = require('getEventTarget');
@@ -44,13 +43,2 @@ var eventTypes = {
 
-function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
-  var event = SyntheticEvent.getPooled(
-    eventTypes.change,
-    inst,
-    nativeEvent,
-    target,
-  );
-  event.type = 'change';
-  EventPropagators.accumulateTwoPhaseDispatches(event);
-  return event;
-}
 /**
@@ -60,2 +48,4 @@ var activeElement = null;
 var activeElementInst = null;
+var activeElementValue = null;
+var activeElementValueProp = null;
 
@@ -67,3 +57,4 @@ function shouldUseChangeEvent(elem) {
   return (
-    nodeName === 'select' || (nodeName === 'input' && elem.type === 'file')
+    nodeName === 'select' ||
+    (nodeName === 'input' && elem.type === 'file')
   );
@@ -74,5 +65,5 @@ if (ExecutionEnvironment.canUseDOM) {
   // See `handleChange` comment below
-  doesChangeEventBubble =
-    isEventSupported('change') &&
-    (!document.documentMode || document.documentMode > 8);
+  doesChangeEventBubble = isEventSupported('change') && (
+    !document.documentMode || document.documentMode > 8
+  );
 }
@@ -80,7 +71,9 @@ if (ExecutionEnvironment.canUseDOM) {
 function manualDispatchChangeEvent(nativeEvent) {
-  var event = createAndAccumulateChangeEvent(
+  var event = SyntheticEvent.getPooled(
+    eventTypes.change,
     activeElementInst,
     nativeEvent,
-    getEventTarget(nativeEvent),
+    getEventTarget(nativeEvent)
   );
+  EventPropagators.accumulateTwoPhaseDispatches(event);
 
@@ -120,14 +113,6 @@ function stopWatchingForChangeEventIE8() {
 
-function getInstIfValueChanged(targetInst, nativeEvent) {
-  var updated = inputValueTracking.updateValueIfChanged(targetInst);
-  var simulated =
-    nativeEvent.simulated === true &&
-    ChangeEventPlugin._allowSimulatedPassThrough;
-
-  if (updated || simulated) {
-    return targetInst;
-  }
-}
-
-function getTargetInstForChangeEvent(topLevelType, targetInst) {
+function getTargetInstForChangeEvent(
+  topLevelType,
+  targetInst
+) {
   if (topLevelType === 'topChange') {
@@ -136,4 +121,7 @@ function getTargetInstForChangeEvent(topLevelType, targetInst) {
 }
-
-function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
+function handleEventsForChangeEventIE8(
+  topLevelType,
+  target,
+  targetInst
+) {
   if (topLevelType === 'topFocus') {
@@ -148,2 +136,3 @@ function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
 
+
 /**
@@ -155,6 +144,7 @@ if (ExecutionEnvironment.canUseDOM) {
   // deleting text, so we ignore its input events.
-
-  isInputEventSupported =
-    isEventSupported('input') &&
-    (!('documentMode' in document) || document.documentMode > 9);
+  // IE10+ fire input events to often, such when a placeholder
+  // changes or when an input with a placeholder is focused.
+  isInputEventSupported = isEventSupported('input') && (
+    !document.documentMode || document.documentMode > 11
+  );
 }
@@ -162,3 +152,18 @@ if (ExecutionEnvironment.canUseDOM) {
 /**
- * (For IE <=9) Starts tracking propertychange events on the passed-in element
+ * (For IE <=11) Replacement getter/setter for the `value` property that gets
+ * set on the active element.
+ */
+var newValueProp = {
+  get: function() {
+    return activeElementValueProp.get.call(this);
+  },
+  set: function(val) {
+    // Cast to a string so we can do equality checks.
+    activeElementValue = '' + val;
+    activeElementValueProp.set.call(this, val);
+  },
+};
+
+/**
+ * (For IE <=11) Starts tracking propertychange events on the passed-in element
  * and override the value property so that we can distinguish user events from
@@ -169,3 +174,16 @@ function startWatchingForValueChange(target, targetInst) {
   activeElementInst = targetInst;
-  activeElement.attachEvent('onpropertychange', handlePropertyChange);
+  activeElementValue = target.value;
+  activeElementValueProp = Object.getOwnPropertyDescriptor(
+    target.constructor.prototype,
+    'value'
+  );
+
+  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
+  // on DOM elements
+  Object.defineProperty(activeElement, 'value', newValueProp);
+  if (activeElement.attachEvent) {
+    activeElement.attachEvent('onpropertychange', handlePropertyChange);
+  } else {
+    activeElement.addEventListener('propertychange', handlePropertyChange, false);
+  }
 }
@@ -173,3 +191,3 @@ function startWatchingForValueChange(target, targetInst) {
 /**
- * (For IE <=9) Removes the event listeners from the currently-tracked element,
+ * (For IE <=11) Removes the event listeners from the currently-tracked element,
  * if any exists.
@@ -180,3 +198,11 @@ function stopWatchingForValueChange() {
   }
-  activeElement.detachEvent('onpropertychange', handlePropertyChange);
+
+  // delete restores the original property definition
+  delete activeElement.value;
+
+  if (activeElement.detachEvent) {
+    activeElement.detachEvent('onpropertychange', handlePropertyChange);
+  } else {
+    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
+  }
 
@@ -184,2 +210,4 @@ function stopWatchingForValueChange() {
   activeElementInst = null;
+  activeElementValue = null;
+  activeElementValueProp = null;
 }
@@ -187,3 +215,3 @@ function stopWatchingForValueChange() {
 /**
- * (For IE <=9) Handles a propertychange event, sending a `change` event if
+ * (For IE <=11) Handles a propertychange event, sending a `change` event if
  * the value of the active element has changed.
@@ -194,4 +222,22 @@ function handlePropertyChange(nativeEvent) {
   }
-  if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
-    manualDispatchChangeEvent(nativeEvent);
+  var value = nativeEvent.srcElement.value;
+  if (value === activeElementValue) {
+    return;
+  }
+  activeElementValue = value;
+
+  manualDispatchChangeEvent(nativeEvent);
+}
+
+/**
+ * If a `change` event should be fired, returns the target's ID.
+ */
+function getTargetInstForInputEvent(
+  topLevelType,
+  targetInst
+) {
+  if (topLevelType === 'topInput') {
+    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
+    // what we want so fall through here and trigger an abstract event
+    return targetInst;
   }
@@ -199,3 +245,7 @@ function handlePropertyChange(nativeEvent) {
 
-function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
+function handleEventsForInputEventIE(
+  topLevelType,
+  target,
+  targetInst
+) {
   if (topLevelType === 'topFocus') {
@@ -204,3 +254,3 @@ function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
     // equal to 'value'
-    // In IE9, propertychange fires for most input events but is buggy and
+    // In IE9-11, propertychange fires for most input events but is buggy and
     // doesn't fire when text is deleted, but conveniently, selectionchange
@@ -222,12 +272,9 @@ function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
 // For IE8 and IE9.
-function getTargetInstForInputEventPolyfill(
+function getTargetInstForInputEventIE(
   topLevelType,
-  targetInst,
-  nativeEvent,
+  targetInst
 ) {
-  if (
-    topLevelType === 'topSelectionChange' ||
-    topLevelType === 'topKeyUp' ||
-    topLevelType === 'topKeyDown'
-  ) {
+  if (topLevelType === 'topSelectionChange' ||
+      topLevelType === 'topKeyUp' ||
+      topLevelType === 'topKeyDown') {
     // On the selectionchange event, the target is just document which isn't
@@ -242,3 +289,6 @@ function getTargetInstForInputEventPolyfill(
     // fire selectionchange normally.
-    return getInstIfValueChanged(activeElementInst, nativeEvent);
+    if (activeElement && activeElement.value !== activeElementValue) {
+      activeElementValue = activeElement.value;
+      return activeElementInst;
+    }
   }
@@ -246,2 +296,3 @@ function getTargetInstForInputEventPolyfill(
 
+
 /**
@@ -253,6 +304,4 @@ function shouldUseClickEvent(elem) {
   // until `blur` in IE8.
-  var nodeName = elem.nodeName;
   return (
-    nodeName &&
-    nodeName.toLowerCase() === 'input' &&
+    (elem.nodeName && elem.nodeName.toLowerCase() === 'input') &&
     (elem.type === 'checkbox' || elem.type === 'radio')
@@ -261,15 +310,8 @@ function shouldUseClickEvent(elem) {
 
-function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
-  if (topLevelType === 'topClick') {
-    return getInstIfValueChanged(targetInst, nativeEvent);
-  }
-}
-
-function getTargetInstForInputOrChangeEvent(
+function getTargetInstForClickEvent(
   topLevelType,
-  targetInst,
-  nativeEvent,
+  targetInst
 ) {
-  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
-    return getInstIfValueChanged(targetInst, nativeEvent);
+  if (topLevelType === 'topClick') {
+    return targetInst;
   }
@@ -308,6 +350,4 @@ function handleControlledInputBlur(inst, node) {
 var ChangeEventPlugin = {
-  eventTypes: eventTypes,
 
-  _allowSimulatedPassThrough: true,
-  _isInputEventSupported: isInputEventSupported,
+  eventTypes: eventTypes,
 
@@ -317,7 +357,6 @@ var ChangeEventPlugin = {
     nativeEvent,
-    nativeEventTarget,
+    nativeEventTarget
   ) {
-    var targetNode = targetInst
-      ? ReactDOMComponentTree.getNodeFromInstance(targetInst)
-      : window;
+    var targetNode = targetInst ?
+      ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
 
@@ -332,6 +371,6 @@ var ChangeEventPlugin = {
       if (isInputEventSupported) {
-        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
+        getTargetInstFunc = getTargetInstForInputEvent;
       } else {
-        getTargetInstFunc = getTargetInstForInputEventPolyfill;
-        handleEventFunc = handleEventsForInputEventPolyfill;
+        getTargetInstFunc = getTargetInstForInputEventIE;
+        handleEventFunc = handleEventsForInputEventIE;
       }
@@ -342,9 +381,12 @@ var ChangeEventPlugin = {
     if (getTargetInstFunc) {
-      var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
+      var inst = getTargetInstFunc(topLevelType, targetInst);
       if (inst) {
-        var event = createAndAccumulateChangeEvent(
+        var event = SyntheticEvent.getPooled(
+          eventTypes.change,
           inst,
           nativeEvent,
-          nativeEventTarget,
+          nativeEventTarget
         );
+        event.type = 'change';
+        EventPropagators.accumulateTwoPhaseDispatches(event);
         return event;
@@ -354,3 +396,7 @@ var ChangeEventPlugin = {
     if (handleEventFunc) {
-      handleEventFunc(topLevelType, targetNode, targetInst);
+      handleEventFunc(
+        topLevelType,
+        targetNode,
+        targetInst
+      );
     }
@@ -362,2 +408,3 @@ var ChangeEventPlugin = {
   },
+
 };
diff --git a/src/renderers/dom/client/eventPlugins/EnterLeaveEventPlugin.js b/src/renderers/dom/client/eventPlugins/EnterLeaveEventPlugin.js
index fa9925f14..9c0ebc642 100644
--- a/src/renderers/dom/client/eventPlugins/EnterLeaveEventPlugin.js
+++ b/src/renderers/dom/client/eventPlugins/EnterLeaveEventPlugin.js
@@ -20,3 +20,6 @@ var eventTypes = {
     registrationName: 'onMouseEnter',
-    dependencies: ['topMouseOut', 'topMouseOver'],
+    dependencies: [
+      'topMouseOut',
+      'topMouseOver',
+    ],
   },
@@ -24,3 +27,6 @@ var eventTypes = {
     registrationName: 'onMouseLeave',
-    dependencies: ['topMouseOut', 'topMouseOver'],
+    dependencies: [
+      'topMouseOut',
+      'topMouseOver',
+    ],
   },
@@ -29,2 +35,3 @@ var eventTypes = {
 var EnterLeaveEventPlugin = {
+
   eventTypes: eventTypes,
@@ -42,11 +49,10 @@ var EnterLeaveEventPlugin = {
     nativeEvent,
-    nativeEventTarget,
+    nativeEventTarget
   ) {
-    if (
-      topLevelType === 'topMouseOver' &&
-      (nativeEvent.relatedTarget || nativeEvent.fromElement)
-    ) {
+    if (topLevelType === 'topMouseOver' &&
+        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
       return null;
     }
-    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
+    if (topLevelType !== 'topMouseOut' &&
+        topLevelType !== 'topMouseOver') {
       // Must not be a mouse in or mouse out - ignoring.
@@ -74,5 +80,4 @@ var EnterLeaveEventPlugin = {
       var related = nativeEvent.relatedTarget || nativeEvent.toElement;
-      to = related
-        ? ReactDOMComponentTree.getClosestInstanceFromNode(related)
-        : null;
+      to = related ?
+        ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
     } else {
@@ -88,8 +93,6 @@ var EnterLeaveEventPlugin = {
 
-    var fromNode = from == null
-      ? win
-      : ReactDOMComponentTree.getNodeFromInstance(from);
-    var toNode = to == null
-      ? win
-      : ReactDOMComponentTree.getNodeFromInstance(to);
+    var fromNode =
+      from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
+    var toNode =
+      to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
 
@@ -99,3 +102,3 @@ var EnterLeaveEventPlugin = {
       nativeEvent,
-      nativeEventTarget,
+      nativeEventTarget
     );
@@ -109,3 +112,3 @@ var EnterLeaveEventPlugin = {
       nativeEvent,
-      nativeEventTarget,
+      nativeEventTarget
     );
@@ -119,2 +122,3 @@ var EnterLeaveEventPlugin = {
   },
+
 };
diff --git a/src/renderers/dom/client/eventPlugins/SelectEventPlugin.js b/src/renderers/dom/client/eventPlugins/SelectEventPlugin.js
index 8b89dc377..a4467c72a 100644
--- a/src/renderers/dom/client/eventPlugins/SelectEventPlugin.js
+++ b/src/renderers/dom/client/eventPlugins/SelectEventPlugin.js
@@ -23,6 +23,7 @@ var shallowEqual = require('shallowEqual');
 
-var skipSelectionChangeEvent =
+var skipSelectionChangeEvent = (
   ExecutionEnvironment.canUseDOM &&
   'documentMode' in document &&
-  document.documentMode <= 11;
+  document.documentMode <= 11
+);
 
@@ -66,6 +67,4 @@ var hasListener = false;
 function getSelection(node) {
-  if (
-    'selectionStart' in node &&
-    ReactInputSelection.hasSelectionCapabilities(node)
-  ) {
+  if ('selectionStart' in node &&
+      ReactInputSelection.hasSelectionCapabilities(node)) {
     return {
@@ -104,7 +103,5 @@ function constructSelectEvent(nativeEvent, nativeEventTarget) {
   // won't dispatch.
-  if (
-    mouseDown ||
-    activeElement == null ||
-    activeElement !== getActiveElement()
-  ) {
+  if (mouseDown ||
+      activeElement == null ||
+      activeElement !== getActiveElement()) {
     return null;
@@ -121,3 +118,3 @@ function constructSelectEvent(nativeEvent, nativeEventTarget) {
       nativeEvent,
-      nativeEventTarget,
+      nativeEventTarget
     );
@@ -150,2 +147,3 @@ function constructSelectEvent(nativeEvent, nativeEventTarget) {
 var SelectEventPlugin = {
+
   eventTypes: eventTypes,
@@ -156,3 +154,3 @@ var SelectEventPlugin = {
     nativeEvent,
-    nativeEventTarget,
+    nativeEventTarget
   ) {
@@ -162,5 +160,4 @@ var SelectEventPlugin = {
 
-    var targetNode = targetInst
-      ? ReactDOMComponentTree.getNodeFromInstance(targetInst)
-      : window;
+    var targetNode = targetInst ?
+      ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
 
@@ -169,6 +166,4 @@ var SelectEventPlugin = {
       case 'topFocus':
-        if (
-          isTextInputElement(targetNode) ||
-          targetNode.contentEditable === 'true'
-        ) {
+        if (isTextInputElement(targetNode) ||
+            targetNode.contentEditable === 'true') {
           activeElement = targetNode;
@@ -183,2 +178,3 @@ var SelectEventPlugin = {
         break;
+
       // Don't fire the event while the user is dragging. This matches the
@@ -192,2 +188,3 @@ var SelectEventPlugin = {
         return constructSelectEvent(nativeEvent, nativeEventTarget);
+
       // Chrome and IE fire non-standard event when selection is changed (and
@@ -205,3 +202,3 @@ var SelectEventPlugin = {
         }
-      // falls through
+        // falls through
       case 'topKeyDown':
diff --git a/src/renderers/dom/client/eventPlugins/SimpleEventPlugin.js b/src/renderers/dom/client/eventPlugins/SimpleEventPlugin.js
index 6acaf74a5..4479b4476 100644
--- a/src/renderers/dom/client/eventPlugins/SimpleEventPlugin.js
+++ b/src/renderers/dom/client/eventPlugins/SimpleEventPlugin.js
@@ -39,3 +39,6 @@ import type {
 import type {ReactInstance} from 'ReactInstanceType';
-import type {EventTypes, PluginModule} from 'PluginModuleType';
+import type {
+  EventTypes,
+  PluginModule,
+} from 'PluginModuleType';
 
@@ -150,6 +153,4 @@ function isInteractive(tag) {
   return (
-    tag === 'button' ||
-    tag === 'input' ||
-    tag === 'select' ||
-    tag === 'textarea'
+    tag === 'button' || tag === 'input' ||
+    tag === 'select' || tag === 'textarea'
   );
@@ -158,2 +159,3 @@ function isInteractive(tag) {
 var SimpleEventPlugin: PluginModule<MouseEvent> = {
+
   eventTypes: eventTypes,
@@ -211,3 +213,3 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
         }
-      /* falls through */
+        /* falls through */
       case 'topKeyDown':
@@ -226,3 +228,3 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
         }
-      /* falls through */
+        /* falls through */
       case 'topDoubleClick':
@@ -231,4 +233,4 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
       case 'topMouseUp':
-      // TODO: Disabled elements should not respond to mouse events
-      /* falls through */
+        // TODO: Disabled elements should not respond to mouse events
+        /* falls through */
       case 'topMouseOut':
@@ -277,3 +279,3 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
       'SimpleEventPlugin: Unhandled event type, `%s`.',
-      topLevelType,
+      topLevelType
     );
@@ -283,3 +285,3 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
       nativeEvent,
-      nativeEventTarget,
+      nativeEventTarget
     );
@@ -306,3 +308,3 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
           'click',
-          emptyFunction,
+          emptyFunction
         );
@@ -322,2 +324,3 @@ var SimpleEventPlugin: PluginModule<MouseEvent> = {
   },
+
 };
diff --git a/src/renderers/dom/client/eventPlugins/TapEventPlugin.js b/src/renderers/dom/client/eventPlugins/TapEventPlugin.js
index a5b46a07e..2bf0c2fa3 100644
--- a/src/renderers/dom/client/eventPlugins/TapEventPlugin.js
+++ b/src/renderers/dom/client/eventPlugins/TapEventPlugin.js
@@ -23,3 +23,6 @@ var isEndish = EventPluginUtils.isEndish;
 
-import type {EventTypes, PluginModule} from 'PluginModuleType';
+import type {
+  EventTypes,
+  PluginModule,
+} from 'PluginModuleType';
 import type {ReactInstance} from 'ReactInstanceType';
@@ -34,6 +37,10 @@ import type {TopLevelTypes} from 'EventConstants';
  */
-type TouchPropertyKey = 'clientX' | 'clientY' | 'pageX' | 'pageY';
+type TouchPropertyKey =
+  'clientX' |
+  'clientY' |
+  'pageX' |
+  'pageY';
 
 declare class _Touch extends Touch {
-  [key: TouchPropertyKey]: number,
+  [key: TouchPropertyKey]: number;
 }
@@ -76,8 +83,11 @@ function getAxisCoordOfEvent(
   }
-  return axis.page in nativeEvent
-    ? nativeEvent[axis.page]
-    : nativeEvent[axis.client] + ViewportMetrics[axis.envScroll];
+  return axis.page in nativeEvent ?
+    nativeEvent[axis.page] :
+    nativeEvent[axis.client] + ViewportMetrics[axis.envScroll];
 }
 
-function getDistance(coords: CoordinatesType, nativeEvent: _Touch): number {
+function getDistance(
+  coords: CoordinatesType,
+  nativeEvent: _Touch,
+): number {
   var pageX = getAxisCoordOfEvent(Axis.x, nativeEvent);
@@ -86,3 +96,3 @@ function getDistance(coords: CoordinatesType, nativeEvent: _Touch): number {
     Math.pow(pageX - coords.x, 2) + Math.pow(pageY - coords.y, 2),
-    0.5,
+    0.5
   );
@@ -97,5 +107,7 @@ var touchEvents = [
 
-var dependencies = ['topMouseDown', 'topMouseMove', 'topMouseUp'].concat(
-  touchEvents,
-);
+var dependencies = [
+  'topMouseDown',
+  'topMouseMove',
+  'topMouseUp',
+].concat(touchEvents);
 
@@ -116,2 +128,3 @@ var TOUCH_DELAY = 1000;
 var TapEventPlugin: PluginModule<_Touch> = {
+
   tapMoveThreshold: tapMoveThreshold,
@@ -136,3 +149,3 @@ var TapEventPlugin: PluginModule<_Touch> = {
     } else {
-      if (usedTouch && Date.now() - usedTouchTime < TOUCH_DELAY) {
+      if (usedTouch && (Date.now() - usedTouchTime < TOUCH_DELAY)) {
         return null;
@@ -147,3 +160,3 @@ var TapEventPlugin: PluginModule<_Touch> = {
         nativeEvent,
-        nativeEventTarget,
+        nativeEventTarget
       );
@@ -160,2 +173,3 @@ var TapEventPlugin: PluginModule<_Touch> = {
   },
+
 };
diff --git a/src/renderers/dom/client/eventPlugins/__tests__/BeforeInputEventPlugin-test.js b/src/renderers/dom/client/eventPlugins/__tests__/BeforeInputEventPlugin-test.js
index 265ca820b..5d2ec7ab8 100644
--- a/src/renderers/dom/client/eventPlugins/__tests__/BeforeInputEventPlugin-test.js
+++ b/src/renderers/dom/client/eventPlugins/__tests__/BeforeInputEventPlugin-test.js
@@ -17,8 +17,8 @@ var ReactTestUtils = require('ReactTestUtils');
 var EventMapping = {
-  compositionstart: 'topCompositionStart',
-  compositionend: 'topCompositionEnd',
-  keyup: 'topKeyUp',
-  keydown: 'topKeyDown',
-  textInput: 'topTextInput',
-  textinput: null, // Not defined now
+  compositionstart : 'topCompositionStart',
+  compositionend   : 'topCompositionEnd',
+  keyup            : 'topKeyUp',
+  keydown          : 'topKeyDown',
+  textInput        : 'topTextInput',
+  textinput        : null, // Not defined now
 };
@@ -64,3 +64,3 @@ describe('BeforeInputEventPlugin', function() {
       evt,
-      node,
+      node
     );
@@ -69,3 +69,3 @@ describe('BeforeInputEventPlugin', function() {
   function setElementText(node) {
-    return args => (node.innerHTML = args);
+    return (args) => node.innerHTML = args;
   }
@@ -96,6 +96,4 @@ describe('BeforeInputEventPlugin', function() {
           throw new EventMismatchError(idx, 'Expected not to be null');
-        } else if (
-          expected.type === null ||
-          !(actual instanceof expected.type)
-        ) {
+        } else if (expected.type === null
+                 || !(actual instanceof expected.type)) {
           throw new EventMismatchError(idx, 'Unexpected type: ' + actual);
@@ -107,6 +105,4 @@ describe('BeforeInputEventPlugin', function() {
             } else if (actual[expectedKey] !== expected.data[expectedKey]) {
-              throw new EventMismatchError(
-                idx,
-                'ValueMismatch: ' + actual[expectedKey],
-              );
+              throw new EventMismatchError(idx,
+                'ValueMismatch: ' + actual[expectedKey]);
             }
@@ -148,22 +144,12 @@ describe('BeforeInputEventPlugin', function() {
   var Expected_Webkit = () => [
-    {type: ModuleCache.SyntheticCompositionEvent, data: {}},
-    {type: null},
-    {type: null},
-    {type: ModuleCache.SyntheticInputEvent, data: {data: 'A'}},
-    {type: null},
-    {type: null}, // textinput of A
-    {type: null},
-    {type: null}, // keyUp of 65
-    {type: null},
-    {type: ModuleCache.SyntheticInputEvent, data: {data: 'abc'}},
-    {type: null},
-    {type: null}, // textinput of abc
-    {type: null},
-    {type: null}, // keyUp of 32
-    {type: null},
-    {type: ModuleCache.SyntheticInputEvent, data: {data: 'xyz'}},
-    {type: null},
-    {type: null}, // textinput of xyz
-    {type: null},
-    {type: null}, // keyUp of 32
+    {type: ModuleCache.SyntheticCompositionEvent, data: {}}, {type: null},
+    {type: null}, {type: ModuleCache.SyntheticInputEvent, data: {data: 'A'}},
+    {type: null}, {type: null}, // textinput of A
+    {type: null}, {type: null}, // keyUp of 65
+    {type: null}, {type: ModuleCache.SyntheticInputEvent, data: {data: 'abc'}},
+    {type: null}, {type: null}, // textinput of abc
+    {type: null}, {type: null}, // keyUp of 32
+    {type: null}, {type: ModuleCache.SyntheticInputEvent, data: {data: 'xyz'}},
+    {type: null}, {type: null}, // textinput of xyz
+    {type: null}, {type: null}, // keyUp of 32
     {type: ModuleCache.SyntheticCompositionEvent, data: {data: 'Hello'}},
@@ -177,25 +163,15 @@ describe('BeforeInputEventPlugin', function() {
   var Expected_IE11 = () => [
-    {type: ModuleCache.SyntheticCompositionEvent, data: {}},
-    {type: null},
-    {type: null},
-    {type: null}, // textInput of A
-    {type: null},
-    {type: null}, // textinput of A
-    {type: null},
-    {type: null}, // keyUp of 65
-    {type: null},
-    {type: null}, // textInput of abc
-    {type: null},
-    {type: null}, // textinput of abc
+    {type: ModuleCache.SyntheticCompositionEvent, data: {}}, {type: null},
+    {type: null}, {type: null}, // textInput of A
+    {type: null}, {type: null}, // textinput of A
+    {type: null}, {type: null}, // keyUp of 65
+    {type: null}, {type: null}, // textInput of abc
+    {type: null}, {type: null}, // textinput of abc
 
     // fallbackData should NOT be set at keyUp with any of END_KEYCODES
-    {type: null},
-    {type: null}, // keyUp of 32
+    {type: null}, {type: null}, // keyUp of 32
 
-    {type: null},
-    {type: null}, // textInput of xyz
-    {type: null},
-    {type: null}, // textinput of xyz
-    {type: null},
-    {type: null}, // keyUp of 32
+    {type: null}, {type: null}, // textInput of xyz
+    {type: null}, {type: null}, // textinput of xyz
+    {type: null}, {type: null}, // keyUp of 32
 
@@ -220,3 +196,4 @@ describe('BeforeInputEventPlugin', function() {
 
-    Scenario.forEach(el => el.run.call(this, node, events).apply(this, el.arg));
+    Scenario.forEach((el) =>
+        el.run.call(this, node, events).apply(this, el.arg));
     verifyEvents(events, ExpectedResult());
@@ -226,6 +203,3 @@ describe('BeforeInputEventPlugin', function() {
     TestEditableReactComponent(
-      simulateWebkit,
-      Scenario_Composition,
-      Expected_Webkit,
-    );
+      simulateWebkit, Scenario_Composition, Expected_Webkit);
   });
@@ -234,6 +208,3 @@ describe('BeforeInputEventPlugin', function() {
     TestEditableReactComponent(
-      simulateIE11,
-      Scenario_Composition,
-      Expected_IE11,
-    );
+      simulateIE11, Scenario_Composition, Expected_IE11);
   });
diff --git a/src/renderers/dom/client/eventPlugins/__tests__/ChangeEventPlugin-test.js b/src/renderers/dom/client/eventPlugins/__tests__/ChangeEventPlugin-test.js
index d85970cec..bd6a904e6 100644
--- a/src/renderers/dom/client/eventPlugins/__tests__/ChangeEventPlugin-test.js
+++ b/src/renderers/dom/client/eventPlugins/__tests__/ChangeEventPlugin-test.js
@@ -14,38 +14,5 @@
 var React = require('React');
-var ReactDOM = require('ReactDOM');
 var ReactTestUtils = require('ReactTestUtils');
-var ChangeEventPlugin = require('ChangeEventPlugin');
-var inputValueTracking = require('inputValueTracking');
-
-function getTrackedValue(elem) {
-  var tracker = inputValueTracking._getTrackerFromNode(elem);
-  return tracker.getValue();
-}
-
-function setTrackedValue(elem, value) {
-  var tracker = inputValueTracking._getTrackerFromNode(elem);
-  tracker.setValue(value);
-}
-
-function setUntrackedValue(elem, value) {
-  var tracker = inputValueTracking._getTrackerFromNode(elem);
-  var current = tracker.getValue();
-
-  if (elem.type === 'checkbox' || elem.type === 'radio') {
-    elem.checked = value;
-  } else {
-    elem.value = value;
-  }
-  tracker.setValue(current);
-}
 
 describe('ChangeEventPlugin', () => {
-  beforeEach(() => {
-    ChangeEventPlugin._allowSimulatedPassThrough = false;
-  });
-
-  afterEach(() => {
-    ChangeEventPlugin._allowSimulatedPassThrough = true;
-  });
-
   it('should fire change for checkbox input', () => {
@@ -58,174 +25,6 @@ describe('ChangeEventPlugin', () => {
 
-    var input = ReactTestUtils.renderIntoDocument(
-      <input type="checkbox" onChange={cb} />,
-    );
-
-    setUntrackedValue(input, true);
-    ReactTestUtils.SimulateNative.click(input);
-
-    expect(called).toBe(1);
-  });
-
-  it('should catch setting the value programmatically', function() {
-    var input = ReactTestUtils.renderIntoDocument(
-      <input type="text" defaultValue="foo" />,
-    );
-
-    input.value = 'bar';
-    expect(getTrackedValue(input)).toBe('bar');
-  });
-
-  it('should not fire change when setting the value programmatically', function() {
-    var called = 0;
-
-    function cb(e) {
-      called += 1;
-      expect(e.type).toBe('change');
-    }
-
-    var input = ReactTestUtils.renderIntoDocument(
-      <input type="text" onChange={cb} defaultValue="foo" />,
-    );
-
-    input.value = 'bar';
-    ReactTestUtils.SimulateNative.change(input);
-    expect(called).toBe(0);
-
-    setUntrackedValue(input, 'foo');
-    ReactTestUtils.SimulateNative.change(input);
-
-    expect(called).toBe(1);
-  });
-
-  it('should not fire change when setting checked programmatically', function() {
-    var called = 0;
-
-    function cb(e) {
-      called += 1;
-      expect(e.type).toBe('change');
-    }
-
-    var input = ReactTestUtils.renderIntoDocument(
-      <input type="checkbox" onChange={cb} defaultChecked={true} />,
-    );
-
-    input.checked = true;
+    var input = ReactTestUtils.renderIntoDocument(<input type="checkbox" onChange={cb}/>);
     ReactTestUtils.SimulateNative.click(input);
-    expect(called).toBe(0);
-
-    input.checked = false;
-    setTrackedValue(input, undefined);
-    ReactTestUtils.SimulateNative.click(input);
-
     expect(called).toBe(1);
   });
-
-  it('should unmount', function() {
-    var container = document.createElement('div');
-    var input = ReactDOM.render(<input />, container);
-
-    ReactDOM.unmountComponentAtNode(container);
-  });
-
-  it('should only fire change for checked radio button once', function() {
-    var called = 0;
-
-    function cb(e) {
-      called += 1;
-    }
-
-    var input = ReactTestUtils.renderIntoDocument(
-      <input type="radio" onChange={cb} />,
-    );
-    setUntrackedValue(input, true);
-    ReactTestUtils.SimulateNative.click(input);
-    ReactTestUtils.SimulateNative.click(input);
-    expect(called).toBe(1);
-  });
-
-  it('should deduplicate input value change events', function() {
-    var input;
-    var called = 0;
-
-    function cb(e) {
-      called += 1;
-      expect(e.type).toBe('change');
-    }
-
-    [
-      <input type="text" onChange={cb} />,
-      <input type="number" onChange={cb} />,
-      <input type="range" onChange={cb} />,
-    ].forEach(function(element) {
-      called = 0;
-      input = ReactTestUtils.renderIntoDocument(element);
-
-      setUntrackedValue(input, '40');
-      ReactTestUtils.SimulateNative.change(input);
-      ReactTestUtils.SimulateNative.change(input);
-      expect(called).toBe(1);
-
-      called = 0;
-      input = ReactTestUtils.renderIntoDocument(element);
-      setUntrackedValue(input, '40');
-      ReactTestUtils.SimulateNative.input(input);
-      ReactTestUtils.SimulateNative.input(input);
-      expect(called).toBe(1);
-
-      called = 0;
-      input = ReactTestUtils.renderIntoDocument(element);
-      setUntrackedValue(input, '40');
-      ReactTestUtils.SimulateNative.input(input);
-      ReactTestUtils.SimulateNative.change(input);
-      expect(called).toBe(1);
-    });
-  });
-
-  it('should listen for both change and input events when supported', function() {
-    var called = 0;
-
-    function cb(e) {
-      called += 1;
-      expect(e.type).toBe('change');
-    }
-
-    if (!ChangeEventPlugin._isInputEventSupported) {
-      return;
-    }
-
-    var input = ReactTestUtils.renderIntoDocument(
-      <input type="range" onChange={cb} />,
-    );
-    setUntrackedValue(input, 'bar');
-
-    ReactTestUtils.SimulateNative.input(input);
-
-    setUntrackedValue(input, 'foo');
-
-    ReactTestUtils.SimulateNative.change(input);
-
-    expect(called).toBe(2);
-  });
-
-  it('should only fire events when the value changes for range inputs', function() {
-    var called = 0;
-
-    function cb(e) {
-      called += 1;
-      expect(e.type).toBe('change');
-    }
-
-    var input = ReactTestUtils.renderIntoDocument(
-      <input type="range" onChange={cb} />,
-    );
-    setUntrackedValue(input, '40');
-    ReactTestUtils.SimulateNative.input(input);
-    ReactTestUtils.SimulateNative.change(input);
-
-    setUntrackedValue(input, 'foo');
-
-    ReactTestUtils.SimulateNative.input(input);
-    ReactTestUtils.SimulateNative.change(input);
-    expect(called).toBe(2);
-  });
 });
diff --git a/src/renderers/dom/client/eventPlugins/__tests__/EnterLeaveEventPlugin-test.js b/src/renderers/dom/client/eventPlugins/__tests__/EnterLeaveEventPlugin-test.js
index 5fbf06893..f856cf320 100644
--- a/src/renderers/dom/client/eventPlugins/__tests__/EnterLeaveEventPlugin-test.js
+++ b/src/renderers/dom/client/eventPlugins/__tests__/EnterLeaveEventPlugin-test.js
@@ -35,3 +35,3 @@ describe('EnterLeaveEventPlugin', () => {
     iframeDocument.write(
-      '<!DOCTYPE html><html><head></head><body><div></div></body></html>',
+      '<!DOCTYPE html><html><head></head><body><div></div></body></html>'
     );
@@ -39,6 +39,3 @@ describe('EnterLeaveEventPlugin', () => {
 
-    var component = ReactDOM.render(
-      <div />,
-      iframeDocument.body.getElementsByTagName('div')[0],
-    );
+    var component = ReactDOM.render(<div />, iframeDocument.body.getElementsByTagName('div')[0]);
     var div = ReactDOM.findDOMNode(component);
@@ -49,3 +46,3 @@ describe('EnterLeaveEventPlugin', () => {
       {target: div},
-      div,
+      div
     );
diff --git a/src/renderers/dom/client/eventPlugins/__tests__/SelectEventPlugin-test.js b/src/renderers/dom/client/eventPlugins/__tests__/SelectEventPlugin-test.js
index 41707da4f..d8d79f708 100644
--- a/src/renderers/dom/client/eventPlugins/__tests__/SelectEventPlugin-test.js
+++ b/src/renderers/dom/client/eventPlugins/__tests__/SelectEventPlugin-test.js
@@ -25,3 +25,3 @@ describe('SelectEventPlugin', () => {
       {target: node},
-      node,
+      node
     );
@@ -65,3 +65,3 @@ describe('SelectEventPlugin', () => {
     var rendered = ReactTestUtils.renderIntoDocument(
-      <WithSelect onSelect={cb} />,
+      <WithSelect onSelect={cb} />
     );
diff --git a/src/renderers/dom/client/eventPlugins/__tests__/SimpleEventPlugin-test.js b/src/renderers/dom/client/eventPlugins/__tests__/SimpleEventPlugin-test.js
index 09dbea866..5f4a533ea 100644
--- a/src/renderers/dom/client/eventPlugins/__tests__/SimpleEventPlugin-test.js
+++ b/src/renderers/dom/client/eventPlugins/__tests__/SimpleEventPlugin-test.js
@@ -13,2 +13,3 @@
 
+
 describe('SimpleEventPlugin', function() {
@@ -44,3 +45,3 @@ describe('SimpleEventPlugin', function() {
   it('A non-interactive tags click when disabled', function() {
-    var element = <div onClick={onClick} />;
+    var element = (<div onClick={ onClick } />);
     expectClickThru(mounted(element));
@@ -50,3 +51,3 @@ describe('SimpleEventPlugin', function() {
     var element = ReactTestUtils.renderIntoDocument(
-      <div onClick={onClick}><div /></div>,
+      <div onClick={onClick}><div /></div>
     );
@@ -60,3 +61,3 @@ describe('SimpleEventPlugin', function() {
     var element = ReactTestUtils.renderIntoDocument(
-      <button onClick={onClick} disabled={true}><span /></button>,
+      <button onClick={onClick} disabled={true}><span /></button>
     );
@@ -70,3 +71,3 @@ describe('SimpleEventPlugin', function() {
     var element = ReactTestUtils.renderIntoDocument(
-      <button disabled={true}><span onClick={onClick} /></button>,
+      <button disabled={true}><span onClick={onClick} /></button>
     );
@@ -82,3 +83,3 @@ describe('SimpleEventPlugin', function() {
         <button disabled={true}><span /></button>
-      </div>,
+      </div>
     );
@@ -92,3 +93,3 @@ describe('SimpleEventPlugin', function() {
     var element = ReactTestUtils.renderIntoDocument(
-      <button disabled={true}><span onClickCapture={onClick} /></button>,
+      <button disabled={true}><span onClickCapture={onClick} /></button>
     );
@@ -101,3 +102,5 @@ describe('SimpleEventPlugin', function() {
   ['button', 'input', 'select', 'textarea'].forEach(function(tagName) {
+
     describe(tagName, function() {
+
       it('should forward clicks when it starts out not disabled', () => {
@@ -122,8 +125,8 @@ describe('SimpleEventPlugin', function() {
         var element = ReactDOM.render(
-          React.createElement(tagName, {onClick: onClick, disabled: true}),
-          container,
+          React.createElement(tagName, { onClick: onClick, disabled: true }),
+          container
         );
         element = ReactDOM.render(
-          React.createElement(tagName, {onClick: onClick}),
-          container,
+          React.createElement(tagName, { onClick: onClick }),
+          container
         );
@@ -135,8 +138,8 @@ describe('SimpleEventPlugin', function() {
         var element = ReactDOM.render(
-          React.createElement(tagName, {onClick: onClick}),
-          container,
+          React.createElement(tagName, { onClick: onClick }),
+          container
         );
         element = ReactDOM.render(
-          React.createElement(tagName, {onClick: onClick, disabled: true}),
-          container,
+          React.createElement(tagName, { onClick: onClick, disabled: true }),
+          container
         );
@@ -148,8 +151,8 @@ describe('SimpleEventPlugin', function() {
         var element = ReactDOM.render(
-          React.createElement(tagName, {onClick: onClick, disabled: true}),
-          container,
+          React.createElement(tagName, { onClick: onClick, disabled: true }),
+          container
         );
         element = ReactDOM.render(
-          React.createElement(tagName, {onClick: onClick, disabled: false}),
-          container,
+          React.createElement(tagName, { onClick: onClick, disabled: false }),
+          container
         );
@@ -160,2 +163,3 @@ describe('SimpleEventPlugin', function() {
 
+
   describe('iOS bubbling click fix', function() {
@@ -166,3 +170,3 @@ describe('SimpleEventPlugin', function() {
 
-      ReactDOM.render(<button onClick={onClick} />, container);
+      ReactDOM.render(<button onClick={ onClick } />, container);
 
@@ -178,3 +182,3 @@ describe('SimpleEventPlugin', function() {
 
-      ReactDOM.render(<div onClick={onClick} />, container);
+      ReactDOM.render(<div onClick={ onClick } />, container);
 
diff --git a/src/renderers/dom/client/findDOMNode.js b/src/renderers/dom/client/findDOMNode.js
index 9af446e20..238b5938d 100644
--- a/src/renderers/dom/client/findDOMNode.js
+++ b/src/renderers/dom/client/findDOMNode.js
@@ -36,7 +36,7 @@ function findDOMNode(componentOrElement) {
         '%s is accessing findDOMNode inside its render(). ' +
-          'render() should be a pure function of props and state. It should ' +
-          'never access something that requires stale data from the previous ' +
-          'render, such as refs. Move this logic to componentDidMount and ' +
-          'componentDidUpdate instead.',
-        owner.getName() || 'A component',
+        'render() should be a pure function of props and state. It should ' +
+        'never access something that requires stale data from the previous ' +
+        'render, such as refs. Move this logic to componentDidMount and ' +
+        'componentDidUpdate instead.',
+        owner.getName() || 'A component'
       );
@@ -59,3 +59,6 @@ function findDOMNode(componentOrElement) {
   if (typeof componentOrElement.render === 'function') {
-    invariant(false, 'findDOMNode was called on an unmounted component.');
+    invariant(
+      false,
+      'findDOMNode was called on an unmounted component.'
+    );
   } else {
@@ -64,3 +67,3 @@ function findDOMNode(componentOrElement) {
       'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
-      Object.keys(componentOrElement),
+      Object.keys(componentOrElement)
     );
diff --git a/src/renderers/dom/client/inputValueTracking.js b/src/renderers/dom/client/inputValueTracking.js
deleted file mode 100644
index f5fa806e3..000000000
--- a/src/renderers/dom/client/inputValueTracking.js
+++ /dev/null
@@ -1,130 +0,0 @@
-/**
- * Copyright 2013-present, Facebook, Inc.
- * All rights reserved.
- *
- * This source code is licensed under the BSD-style license found in the
- * LICENSE file in the root directory of this source tree. An additional grant
- * of patent rights can be found in the PATENTS file in the same directory.
- *
- * @providesModule inputValueTracking
- */
-
-'use strict';
-var ReactDOMComponentTree = require('ReactDOMComponentTree');
-
-function isCheckable(elem) {
-  var type = elem.type;
-  var nodeName = elem.nodeName;
-  return (
-    nodeName &&
-    nodeName.toLowerCase() === 'input' &&
-    (type === 'checkbox' || type === 'radio')
-  );
-}
-
-function getTracker(inst) {
-  return inst._wrapperState.valueTracker;
-}
-
-function attachTracker(inst, tracker) {
-  inst._wrapperState.valueTracker = tracker;
-}
-
-function detachTracker(inst) {
-  delete inst._wrapperState.valueTracker;
-}
-
-function getValueFromNode(node) {
-  var value;
-  if (node) {
-    value = isCheckable(node) ? '' + node.checked : node.value;
-  }
-  return value;
-}
-
-var inputValueTracking = {
-  // exposed for testing
-  _getTrackerFromNode(node) {
-    return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
-  },
-
-  track: function(inst) {
-    if (getTracker(inst)) {
-      return;
-    }
-
-    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
-    var valueField = isCheckable(node) ? 'checked' : 'value';
-    var descriptor = Object.getOwnPropertyDescriptor(
-      node.constructor.prototype,
-      valueField,
-    );
-
-    var currentValue = '' + node[valueField];
-
-    // if someone has already defined a value bail and don't track value
-    // will cause over reporting of changes, but it's better then a hard failure
-    // (needed for certain tests that spyOn input values)
-    if (node.hasOwnProperty(valueField)) {
-      return;
-    }
-
-    Object.defineProperty(node, valueField, {
-      enumerable: descriptor.enumerable,
-      configurable: true,
-      get: function() {
-        return descriptor.get.call(this);
-      },
-      set: function(value) {
-        currentValue = '' + value;
-        descriptor.set.call(this, value);
-      },
-    });
-
-    attachTracker(inst, {
-      getValue() {
-        return currentValue;
-      },
-      setValue(value) {
-        currentValue = '' + value;
-      },
-      stopTracking() {
-        detachTracker(inst);
-        delete node[valueField];
-      },
-    });
-  },
-
-  updateValueIfChanged(inst) {
-    if (!inst) {
-      return false;
-    }
-    var tracker = getTracker(inst);
-
-    if (!tracker) {
-      inputValueTracking.track(inst);
-      return true;
-    }
-
-    var lastValue = tracker.getValue();
-    var nextValue = getValueFromNode(
-      ReactDOMComponentTree.getNodeFromInstance(inst),
-    );
-
-    if (nextValue !== lastValue) {
-      tracker.setValue(nextValue);
-      return true;
-    }
-
-    return false;
-  },
-
-  stopTracking(inst) {
-    var tracker = getTracker(inst);
-    if (tracker) {
-      tracker.stopTracking();
-    }
-  },
-};
-
-module.exports = inputValueTracking;
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticAnimationEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticAnimationEvent.js
index 1a6925a11..17b6f368b 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticAnimationEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticAnimationEvent.js
@@ -36,14 +36,11 @@ function SyntheticAnimationEvent(
   nativeEvent,
-  nativeEventTarget,
+  nativeEventTarget
 ) {
-  return SyntheticEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
 
-SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
+SyntheticEvent.augmentClass(
+  SyntheticAnimationEvent,
+  AnimationEventInterface
+);
 
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticClipboardEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticClipboardEvent.js
index e277334b6..cd0d4b226 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticClipboardEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticClipboardEvent.js
@@ -21,5 +21,7 @@ var ClipboardEventInterface = {
   clipboardData: function(event) {
-    return 'clipboardData' in event
-      ? event.clipboardData
-      : window.clipboardData;
+    return (
+      'clipboardData' in event ?
+        event.clipboardData :
+        window.clipboardData
+    );
   },
@@ -33,15 +35,4 @@ var ClipboardEventInterface = {
  */
-function SyntheticClipboardEvent(
-  dispatchConfig,
-  dispatchMarker,
-  nativeEvent,
-  nativeEventTarget,
-) {
-  return SyntheticEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
+  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticCompositionEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticCompositionEvent.js
index 77c53c5c9..35b7f7ce1 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticCompositionEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticCompositionEvent.js
@@ -33,11 +33,5 @@ function SyntheticCompositionEvent(
   nativeEvent,
-  nativeEventTarget,
+  nativeEventTarget
 ) {
-  return SyntheticEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
@@ -46,3 +40,3 @@ SyntheticEvent.augmentClass(
   SyntheticCompositionEvent,
-  CompositionEventInterface,
+  CompositionEventInterface
 );
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticDragEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticDragEvent.js
index 3f74638f9..f5d97420b 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticDragEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticDragEvent.js
@@ -29,15 +29,4 @@ var DragEventInterface = {
  */
-function SyntheticDragEvent(
-  dispatchConfig,
-  dispatchMarker,
-  nativeEvent,
-  nativeEventTarget,
-) {
-  return SyntheticMouseEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
+  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticFocusEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticFocusEvent.js
index de0616834..e145b8a43 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticFocusEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticFocusEvent.js
@@ -29,15 +29,4 @@ var FocusEventInterface = {
  */
-function SyntheticFocusEvent(
-  dispatchConfig,
-  dispatchMarker,
-  nativeEvent,
-  nativeEventTarget,
-) {
-  return SyntheticUIEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
+  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticInputEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticInputEvent.js
index 2639d3b53..ba99c7c89 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticInputEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticInputEvent.js
@@ -34,14 +34,11 @@ function SyntheticInputEvent(
   nativeEvent,
-  nativeEventTarget,
+  nativeEventTarget
 ) {
-  return SyntheticEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
 
-SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
+SyntheticEvent.augmentClass(
+  SyntheticInputEvent,
+  InputEventInterface
+);
 
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticKeyboardEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticKeyboardEvent.js
index 8cc554b93..ce71c17ca 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticKeyboardEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticKeyboardEvent.js
@@ -77,15 +77,4 @@ var KeyboardEventInterface = {
  */
-function SyntheticKeyboardEvent(
-  dispatchConfig,
-  dispatchMarker,
-  nativeEvent,
-  nativeEventTarget,
-) {
-  return SyntheticUIEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
+  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticMouseEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticMouseEvent.js
index 786d20c79..e8962b9ad 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticMouseEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticMouseEvent.js
@@ -48,7 +48,6 @@ var MouseEventInterface = {
   relatedTarget: function(event) {
-    return (
-      event.relatedTarget ||
-      (event.fromElement === event.srcElement
-        ? event.toElement
-        : event.fromElement)
+    return event.relatedTarget || (
+      event.fromElement === event.srcElement ?
+        event.toElement :
+        event.fromElement
     );
@@ -57,10 +56,10 @@ var MouseEventInterface = {
   pageX: function(event) {
-    return 'pageX' in event
-      ? event.pageX
-      : event.clientX + ViewportMetrics.currentScrollLeft;
+    return 'pageX' in event ?
+      event.pageX :
+      event.clientX + ViewportMetrics.currentScrollLeft;
   },
   pageY: function(event) {
-    return 'pageY' in event
-      ? event.pageY
-      : event.clientY + ViewportMetrics.currentScrollTop;
+    return 'pageY' in event ?
+      event.pageY :
+      event.clientY + ViewportMetrics.currentScrollTop;
   },
@@ -74,15 +73,4 @@ var MouseEventInterface = {
  */
-function SyntheticMouseEvent(
-  dispatchConfig,
-  dispatchMarker,
-  nativeEvent,
-  nativeEventTarget,
-) {
-  return SyntheticUIEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
+  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticTouchEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticTouchEvent.js
index a954c9fec..38078a732 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticTouchEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticTouchEvent.js
@@ -38,15 +38,4 @@ var TouchEventInterface = {
  */
-function SyntheticTouchEvent(
-  dispatchConfig,
-  dispatchMarker,
-  nativeEvent,
-  nativeEventTarget,
-) {
-  return SyntheticUIEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
+  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticTransitionEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticTransitionEvent.js
index 4b9087a1c..982410f78 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticTransitionEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticTransitionEvent.js
@@ -36,14 +36,11 @@ function SyntheticTransitionEvent(
   nativeEvent,
-  nativeEventTarget,
+  nativeEventTarget
 ) {
-  return SyntheticEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
 
-SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
+SyntheticEvent.augmentClass(
+  SyntheticTransitionEvent,
+  TransitionEventInterface
+);
 
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticUIEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticUIEvent.js
index 308d19048..16b5907e9 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticUIEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticUIEvent.js
@@ -52,15 +52,4 @@ var UIEventInterface = {
  */
-function SyntheticUIEvent(
-  dispatchConfig,
-  dispatchMarker,
-  nativeEvent,
-  nativeEventTarget,
-) {
-  return SyntheticEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
+  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticWheelEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticWheelEvent.js
index e1359a250..eea628e33 100644
--- a/src/renderers/dom/client/syntheticEvents/SyntheticWheelEvent.js
+++ b/src/renderers/dom/client/syntheticEvents/SyntheticWheelEvent.js
@@ -21,15 +21,16 @@ var WheelEventInterface = {
   deltaX: function(event) {
-    return 'deltaX' in event
-      ? event.deltaX
-      : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
-        'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
+    return (
+      'deltaX' in event ? event.deltaX :
+      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
+      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
+    );
   },
   deltaY: function(event) {
-    return 'deltaY' in event
-      ? event.deltaY
-      : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
-        'wheelDeltaY' in event
-        ? -event.wheelDeltaY
-        : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
-          'wheelDelta' in event ? -event.wheelDelta : 0;
+    return (
+      'deltaY' in event ? event.deltaY :
+      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
+      'wheelDeltaY' in event ? -event.wheelDeltaY :
+      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
+      'wheelDelta' in event ? -event.wheelDelta : 0
+    );
   },
@@ -50,15 +51,4 @@ var WheelEventInterface = {
  */
-function SyntheticWheelEvent(
-  dispatchConfig,
-  dispatchMarker,
-  nativeEvent,
-  nativeEventTarget,
-) {
-  return SyntheticMouseEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
+  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
diff --git a/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticClipboardEvent-test.js b/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticClipboardEvent-test.js
index 97f1a47f0..8d8241545 100644
--- a/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticClipboardEvent-test.js
+++ b/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticClipboardEvent-test.js
@@ -31,11 +31,8 @@ describe('SyntheticClipboardEvent', () => {
           // Mock clipboardData since native implementation doesn't have a constructor
-          var clipboardData = jasmine.createSpyObj('clipboardData', [
-            'dropEffect',
-            'effectAllowed',
-            'files',
-            'items',
-            'types',
-          ]);
+          var clipboardData = jasmine.createSpyObj(
+            'clipboardData',
+            ['dropEffect', 'effectAllowed', 'files', 'items', 'types']
+          );
           var clipboardEvent = createEvent({clipboardData: clipboardData});
-
+          
           expect(clipboardEvent.clipboardData).toBe(clipboardData);
diff --git a/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticEvent-test.js b/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticEvent-test.js
index d5c678201..f54d45411 100644
--- a/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticEvent-test.js
+++ b/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticEvent-test.js
@@ -55,5 +55,5 @@ describe('SyntheticEvent', () => {
   it('should be prevented if nativeEvent is prevented', () => {
-    expect(createEvent({defaultPrevented: true}).isDefaultPrevented()).toBe(
-      true,
-    );
+    expect(
+      createEvent({defaultPrevented: true}).isDefaultPrevented()
+    ).toBe(true);
     expect(createEvent({returnValue: false}).isDefaultPrevented()).toBe(true);
@@ -93,6 +93,6 @@ describe('SyntheticEvent', () => {
       'Warning: This synthetic event is reused for performance reasons. If ' +
-        "you're seeing this, you're accessing the property `type` on a " +
-        'released/nullified synthetic event. This is set to null. If you must ' +
-        'keep the original synthetic event around, use event.persist(). ' +
-        'See https://fb.me/react-event-pooling for more information.',
+      'you\'re seeing this, you\'re accessing the property `type` on a ' +
+      'released/nullified synthetic event. This is set to null. If you must ' +
+      'keep the original synthetic event around, use event.persist(). ' +
+      'See https://fb.me/react-event-pooling for more information.'
     );
@@ -105,3 +105,3 @@ describe('SyntheticEvent', () => {
     syntheticEvent.destructor();
-    expect((syntheticEvent.type = 'MouseEvent')).toBe('MouseEvent');
+    expect(syntheticEvent.type = 'MouseEvent').toBe('MouseEvent');
     expect(console.error.calls.count()).toBe(1);
@@ -109,6 +109,6 @@ describe('SyntheticEvent', () => {
       'Warning: This synthetic event is reused for performance reasons. If ' +
-        "you're seeing this, you're setting the property `type` on a " +
-        'released/nullified synthetic event. This is effectively a no-op. If you must ' +
-        'keep the original synthetic event around, use event.persist(). ' +
-        'See https://fb.me/react-event-pooling for more information.',
+      'you\'re seeing this, you\'re setting the property `type` on a ' +
+      'released/nullified synthetic event. This is effectively a no-op. If you must ' +
+      'keep the original synthetic event around, use event.persist(). ' +
+      'See https://fb.me/react-event-pooling for more information.'
     );
@@ -124,6 +124,6 @@ describe('SyntheticEvent', () => {
       'Warning: This synthetic event is reused for performance reasons. If ' +
-        "you're seeing this, you're accessing the method `preventDefault` on a " +
-        'released/nullified synthetic event. This is a no-op function. If you must ' +
-        'keep the original synthetic event around, use event.persist(). ' +
-        'See https://fb.me/react-event-pooling for more information.',
+      'you\'re seeing this, you\'re accessing the method `preventDefault` on a ' +
+      'released/nullified synthetic event. This is a no-op function. If you must ' +
+      'keep the original synthetic event around, use event.persist(). ' +
+      'See https://fb.me/react-event-pooling for more information.'
     );
@@ -139,6 +139,6 @@ describe('SyntheticEvent', () => {
       'Warning: This synthetic event is reused for performance reasons. If ' +
-        "you're seeing this, you're accessing the method `stopPropagation` on a " +
-        'released/nullified synthetic event. This is a no-op function. If you must ' +
-        'keep the original synthetic event around, use event.persist(). ' +
-        'See https://fb.me/react-event-pooling for more information.',
+      'you\'re seeing this, you\'re accessing the method `stopPropagation` on a ' +
+      'released/nullified synthetic event. This is a no-op function. If you must ' +
+      'keep the original synthetic event around, use event.persist(). ' +
+      'See https://fb.me/react-event-pooling for more information.'
     );
@@ -149,28 +149,25 @@ describe('SyntheticEvent', () => {
   // way we simulate events.
-  xit(
-    'should properly log warnings when events simulated with rendered components',
-    () => {
-      spyOn(console, 'error');
-      var event;
-      var element = document.createElement('div');
-      function assignEvent(e) {
-        event = e;
-      }
-      var instance = ReactDOM.render(<div onClick={assignEvent} />, element);
-      ReactTestUtils.Simulate.click(ReactDOM.findDOMNode(instance));
-      expect(console.error.calls.count()).toBe(0);
+  xit('should properly log warnings when events simulated with rendered components', () => {
+    spyOn(console, 'error');
+    var event;
+    var element = document.createElement('div');
+    function assignEvent(e) {
+      event = e;
+    }
+    var instance = ReactDOM.render(<div onClick={assignEvent} />, element);
+    ReactTestUtils.Simulate.click(ReactDOM.findDOMNode(instance));
+    expect(console.error.calls.count()).toBe(0);
 
-      // access a property to cause the warning
-      event.nativeEvent; // eslint-disable-line no-unused-expressions
+    // access a property to cause the warning
+    event.nativeEvent; // eslint-disable-line no-unused-expressions
 
-      expect(console.error.calls.count()).toBe(1);
-      expect(console.error.calls.argsFor(0)[0]).toBe(
-        'Warning: This synthetic event is reused for performance reasons. If ' +
-          "you're seeing this, you're accessing the property `nativeEvent` on a " +
-          'released/nullified synthetic event. This is set to null. If you must ' +
-          'keep the original synthetic event around, use event.persist(). ' +
-          'See https://fb.me/react-event-pooling for more information.',
-      );
-    },
-  );
+    expect(console.error.calls.count()).toBe(1);
+    expect(console.error.calls.argsFor(0)[0]).toBe(
+      'Warning: This synthetic event is reused for performance reasons. If ' +
+      'you\'re seeing this, you\'re accessing the property `nativeEvent` on a ' +
+      'released/nullified synthetic event. This is set to null. If you must ' +
+      'keep the original synthetic event around, use event.persist(). ' +
+      'See https://fb.me/react-event-pooling for more information.'
+    );
+  });
 
@@ -186,5 +183,5 @@ describe('SyntheticEvent', () => {
         'Warning: This synthetic event is reused for performance reasons. If ' +
-          "you're seeing this, you're adding a new property in the synthetic " +
-          'event object. The property is never released. ' +
-          'See https://fb.me/react-event-pooling for more information.',
+        'you\'re seeing this, you\'re adding a new property in the synthetic ' +
+        'event object. The property is never released. ' +
+        'See https://fb.me/react-event-pooling for more information.'
       );
diff --git a/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticWheelEvent-test.js b/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticWheelEvent-test.js
index 393ccf3fc..74cc43120 100644
--- a/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticWheelEvent-test.js
+++ b/src/renderers/dom/client/syntheticEvents/__tests__/SyntheticWheelEvent-test.js
@@ -69,2 +69,3 @@ describe('SyntheticWheelEvent', () => {
   });
+
 });
diff --git a/src/renderers/dom/client/utils/DOMChildrenOperations.js b/src/renderers/dom/client/utils/DOMChildrenOperations.js
index b7e4e1e10..2200f2529 100644
--- a/src/renderers/dom/client/utils/DOMChildrenOperations.js
+++ b/src/renderers/dom/client/utils/DOMChildrenOperations.js
@@ -39,12 +39,10 @@ function getNodeAfter(parentNode, node) {
  */
-var insertChildAt = createMicrosoftUnsafeLocalFunction(function(
-  parentNode,
-  childNode,
-  referenceNode,
-) {
-  // We rely exclusively on `insertBefore(node, null)` instead of also using
-  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
-  // we are careful to use `null`.)
-  parentNode.insertBefore(childNode, referenceNode);
-});
+var insertChildAt = createMicrosoftUnsafeLocalFunction(
+  function(parentNode, childNode, referenceNode) {
+    // We rely exclusively on `insertBefore(node, null)` instead of also using
+    // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
+    // we are careful to use `null`.)
+    parentNode.insertBefore(childNode, referenceNode);
+  }
+);
 
@@ -76,3 +74,3 @@ function moveDelimitedText(
   closingComment,
-  referenceNode,
+  referenceNode
 ) {
@@ -111,3 +109,3 @@ function replaceDelimitedText(openingComment, closingComment, stringText) {
         document.createTextNode(stringText),
-        nodeAfterComment,
+        nodeAfterComment
       );
@@ -127,4 +125,3 @@ function replaceDelimitedText(openingComment, closingComment, stringText) {
     ReactInstrumentation.debugTool.onHostOperation({
-      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)
-        ._debugID,
+      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
       type: 'replace text',
@@ -162,2 +159,3 @@ if (__DEV__) {
 var DOMChildrenOperations = {
+
   dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
@@ -175,5 +173,4 @@ var DOMChildrenOperations = {
     if (__DEV__) {
-      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(
-        parentNode,
-      )._debugID;
+      var parentNodeDebugID =
+        ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
     }
@@ -187,3 +184,3 @@ var DOMChildrenOperations = {
             update.content,
-            getNodeAfter(parentNode, update.afterNode),
+            getNodeAfter(parentNode, update.afterNode)
           );
@@ -193,6 +190,3 @@ var DOMChildrenOperations = {
               type: 'insert child',
-              payload: {
-                toIndex: update.toIndex,
-                content: update.content.toString(),
-              },
+              payload: {toIndex: update.toIndex, content: update.content.toString()},
             });
@@ -204,3 +198,3 @@ var DOMChildrenOperations = {
             update.fromNode,
-            getNodeAfter(parentNode, update.afterNode),
+            getNodeAfter(parentNode, update.afterNode)
           );
@@ -215,3 +209,6 @@ var DOMChildrenOperations = {
         case 'SET_MARKUP':
-          setInnerHTML(parentNode, update.content);
+          setInnerHTML(
+            parentNode,
+            update.content
+          );
           if (__DEV__) {
@@ -225,3 +222,6 @@ var DOMChildrenOperations = {
         case 'TEXT_CONTENT':
-          setTextContent(parentNode, update.content);
+          setTextContent(
+            parentNode,
+            update.content
+          );
           if (__DEV__) {
@@ -247,2 +247,3 @@ var DOMChildrenOperations = {
   },
+
 };
diff --git a/src/renderers/dom/client/utils/DOMLazyTree.js b/src/renderers/dom/client/utils/DOMLazyTree.js
index b9401c28b..c6c0b98f9 100644
--- a/src/renderers/dom/client/utils/DOMLazyTree.js
+++ b/src/renderers/dom/client/utils/DOMLazyTree.js
@@ -33,8 +33,10 @@ var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
  */
-var enableLazy =
-  (typeof document !== 'undefined' &&
-    typeof document.documentMode === 'number') ||
-  (typeof navigator !== 'undefined' &&
-    typeof navigator.userAgent === 'string' &&
-    /\bEdge\/\d/.test(navigator.userAgent));
+var enableLazy = (
+  typeof document !== 'undefined' &&
+  typeof document.documentMode === 'number'
+  ||
+  typeof navigator !== 'undefined' &&
+  typeof navigator.userAgent === 'string' &&
+  /\bEdge\/\d/.test(navigator.userAgent)
+);
 
@@ -57,27 +59,24 @@ function insertTreeChildren(tree) {
 
-var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function(
-  parentNode,
-  tree,
-  referenceNode,
-) {
-  // DocumentFragments aren't actually part of the DOM after insertion so
-  // appending children won't update the DOM. We need to ensure the fragment
-  // is properly populated first, breaking out of our lazy approach for just
-  // this level. Also, some <object> plugins (like Flash Player) will read
-  // <param> nodes immediately upon insertion into the DOM, so <object>
-  // must also be populated prior to insertion into the DOM.
-  if (
-    tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE ||
-    (tree.node.nodeType === ELEMENT_NODE_TYPE &&
-      tree.node.nodeName.toLowerCase() === 'object' &&
-      (tree.node.namespaceURI == null ||
-        tree.node.namespaceURI === DOMNamespaces.html))
-  ) {
-    insertTreeChildren(tree);
-    parentNode.insertBefore(tree.node, referenceNode);
-  } else {
-    parentNode.insertBefore(tree.node, referenceNode);
-    insertTreeChildren(tree);
+var insertTreeBefore = createMicrosoftUnsafeLocalFunction(
+  function(parentNode, tree, referenceNode) {
+    // DocumentFragments aren't actually part of the DOM after insertion so
+    // appending children won't update the DOM. We need to ensure the fragment
+    // is properly populated first, breaking out of our lazy approach for just
+    // this level. Also, some <object> plugins (like Flash Player) will read
+    // <param> nodes immediately upon insertion into the DOM, so <object>
+    // must also be populated prior to insertion into the DOM.
+    if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE
+        ||
+        tree.node.nodeType === ELEMENT_NODE_TYPE &&
+        tree.node.nodeName.toLowerCase() === 'object' &&
+        (tree.node.namespaceURI == null ||
+         tree.node.namespaceURI === DOMNamespaces.html)) {
+      insertTreeChildren(tree);
+      parentNode.insertBefore(tree.node, referenceNode);
+    } else {
+      parentNode.insertBefore(tree.node, referenceNode);
+      insertTreeChildren(tree);
+    }
   }
-});
+);
 
diff --git a/src/renderers/dom/client/utils/ViewportMetrics.js b/src/renderers/dom/client/utils/ViewportMetrics.js
index c23d0275c..d5508e001 100644
--- a/src/renderers/dom/client/utils/ViewportMetrics.js
+++ b/src/renderers/dom/client/utils/ViewportMetrics.js
@@ -14,2 +14,3 @@
 var ViewportMetrics = {
+
   currentScrollLeft: 0,
@@ -22,2 +23,3 @@ var ViewportMetrics = {
   },
+
 };
diff --git a/src/renderers/dom/client/utils/__tests__/getEventCharCode-test.js b/src/renderers/dom/client/utils/__tests__/getEventCharCode-test.js
index f619093b8..64ed9214d 100644
--- a/src/renderers/dom/client/utils/__tests__/getEventCharCode-test.js
+++ b/src/renderers/dom/client/utils/__tests__/getEventCharCode-test.js
@@ -19,6 +19,5 @@ describe('getEventCharCode', () => {
       it('returns 13', () => {
-        var nativeEvent = new KeyboardEvent('keypress', {
-          charCode: 0,
-          keyCode: 13,
-        });
+        var nativeEvent = new KeyboardEvent(
+          'keypress', {charCode: 0, keyCode: 13}
+        );
 
@@ -65,3 +64,3 @@ describe('getEventCharCode', () => {
       it('returns keyCode', () => {
-        var nativeEvent = {keyCode: 32};
+        var nativeEvent = {'keyCode': 32};
 
@@ -74,3 +73,3 @@ describe('getEventCharCode', () => {
         it('returns 13', () => {
-          var nativeEvent = {keyCode: 13};
+          var nativeEvent = {'keyCode': 13};
 
@@ -82,3 +81,3 @@ describe('getEventCharCode', () => {
         it('returns 0', () => {
-          var nativeEvent = {keyCode: 31};
+          var nativeEvent = {'keyCode': 31};
 
diff --git a/src/renderers/dom/client/utils/__tests__/getNodeForCharacterOffset-test.js b/src/renderers/dom/client/utils/__tests__/getNodeForCharacterOffset-test.js
index 27c7d1cd2..170b65cc8 100644
--- a/src/renderers/dom/client/utils/__tests__/getNodeForCharacterOffset-test.js
+++ b/src/renderers/dom/client/utils/__tests__/getNodeForCharacterOffset-test.js
@@ -50,12 +50,12 @@ describe('getNodeForCharacterOffset', () => {
         '<i>' +
-        '<i>' +
-        '<i>2</i>' +
-        '<i></i>' +
-        '</i>' +
+          '<i>' +
+            '<i>2</i>' +
+            '<i></i>' +
+          '</i>' +
         '</i>' +
         '<i>' +
-        '3' +
-        '<i>45</i>' +
+          '3' +
+          '<i>45</i>' +
         '</i>' +
-        '</i>',
+      '</i>'
     );
diff --git a/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js b/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js
index e89f9f142..750f918fd 100644
--- a/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js
+++ b/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js
@@ -39,8 +39,4 @@ describe('setInnerHTML', () => {
 
-      expect(node.appendChild.calls.argsFor(0)[0].outerHTML).toBe(
-        '<circle></circle>',
-      );
-      expect(node.appendChild.calls.argsFor(1)[0].outerHTML).toBe(
-        '<rect></rect>',
-      );
+      expect(node.appendChild.calls.argsFor(0)[0].outerHTML).toBe('<circle></circle>');
+      expect(node.appendChild.calls.argsFor(1)[0].outerHTML).toBe('<rect></rect>');
     });
diff --git a/src/renderers/dom/client/utils/getEventKey.js b/src/renderers/dom/client/utils/getEventKey.js
index 19786e778..6a33da9ca 100644
--- a/src/renderers/dom/client/utils/getEventKey.js
+++ b/src/renderers/dom/client/utils/getEventKey.js
@@ -20,14 +20,14 @@ var getEventCharCode = require('getEventCharCode');
 var normalizeKey = {
-  Esc: 'Escape',
-  Spacebar: ' ',
-  Left: 'ArrowLeft',
-  Up: 'ArrowUp',
-  Right: 'ArrowRight',
-  Down: 'ArrowDown',
-  Del: 'Delete',
-  Win: 'OS',
-  Menu: 'ContextMenu',
-  Apps: 'ContextMenu',
-  Scroll: 'ScrollLock',
-  MozPrintableKey: 'Unidentified',
+  'Esc': 'Escape',
+  'Spacebar': ' ',
+  'Left': 'ArrowLeft',
+  'Up': 'ArrowUp',
+  'Right': 'ArrowRight',
+  'Down': 'ArrowDown',
+  'Del': 'Delete',
+  'Win': 'OS',
+  'Menu': 'ContextMenu',
+  'Apps': 'ContextMenu',
+  'Scroll': 'ScrollLock',
+  'MozPrintableKey': 'Unidentified',
 };
@@ -61,14 +61,4 @@ var translateToKey = {
   46: 'Delete',
-  112: 'F1',
-  113: 'F2',
-  114: 'F3',
-  115: 'F4',
-  116: 'F5',
-  117: 'F6',
-  118: 'F7',
-  119: 'F8',
-  120: 'F9',
-  121: 'F10',
-  122: 'F11',
-  123: 'F12',
+  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
+  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
   144: 'NumLock',
diff --git a/src/renderers/dom/client/utils/getEventModifierState.js b/src/renderers/dom/client/utils/getEventModifierState.js
index cafcf69e4..16c6e2b54 100644
--- a/src/renderers/dom/client/utils/getEventModifierState.js
+++ b/src/renderers/dom/client/utils/getEventModifierState.js
@@ -19,6 +19,6 @@
 var modifierKeyToProp = {
-  Alt: 'altKey',
-  Control: 'ctrlKey',
-  Meta: 'metaKey',
-  Shift: 'shiftKey',
+  'Alt': 'altKey',
+  'Control': 'ctrlKey',
+  'Meta': 'metaKey',
+  'Shift': 'shiftKey',
 };
diff --git a/src/renderers/dom/client/utils/getTextContentAccessor.js b/src/renderers/dom/client/utils/getTextContentAccessor.js
index 7f79f013a..198e6bbb6 100644
--- a/src/renderers/dom/client/utils/getTextContentAccessor.js
+++ b/src/renderers/dom/client/utils/getTextContentAccessor.js
@@ -27,5 +27,5 @@ function getTextContentAccessor() {
     // SVG <text> elements don't support innerText even when <div> does.
-    contentKey = 'textContent' in document.documentElement
-      ? 'textContent'
-      : 'innerText';
+    contentKey = 'textContent' in document.documentElement ?
+      'textContent' :
+      'innerText';
   }
diff --git a/src/renderers/dom/client/utils/getVendorPrefixedEventName.js b/src/renderers/dom/client/utils/getVendorPrefixedEventName.js
index dc3f518de..25fa2aed8 100644
--- a/src/renderers/dom/client/utils/getVendorPrefixedEventName.js
+++ b/src/renderers/dom/client/utils/getVendorPrefixedEventName.js
@@ -85,2 +85,3 @@ function getVendorPrefixedEventName(eventName) {
     return prefixedEventNames[eventName];
+
   } else if (!vendorPrefixes[eventName]) {
@@ -93,3 +94,3 @@ function getVendorPrefixedEventName(eventName) {
     if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
-      return (prefixedEventNames[eventName] = prefixMap[styleProp]);
+      return prefixedEventNames[eventName] = prefixMap[styleProp];
     }
diff --git a/src/renderers/dom/client/utils/isEventSupported.js b/src/renderers/dom/client/utils/isEventSupported.js
index ad3436a65..f73857641 100644
--- a/src/renderers/dom/client/utils/isEventSupported.js
+++ b/src/renderers/dom/client/utils/isEventSupported.js
@@ -40,6 +40,4 @@ if (ExecutionEnvironment.canUseDOM) {
 function isEventSupported(eventNameSuffix, capture) {
-  if (
-    !ExecutionEnvironment.canUseDOM ||
-    (capture && !('addEventListener' in document))
-  ) {
+  if (!ExecutionEnvironment.canUseDOM ||
+      capture && !('addEventListener' in document)) {
     return false;
diff --git a/src/renderers/dom/client/utils/setInnerHTML.js b/src/renderers/dom/client/utils/setInnerHTML.js
index c4da196e6..616d37fc3 100644
--- a/src/renderers/dom/client/utils/setInnerHTML.js
+++ b/src/renderers/dom/client/utils/setInnerHTML.js
@@ -32,18 +32,19 @@ var reusableSVGContainer;
  */
-var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
-  // IE does not have innerHTML for SVG nodes, so instead we inject the
-  // new markup in a temp node and then move the child nodes across into
-  // the target node
-  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
-    reusableSVGContainer =
-      reusableSVGContainer || document.createElement('div');
-    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
-    var svgNode = reusableSVGContainer.firstChild;
-    while (svgNode.firstChild) {
-      node.appendChild(svgNode.firstChild);
+var setInnerHTML = createMicrosoftUnsafeLocalFunction(
+  function(node, html) {
+    // IE does not have innerHTML for SVG nodes, so instead we inject the
+    // new markup in a temp node and then move the child nodes across into
+    // the target node
+    if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
+      reusableSVGContainer = reusableSVGContainer || document.createElement('div');
+      reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
+      var svgNode = reusableSVGContainer.firstChild;
+      while (svgNode.firstChild) {
+        node.appendChild(svgNode.firstChild);
+      }
+    } else {
+      node.innerHTML = html;
     }
-  } else {
-    node.innerHTML = html;
   }
-});
+);
 
@@ -73,6 +74,4 @@ if (ExecutionEnvironment.canUseDOM) {
       // and simply check if any non-visible tags appear in the source.
-      if (
-        WHITESPACE_TEST.test(html) ||
-        (html[0] === '<' && NONVISIBLE_TEST.test(html))
-      ) {
+      if (WHITESPACE_TEST.test(html) ||
+          html[0] === '<' && NONVISIBLE_TEST.test(html)) {
         // Recover leading whitespace by temporarily prepending any character.
@@ -83,3 +82,3 @@ if (ExecutionEnvironment.canUseDOM) {
         // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
-        node.innerHTML = String.fromCharCode(0xfeff) + html;
+        node.innerHTML = String.fromCharCode(0xFEFF) + html;
 
diff --git a/src/renderers/dom/client/utils/setTextContent.js b/src/renderers/dom/client/utils/setTextContent.js
index 833256601..843284618 100644
--- a/src/renderers/dom/client/utils/setTextContent.js
+++ b/src/renderers/dom/client/utils/setTextContent.js
@@ -30,8 +30,4 @@ var setTextContent = function(node, text) {
     var firstChild = node.firstChild;
-
-    if (
-      firstChild &&
-      firstChild === node.lastChild &&
-      firstChild.nodeType === 3
-    ) {
+    
+    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
       firstChild.nodeValue = text;
diff --git a/src/renderers/dom/client/validateDOMNesting.js b/src/renderers/dom/client/validateDOMNesting.js
index 9cca776e8..4b31c2c93 100644
--- a/src/renderers/dom/client/validateDOMNesting.js
+++ b/src/renderers/dom/client/validateDOMNesting.js
@@ -32,84 +32,12 @@ if (__DEV__) {
   var specialTags = [
-    'address',
-    'applet',
-    'area',
-    'article',
-    'aside',
-    'base',
-    'basefont',
-    'bgsound',
-    'blockquote',
-    'body',
-    'br',
-    'button',
-    'caption',
-    'center',
-    'col',
-    'colgroup',
-    'dd',
-    'details',
-    'dir',
-    'div',
-    'dl',
-    'dt',
-    'embed',
-    'fieldset',
-    'figcaption',
-    'figure',
-    'footer',
-    'form',
-    'frame',
-    'frameset',
-    'h1',
-    'h2',
-    'h3',
-    'h4',
-    'h5',
-    'h6',
-    'head',
-    'header',
-    'hgroup',
-    'hr',
-    'html',
-    'iframe',
-    'img',
-    'input',
-    'isindex',
-    'li',
-    'link',
-    'listing',
-    'main',
-    'marquee',
-    'menu',
-    'menuitem',
-    'meta',
-    'nav',
-    'noembed',
-    'noframes',
-    'noscript',
-    'object',
-    'ol',
-    'p',
-    'param',
-    'plaintext',
-    'pre',
-    'script',
-    'section',
-    'select',
-    'source',
-    'style',
-    'summary',
-    'table',
-    'tbody',
-    'td',
-    'template',
-    'textarea',
-    'tfoot',
-    'th',
-    'thead',
-    'title',
-    'tr',
-    'track',
-    'ul',
-    'wbr',
+    'address', 'applet', 'area', 'article', 'aside', 'base', 'basefont',
+    'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col',
+    'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset',
+    'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2',
+    'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe',
+    'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee',
+    'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript',
+    'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section',
+    'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template',
+    'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr',
     'xmp',
@@ -119,10 +47,3 @@ if (__DEV__) {
   var inScopeTags = [
-    'applet',
-    'caption',
-    'html',
-    'table',
-    'td',
-    'th',
-    'marquee',
-    'object',
+    'applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object',
     'template',
@@ -132,5 +53,3 @@ if (__DEV__) {
     // errs on the side of fewer warnings
-    'foreignObject',
-    'desc',
-    'title',
+    'foreignObject', 'desc', 'title',
   ];
@@ -141,12 +60,4 @@ if (__DEV__) {
   // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
-  var impliedEndTags = [
-    'dd',
-    'dt',
-    'li',
-    'option',
-    'optgroup',
-    'p',
-    'rp',
-    'rt',
-  ];
+  var impliedEndTags =
+    ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
 
@@ -182,5 +93,3 @@ if (__DEV__) {
       specialTags.indexOf(tag) !== -1 &&
-      tag !== 'address' &&
-      tag !== 'div' &&
-      tag !== 'p'
+      tag !== 'address' && tag !== 'div' && tag !== 'p'
     ) {
@@ -232,2 +141,3 @@ if (__DEV__) {
         return tag === '#text';
+
       // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
@@ -240,8 +150,6 @@ if (__DEV__) {
         return (
-          tag === 'th' ||
-          tag === 'td' ||
-          tag === 'style' ||
-          tag === 'script' ||
+          tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' ||
           tag === 'template'
         );
+
       // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
@@ -251,7 +159,6 @@ if (__DEV__) {
         return (
-          tag === 'tr' ||
-          tag === 'style' ||
-          tag === 'script' ||
+          tag === 'tr' || tag === 'style' || tag === 'script' ||
           tag === 'template'
         );
+
       // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
@@ -259,2 +166,3 @@ if (__DEV__) {
         return tag === 'col' || tag === 'template';
+
       // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
@@ -262,11 +170,7 @@ if (__DEV__) {
         return (
-          tag === 'caption' ||
-          tag === 'colgroup' ||
-          tag === 'tbody' ||
-          tag === 'tfoot' ||
-          tag === 'thead' ||
-          tag === 'style' ||
-          tag === 'script' ||
-          tag === 'template'
+          tag === 'caption' || tag === 'colgroup' || tag === 'tbody' ||
+          tag === 'tfoot' || tag === 'thead' || tag === 'style' ||
+          tag === 'script' || tag === 'template'
         );
+
       // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
@@ -274,14 +178,8 @@ if (__DEV__) {
         return (
-          tag === 'base' ||
-          tag === 'basefont' ||
-          tag === 'bgsound' ||
-          tag === 'link' ||
-          tag === 'meta' ||
-          tag === 'title' ||
-          tag === 'noscript' ||
-          tag === 'noframes' ||
-          tag === 'style' ||
-          tag === 'script' ||
-          tag === 'template'
+          tag === 'base' || tag === 'basefont' || tag === 'bgsound' ||
+          tag === 'link' || tag === 'meta' || tag === 'title' ||
+          tag === 'noscript' || tag === 'noframes' || tag === 'style' ||
+          tag === 'script' || tag === 'template'
         );
+
       // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
@@ -304,8 +202,4 @@ if (__DEV__) {
         return (
-          parentTag !== 'h1' &&
-          parentTag !== 'h2' &&
-          parentTag !== 'h3' &&
-          parentTag !== 'h4' &&
-          parentTag !== 'h5' &&
-          parentTag !== 'h6'
+          parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' &&
+          parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6'
         );
@@ -429,3 +323,3 @@ if (__DEV__) {
     childInstance,
-    ancestorInfo,
+    ancestorInfo
   ) {
@@ -438,3 +332,3 @@ if (__DEV__) {
         childTag == null,
-        'validateDOMNesting: when childText is passed, childTag should be null',
+        'validateDOMNesting: when childText is passed, childTag should be null'
       );
@@ -443,8 +337,6 @@ if (__DEV__) {
 
-    var invalidParent = isTagValidWithParent(childTag, parentTag)
-      ? null
-      : parentInfo;
-    var invalidAncestor = invalidParent
-      ? null
-      : findInvalidAncestorForTag(childTag, ancestorInfo);
+    var invalidParent =
+      isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
+    var invalidAncestor =
+      invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
     var problematic = invalidParent || invalidAncestor;
@@ -475,23 +367,21 @@ if (__DEV__) {
       var UNKNOWN = '(unknown)';
-      var childOwnerNames = childOwners
-        .slice(deepestCommon + 1)
-        .map(inst => inst.getName() || UNKNOWN);
-      var ancestorOwnerNames = ancestorOwners
-        .slice(deepestCommon + 1)
-        .map(inst => inst.getName() || UNKNOWN);
-      var ownerInfo = []
-        .concat(
-          // If the parent and child instances have a common owner ancestor, start
-          // with that -- otherwise we just start with the parent's owners.
-          deepestCommon !== -1
-            ? childOwners[deepestCommon].getName() || UNKNOWN
-            : [],
-          ancestorOwnerNames,
-          ancestorTag,
-          // If we're warning about an invalid (non-parent) ancestry, add '...'
-          invalidAncestor ? ['...'] : [],
-          childOwnerNames,
-          childTag,
-        )
-        .join(' > ');
+      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(
+        (inst) => inst.getName() || UNKNOWN
+      );
+      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(
+        (inst) => inst.getName() || UNKNOWN
+      );
+      var ownerInfo = [].concat(
+        // If the parent and child instances have a common owner ancestor, start
+        // with that -- otherwise we just start with the parent's owners.
+        deepestCommon !== -1 ?
+          childOwners[deepestCommon].getName() || UNKNOWN :
+          [],
+        ancestorOwnerNames,
+        ancestorTag,
+        // If we're warning about an invalid (non-parent) ancestry, add '...'
+        invalidAncestor ? ['...'] : [],
+        childOwnerNames,
+        childTag
+      ).join(' > ');
 
@@ -512,3 +402,3 @@ if (__DEV__) {
           whitespaceInfo =
-            " Make sure you don't have any extra whitespace between tags on " +
+            ' Make sure you don\'t have any extra whitespace between tags on ' +
             'each line of your source code.';
@@ -529,3 +419,3 @@ if (__DEV__) {
           'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' +
-            'See %s.%s',
+          'See %s.%s',
           tagDisplayName,
@@ -534,3 +424,3 @@ if (__DEV__) {
           ownerInfo,
-          info,
+          info
         );
@@ -540,6 +430,6 @@ if (__DEV__) {
           'validateDOMNesting(...): %s cannot appear as a descendant of ' +
-            '<%s>. See %s.',
+          '<%s>. See %s.',
           tagDisplayName,
           ancestorTag,
-          ownerInfo,
+          ownerInfo
         );
diff --git a/src/renderers/dom/client/wrappers/LinkedValueUtils.js b/src/renderers/dom/client/wrappers/LinkedValueUtils.js
index 00e0af6f7..9d1ae8ed3 100644
--- a/src/renderers/dom/client/wrappers/LinkedValueUtils.js
+++ b/src/renderers/dom/client/wrappers/LinkedValueUtils.js
@@ -23,9 +23,9 @@ var warning = require('warning');
 var hasReadOnlyValue = {
-  button: true,
-  checkbox: true,
-  image: true,
-  hidden: true,
-  radio: true,
-  reset: true,
-  submit: true,
+  'button': true,
+  'checkbox': true,
+  'image': true,
+  'hidden': true,
+  'radio': true,
+  'reset': true,
+  'submit': true,
 };
@@ -36,3 +36,3 @@ function _assertSingleLink(inputProps) {
     'Cannot provide a checkedLink and a valueLink. If you want to use ' +
-      "checkedLink, you probably don't want to use valueLink and vice versa.",
+    'checkedLink, you probably don\'t want to use valueLink and vice versa.'
   );
@@ -44,3 +44,3 @@ function _assertValueLink(inputProps) {
     'Cannot provide a valueLink and a value or onChange event. If you want ' +
-      "to use value or onChange, you probably don't want to use valueLink.",
+    'to use value or onChange, you probably don\'t want to use valueLink.'
   );
@@ -53,4 +53,4 @@ function _assertCheckedLink(inputProps) {
     'Cannot provide a checkedLink and a checked property or onChange event. ' +
-      "If you want to use checked or onChange, you probably don't want to " +
-      'use checkedLink',
+    'If you want to use checked or onChange, you probably don\'t want to ' +
+    'use checkedLink'
   );
@@ -60,9 +60,7 @@ var propTypes = {
   value: function(props, propName, componentName) {
-    if (
-      !props[propName] ||
-      hasReadOnlyValue[props.type] ||
-      props.onChange ||
-      props.readOnly ||
-      props.disabled
-    ) {
+    if (!props[propName] ||
+        hasReadOnlyValue[props.type] ||
+        props.onChange ||
+        props.readOnly ||
+        props.disabled) {
       return null;
@@ -71,5 +69,5 @@ var propTypes = {
       'You provided a `value` prop to a form field without an ' +
-        '`onChange` handler. This will render a read-only field. If ' +
-        'the field should be mutable use `defaultValue`. Otherwise, ' +
-        'set either `onChange` or `readOnly`.',
+      '`onChange` handler. This will render a read-only field. If ' +
+      'the field should be mutable use `defaultValue`. Otherwise, ' +
+      'set either `onChange` or `readOnly`.'
     );
@@ -77,8 +75,6 @@ var propTypes = {
   checked: function(props, propName, componentName) {
-    if (
-      !props[propName] ||
-      props.onChange ||
-      props.readOnly ||
-      props.disabled
-    ) {
+    if (!props[propName] ||
+        props.onChange ||
+        props.readOnly ||
+        props.disabled) {
       return null;
@@ -87,5 +83,5 @@ var propTypes = {
       'You provided a `checked` prop to a form field without an ' +
-        '`onChange` handler. This will render a read-only field. If ' +
-        'the field should be mutable use `defaultChecked`. Otherwise, ' +
-        'set either `onChange` or `readOnly`.',
+      '`onChange` handler. This will render a read-only field. If ' +
+      'the field should be mutable use `defaultChecked`. Otherwise, ' +
+      'set either `onChange` or `readOnly`.'
     );
@@ -120,3 +116,3 @@ var LinkedValueUtils = {
           null,
-          ReactPropTypesSecret,
+          ReactPropTypesSecret
         );
diff --git a/src/renderers/dom/client/wrappers/ReactDOMInput.js b/src/renderers/dom/client/wrappers/ReactDOMInput.js
index 73ae197dc..07061ef32 100644
--- a/src/renderers/dom/client/wrappers/ReactDOMInput.js
+++ b/src/renderers/dom/client/wrappers/ReactDOMInput.js
@@ -61,24 +61,20 @@ var ReactDOMInput = {
 
-    var hostProps = Object.assign(
-      {
-        // Make sure we set .type before any other properties (setting .value
-        // before .type means .value is lost in IE11 and below)
-        type: undefined,
-        // Make sure we set .step before .value (setting .value before .step
-        // means .value is rounded on mount, based upon step precision)
-        step: undefined,
-        // Make sure we set .min & .max before .value (to ensure proper order
-        // in corner cases such as min or max deriving from value, e.g. Issue #7170)
-        min: undefined,
-        max: undefined,
-      },
-      props,
-      {
-        defaultChecked: undefined,
-        defaultValue: undefined,
-        value: value != null ? value : inst._wrapperState.initialValue,
-        checked: checked != null ? checked : inst._wrapperState.initialChecked,
-        onChange: inst._wrapperState.onChange,
-      },
-    );
+    var hostProps = Object.assign({
+      // Make sure we set .type before any other properties (setting .value
+      // before .type means .value is lost in IE11 and below)
+      type: undefined,
+      // Make sure we set .step before .value (setting .value before .step
+      // means .value is rounded on mount, based upon step precision)
+      step: undefined,
+      // Make sure we set .min & .max before .value (to ensure proper order
+      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
+      min: undefined,
+      max: undefined,
+    }, props, {
+      defaultChecked: undefined,
+      defaultValue: undefined,
+      value: value != null ? value : inst._wrapperState.initialValue,
+      checked: checked != null ? checked : inst._wrapperState.initialChecked,
+      onChange: inst._wrapperState.onChange,
+    });
 
@@ -92,3 +88,3 @@ var ReactDOMInput = {
         props,
-        inst._currentElement._owner,
+        inst._currentElement._owner
       );
@@ -100,3 +96,3 @@ var ReactDOMInput = {
           false,
-          '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.',
+          '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.'
         );
@@ -107,3 +103,3 @@ var ReactDOMInput = {
           false,
-          '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.',
+          '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.'
         );
@@ -119,9 +115,9 @@ var ReactDOMInput = {
           '%s contains an input of type %s with both checked and defaultChecked props. ' +
-            'Input elements must be either controlled or uncontrolled ' +
-            '(specify either the checked prop, or the defaultChecked prop, but not ' +
-            'both). Decide between using a controlled or uncontrolled input ' +
-            'element and remove one of these props. More info: ' +
-            'https://fb.me/react-controlled-components',
-          (owner && owner.getName()) || 'A component',
-          props.type,
+          'Input elements must be either controlled or uncontrolled ' +
+          '(specify either the checked prop, or the defaultChecked prop, but not ' +
+          'both). Decide between using a controlled or uncontrolled input ' +
+          'element and remove one of these props. More info: ' +
+          'https://fb.me/react-controlled-components',
+          owner && owner.getName() || 'A component',
+          props.type
         );
@@ -137,9 +133,9 @@ var ReactDOMInput = {
           '%s contains an input of type %s with both value and defaultValue props. ' +
-            'Input elements must be either controlled or uncontrolled ' +
-            '(specify either the value prop, or the defaultValue prop, but not ' +
-            'both). Decide between using a controlled or uncontrolled input ' +
-            'element and remove one of these props. More info: ' +
-            'https://fb.me/react-controlled-components',
-          (owner && owner.getName()) || 'A component',
-          props.type,
+          'Input elements must be either controlled or uncontrolled ' +
+          '(specify either the value prop, or the defaultValue prop, but not ' +
+          'both). Decide between using a controlled or uncontrolled input ' +
+          'element and remove one of these props. More info: ' +
+          'https://fb.me/react-controlled-components',
+          owner && owner.getName() || 'A component',
+          props.type
         );
@@ -151,5 +147,3 @@ var ReactDOMInput = {
     inst._wrapperState = {
-      initialChecked: props.checked != null
-        ? props.checked
-        : props.defaultChecked,
+      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
       initialValue: props.value != null ? props.value : defaultValue,
@@ -168,7 +162,3 @@ var ReactDOMInput = {
 
-      if (
-        !inst._wrapperState.controlled &&
-        controlled &&
-        !didWarnUncontrolledToControlled
-      ) {
+      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
         warning(
@@ -176,7 +166,7 @@ var ReactDOMInput = {
           '%s is changing an uncontrolled input of type %s to be controlled. ' +
-            'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-            'Decide between using a controlled or uncontrolled input ' +
-            'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
-          (owner && owner.getName()) || 'A component',
-          props.type,
+          'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+          'Decide between using a controlled or uncontrolled input ' +
+          'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+          owner && owner.getName() || 'A component',
+          props.type
         );
@@ -184,7 +174,3 @@ var ReactDOMInput = {
       }
-      if (
-        inst._wrapperState.controlled &&
-        !controlled &&
-        !didWarnControlledToUncontrolled
-      ) {
+      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
         warning(
@@ -192,7 +178,7 @@ var ReactDOMInput = {
           '%s is changing a controlled input of type %s to be uncontrolled. ' +
-            'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-            'Decide between using a controlled or uncontrolled input ' +
-            'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
-          (owner && owner.getName()) || 'A component',
-          props.type,
+          'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+          'Decide between using a controlled or uncontrolled input ' +
+          'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+          owner && owner.getName() || 'A component',
+          props.type
         );
@@ -208,3 +194,3 @@ var ReactDOMInput = {
         'checked',
-        checked || false,
+        checked || false
       );
@@ -222,8 +208,4 @@ var ReactDOMInput = {
 
-        if (
-          // eslint-disable-next-line
-          value != valueAsNumber ||
-          // eslint-disable-next-line
-          (value == valueAsNumber && node.value != value)
-        ) {
+        // eslint-disable-next-line
+        if (value != valueAsNumber) {
           // Cast `value` to a string to ensure the value is set correctly. While
@@ -232,3 +214,4 @@ var ReactDOMInput = {
         }
-      } else if (node.value !== '' + value) {
+        // eslint-disable-next-line
+      } else if (value != node.value) {
         // Cast `value` to a string to ensure the value is set correctly. While
@@ -334,4 +317,3 @@ function _handleChange(event) {
     var group = queryRoot.querySelectorAll(
-      'input[name=' + JSON.stringify('' + name) + '][type="radio"]',
-    );
+      'input[name=' + JSON.stringify('' + name) + '][type="radio"]');
 
@@ -339,3 +321,4 @@ function _handleChange(event) {
       var otherNode = group[i];
-      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
+      if (otherNode === rootNode ||
+          otherNode.form !== rootNode.form) {
         continue;
@@ -350,3 +333,3 @@ function _handleChange(event) {
         'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
-          'same `name` is not supported.',
+        'same `name` is not supported.'
       );
diff --git a/src/renderers/dom/client/wrappers/ReactDOMOption.js b/src/renderers/dom/client/wrappers/ReactDOMOption.js
index d8f48d404..2a2a28a18 100644
--- a/src/renderers/dom/client/wrappers/ReactDOMOption.js
+++ b/src/renderers/dom/client/wrappers/ReactDOMOption.js
@@ -35,3 +35,3 @@ function flattenChildren(children) {
         false,
-        'Only strings and numbers are supported as <option> children.',
+        'Only strings and numbers are supported as <option> children.'
       );
@@ -53,3 +53,3 @@ var ReactDOMOption = {
         'Use the `defaultValue` or `value` props on <select> instead of ' +
-          'setting `selected` on <option>.',
+        'setting `selected` on <option>.'
       );
@@ -91,3 +91,3 @@ var ReactDOMOption = {
       } else {
-        selected = '' + selectValue === value;
+        selected = ('' + selectValue === value);
       }
@@ -108,6 +108,3 @@ var ReactDOMOption = {
   getHostProps: function(inst, props) {
-    var hostProps = Object.assign(
-      {selected: undefined, children: undefined},
-      props,
-    );
+    var hostProps = Object.assign({selected: undefined, children: undefined}, props);
 
@@ -127,2 +124,3 @@ var ReactDOMOption = {
   },
+
 };
diff --git a/src/renderers/dom/client/wrappers/ReactDOMSelect.js b/src/renderers/dom/client/wrappers/ReactDOMSelect.js
index e0b9f6a89..cb19c89fc 100644
--- a/src/renderers/dom/client/wrappers/ReactDOMSelect.js
+++ b/src/renderers/dom/client/wrappers/ReactDOMSelect.js
@@ -53,3 +53,7 @@ function checkSelectPropTypes(inst, props) {
   var owner = inst._currentElement._owner;
-  LinkedValueUtils.checkPropTypes('select', props, owner);
+  LinkedValueUtils.checkPropTypes(
+    'select',
+    props,
+    owner
+  );
 
@@ -58,3 +62,3 @@ function checkSelectPropTypes(inst, props) {
       false,
-      '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.',
+      '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.'
     );
@@ -73,5 +77,5 @@ function checkSelectPropTypes(inst, props) {
         'The `%s` prop supplied to <select> must be an array if ' +
-          '`multiple` is true.%s',
+        '`multiple` is true.%s',
         propName,
-        getDeclarationErrorAddendum(owner),
+        getDeclarationErrorAddendum(owner)
       );
@@ -81,5 +85,5 @@ function checkSelectPropTypes(inst, props) {
         'The `%s` prop supplied to <select> must be a scalar ' +
-          'value if `multiple` is false.%s',
+        'value if `multiple` is false.%s',
         propName,
-        getDeclarationErrorAddendum(owner),
+        getDeclarationErrorAddendum(owner)
       );
@@ -171,6 +175,6 @@ var ReactDOMSelect = {
         'Select elements must be either controlled or uncontrolled ' +
-          '(specify either the value prop, or the defaultValue prop, but not ' +
-          'both). Decide between using a controlled or uncontrolled select ' +
-          'element and remove one of these props. More info: ' +
-          'https://fb.me/react-controlled-components',
+        '(specify either the value prop, or the defaultValue prop, but not ' +
+        'both). Decide between using a controlled or uncontrolled select ' +
+        'element and remove one of these props. More info: ' +
+        'https://fb.me/react-controlled-components'
       );
diff --git a/src/renderers/dom/client/wrappers/ReactDOMTextarea.js b/src/renderers/dom/client/wrappers/ReactDOMTextarea.js
index c528bb3aa..3dbff23a6 100644
--- a/src/renderers/dom/client/wrappers/ReactDOMTextarea.js
+++ b/src/renderers/dom/client/wrappers/ReactDOMTextarea.js
@@ -49,3 +49,3 @@ var ReactDOMTextarea = {
       props.dangerouslySetInnerHTML == null,
-      '`dangerouslySetInnerHTML` does not make sense on <textarea>.',
+      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
     );
@@ -72,3 +72,3 @@ var ReactDOMTextarea = {
         props,
-        inst._currentElement._owner,
+        inst._currentElement._owner
       );
@@ -77,3 +77,3 @@ var ReactDOMTextarea = {
           false,
-          '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.',
+          '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.'
         );
@@ -89,6 +89,6 @@ var ReactDOMTextarea = {
           'Textarea elements must be either controlled or uncontrolled ' +
-            '(specify either the value prop, or the defaultValue prop, but not ' +
-            'both). Decide between using a controlled or uncontrolled textarea ' +
-            'and remove one of these props. More info: ' +
-            'https://fb.me/react-controlled-components',
+          '(specify either the value prop, or the defaultValue prop, but not ' +
+          'both). Decide between using a controlled or uncontrolled textarea ' +
+          'and remove one of these props. More info: ' +
+          'https://fb.me/react-controlled-components'
         );
@@ -98,2 +98,3 @@ var ReactDOMTextarea = {
 
+
     var value = LinkedValueUtils.getValue(props);
@@ -111,3 +112,3 @@ var ReactDOMTextarea = {
             'Use the `defaultValue` or `value` props instead of setting ' +
-              'children on <textarea>.',
+            'children on <textarea>.'
           );
@@ -116,3 +117,3 @@ var ReactDOMTextarea = {
           defaultValue == null,
-          'If you supply `defaultValue` on a <textarea>, do not pass children.',
+          'If you supply `defaultValue` on a <textarea>, do not pass children.'
         );
@@ -121,3 +122,3 @@ var ReactDOMTextarea = {
             children.length <= 1,
-            '<textarea> can only have at most one child.',
+            '<textarea> can only have at most one child.'
           );
diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js
index 4c099ee9d..8ee2478bb 100644
--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js
+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js
@@ -13,2 +13,3 @@
 
+
 var emptyFunction = require('emptyFunction');
@@ -34,73 +35,2 @@ describe('ReactDOMInput', () => {
 
-  describe('switching text inputs between numeric and string numbers', () => {
-    it('does change the number 2 to "2.0" with no change handler', () => {
-      var stub = <input type="text" value={2} onChange={jest.fn()} />;
-      stub = ReactTestUtils.renderIntoDocument(stub);
-      var node = ReactDOM.findDOMNode(stub);
-
-      node.value = '2.0';
-
-      ReactTestUtils.Simulate.change(stub);
-
-      expect(node.getAttribute('value')).toBe('2');
-      expect(node.value).toBe('2');
-    });
-
-    it('does change the string "2" to "2.0" with no change handler', () => {
-      var stub = <input type="text" value={'2'} onChange={jest.fn()} />;
-      stub = ReactTestUtils.renderIntoDocument(stub);
-      var node = ReactDOM.findDOMNode(stub);
-
-      node.value = '2.0';
-
-      ReactTestUtils.Simulate.change(stub);
-
-      expect(node.getAttribute('value')).toBe('2');
-      expect(node.value).toBe('2');
-    });
-
-    it('changes the number 2 to "2.0" using a change handler', () => {
-      class Stub extends React.Component {
-        state = {
-          value: 2,
-        };
-        onChange = event => {
-          this.setState({value: event.target.value});
-        };
-        render() {
-          const {value} = this.state;
-
-          return <input type="text" value={value} onChange={this.onChange} />;
-        }
-      }
-
-      var stub = ReactTestUtils.renderIntoDocument(<Stub />);
-      var node = ReactDOM.findDOMNode(stub);
-
-      node.value = '2.0';
-
-      ReactTestUtils.Simulate.change(node);
-
-      expect(node.getAttribute('value')).toBe('2.0');
-      expect(node.value).toBe('2.0');
-    });
-  });
-
-  it('does change the string ".98" to "0.98" with no change handler', () => {
-    class Stub extends React.Component {
-      state = {
-        value: '.98',
-      };
-      render() {
-        return <input type="number" value={this.state.value} />;
-      }
-    }
-
-    var stub = ReactTestUtils.renderIntoDocument(<Stub />);
-    var node = ReactDOM.findDOMNode(stub);
-    stub.setState({value: '0.98'});
-
-    expect(node.value).toEqual('0.98');
-  });
-
   it('should display `defaultValue` of number 0', () => {
@@ -117,3 +47,3 @@ describe('ReactDOMInput', () => {
       render() {
-        return <input defaultValue="0" />;
+        return (<input defaultValue="0" />);
       }
@@ -129,5 +59,3 @@ describe('ReactDOMInput', () => {
       set(value) {
-        throw new Error(
-          `defaultValue was assigned ${value}, but it did not change!`,
-        );
+        throw new Error(`defaultValue was assigned ${value}, but it did not change!`);
       },
@@ -157,6 +85,3 @@ describe('ReactDOMInput', () => {
 
-    var node = ReactDOM.render(
-      <input type="text" defaultValue="0" />,
-      container,
-    );
+    var node = ReactDOM.render(<input type="text" defaultValue="0" />, container);
 
@@ -173,6 +98,3 @@ describe('ReactDOMInput', () => {
 
-    var node = ReactDOM.render(
-      <input type="date" defaultValue="1980-01-01" />,
-      container,
-    );
+    var node = ReactDOM.render(<input type="date" defaultValue="1980-01-01" />, container);
 
@@ -191,6 +113,3 @@ describe('ReactDOMInput', () => {
 
-    var node = ReactDOM.render(
-      <input type="text" value="0" readOnly="true" />,
-      container,
-    );
+    var node = ReactDOM.render(<input type="text" value="0" readOnly="true" />, container);
 
@@ -204,5 +123,3 @@ describe('ReactDOMInput', () => {
   it('should render defaultValue for SSR', () => {
-    var markup = ReactDOMServer.renderToString(
-      <input type="text" defaultValue="1" />,
-    );
+    var markup = ReactDOMServer.renderToString(<input type="text" defaultValue="1" />);
     var div = document.createElement('div');
@@ -282,3 +199,3 @@ describe('ReactDOMInput', () => {
       <input type="text" value={true} onChange={emptyFunction} />,
-      container,
+      container
     );
@@ -296,3 +213,3 @@ describe('ReactDOMInput', () => {
       <input type="text" value={false} onChange={emptyFunction} />,
-      container,
+      container
     );
@@ -315,3 +232,3 @@ describe('ReactDOMInput', () => {
       <input type="text" value={objToString} onChange={emptyFunction} />,
-      container,
+      container
     );
@@ -339,3 +256,3 @@ describe('ReactDOMInput', () => {
 
-    ReactDOM.render(<input value="b" />, container);
+    ReactDOM.render(<input value="b"/>, container);
     expect(nodeValueSetter.mock.calls.length).toBe(1);
@@ -343,42 +260,2 @@ describe('ReactDOMInput', () => {
 
-  it('should not incur unnecessary DOM mutations for numeric type conversion', () => {
-    var container = document.createElement('div');
-    ReactDOM.render(<input value="0" />, container);
-
-    var node = container.firstChild;
-    var nodeValue = '0';
-    var nodeValueSetter = jest.genMockFn();
-    Object.defineProperty(node, 'value', {
-      get: function() {
-        return nodeValue;
-      },
-      set: nodeValueSetter.mockImplementation(function(newValue) {
-        nodeValue = newValue;
-      }),
-    });
-
-    ReactDOM.render(<input value={0} />, container);
-    expect(nodeValueSetter.mock.calls.length).toBe(0);
-  });
-
-  it('should not incur unnecessary DOM mutations for the boolean type conversion', () => {
-    var container = document.createElement('div');
-    ReactDOM.render(<input value="true" />, container);
-
-    var node = container.firstChild;
-    var nodeValue = 'true';
-    var nodeValueSetter = jest.genMockFn();
-    Object.defineProperty(node, 'value', {
-      get: function() {
-        return nodeValue;
-      },
-      set: nodeValueSetter.mockImplementation(function(newValue) {
-        nodeValue = newValue;
-      }),
-    });
-
-    ReactDOM.render(<input value={true} />, container);
-    expect(nodeValueSetter.mock.calls.length).toBe(0);
-  });
-
   it('should properly control a value of number `0`', () => {
@@ -400,3 +277,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.Simulate.change(node, {target: {value: '0.0'}});
-    expect(node.value).toBe('0');
+    expect(node.value).toBe('0.0');
   });
@@ -450,3 +327,7 @@ describe('ReactDOMInput', () => {
     fakeNativeEvent.path = [node, container];
-    ReactTestUtils.simulateNativeEventOnNode('topInput', node, fakeNativeEvent);
+    ReactTestUtils.simulateNativeEventOnNode(
+      'topInput',
+      node,
+      fakeNativeEvent
+    );
 
@@ -465,3 +346,3 @@ describe('ReactDOMInput', () => {
     expect(
-      !node.hasAttribute('value') || node.getAttribute('value').length > 0,
+      !node.hasAttribute('value') || node.getAttribute('value').length > 0
     ).toBe(true);
@@ -480,6 +361,9 @@ describe('ReactDOMInput', () => {
               onChange={emptyFunction}
-            />
-            A
-            <input ref="b" type="radio" name="fruit" onChange={emptyFunction} />
-            B
+            />A
+            <input
+              ref="b"
+              type="radio"
+              name="fruit"
+              onChange={emptyFunction}
+            />B
 
@@ -546,3 +430,3 @@ describe('ReactDOMInput', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.',
+      '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.'
     );
@@ -550,3 +434,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="text" value="zoink" onChange={jest.fn()} />,
+      <input type="text" value="zoink" onChange={jest.fn()} />
     );
@@ -559,3 +443,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="text" value="zoink" readOnly={true} />,
+      <input type="text" value="zoink" readOnly={true} />
     );
@@ -564,3 +448,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="text" value="zoink" readOnly={false} />,
+      <input type="text" value="zoink" readOnly={false} />
     );
@@ -587,3 +471,3 @@ describe('ReactDOMInput', () => {
 
-    instance = (
+    instance =
       <input
@@ -593,4 +477,3 @@ describe('ReactDOMInput', () => {
         onChange={emptyFunction}
-      />
-    );
+      />;
     expect(() => ReactDOM.render(instance, node)).toThrow();
@@ -599,2 +482,3 @@ describe('ReactDOMInput', () => {
     expect(() => ReactDOM.render(instance, node)).toThrow();
+
   });
@@ -624,3 +508,3 @@ describe('ReactDOMInput', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.',
+      '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.'
     );
@@ -628,3 +512,7 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="checkbox" checked="false" onChange={jest.fn()} />,
+      <input
+        type="checkbox"
+        checked="false"
+        onChange={jest.fn()}
+      />
     );
@@ -633,3 +521,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="checkbox" checked="false" readOnly={true} />,
+      <input type="checkbox" checked="false" readOnly={true} />
     );
@@ -637,5 +525,3 @@ describe('ReactDOMInput', () => {
 
-    ReactTestUtils.renderIntoDocument(
-      <input type="checkbox" checked="false" />,
-    );
+    ReactTestUtils.renderIntoDocument(<input type="checkbox" checked="false" />);
     expect(console.error.calls.count()).toBe(2);
@@ -645,3 +531,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="checkbox" checked="false" readOnly={true} />,
+      <input type="checkbox" checked="false" readOnly={true} />
     );
@@ -650,3 +536,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="checkbox" checked="false" readOnly={false} />,
+      <input type="checkbox" checked="false" readOnly={false} />
     );
@@ -662,3 +548,3 @@ describe('ReactDOMInput', () => {
 
-    instance = (
+    instance =
       <input
@@ -668,10 +554,9 @@ describe('ReactDOMInput', () => {
         onChange={emptyFunction}
-      />
-    );
+      />;
     expect(() => ReactDOM.render(instance, node)).toThrow();
 
-    instance = (
-      <input type="checkbox" checkedLink={link} onChange={emptyFunction} />
-    );
+    instance =
+      <input type="checkbox" checkedLink={link} onChange={emptyFunction} />;
     expect(() => ReactDOM.render(instance, node)).toThrow();
+
   });
@@ -695,5 +580,4 @@ describe('ReactDOMInput', () => {
 
-    instance = (
-      <input type="checkbox" checkedLink={link} valueLink={emptyFunction} />
-    );
+    instance =
+      <input type="checkbox" checkedLink={link} valueLink={emptyFunction} />;
     expect(() => ReactDOM.render(instance, node)).toThrow();
@@ -705,4 +589,4 @@ describe('ReactDOMInput', () => {
       '`value` prop on `input` should not be null. ' +
-        'Consider using the empty string to clear the component or `undefined` ' +
-        'for uncontrolled components.',
+      'Consider using the empty string to clear the component or `undefined` ' +
+      'for uncontrolled components.'
     );
@@ -715,8 +599,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input
-        type="radio"
-        checked={true}
-        defaultChecked={true}
-        readOnly={true}
-      />,
+      <input type="radio" checked={true} defaultChecked={true} readOnly={true} />
     );
@@ -724,7 +603,7 @@ describe('ReactDOMInput', () => {
       'A component contains an input of type radio with both checked and defaultChecked props. ' +
-        'Input elements must be either controlled or uncontrolled ' +
-        '(specify either the checked prop, or the defaultChecked prop, but not ' +
-        'both). Decide between using a controlled or uncontrolled input ' +
-        'element and remove one of these props. More info: ' +
-        'https://fb.me/react-controlled-components',
+      'Input elements must be either controlled or uncontrolled ' +
+      '(specify either the checked prop, or the defaultChecked prop, but not ' +
+      'both). Decide between using a controlled or uncontrolled input ' +
+      'element and remove one of these props. More info: ' +
+      'https://fb.me/react-controlled-components'
     );
@@ -732,8 +611,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input
-        type="radio"
-        checked={true}
-        defaultChecked={true}
-        readOnly={true}
-      />,
+      <input type="radio" checked={true} defaultChecked={true} readOnly={true} />
     );
@@ -744,3 +618,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="text" value="foo" defaultValue="bar" readOnly={true} />,
+      <input type="text" value="foo" defaultValue="bar" readOnly={true} />
     );
@@ -748,7 +622,7 @@ describe('ReactDOMInput', () => {
       'A component contains an input of type text with both value and defaultValue props. ' +
-        'Input elements must be either controlled or uncontrolled ' +
-        '(specify either the value prop, or the defaultValue prop, but not ' +
-        'both). Decide between using a controlled or uncontrolled input ' +
-        'element and remove one of these props. More info: ' +
-        'https://fb.me/react-controlled-components',
+      'Input elements must be either controlled or uncontrolled ' +
+      '(specify either the value prop, or the defaultValue prop, but not ' +
+      'both). Decide between using a controlled or uncontrolled input ' +
+      'element and remove one of these props. More info: ' +
+      'https://fb.me/react-controlled-components'
     );
@@ -756,3 +630,3 @@ describe('ReactDOMInput', () => {
     ReactTestUtils.renderIntoDocument(
-      <input type="text" value="foo" defaultValue="bar" readOnly={true} />,
+      <input type="text" value="foo" defaultValue="bar" readOnly={true} />
     );
@@ -762,5 +636,3 @@ describe('ReactDOMInput', () => {
   it('should warn if controlled input switches to uncontrolled (value is undefined)', () => {
-    var stub = (
-      <input type="text" value="controlled" onChange={emptyFunction} />
-    );
+    var stub = <input type="text" value="controlled" onChange={emptyFunction} />;
     var container = document.createElement('div');
@@ -771,5 +643,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type text to be uncontrolled. ' +
-        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -778,5 +650,3 @@ describe('ReactDOMInput', () => {
   it('should warn if controlled input switches to uncontrolled (value is null)', () => {
-    var stub = (
-      <input type="text" value="controlled" onChange={emptyFunction} />
-    );
+    var stub = <input type="text" value="controlled" onChange={emptyFunction} />;
     var container = document.createElement('div');
@@ -787,5 +657,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type text to be uncontrolled. ' +
-        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -794,11 +664,6 @@ describe('ReactDOMInput', () => {
   it('should warn if controlled input switches to uncontrolled with defaultValue', () => {
-    var stub = (
-      <input type="text" value="controlled" onChange={emptyFunction} />
-    );
+    var stub = <input type="text" value="controlled" onChange={emptyFunction} />;
     var container = document.createElement('div');
     ReactDOM.render(stub, container);
-    ReactDOM.render(
-      <input type="text" defaultValue="uncontrolled" />,
-      container,
-    );
+    ReactDOM.render(<input type="text" defaultValue="uncontrolled" />, container);
     expect(console.error.calls.count()).toBe(1);
@@ -806,5 +671,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type text to be uncontrolled. ' +
-        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -820,5 +685,5 @@ describe('ReactDOMInput', () => {
       'A component is changing an uncontrolled input of type text to be controlled. ' +
-        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -834,5 +699,5 @@ describe('ReactDOMInput', () => {
       'A component is changing an uncontrolled input of type text to be controlled. ' +
-        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -841,5 +706,3 @@ describe('ReactDOMInput', () => {
   it('should warn if controlled checkbox switches to uncontrolled (checked is undefined)', () => {
-    var stub = (
-      <input type="checkbox" checked={true} onChange={emptyFunction} />
-    );
+    var stub = <input type="checkbox" checked={true} onChange={emptyFunction} />;
     var container = document.createElement('div');
@@ -850,5 +713,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type checkbox to be uncontrolled. ' +
-        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -857,5 +720,3 @@ describe('ReactDOMInput', () => {
   it('should warn if controlled checkbox switches to uncontrolled (checked is null)', () => {
-    var stub = (
-      <input type="checkbox" checked={true} onChange={emptyFunction} />
-    );
+    var stub = <input type="checkbox" checked={true} onChange={emptyFunction} />;
     var container = document.createElement('div');
@@ -866,5 +727,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type checkbox to be uncontrolled. ' +
-        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -873,5 +734,3 @@ describe('ReactDOMInput', () => {
   it('should warn if controlled checkbox switches to uncontrolled with defaultChecked', () => {
-    var stub = (
-      <input type="checkbox" checked={true} onChange={emptyFunction} />
-    );
+    var stub = <input type="checkbox" checked={true} onChange={emptyFunction} />;
     var container = document.createElement('div');
@@ -882,5 +741,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type checkbox to be uncontrolled. ' +
-        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -896,5 +755,5 @@ describe('ReactDOMInput', () => {
       'A component is changing an uncontrolled input of type checkbox to be controlled. ' +
-        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -910,5 +769,5 @@ describe('ReactDOMInput', () => {
       'A component is changing an uncontrolled input of type checkbox to be controlled. ' +
-        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -924,5 +783,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type radio to be uncontrolled. ' +
-        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -938,5 +797,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type radio to be uncontrolled. ' +
-        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -952,5 +811,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type radio to be uncontrolled. ' +
-        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -966,5 +825,5 @@ describe('ReactDOMInput', () => {
       'A component is changing an uncontrolled input of type radio to be controlled. ' +
-        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -980,5 +839,5 @@ describe('ReactDOMInput', () => {
       'A component is changing an uncontrolled input of type radio to be controlled. ' +
-        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -990,10 +849,4 @@ describe('ReactDOMInput', () => {
     ReactDOM.render(<input type="radio" />, container);
-    ReactDOM.render(
-      <input type="radio" value="value" defaultChecked={true} />,
-      container,
-    );
-    ReactDOM.render(
-      <input type="radio" value="value" onChange={() => null} />,
-      container,
-    );
+    ReactDOM.render(<input type="radio" value="value" defaultChecked={true} />, container);
+    ReactDOM.render(<input type="radio" value="value" onChange={() => null} />, container);
     ReactDOM.render(<input type="radio" />, container);
@@ -1004,6 +857,3 @@ describe('ReactDOMInput', () => {
     var container = document.createElement('div');
-    ReactDOM.render(
-      <input type="radio" checked={false} onChange={() => null} />,
-      container,
-    );
+    ReactDOM.render(<input type="radio" checked={false} onChange={() => null} />, container);
     ReactDOM.render(
@@ -1015,5 +865,3 @@ describe('ReactDOMInput', () => {
         onChange={() => null}
-      />,
-      container,
-    );
+      />, container);
     expect(console.error.calls.count()).toBe(0);
@@ -1023,11 +871,3 @@ describe('ReactDOMInput', () => {
     var container = document.createElement('div');
-    ReactDOM.render(
-      <input
-        type="radio"
-        value="value"
-        checked={false}
-        onChange={() => null}
-      />,
-      container,
-    );
+    ReactDOM.render(<input type="radio" value="value" checked={false} onChange={() => null} />, container);
     ReactDOM.render(<input type="radio" value="value" />, container);
@@ -1035,5 +875,5 @@ describe('ReactDOMInput', () => {
       'A component is changing a controlled input of type radio to be uncontrolled. ' +
-        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
-        'Decide between using a controlled or uncontrolled input ' +
-        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
+      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
+      'Decide between using a controlled or uncontrolled input ' +
+      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components'
     );
@@ -1063,5 +903,3 @@ describe('ReactDOMInput', () => {
 
-    ReactTestUtils.renderIntoDocument(
-      <input value="0" type="range" min="0" max="100" step="1" />,
-    );
+    ReactTestUtils.renderIntoDocument(<input value="0" type="range" min="0" max="100" step="1" />);
     expect(log).toEqual([
@@ -1081,3 +919,3 @@ describe('ReactDOMInput', () => {
     var input = ReactTestUtils.renderIntoDocument(
-      <input value="hi" type="radio" />,
+      <input value="hi" type="radio" />
     );
@@ -1088,7 +926,7 @@ describe('ReactDOMInput', () => {
     class Input extends React.Component {
-      state = {type: 'number', value: 1000};
+      state = { type: 'number', value: 1000 };
 
       render() {
-        var {value, type} = this.state;
-        return <input onChange={() => {}} type={type} value={value} />;
+        var { value, type } = this.state;
+        return (<input onChange={() => {}} type={type} value={value} />);
       }
@@ -1101,3 +939,3 @@ describe('ReactDOMInput', () => {
     // the value will not be assigned.
-    input.setState({type: 'text', value: 'Test'});
+    input.setState({ type: 'text', value: 'Test' });
     expect(node.value).toEqual('Test');
@@ -1132,5 +970,3 @@ describe('ReactDOMInput', () => {
 
-    ReactTestUtils.renderIntoDocument(
-      <input type="date" defaultValue="1980-01-01" />,
-    );
+    ReactTestUtils.renderIntoDocument(<input type="date" defaultValue="1980-01-01" />);
     expect(log).toEqual([
@@ -1148,10 +984,12 @@ describe('ReactDOMInput', () => {
     function getTestInput() {
-      return class extends React.Component {
-        state = {
-          value: this.props.value == null ? '' : this.props.value,
-        };
-        onChange = event => {
+      return React.createClass({
+        getInitialState: function() {
+          return {
+            value: this.props.value == null ? '' : this.props.value,
+          };
+        },
+        onChange: function(event) {
           this.setState({value: event.target.value});
-        };
-        render() {
+        },
+        render: function() {
           var type = this.props.type;
@@ -1160,4 +998,4 @@ describe('ReactDOMInput', () => {
           return <input type={type} value={value} onChange={this.onChange} />;
-        }
-      };
+        },
+      });
     }
diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMOption-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMOption-test.js
index 924df9d96..952217dfb 100644
--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMOption-test.js
+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMOption-test.js
@@ -13,2 +13,3 @@
 
+
 describe('ReactDOMOption', () => {
@@ -41,5 +42,3 @@ describe('ReactDOMOption', () => {
     expect(console.error.calls.count()).toBe(1);
-    expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Only strings and numbers are supported as <option> children.',
-    );
+    expect(console.error.calls.argsFor(0)[0]).toContain('Only strings and numbers are supported as <option> children.');
   });
@@ -58,3 +57,3 @@ describe('ReactDOMOption', () => {
   it('should be able to use dangerouslySetInnerHTML on option', () => {
-    var stub = <option dangerouslySetInnerHTML={{__html: 'foobar'}} />;
+    var stub = <option dangerouslySetInnerHTML={{ __html: 'foobar' }} />;
     stub = ReactTestUtils.renderIntoDocument(stub);
@@ -78,3 +77,3 @@ describe('ReactDOMOption', () => {
     var a = 'a';
-    var stub = (
+    var stub =
       <select value="giraffe" onChange={() => {}}>
@@ -83,4 +82,3 @@ describe('ReactDOMOption', () => {
         <option>gorill{a}</option>
-      </select>
-    );
+      </select>;
     var options = stub.props.children;
@@ -92,3 +90,6 @@ describe('ReactDOMOption', () => {
 
-    ReactDOM.render(<select value="gorilla">{options}</select>, container);
+    ReactDOM.render(
+      <select value="gorilla">{options}</select>,
+      container
+    );
     expect(node.selectedIndex).toEqual(2);
diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js
index c3c7f98e8..455a05a29 100644
--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js
+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js
@@ -13,2 +13,3 @@
 
+
 describe('ReactDOMSelect', () => {
@@ -31,3 +32,3 @@ describe('ReactDOMSelect', () => {
   it('should allow setting `defaultValue`', () => {
-    var stub = (
+    var stub =
       <select defaultValue="giraffe">
@@ -36,4 +37,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var options = stub.props.children;
@@ -48,3 +48,3 @@ describe('ReactDOMSelect', () => {
       <select defaultValue="gorilla">{options}</select>,
-      container,
+      container
     );
@@ -62,3 +62,3 @@ describe('ReactDOMSelect', () => {
   it('should not control when using `defaultValue`', () => {
-    var el = (
+    var el =
       <select defaultValue="giraffe">
@@ -67,4 +67,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var container = document.createElement('div');
@@ -82,3 +81,3 @@ describe('ReactDOMSelect', () => {
   it('should allow setting `defaultValue` with multiple', () => {
-    var stub = (
+    var stub =
       <select multiple={true} defaultValue={['giraffe', 'gorilla']}>
@@ -87,4 +86,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var options = stub.props.children;
@@ -94,5 +92,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(true); // giraffe
-    expect(node.options[2].selected).toBe(true); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(true);  // giraffe
+    expect(node.options[2].selected).toBe(true);  // gorilla
 
@@ -101,8 +99,8 @@ describe('ReactDOMSelect', () => {
       <select multiple={true} defaultValue={['monkey']}>{options}</select>,
-      container,
+      container
     );
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(true); // giraffe
-    expect(node.options[2].selected).toBe(true); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(true);  // giraffe
+    expect(node.options[2].selected).toBe(true);  // gorilla
   });
@@ -110,3 +108,3 @@ describe('ReactDOMSelect', () => {
   it('should allow setting `value`', () => {
-    var stub = (
+    var stub =
       <select value="giraffe" onChange={noop}>
@@ -115,4 +113,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var options = stub.props.children;
@@ -127,3 +124,3 @@ describe('ReactDOMSelect', () => {
       <select value="gorilla" onChange={noop}>{options}</select>,
-      container,
+      container
     );
@@ -141,3 +138,3 @@ describe('ReactDOMSelect', () => {
   it('should allow setting `value` with multiple', () => {
-    var stub = (
+    var stub =
       <select multiple={true} value={['giraffe', 'gorilla']} onChange={noop}>
@@ -146,4 +143,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var options = stub.props.children;
@@ -153,5 +149,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(true); // giraffe
-    expect(node.options[2].selected).toBe(true); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(true);  // giraffe
+    expect(node.options[2].selected).toBe(true);  // gorilla
 
@@ -162,8 +158,8 @@ describe('ReactDOMSelect', () => {
       </select>,
-      container,
+      container
     );
 
-    expect(node.options[0].selected).toBe(true); // monkey
-    expect(node.options[1].selected).toBe(false); // giraffe
-    expect(node.options[2].selected).toBe(false); // gorilla
+    expect(node.options[0].selected).toBe(true);  // monkey
+    expect(node.options[1].selected).toBe(false);  // giraffe
+    expect(node.options[2].selected).toBe(false);  // gorilla
   });
@@ -171,3 +167,3 @@ describe('ReactDOMSelect', () => {
   it('should not select other options automatically', () => {
-    var stub = (
+    var stub =
       <select multiple={true} value={['12']} onChange={noop}>
@@ -176,4 +172,3 @@ describe('ReactDOMSelect', () => {
         <option value="12">twelve</option>
-      </select>
-    );
+      </select>;
     stub = ReactTestUtils.renderIntoDocument(stub);
@@ -181,5 +176,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false); // one
-    expect(node.options[1].selected).toBe(false); // two
-    expect(node.options[2].selected).toBe(true); // twelve
+    expect(node.options[0].selected).toBe(false);  // one
+    expect(node.options[1].selected).toBe(false);  // two
+    expect(node.options[2].selected).toBe(true);  // twelve
   });
@@ -197,3 +192,3 @@ describe('ReactDOMSelect', () => {
       </select>,
-      container,
+      container
     );
@@ -202,5 +197,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(true); // a
-    expect(node.options[1].selected).toBe(true); // b
-    expect(node.options[2].selected).toBe(false); // c
+    expect(node.options[0].selected).toBe(true);  // a
+    expect(node.options[1].selected).toBe(true);  // b
+    expect(node.options[2].selected).toBe(false);  // c
   });
@@ -215,3 +210,3 @@ describe('ReactDOMSelect', () => {
 
-    var el = (
+    var el =
       <select multiple={true} value={[objectToString]} onChange={noop}>
@@ -220,4 +215,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var container = document.createElement('div');
@@ -226,5 +220,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(true); // giraffe
-    expect(node.options[2].selected).toBe(false); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(true);  // giraffe
+    expect(node.options[2].selected).toBe(false);  // gorilla
 
@@ -233,3 +227,3 @@ describe('ReactDOMSelect', () => {
 
-    var el2 = (
+    var el2 =
       <select multiple={true} value={[objectToString]}>
@@ -238,9 +232,8 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     ReactDOM.render(el2, container);
 
-    expect(node.options[0].selected).toBe(true); // monkey
-    expect(node.options[1].selected).toBe(false); // giraffe
-    expect(node.options[2].selected).toBe(false); // gorilla
+    expect(node.options[0].selected).toBe(true);  // monkey
+    expect(node.options[1].selected).toBe(false);  // giraffe
+    expect(node.options[2].selected).toBe(false);  // gorilla
   });
@@ -248,3 +241,3 @@ describe('ReactDOMSelect', () => {
   it('should allow switching to multiple', () => {
-    var stub = (
+    var stub =
       <select defaultValue="giraffe">
@@ -253,4 +246,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var options = stub.props.children;
@@ -260,5 +252,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(true); // giraffe
-    expect(node.options[2].selected).toBe(false); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(true);  // giraffe
+    expect(node.options[2].selected).toBe(false);  // gorilla
 
@@ -269,8 +261,8 @@ describe('ReactDOMSelect', () => {
       </select>,
-      container,
+      container
     );
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(true); // giraffe
-    expect(node.options[2].selected).toBe(true); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(true);  // giraffe
+    expect(node.options[2].selected).toBe(true);  // gorilla
   });
@@ -278,3 +270,3 @@ describe('ReactDOMSelect', () => {
   it('should allow switching from multiple', () => {
-    var stub = (
+    var stub =
       <select multiple={true} defaultValue={['giraffe', 'gorilla']}>
@@ -283,4 +275,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var options = stub.props.children;
@@ -290,5 +281,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(true); // giraffe
-    expect(node.options[2].selected).toBe(true); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(true);  // giraffe
+    expect(node.options[2].selected).toBe(true);  // gorilla
 
@@ -298,8 +289,9 @@ describe('ReactDOMSelect', () => {
       <select defaultValue="gorilla">{options}</select>,
-      container,
+      container
     );
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(false); // giraffe
-    expect(node.options[2].selected).toBe(true); // gorilla
+
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(false);  // giraffe
+    expect(node.options[2].selected).toBe(true);  // gorilla
   });
@@ -307,3 +299,3 @@ describe('ReactDOMSelect', () => {
   it('should remember value when switching to uncontrolled', () => {
-    var stub = (
+    var stub =
       <select value={'giraffe'} onChange={noop}>
@@ -312,4 +304,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var options = stub.props.children;
@@ -319,5 +310,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(true); // giraffe
-    expect(node.options[2].selected).toBe(false); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(true);  // giraffe
+    expect(node.options[2].selected).toBe(false);  // gorilla
 
@@ -325,5 +316,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(true); // giraffe
-    expect(node.options[2].selected).toBe(false); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(true);  // giraffe
+    expect(node.options[2].selected).toBe(false);  // gorilla
   });
@@ -331,3 +322,3 @@ describe('ReactDOMSelect', () => {
   it('should remember updated value when switching to uncontrolled', () => {
-    var stub = (
+    var stub =
       <select value={'giraffe'} onChange={noop}>
@@ -336,4 +327,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var options = stub.props.children;
@@ -345,8 +335,8 @@ describe('ReactDOMSelect', () => {
       <select value="gorilla" onChange={noop}>{options}</select>,
-      container,
+      container
     );
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(false); // giraffe
-    expect(node.options[2].selected).toBe(true); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(false);  // giraffe
+    expect(node.options[2].selected).toBe(true);  // gorilla
 
@@ -354,5 +344,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(false); // giraffe
-    expect(node.options[2].selected).toBe(true); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(false);  // giraffe
+    expect(node.options[2].selected).toBe(true);  // gorilla
   });
@@ -361,3 +351,3 @@ describe('ReactDOMSelect', () => {
     var link = new ReactLink('giraffe', jest.fn());
-    var stub = (
+    var stub =
       <select valueLink={link}>
@@ -366,4 +356,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
 
@@ -375,3 +364,3 @@ describe('ReactDOMSelect', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.',
+      '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.'
     );
@@ -380,5 +369,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(true); // giraffe
-    expect(node.options[2].selected).toBe(false); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(true);  // giraffe
+    expect(node.options[2].selected).toBe(false);  // gorilla
     expect(link.requestChange.mock.calls.length).toBe(0);
@@ -391,2 +380,3 @@ describe('ReactDOMSelect', () => {
     expect(link.requestChange.mock.calls[0][0]).toEqual('gorilla');
+
   });
@@ -394,3 +384,3 @@ describe('ReactDOMSelect', () => {
   it('should support server-side rendering', () => {
-    var stub = (
+    var stub =
       <select value="giraffe" onChange={noop}>
@@ -399,4 +389,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var markup = ReactDOMServer.renderToString(stub);
@@ -408,3 +397,3 @@ describe('ReactDOMSelect', () => {
   it('should support server-side rendering with defaultValue', () => {
-    var stub = (
+    var stub =
       <select defaultValue="giraffe">
@@ -413,4 +402,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var markup = ReactDOMServer.renderToString(stub);
@@ -422,3 +410,3 @@ describe('ReactDOMSelect', () => {
   it('should support server-side rendering with multiple', () => {
-    var stub = (
+    var stub =
       <select multiple={true} value={['giraffe', 'gorilla']} onChange={noop}>
@@ -427,4 +415,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     var markup = ReactDOMServer.renderToString(stub);
@@ -444,3 +431,3 @@ describe('ReactDOMSelect', () => {
       </select>,
-      container,
+      container
     );
@@ -448,5 +435,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(true); // giraffe
-    expect(node.options[2].selected).toBe(false); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(true);  // giraffe
+    expect(node.options[2].selected).toBe(false);  // gorilla
 
@@ -457,7 +444,7 @@ describe('ReactDOMSelect', () => {
       </select>,
-      container,
+      container
     );
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(false); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(false);  // gorilla
 
@@ -469,8 +456,8 @@ describe('ReactDOMSelect', () => {
       </select>,
-      container,
+      container
     );
 
-    expect(node.options[0].selected).toBe(false); // monkey
-    expect(node.options[1].selected).toBe(false); // giraffe
-    expect(node.options[2].selected).toBe(false); // gorilla
+    expect(node.options[0].selected).toBe(false);  // monkey
+    expect(node.options[1].selected).toBe(false);  // giraffe
+    expect(node.options[2].selected).toBe(false);  // gorilla
   });
@@ -480,14 +467,10 @@ describe('ReactDOMSelect', () => {
 
-    ReactTestUtils.renderIntoDocument(
-      <select value={null}><option value="test" /></select>,
-    );
+    ReactTestUtils.renderIntoDocument(<select value={null}><option value="test"/></select>);
     expect(console.error.calls.argsFor(0)[0]).toContain(
       '`value` prop on `select` should not be null. ' +
-        'Consider using the empty string to clear the component or `undefined` ' +
-        'for uncontrolled components.',
+      'Consider using the empty string to clear the component or `undefined` ' +
+      'for uncontrolled components.'
     );
 
-    ReactTestUtils.renderIntoDocument(
-      <select value={null}><option value="test" /></select>,
-    );
+    ReactTestUtils.renderIntoDocument(<select value={null}><option value="test"/></select>);
     expect(console.error.calls.count()).toBe(1);
@@ -496,3 +479,3 @@ describe('ReactDOMSelect', () => {
   it('should refresh state on change', () => {
-    var stub = (
+    var stub =
       <select value="giraffe" onChange={noop}>
@@ -501,4 +484,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     stub = ReactTestUtils.renderIntoDocument(stub);
@@ -518,3 +500,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>,
+      </select>
     );
@@ -522,6 +504,6 @@ describe('ReactDOMSelect', () => {
       'Select elements must be either controlled or uncontrolled ' +
-        '(specify either the value prop, or the defaultValue prop, but not ' +
-        'both). Decide between using a controlled or uncontrolled select ' +
-        'element and remove one of these props. More info: ' +
-        'https://fb.me/react-controlled-components',
+      '(specify either the value prop, or the defaultValue prop, but not ' +
+      'both). Decide between using a controlled or uncontrolled select ' +
+      'element and remove one of these props. More info: ' +
+      'https://fb.me/react-controlled-components'
     );
@@ -533,3 +515,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>,
+      </select>
     );
@@ -544,3 +526,3 @@ describe('ReactDOMSelect', () => {
     var container = document.createElement('div');
-    var stub = (
+    var stub =
       <select value="giraffe" onChange={changeView}>
@@ -549,4 +531,3 @@ describe('ReactDOMSelect', () => {
         <option value="gorilla">A gorilla!</option>
-      </select>
-    );
+      </select>;
     stub = ReactDOM.render(stub, container);
@@ -555,3 +536,3 @@ describe('ReactDOMSelect', () => {
     expect(() => ReactTestUtils.Simulate.change(node)).not.toThrow(
-      "Cannot set property 'pendingUpdate' of null",
+      "Cannot set property 'pendingUpdate' of null"
     );
@@ -560,3 +541,3 @@ describe('ReactDOMSelect', () => {
   it('should select grandchild options nested inside an optgroup', () => {
-    var stub = (
+    var stub =
       <select value="b" onChange={noop}>
@@ -567,4 +548,3 @@ describe('ReactDOMSelect', () => {
         </optgroup>
-      </select>
-    );
+      </select>;
     var container = document.createElement('div');
@@ -572,5 +552,5 @@ describe('ReactDOMSelect', () => {
 
-    expect(node.options[0].selected).toBe(false); // a
-    expect(node.options[1].selected).toBe(true); // b
-    expect(node.options[2].selected).toBe(false); // c
+    expect(node.options[0].selected).toBe(false);  // a
+    expect(node.options[1].selected).toBe(true);   // b
+    expect(node.options[2].selected).toBe(false);  // c
   });
diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js
index a4bfa8807..613b9debf 100644
--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js
+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js
@@ -125,3 +125,3 @@ describe('ReactDOMTextarea', () => {
       <textarea value="gorilla" onChange={emptyFunction} />,
-      container,
+      container
     );
@@ -156,3 +156,3 @@ describe('ReactDOMTextarea', () => {
       <textarea value={true} onChange={emptyFunction} />,
-      container,
+      container
     );
@@ -170,3 +170,3 @@ describe('ReactDOMTextarea', () => {
       <textarea value={false} onChange={emptyFunction} />,
-      container,
+      container
     );
@@ -189,3 +189,3 @@ describe('ReactDOMTextarea', () => {
       <textarea value={objToString} onChange={emptyFunction} />,
-      container,
+      container
     );
@@ -270,6 +270,3 @@ describe('ReactDOMTextarea', () => {
 
-    var node = renderTextarea(
-      <textarea value="kitten" onChange={emptyFunction} />,
-      container,
-    );
+    var node = renderTextarea(<textarea value="kitten" onChange={emptyFunction} />, container);
 
@@ -285,6 +282,3 @@ describe('ReactDOMTextarea', () => {
 
-    var node = renderTextarea(
-      <textarea value="kitten" onChange={emptyFunction} />,
-      container,
-    );
+    var node = renderTextarea(<textarea value="kitten" onChange={emptyFunction} />, container);
 
@@ -292,6 +286,3 @@ describe('ReactDOMTextarea', () => {
 
-    ReactDOM.render(
-      <textarea value="puppies" onChange={emptyFunction} />,
-      container,
-    );
+    ReactDOM.render(<textarea value="puppies" onChange={emptyFunction} />, container);
 
@@ -335,3 +326,3 @@ describe('ReactDOMTextarea', () => {
       ReactTestUtils.renderIntoDocument(
-        <textarea>{'hello'}{'there'}</textarea>,
+        <textarea>{'hello'}{'there'}</textarea>
       );
@@ -359,5 +350,6 @@ describe('ReactDOMTextarea', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.',
+      '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.'
     );
 
+
     expect(instance.value).toBe('yolo');
@@ -385,4 +377,4 @@ describe('ReactDOMTextarea', () => {
       '`value` prop on `textarea` should not be null. ' +
-        'Consider using the empty string to clear the component or `undefined` ' +
-        'for uncontrolled components.',
+      'Consider using the empty string to clear the component or `undefined` ' +
+      'for uncontrolled components.'
     );
@@ -396,3 +388,3 @@ describe('ReactDOMTextarea', () => {
     ReactTestUtils.renderIntoDocument(
-      <textarea value="foo" defaultValue="bar" readOnly={true} />,
+      <textarea value="foo" defaultValue="bar" readOnly={true} />
     );
@@ -400,6 +392,6 @@ describe('ReactDOMTextarea', () => {
       'Textarea elements must be either controlled or uncontrolled ' +
-        '(specify either the value prop, or the defaultValue prop, but not ' +
-        'both). Decide between using a controlled or uncontrolled textarea ' +
-        'and remove one of these props. More info: ' +
-        'https://fb.me/react-controlled-components',
+      '(specify either the value prop, or the defaultValue prop, but not ' +
+      'both). Decide between using a controlled or uncontrolled textarea ' +
+      'and remove one of these props. More info: ' +
+      'https://fb.me/react-controlled-components'
     );
@@ -407,3 +399,3 @@ describe('ReactDOMTextarea', () => {
     ReactTestUtils.renderIntoDocument(
-      <textarea value="foo" defaultValue="bar" readOnly={true} />,
+      <textarea value="foo" defaultValue="bar" readOnly={true} />
     );
@@ -411,2 +403,3 @@ describe('ReactDOMTextarea', () => {
   });
+
 });
diff --git a/src/renderers/dom/fiber/ReactDOMFiber.js b/src/renderers/dom/fiber/ReactDOMFiber.js
index 88a6b0cdb..d4b9c7584 100644
--- a/src/renderers/dom/fiber/ReactDOMFiber.js
+++ b/src/renderers/dom/fiber/ReactDOMFiber.js
@@ -14,3 +14,3 @@
 
-import type {HostChildren} from 'ReactFiberReconciler';
+import type { HostChildren } from 'ReactFiberReconciler';
 
@@ -20,12 +20,9 @@ var warning = require('warning');
 
-type DOMContainerElement = Element & {_reactRootContainer: ?Object};
+type DOMContainerElement = Element & { _reactRootContainer: ?Object };
 
 type Container = Element;
-type Props = {};
+type Props = { };
 type Instance = Element;
 
-function recursivelyAppendChildren(
-  parent: Element,
-  child: HostChildren<Instance>,
-) {
+function recursivelyAppendChildren(parent : Element, child : HostChildren<Instance>) {
   if (!child) {
@@ -39,6 +36,6 @@ function recursivelyAppendChildren(
     /* As a result of the refinement issue this type isn't known. */
-    let node: any = child;
+    let node : any = child;
     do {
       recursivelyAppendChildren(parent, node.output);
-    } while ((node = node.sibling));
+    } while (node = node.sibling);
   }
@@ -47,6 +44,4 @@ function recursivelyAppendChildren(
 var DOMRenderer = ReactFiberReconciler({
-  updateContainer(
-    container: Container,
-    children: HostChildren<Instance>,
-  ): void {
+
+  updateContainer(container : Container, children : HostChildren<Instance>) : void {
     container.innerHTML = '';
@@ -55,7 +50,3 @@ var DOMRenderer = ReactFiberReconciler({
 
-  createInstance(
-    type: string,
-    props: Props,
-    children: HostChildren<Instance>,
-  ): Instance {
+  createInstance(type : string, props : Props, children : HostChildren<Instance>) : Instance {
     const domElement = document.createElement(type);
@@ -69,7 +60,7 @@ var DOMRenderer = ReactFiberReconciler({
   prepareUpdate(
-    domElement: Instance,
-    oldProps: Props,
-    newProps: Props,
-    children: HostChildren<Instance>,
-  ): boolean {
+    domElement : Instance,
+    oldProps : Props,
+    newProps : Props,
+    children : HostChildren<Instance>
+  ) : boolean {
     return true;
@@ -77,8 +68,3 @@ var DOMRenderer = ReactFiberReconciler({
 
-  commitUpdate(
-    domElement: Instance,
-    oldProps: Props,
-    newProps: Props,
-    children: HostChildren<Instance>,
-  ): void {
+  commitUpdate(domElement : Instance, oldProps : Props, newProps : Props, children : HostChildren<Instance>) : void {
     domElement.innerHTML = '';
@@ -90,3 +76,3 @@ var DOMRenderer = ReactFiberReconciler({
 
-  deleteInstance(instance: Instance): void {
+  deleteInstance(instance : Instance) : void {
     // Noop
@@ -97,2 +83,3 @@ var DOMRenderer = ReactFiberReconciler({
   scheduleDeferredCallback: window.requestIdleCallback,
+
 });
@@ -105,3 +92,3 @@ function warnAboutUnstableUse() {
     'You are using React DOM Fiber which is an experimental renderer. ' +
-      'It is likely to have bugs, breaking changes and is unsupported.',
+    'It is likely to have bugs, breaking changes and is unsupported.'
   );
@@ -111,9 +98,7 @@ function warnAboutUnstableUse() {
 var ReactDOM = {
-  render(element: ReactElement<any>, container: DOMContainerElement) {
+
+  render(element : ReactElement<any>, container : DOMContainerElement) {
     warnAboutUnstableUse();
     if (!container._reactRootContainer) {
-      container._reactRootContainer = DOMRenderer.mountContainer(
-        element,
-        container,
-      );
+      container._reactRootContainer = DOMRenderer.mountContainer(element, container);
     } else {
@@ -123,3 +108,3 @@ var ReactDOM = {
 
-  unmountComponentAtNode(container: DOMContainerElement) {
+  unmountComponentAtNode(container : DOMContainerElement) {
     warnAboutUnstableUse();
@@ -133,2 +118,3 @@ var ReactDOM = {
   },
+
 };
diff --git a/src/renderers/dom/server/ReactMarkupChecksum.js b/src/renderers/dom/server/ReactMarkupChecksum.js
index 09e477c47..8d0265426 100644
--- a/src/renderers/dom/server/ReactMarkupChecksum.js
+++ b/src/renderers/dom/server/ReactMarkupChecksum.js
@@ -18,2 +18,3 @@ var COMMENT_START = /^<\!\-\-/;
 
+
 var ReactMarkupChecksum = {
@@ -34,3 +35,3 @@ var ReactMarkupChecksum = {
         TAG_END,
-        ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&',
+        ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&'
       );
@@ -46,3 +47,3 @@ var ReactMarkupChecksum = {
     var existingChecksum = element.getAttribute(
-      ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
+      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
     );
diff --git a/src/renderers/dom/server/ReactServerRendering.js b/src/renderers/dom/server/ReactServerRendering.js
index 2c7b7b5d0..ff08fe8ff 100644
--- a/src/renderers/dom/server/ReactServerRendering.js
+++ b/src/renderers/dom/server/ReactServerRendering.js
@@ -19,3 +19,4 @@ var ReactReconciler = require('ReactReconciler');
 var ReactServerBatchingStrategy = require('ReactServerBatchingStrategy');
-var ReactServerRenderingTransaction = require('ReactServerRenderingTransaction');
+var ReactServerRenderingTransaction =
+  require('ReactServerRenderingTransaction');
 var ReactUpdates = require('ReactUpdates');
@@ -49,3 +50,3 @@ function renderToStringImpl(element, makeStaticMarkup) {
         emptyObject,
-        0 /* parentDebugID */,
+        0 /* parentDebugID */
       );
@@ -53,3 +54,3 @@ function renderToStringImpl(element, makeStaticMarkup) {
         ReactInstrumentation.debugTool.onUnmountComponent(
-          componentInstance._debugID,
+          componentInstance._debugID
         );
@@ -68,3 +69,3 @@ function renderToStringImpl(element, makeStaticMarkup) {
       ReactUpdates.injection.injectBatchingStrategy(
-        ReactDefaultBatchingStrategy,
+        ReactDefaultBatchingStrategy
       );
@@ -82,3 +83,3 @@ function renderToString(element) {
     React.isValidElement(element),
-    'renderToString(): You must pass a valid ReactElement.',
+    'renderToString(): You must pass a valid ReactElement.'
   );
@@ -95,3 +96,3 @@ function renderToStaticMarkup(element) {
     React.isValidElement(element),
-    'renderToStaticMarkup(): You must pass a valid ReactElement.',
+    'renderToStaticMarkup(): You must pass a valid ReactElement.'
   );
diff --git a/src/renderers/dom/server/ReactServerRenderingTransaction.js b/src/renderers/dom/server/ReactServerRenderingTransaction.js
index 2fa930cc4..0a8936bbb 100644
--- a/src/renderers/dom/server/ReactServerRenderingTransaction.js
+++ b/src/renderers/dom/server/ReactServerRenderingTransaction.js
@@ -18,2 +18,3 @@ var ReactServerUpdateQueue = require('ReactServerUpdateQueue');
 
+
 /**
@@ -76,10 +77,18 @@ var Mixin = {
    */
-  destructor: function() {},
+  destructor: function() {
+  },
 
-  checkpoint: function() {},
+  checkpoint: function() {
+  },
 
-  rollback: function() {},
+  rollback: function() {
+  },
 };
 
-Object.assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);
+
+Object.assign(
+  ReactServerRenderingTransaction.prototype,
+  Transaction,
+  Mixin
+);
 
diff --git a/src/renderers/dom/server/ReactServerUpdateQueue.js b/src/renderers/dom/server/ReactServerUpdateQueue.js
index 30ebd5bf7..b1e6a54c2 100644
--- a/src/renderers/dom/server/ReactServerUpdateQueue.js
+++ b/src/renderers/dom/server/ReactServerUpdateQueue.js
@@ -18,8 +18,5 @@ var warning = require('warning');
 
-import type {Transaction} from 'Transaction';
+import type { Transaction } from 'Transaction';
 
-function warnNoop(
-  publicInstance: ReactComponent<any, any, any>,
-  callerName: string,
-) {
+function warnNoop(publicInstance: ReactComponent<any, any, any>, callerName: string) {
   if (__DEV__) {
@@ -29,8 +26,7 @@ function warnNoop(
       '%s(...): Can only update a mounting component. ' +
-        'This usually means you called %s() outside componentWillMount() on the server. ' +
-        'This is a no-op. Please check the code for the %s component.',
+      'This usually means you called %s() outside componentWillMount() on the server. ' +
+      'This is a no-op. Please check the code for the %s component.',
       callerName,
       callerName,
-      (constructor && (constructor.displayName || constructor.name)) ||
-        'ReactClass',
+      constructor && (constructor.displayName || constructor.name) || 'ReactClass'
     );
@@ -72,7 +68,3 @@ class ReactServerUpdateQueue {
    */
-  enqueueCallback(
-    publicInstance: ReactComponent<any, any, any>,
-    callback?: Function,
-    callerName?: string,
-  ) {
+  enqueueCallback(publicInstance: ReactComponent<any, any, any>, callback?: Function, callerName?: string) {
     if (this.transaction.isInTransaction()) {
@@ -114,6 +106,3 @@ class ReactServerUpdateQueue {
    */
-  enqueueReplaceState(
-    publicInstance: ReactComponent<any, any, any>,
-    completeState: Object | Function,
-  ) {
+  enqueueReplaceState(publicInstance: ReactComponent<any, any, any>, completeState: Object|Function) {
     if (this.transaction.isInTransaction()) {
@@ -135,6 +124,3 @@ class ReactServerUpdateQueue {
    */
-  enqueueSetState(
-    publicInstance: ReactComponent<any, any, any>,
-    partialState: Object | Function,
-  ) {
+  enqueueSetState(publicInstance: ReactComponent<any, any, any>, partialState: Object|Function) {
     if (this.transaction.isInTransaction()) {
diff --git a/src/renderers/dom/server/__tests__/ReactServerRendering-test.js b/src/renderers/dom/server/__tests__/ReactServerRendering-test.js
index 50e3be5c8..af931eb40 100644
--- a/src/renderers/dom/server/__tests__/ReactServerRendering-test.js
+++ b/src/renderers/dom/server/__tests__/ReactServerRendering-test.js
@@ -45,15 +45,9 @@ describe('ReactServerRendering', () => {
       var response = ReactServerRendering.renderToString(
-        <span>hello world</span>,
-      );
-      expect(response).toMatch(
-        new RegExp(
-          '<span ' +
-            ROOT_ATTRIBUTE_NAME +
-            '="" ' +
-            ID_ATTRIBUTE_NAME +
-            '="[^"]+" ' +
-            ReactMarkupChecksum.CHECKSUM_ATTR_NAME +
-            '="[^"]+">hello world</span>',
-        ),
+        <span>hello world</span>
       );
+      expect(response).toMatch(new RegExp(
+        '<span ' + ROOT_ATTRIBUTE_NAME + '="" ' +
+          ID_ATTRIBUTE_NAME + '="[^"]+" ' +
+          ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="[^"]+">hello world</span>'
+      ));
     });
@@ -61,14 +55,10 @@ describe('ReactServerRendering', () => {
     it('should generate simple markup for self-closing tags', () => {
-      var response = ReactServerRendering.renderToString(<img />);
-      expect(response).toMatch(
-        new RegExp(
-          '<img ' +
-            ROOT_ATTRIBUTE_NAME +
-            '="" ' +
-            ID_ATTRIBUTE_NAME +
-            '="[^"]+" ' +
-            ReactMarkupChecksum.CHECKSUM_ATTR_NAME +
-            '="[^"]+"/>',
-        ),
+      var response = ReactServerRendering.renderToString(
+        <img />
       );
+      expect(response).toMatch(new RegExp(
+        '<img ' + ROOT_ATTRIBUTE_NAME + '="" ' +
+          ID_ATTRIBUTE_NAME + '="[^"]+" ' +
+          ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="[^"]+"/>'
+      ));
     });
@@ -76,14 +66,10 @@ describe('ReactServerRendering', () => {
     it('should generate simple markup for attribute with `>` symbol', () => {
-      var response = ReactServerRendering.renderToString(<img data-attr=">" />);
-      expect(response).toMatch(
-        new RegExp(
-          '<img data-attr="&gt;" ' +
-            ROOT_ATTRIBUTE_NAME +
-            '="" ' +
-            ID_ATTRIBUTE_NAME +
-            '="[^"]+" ' +
-            ReactMarkupChecksum.CHECKSUM_ATTR_NAME +
-            '="[^"]+"/>',
-        ),
+      var response = ReactServerRendering.renderToString(
+        <img data-attr=">" />
       );
+      expect(response).toMatch(new RegExp(
+        '<img data-attr="&gt;" ' + ROOT_ATTRIBUTE_NAME + '="" ' +
+          ID_ATTRIBUTE_NAME + '="[^"]+" ' +
+          ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="[^"]+"/>'
+      ));
     });
@@ -106,3 +92,3 @@ describe('ReactServerRendering', () => {
       ReactServerRendering.renderToString(
-        <span onClick={cb}>hello world</span>,
+        <span onClick={cb}>hello world</span>
       );
@@ -124,21 +110,15 @@ describe('ReactServerRendering', () => {
 
-      var response = ReactServerRendering.renderToString(<Parent />);
-      expect(response).toMatch(
-        new RegExp(
-          '<div ' +
-            ROOT_ATTRIBUTE_NAME +
-            '="" ' +
-            ID_ATTRIBUTE_NAME +
-            '="[^"]+" ' +
-            ReactMarkupChecksum.CHECKSUM_ATTR_NAME +
-            '="[^"]+">' +
-            '<span ' +
-            ID_ATTRIBUTE_NAME +
-            '="[^"]+">' +
+      var response = ReactServerRendering.renderToString(
+        <Parent />
+      );
+      expect(response).toMatch(new RegExp(
+        '<div ' + ROOT_ATTRIBUTE_NAME + '="" ' +
+          ID_ATTRIBUTE_NAME + '="[^"]+" ' +
+          ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="[^"]+">' +
+          '<span ' + ID_ATTRIBUTE_NAME + '="[^"]+">' +
             '<!-- react-text: [0-9]+ -->My name is <!-- /react-text -->' +
             '<!-- react-text: [0-9]+ -->child<!-- /react-text -->' +
-            '</span>' +
-            '</div>',
-        ),
-      );
+          '</span>' +
+        '</div>'
+      ));
     });
@@ -190,23 +170,17 @@ describe('ReactServerRendering', () => {
 
-        var response = ReactServerRendering.renderToString(<TestComponent />);
-
-        expect(response).toMatch(
-          new RegExp(
-            '<span ' +
-              ROOT_ATTRIBUTE_NAME +
-              '="" ' +
-              ID_ATTRIBUTE_NAME +
-              '="[^"]+" ' +
-              ReactMarkupChecksum.CHECKSUM_ATTR_NAME +
-              '="[^"]+">' +
-              '<!-- react-text: [0-9]+ -->Component name: <!-- /react-text -->' +
-              '<!-- react-text: [0-9]+ -->TestComponent<!-- /react-text -->' +
-              '</span>',
-          ),
+        var response = ReactServerRendering.renderToString(
+          <TestComponent />
+        );
+
+        expect(response).toMatch(new RegExp(
+          '<span ' + ROOT_ATTRIBUTE_NAME + '="" ' +
+            ID_ATTRIBUTE_NAME + '="[^"]+" ' +
+            ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="[^"]+">' +
+            '<!-- react-text: [0-9]+ -->Component name: <!-- /react-text -->' +
+            '<!-- react-text: [0-9]+ -->TestComponent<!-- /react-text -->' +
+          '</span>'
+        ));
+        expect(lifecycle).toEqual(
+          ['getInitialState', 'componentWillMount', 'render']
         );
-        expect(lifecycle).toEqual([
-          'getInitialState',
-          'componentWillMount',
-          'render',
-        ]);
       }
@@ -270,3 +244,3 @@ describe('ReactServerRendering', () => {
       lastMarkup = ReactServerRendering.renderToString(
-        <TestComponent name="x" />,
+        <TestComponent name="x" />
       );
@@ -307,5 +281,7 @@ describe('ReactServerRendering', () => {
           ReactServerRendering,
-          'not a component',
-        ),
-      ).toThrowError('renderToString(): You must pass a valid ReactElement.');
+          'not a component'
+        )
+      ).toThrowError(
+        'renderToString(): You must pass a valid ReactElement.'
+      );
     });
@@ -328,3 +304,3 @@ describe('ReactServerRendering', () => {
       var response = ReactServerRendering.renderToStaticMarkup(
-        <TestComponent />,
+        <TestComponent />
       );
@@ -342,3 +318,3 @@ describe('ReactServerRendering', () => {
       var response = ReactServerRendering.renderToStaticMarkup(
-        <TestComponent />,
+        <TestComponent />
       );
@@ -353,3 +329,3 @@ describe('ReactServerRendering', () => {
       ReactServerRendering.renderToStaticMarkup(
-        <span onClick={cb}>hello world</span>,
+        <span onClick={cb}>hello world</span>
       );
@@ -404,3 +380,3 @@ describe('ReactServerRendering', () => {
         var response = ReactServerRendering.renderToStaticMarkup(
-          <TestComponent />,
+          <TestComponent />
         );
@@ -408,7 +384,5 @@ describe('ReactServerRendering', () => {
         expect(response).toBe('<span>Component name: TestComponent</span>');
-        expect(lifecycle).toEqual([
-          'getInitialState',
-          'componentWillMount',
-          'render',
-        ]);
+        expect(lifecycle).toEqual(
+          ['getInitialState', 'componentWillMount', 'render']
+        );
       }
@@ -426,6 +400,6 @@ describe('ReactServerRendering', () => {
           ReactServerRendering,
-          'not a component',
-        ),
+          'not a component'
+        )
       ).toThrowError(
-        'renderToStaticMarkup(): You must pass a valid ReactElement.',
+        'renderToStaticMarkup(): You must pass a valid ReactElement.'
       );
@@ -448,3 +422,5 @@ describe('ReactServerRendering', () => {
       };
-      var markup = ReactServerRendering.renderToString(<Component />);
+      var markup = ReactServerRendering.renderToString(
+        <Component />
+      );
       expect(markup.indexOf('hello, world') >= 0).toBe(true);
@@ -458,3 +434,3 @@ describe('ReactServerRendering', () => {
               <img src="foo-bar.jpg" />
-            </div>,
+            </div>
           );
@@ -480,4 +456,4 @@ describe('ReactServerRendering', () => {
             <Component />
-          </div>,
-        ),
+          </div>
+        )
       ).not.toThrow();
@@ -505,4 +481,4 @@ describe('ReactServerRendering', () => {
       'Warning: setState(...): Can only update a mounting component.' +
-        ' This usually means you called setState() outside componentWillMount() on the server.' +
-        ' This is a no-op. Please check the code for the Foo component.',
+      ' This usually means you called setState() outside componentWillMount() on the server.' +
+      ' This is a no-op. Please check the code for the Foo component.'
     );
@@ -532,4 +508,4 @@ describe('ReactServerRendering', () => {
       'Warning: forceUpdate(...): Can only update a mounting component. ' +
-        'This usually means you called forceUpdate() outside componentWillMount() on the server. ' +
-        'This is a no-op. Please check the code for the Baz component.',
+      'This usually means you called forceUpdate() outside componentWillMount() on the server. ' +
+      'This is a no-op. Please check the code for the Baz component.'
     );
@@ -548,6 +524,6 @@ describe('ReactServerRendering', () => {
         <Wrapper>
-          <span key={0} />
-          <span key={1} />
-          <span key={2} />
-        </Wrapper>,
+          <span key={0}/>
+          <span key={1}/>
+          <span key={2}/>
+        </Wrapper>
       );
diff --git a/src/renderers/dom/shared/CSSProperty.js b/src/renderers/dom/shared/CSSProperty.js
index 609175152..fa0645c98 100644
--- a/src/renderers/dom/shared/CSSProperty.js
+++ b/src/renderers/dom/shared/CSSProperty.js
@@ -32,9 +32,3 @@ var isUnitlessNumber = {
   gridRow: true,
-  gridRowEnd: true,
-  gridRowSpan: true,
-  gridRowStart: true,
   gridColumn: true,
-  gridColumnEnd: true,
-  gridColumnSpan: true,
-  gridColumnStart: true,
   fontWeight: true,
diff --git a/src/renderers/dom/shared/CSSPropertyOperations.js b/src/renderers/dom/shared/CSSPropertyOperations.js
index 2bc2ae174..81c531995 100644
--- a/src/renderers/dom/shared/CSSPropertyOperations.js
+++ b/src/renderers/dom/shared/CSSPropertyOperations.js
@@ -65,3 +65,3 @@ if (__DEV__) {
       camelizeStyleName(name),
-      checkRenderMessage(owner),
+      checkRenderMessage(owner)
     );
@@ -80,3 +80,3 @@ if (__DEV__) {
       name.charAt(0).toUpperCase() + name.slice(1),
-      checkRenderMessage(owner),
+      checkRenderMessage(owner)
     );
@@ -92,7 +92,7 @@ if (__DEV__) {
       false,
-      "Style property values shouldn't contain a semicolon.%s " +
-        'Try "%s: %s" instead.',
+      'Style property values shouldn\'t contain a semicolon.%s ' +
+      'Try "%s: %s" instead.',
       checkRenderMessage(owner),
       name,
-      value.replace(badStyleValueWithSemicolonPattern, ''),
+      value.replace(badStyleValueWithSemicolonPattern, '')
     );
@@ -110,3 +110,3 @@ if (__DEV__) {
       name,
-      checkRenderMessage(owner),
+      checkRenderMessage(owner)
     );
@@ -130,6 +130,2 @@ if (__DEV__) {
   var warnValidStyle = function(name, value, component) {
-    // Don't warn for CSS variables
-    if (name.indexOf('--') === 0) {
-      return;
-    }
     var owner;
@@ -156,2 +152,3 @@ if (__DEV__) {
 var CSSPropertyOperations = {
+
   /**
@@ -216,3 +213,3 @@ var CSSPropertyOperations = {
         styles[styleName],
-        component,
+        component
       );
@@ -221,5 +218,3 @@ var CSSPropertyOperations = {
       }
-      if (styleName.indexOf('--') === 0) {
-        style.setProperty(styleName, styleValue);
-      } else if (styleValue) {
+      if (styleValue) {
         style[styleName] = styleValue;
@@ -241,2 +236,3 @@ var CSSPropertyOperations = {
   },
+
 };
diff --git a/src/renderers/dom/shared/DOMProperty.js b/src/renderers/dom/shared/DOMProperty.js
index 3d2e36cfa..8496fb7ac 100644
--- a/src/renderers/dom/shared/DOMProperty.js
+++ b/src/renderers/dom/shared/DOMProperty.js
@@ -68,3 +68,3 @@ var DOMPropertyInjection = {
       DOMProperty._isCustomAttributeFunctions.push(
-        domPropertyConfig.isCustomAttribute,
+        domPropertyConfig.isCustomAttribute
       );
@@ -75,7 +75,7 @@ var DOMPropertyInjection = {
         !DOMProperty.properties.hasOwnProperty(propName),
-        "injectDOMPropertyConfig(...): You're trying to inject DOM property " +
-          "'%s' which has already been injected. You may be accidentally " +
-          'injecting the same DOM property config twice, or you may be ' +
-          'injecting two configs that have conflicting property names.',
-        propName,
+        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
+        '\'%s\' which has already been injected. You may be accidentally ' +
+        'injecting the same DOM property config twice, or you may be ' +
+        'injecting two configs that have conflicting property names.',
+        propName
       );
@@ -94,19 +94,13 @@ var DOMPropertyInjection = {
         hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
-        hasPositiveNumericValue: checkMask(
-          propConfig,
-          Injection.HAS_POSITIVE_NUMERIC_VALUE,
-        ),
-        hasOverloadedBooleanValue: checkMask(
-          propConfig,
-          Injection.HAS_OVERLOADED_BOOLEAN_VALUE,
-        ),
+        hasPositiveNumericValue:
+          checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
+        hasOverloadedBooleanValue:
+          checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE),
       };
       invariant(
-        propertyInfo.hasBooleanValue +
-          propertyInfo.hasNumericValue +
-          propertyInfo.hasOverloadedBooleanValue <=
-          1,
+        propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue +
+          propertyInfo.hasOverloadedBooleanValue <= 1,
         'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +
-          'numeric value, but not a combination: %s',
-        propName,
+        'numeric value, but not a combination: %s',
+        propName
       );
@@ -143,6 +137,6 @@ var DOMPropertyInjection = {
 /* eslint-disable max-len */
-var ATTRIBUTE_NAME_START_CHAR =
-  ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
+var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
 /* eslint-enable max-len */
 
+
 /**
@@ -161,2 +155,3 @@ var ATTRIBUTE_NAME_START_CHAR =
 var DOMProperty = {
+
   ID_ATTRIBUTE_NAME: 'data-reactid',
@@ -165,4 +160,3 @@ var DOMProperty = {
   ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
-  ATTRIBUTE_NAME_CHAR:
-    ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
+  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
 
diff --git a/src/renderers/dom/shared/DOMPropertyOperations.js b/src/renderers/dom/shared/DOMPropertyOperations.js
index 524b6f5a1..895a7ec71 100644
--- a/src/renderers/dom/shared/DOMPropertyOperations.js
+++ b/src/renderers/dom/shared/DOMPropertyOperations.js
@@ -21,7 +21,3 @@ var warning = require('warning');
 var VALID_ATTRIBUTE_NAME_REGEX = new RegExp(
-  '^[' +
-    DOMProperty.ATTRIBUTE_NAME_START_CHAR +
-    '][' +
-    DOMProperty.ATTRIBUTE_NAME_CHAR +
-    ']*$',
+  '^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$'
 );
@@ -42,3 +38,7 @@ function isAttributeNameSafe(attributeName) {
   illegalAttributeNameCache[attributeName] = true;
-  warning(false, 'Invalid attribute name: `%s`', attributeName);
+  warning(
+    false,
+    'Invalid attribute name: `%s`',
+    attributeName
+  );
   return false;
@@ -47,9 +47,7 @@ function isAttributeNameSafe(attributeName) {
 function shouldIgnoreValue(propertyInfo, value) {
-  return (
-    value == null ||
+  return value == null ||
     (propertyInfo.hasBooleanValue && !value) ||
     (propertyInfo.hasNumericValue && isNaN(value)) ||
-    (propertyInfo.hasPositiveNumericValue && value < 1) ||
-    (propertyInfo.hasOverloadedBooleanValue && value === false)
-  );
+    (propertyInfo.hasPositiveNumericValue && (value < 1)) ||
+    (propertyInfo.hasOverloadedBooleanValue && value === false);
 }
@@ -60,2 +58,3 @@ function shouldIgnoreValue(propertyInfo, value) {
 var DOMPropertyOperations = {
+
   /**
@@ -67,5 +66,4 @@ var DOMPropertyOperations = {
   createMarkupForID: function(id) {
-    return (
-      DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id)
-    );
+    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +
+      quoteAttributeValueForBrowser(id);
   },
@@ -92,5 +90,4 @@ var DOMPropertyOperations = {
   createMarkupForProperty: function(name, value) {
-    var propertyInfo = DOMProperty.properties.hasOwnProperty(name)
-      ? DOMProperty.properties[name]
-      : null;
+    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ?
+        DOMProperty.properties[name] : null;
     if (propertyInfo) {
@@ -100,6 +97,4 @@ var DOMPropertyOperations = {
       var attributeName = propertyInfo.attributeName;
-      if (
-        propertyInfo.hasBooleanValue ||
-        (propertyInfo.hasOverloadedBooleanValue && value === true)
-      ) {
+      if (propertyInfo.hasBooleanValue ||
+          (propertyInfo.hasOverloadedBooleanValue && value === true)) {
         return attributeName + '=""';
@@ -138,5 +133,4 @@ var DOMPropertyOperations = {
   setValueForProperty: function(node, name, value) {
-    var propertyInfo = DOMProperty.properties.hasOwnProperty(name)
-      ? DOMProperty.properties[name]
-      : null;
+    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ?
+        DOMProperty.properties[name] : null;
     if (propertyInfo) {
@@ -159,6 +153,4 @@ var DOMPropertyOperations = {
           node.setAttributeNS(namespace, attributeName, '' + value);
-        } else if (
-          propertyInfo.hasBooleanValue ||
-          (propertyInfo.hasOverloadedBooleanValue && value === true)
-        ) {
+        } else if (propertyInfo.hasBooleanValue ||
+                   (propertyInfo.hasOverloadedBooleanValue && value === true)) {
           node.setAttribute(attributeName, '');
@@ -229,5 +221,4 @@ var DOMPropertyOperations = {
   deleteValueForProperty: function(node, name) {
-    var propertyInfo = DOMProperty.properties.hasOwnProperty(name)
-      ? DOMProperty.properties[name]
-      : null;
+    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ?
+        DOMProperty.properties[name] : null;
     if (propertyInfo) {
@@ -258,2 +249,3 @@ var DOMPropertyOperations = {
   },
+
 };
diff --git a/src/renderers/dom/shared/Danger.js b/src/renderers/dom/shared/Danger.js
index b16b96adf..94f7ae4c5 100644
--- a/src/renderers/dom/shared/Danger.js
+++ b/src/renderers/dom/shared/Danger.js
@@ -21,2 +21,3 @@ var invariant = require('invariant');
 var Danger = {
+
   /**
@@ -33,5 +34,5 @@ var Danger = {
       'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
-        'worker thread. Make sure `window` and `document` are available ' +
-        'globally before requiring React when unit testing or use ' +
-        'ReactDOMServer.renderToString() for server rendering.',
+      'worker thread. Make sure `window` and `document` are available ' +
+      'globally before requiring React when unit testing or use ' +
+      'ReactDOMServer.renderToString() for server rendering.'
     );
@@ -41,5 +42,5 @@ var Danger = {
       'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +
-        '<html> node. This is because browser quirks make this unreliable ' +
-        'and/or slow. If you want to render to the root you must use ' +
-        'server rendering. See ReactDOMServer.renderToString().',
+      '<html> node. This is because browser quirks make this unreliable ' +
+      'and/or slow. If you want to render to the root you must use ' +
+      'server rendering. See ReactDOMServer.renderToString().'
     );
@@ -53,2 +54,3 @@ var Danger = {
   },
+
 };
diff --git a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js
index 1ec812427..ef0eda5e2 100644
--- a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js
+++ b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js
@@ -25,3 +25,3 @@ var HTMLDOMPropertyConfig = {
   isCustomAttribute: RegExp.prototype.test.bind(
-    new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$'),
+    new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')
   ),
diff --git a/src/renderers/dom/shared/ReactComponentBrowserEnvironment.js b/src/renderers/dom/shared/ReactComponentBrowserEnvironment.js
index 13226723b..c55233e39 100644
--- a/src/renderers/dom/shared/ReactComponentBrowserEnvironment.js
+++ b/src/renderers/dom/shared/ReactComponentBrowserEnvironment.js
@@ -22,2 +22,3 @@ var ReactDOMIDOperations = require('ReactDOMIDOperations');
 var ReactComponentBrowserEnvironment = {
+
   processChildrenUpdates:
@@ -25,3 +26,5 @@ var ReactComponentBrowserEnvironment = {
 
-  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,
+  replaceNodeWithMarkup:
+    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,
+
 };
diff --git a/src/renderers/dom/shared/ReactDOMComponent.js b/src/renderers/dom/shared/ReactDOMComponent.js
index 6c7a1ca8b..02759e1e2 100644
--- a/src/renderers/dom/shared/ReactDOMComponent.js
+++ b/src/renderers/dom/shared/ReactDOMComponent.js
@@ -39,3 +39,2 @@ var isEventSupported = require('isEventSupported');
 var shallowEqual = require('shallowEqual');
-var inputValueTracking = require('inputValueTracking');
 var validateDOMNesting = require('validateDOMNesting');
@@ -50,3 +49,3 @@ var registrationNameModules = EventPluginRegistry.registrationNameModules;
 // For quickly matching children type, to test if can be treated as content.
-var CONTENT_TYPES = {string: true, number: true};
+var CONTENT_TYPES = {'string': true, 'number': true};
 
@@ -63,2 +62,3 @@ var DOC_FRAGMENT_TYPE = 11;
 
+
 function getDeclarationErrorAddendum(internalInstance) {
@@ -84,5 +84,5 @@ function friendlyStringify(obj) {
         if (Object.prototype.hasOwnProperty.call(obj, key)) {
-          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key)
-            ? key
-            : JSON.stringify(key);
+          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ?
+            key :
+            JSON.stringify(key);
           pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
@@ -130,4 +130,4 @@ function checkAndWarnForMutatedStyle(style1, style2, component) {
     '`%s` was passed a style object that has previously been mutated. ' +
-      'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' +
-      'the `render` %s. Previous style: %s. Mutated style: %s.',
+    'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' +
+    'the `render` %s. Previous style: %s. Mutated style: %s.',
     componentName,
@@ -135,3 +135,3 @@ function checkAndWarnForMutatedStyle(style1, style2, component) {
     friendlyStringify(style1),
-    friendlyStringify(style2),
+    friendlyStringify(style2)
   );
@@ -152,9 +152,8 @@ function assertValidProps(component, props) {
       '%s is a void element tag and must neither have `children` nor ' +
-        'use `dangerouslySetInnerHTML`.%s',
+      'use `dangerouslySetInnerHTML`.%s',
       component._tag,
-      component._currentElement._owner
-        ? ' Check the render method of ' +
-            component._currentElement._owner.getName() +
-            '.'
-        : '',
+      component._currentElement._owner ?
+        ' Check the render method of ' +
+        component._currentElement._owner.getName() + '.' :
+        ''
     );
@@ -164,3 +163,3 @@ function assertValidProps(component, props) {
       props.children == null,
-      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
+      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
     );
@@ -168,6 +167,6 @@ function assertValidProps(component, props) {
       typeof props.dangerouslySetInnerHTML === 'object' &&
-        HTML in props.dangerouslySetInnerHTML,
+      HTML in props.dangerouslySetInnerHTML,
       '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +
-        'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +
-        'for more information.',
+      'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +
+      'for more information.'
     );
@@ -178,3 +177,3 @@ function assertValidProps(component, props) {
       'Directly setting property `innerHTML` is not permitted. ' +
-        'For more information, lookup documentation on `dangerouslySetInnerHTML`.',
+      'For more information, lookup documentation on `dangerouslySetInnerHTML`.'
     );
@@ -182,14 +181,15 @@ function assertValidProps(component, props) {
       props.suppressContentEditableWarning ||
-        !props.contentEditable ||
-        props.children == null,
+      !props.contentEditable ||
+      props.children == null,
       'A component is `contentEditable` and contains `children` managed by ' +
-        'React. It is now your responsibility to guarantee that none of ' +
-        'those nodes are unexpectedly modified or duplicated. This is ' +
-        'probably not intentional.',
+      'React. It is now your responsibility to guarantee that none of ' +
+      'those nodes are unexpectedly modified or duplicated. This is ' +
+      'probably not intentional.'
     );
     warning(
-      props.onFocusIn == null && props.onFocusOut == null,
+      props.onFocusIn == null &&
+      props.onFocusOut == null,
       'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' +
-        'All React events are normalized to bubble, so onFocusIn and onFocusOut ' +
-        'are not needed/supported by React.',
+      'All React events are normalized to bubble, so onFocusIn and onFocusOut ' +
+      'are not needed/supported by React.'
     );
@@ -199,5 +199,5 @@ function assertValidProps(component, props) {
     'The `style` prop expects a mapping from style properties to values, ' +
-      "not a string. For example, style={{marginRight: spacing + 'em'}} when " +
-      'using JSX.%s',
-    getDeclarationErrorAddendum(component),
+    'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' +
+    'using JSX.%s',
+     getDeclarationErrorAddendum(component)
   );
@@ -214,3 +214,3 @@ function enqueuePutListener(inst, registrationName, listener, transaction) {
       registrationName !== 'onScroll' || isEventSupported('scroll', true),
-      "This browser doesn't support the `onScroll` event",
+      'This browser doesn\'t support the `onScroll` event'
     );
@@ -218,7 +218,4 @@ function enqueuePutListener(inst, registrationName, listener, transaction) {
   var containerInfo = inst._hostContainerInfo;
-  var isDocumentFragment =
-    containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
-  var doc = isDocumentFragment
-    ? containerInfo._node
-    : containerInfo._ownerDocument;
+  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
+  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
   listenTo(registrationName, doc);
@@ -236,3 +233,3 @@ function putListener() {
     listenerToPut.registrationName,
-    listenerToPut.listener,
+    listenerToPut.listener
   );
@@ -274,13 +271,6 @@ if (__DEV__) {
     if (hasExistingContent) {
-      ReactInstrumentation.debugTool.onBeforeUpdateComponent(
-        contentDebugID,
-        content,
-      );
+      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
       ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
     } else {
-      ReactInstrumentation.debugTool.onBeforeMountComponent(
-        contentDebugID,
-        content,
-        debugID,
-      );
+      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
       ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
@@ -319,6 +309,2 @@ var mediaEvents = {
 
-function trackInputValue() {
-  inputValueTracking.track(this);
-}
-
 function trapBubbledEventsLocal() {
@@ -329,3 +315,6 @@ function trapBubbledEventsLocal() {
   var node = getNode(inst);
-  invariant(node, 'trapBubbledEvent(...): Requires node to be rendered.');
+  invariant(
+    node,
+    'trapBubbledEvent(...): Requires node to be rendered.'
+  );
 
@@ -335,3 +324,7 @@ function trapBubbledEventsLocal() {
       inst._wrapperState.listeners = [
-        ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node),
+        ReactBrowserEventEmitter.trapBubbledEvent(
+          'topLoad',
+          'load',
+          node
+        ),
       ];
@@ -340,2 +333,3 @@ function trapBubbledEventsLocal() {
     case 'audio':
+
       inst._wrapperState.listeners = [];
@@ -348,4 +342,4 @@ function trapBubbledEventsLocal() {
               mediaEvents[event],
-              node,
-            ),
+              node
+            )
           );
@@ -356,3 +350,7 @@ function trapBubbledEventsLocal() {
       inst._wrapperState.listeners = [
-        ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node),
+        ReactBrowserEventEmitter.trapBubbledEvent(
+          'topError',
+          'error',
+          node
+        ),
       ];
@@ -361,4 +359,12 @@ function trapBubbledEventsLocal() {
       inst._wrapperState.listeners = [
-        ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node),
-        ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node),
+        ReactBrowserEventEmitter.trapBubbledEvent(
+          'topError',
+          'error',
+          node
+        ),
+        ReactBrowserEventEmitter.trapBubbledEvent(
+          'topLoad',
+          'load',
+          node
+        ),
       ];
@@ -367,4 +373,12 @@ function trapBubbledEventsLocal() {
       inst._wrapperState.listeners = [
-        ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node),
-        ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node),
+        ReactBrowserEventEmitter.trapBubbledEvent(
+          'topReset',
+          'reset',
+          node
+        ),
+        ReactBrowserEventEmitter.trapBubbledEvent(
+          'topSubmit',
+          'submit',
+          node
+        ),
       ];
@@ -378,3 +392,3 @@ function trapBubbledEventsLocal() {
           'invalid',
-          node,
+          node
         ),
@@ -393,17 +407,17 @@ function postUpdateSelectWrapper() {
 var omittedCloseTags = {
-  area: true,
-  base: true,
-  br: true,
-  col: true,
-  embed: true,
-  hr: true,
-  img: true,
-  input: true,
-  keygen: true,
-  link: true,
-  meta: true,
-  param: true,
-  source: true,
-  track: true,
-  wbr: true,
+  'area': true,
+  'base': true,
+  'br': true,
+  'col': true,
+  'embed': true,
+  'hr': true,
+  'img': true,
+  'input': true,
+  'keygen': true,
+  'link': true,
+  'meta': true,
+  'param': true,
+  'source': true,
+  'track': true,
+  'wbr': true,
   // NOTE: menuitem's close tag should be omitted, but that causes problems.
@@ -412,5 +426,5 @@ var omittedCloseTags = {
 var newlineEatingTags = {
-  listing: true,
-  pre: true,
-  textarea: true,
+  'listing': true,
+  'pre': true,
+  'textarea': true,
 };
@@ -420,8 +434,5 @@ var newlineEatingTags = {
 
-var voidElementTags = Object.assign(
-  {
-    menuitem: true,
-  },
-  omittedCloseTags,
-);
+var voidElementTags = Object.assign({
+  'menuitem': true,
+}, omittedCloseTags);
 
@@ -488,2 +499,3 @@ ReactDOMComponent.displayName = 'ReactDOMComponent';
 ReactDOMComponent.Mixin = {
+
   /**
@@ -503,3 +515,3 @@ ReactDOMComponent.Mixin = {
     hostContainerInfo,
-    context,
+    context
   ) {
@@ -529,3 +541,2 @@ ReactDOMComponent.Mixin = {
         props = ReactDOMInput.getHostProps(this, props);
-        transaction.getReactMountReady().enqueue(trackInputValue, this);
         transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
@@ -544,3 +555,2 @@ ReactDOMComponent.Mixin = {
         props = ReactDOMTextarea.getHostProps(this, props);
-        transaction.getReactMountReady().enqueue(trackInputValue, this);
         transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
@@ -562,6 +572,4 @@ ReactDOMComponent.Mixin = {
     }
-    if (
-      namespaceURI == null ||
-      (namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject')
-    ) {
+    if (namespaceURI == null ||
+        namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
       namespaceURI = DOMNamespaces.html;
@@ -589,7 +597,4 @@ ReactDOMComponent.Mixin = {
       }
-      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(
-        parentInfo,
-        this._tag,
-        this,
-      );
+      this._ancestorInfo =
+        validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
     }
@@ -619,3 +624,3 @@ ReactDOMComponent.Mixin = {
           namespaceURI,
-          this._currentElement.type,
+          this._currentElement.type
         );
@@ -632,6 +637,3 @@ ReactDOMComponent.Mixin = {
     } else {
-      var tagOpen = this._createOpenTagMarkupAndPutListeners(
-        transaction,
-        props,
-      );
+      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
       var tagContent = this._createContentMarkup(transaction, props, context);
@@ -647,7 +649,11 @@ ReactDOMComponent.Mixin = {
       case 'input':
-        transaction.getReactMountReady().enqueue(inputPostMount, this);
+        transaction.getReactMountReady().enqueue(
+          inputPostMount,
+          this
+        );
         if (props.autoFocus) {
-          transaction
-            .getReactMountReady()
-            .enqueue(AutoFocusUtils.focusDOMComponent, this);
+          transaction.getReactMountReady().enqueue(
+            AutoFocusUtils.focusDOMComponent,
+            this
+          );
         }
@@ -655,7 +661,11 @@ ReactDOMComponent.Mixin = {
       case 'textarea':
-        transaction.getReactMountReady().enqueue(textareaPostMount, this);
+        transaction.getReactMountReady().enqueue(
+          textareaPostMount,
+          this
+        );
         if (props.autoFocus) {
-          transaction
-            .getReactMountReady()
-            .enqueue(AutoFocusUtils.focusDOMComponent, this);
+          transaction.getReactMountReady().enqueue(
+            AutoFocusUtils.focusDOMComponent,
+            this
+          );
         }
@@ -664,5 +674,6 @@ ReactDOMComponent.Mixin = {
         if (props.autoFocus) {
-          transaction
-            .getReactMountReady()
-            .enqueue(AutoFocusUtils.focusDOMComponent, this);
+          transaction.getReactMountReady().enqueue(
+            AutoFocusUtils.focusDOMComponent,
+            this
+          );
         }
@@ -671,5 +682,6 @@ ReactDOMComponent.Mixin = {
         if (props.autoFocus) {
-          transaction
-            .getReactMountReady()
-            .enqueue(AutoFocusUtils.focusDOMComponent, this);
+          transaction.getReactMountReady().enqueue(
+            AutoFocusUtils.focusDOMComponent,
+            this
+          );
         }
@@ -677,3 +689,6 @@ ReactDOMComponent.Mixin = {
       case 'option':
-        transaction.getReactMountReady().enqueue(optionPostMount, this);
+        transaction.getReactMountReady().enqueue(
+          optionPostMount,
+          this
+        );
         break;
@@ -719,11 +734,5 @@ ReactDOMComponent.Mixin = {
             }
-            propValue = this._previousStyleCopy = Object.assign(
-              {},
-              props.style,
-            );
+            propValue = this._previousStyleCopy = Object.assign({}, props.style);
           }
-          propValue = CSSPropertyOperations.createMarkupForStyles(
-            propValue,
-            this,
-          );
+          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
         }
@@ -732,12 +741,6 @@ ReactDOMComponent.Mixin = {
           if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
-            markup = DOMPropertyOperations.createMarkupForCustomAttribute(
-              propKey,
-              propValue,
-            );
+            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
           }
         } else {
-          markup = DOMPropertyOperations.createMarkupForProperty(
-            propKey,
-            propValue,
-          );
+          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
         }
@@ -781,5 +784,4 @@ ReactDOMComponent.Mixin = {
     } else {
-      var contentToUse = CONTENT_TYPES[typeof props.children]
-        ? props.children
-        : null;
+      var contentToUse =
+        CONTENT_TYPES[typeof props.children] ? props.children : null;
       var childrenToUse = contentToUse != null ? null : props.children;
@@ -795,3 +797,3 @@ ReactDOMComponent.Mixin = {
           transaction,
-          context,
+          context
         );
@@ -825,5 +827,4 @@ ReactDOMComponent.Mixin = {
     } else {
-      var contentToUse = CONTENT_TYPES[typeof props.children]
-        ? props.children
-        : null;
+      var contentToUse =
+        CONTENT_TYPES[typeof props.children] ? props.children : null;
       var childrenToUse = contentToUse != null ? null : props.children;
@@ -845,3 +846,3 @@ ReactDOMComponent.Mixin = {
           transaction,
-          context,
+          context
         );
@@ -903,3 +904,8 @@ ReactDOMComponent.Mixin = {
     this._updateDOMProperties(lastProps, nextProps, transaction);
-    this._updateDOMChildren(lastProps, nextProps, transaction, context);
+    this._updateDOMChildren(
+      lastProps,
+      nextProps,
+      transaction,
+      context
+    );
 
@@ -944,7 +950,5 @@ ReactDOMComponent.Mixin = {
     for (propKey in lastProps) {
-      if (
-        nextProps.hasOwnProperty(propKey) ||
-        !lastProps.hasOwnProperty(propKey) ||
-        lastProps[propKey] == null
-      ) {
+      if (nextProps.hasOwnProperty(propKey) ||
+         !lastProps.hasOwnProperty(propKey) ||
+         lastProps[propKey] == null) {
         continue;
@@ -969,8 +973,10 @@ ReactDOMComponent.Mixin = {
         if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
-          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
+          DOMPropertyOperations.deleteValueForAttribute(
+            getNode(this),
+            propKey
+          );
         }
       } else if (
-        DOMProperty.properties[propKey] ||
-        DOMProperty.isCustomAttribute(propKey)
-      ) {
+          DOMProperty.properties[propKey] ||
+          DOMProperty.isCustomAttribute(propKey)) {
         DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
@@ -980,10 +986,8 @@ ReactDOMComponent.Mixin = {
       var nextProp = nextProps[propKey];
-      var lastProp = propKey === STYLE
-        ? this._previousStyleCopy
-        : lastProps != null ? lastProps[propKey] : undefined;
-      if (
-        !nextProps.hasOwnProperty(propKey) ||
-        nextProp === lastProp ||
-        (nextProp == null && lastProp == null)
-      ) {
+      var lastProp =
+        propKey === STYLE ? this._previousStyleCopy :
+        lastProps != null ? lastProps[propKey] : undefined;
+      if (!nextProps.hasOwnProperty(propKey) ||
+          nextProp === lastProp ||
+          nextProp == null && lastProp == null) {
         continue;
@@ -996,3 +1000,3 @@ ReactDOMComponent.Mixin = {
               this._previousStyle,
-              this,
+              this
             );
@@ -1007,6 +1011,4 @@ ReactDOMComponent.Mixin = {
           for (styleName in lastProp) {
-            if (
-              lastProp.hasOwnProperty(styleName) &&
-              (!nextProp || !nextProp.hasOwnProperty(styleName))
-            ) {
+            if (lastProp.hasOwnProperty(styleName) &&
+                (!nextProp || !nextProp.hasOwnProperty(styleName))) {
               styleUpdates = styleUpdates || {};
@@ -1017,6 +1019,4 @@ ReactDOMComponent.Mixin = {
           for (styleName in nextProp) {
-            if (
-              nextProp.hasOwnProperty(styleName) &&
-              lastProp[styleName] !== nextProp[styleName]
-            ) {
+            if (nextProp.hasOwnProperty(styleName) &&
+                lastProp[styleName] !== nextProp[styleName]) {
               styleUpdates = styleUpdates || {};
@@ -1040,3 +1040,3 @@ ReactDOMComponent.Mixin = {
             propKey,
-            nextProp,
+            nextProp
           );
@@ -1044,5 +1044,4 @@ ReactDOMComponent.Mixin = {
       } else if (
-        DOMProperty.properties[propKey] ||
-        DOMProperty.isCustomAttribute(propKey)
-      ) {
+          DOMProperty.properties[propKey] ||
+          DOMProperty.isCustomAttribute(propKey)) {
         var node = getNode(this);
@@ -1062,3 +1061,3 @@ ReactDOMComponent.Mixin = {
         styleUpdates,
-        this,
+        this
       );
@@ -1077,8 +1076,6 @@ ReactDOMComponent.Mixin = {
   _updateDOMChildren: function(lastProps, nextProps, transaction, context) {
-    var lastContent = CONTENT_TYPES[typeof lastProps.children]
-      ? lastProps.children
-      : null;
-    var nextContent = CONTENT_TYPES[typeof nextProps.children]
-      ? nextProps.children
-      : null;
+    var lastContent =
+      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
+    var nextContent =
+      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
 
@@ -1158,6 +1155,2 @@ ReactDOMComponent.Mixin = {
         break;
-      case 'input':
-      case 'textarea':
-        inputValueTracking.stopTracking(this);
-        break;
       case 'html':
@@ -1174,7 +1167,7 @@ ReactDOMComponent.Mixin = {
           '<%s> tried to unmount. Because of cross-browser quirks it is ' +
-            'impossible to unmount some top-level components (eg <html>, ' +
-            '<head>, and <body>) reliably and efficiently. To fix this, have a ' +
-            'single top-level component that never unmounts render these ' +
-            'elements.',
-          this._tag,
+          'impossible to unmount some top-level components (eg <html>, ' +
+          '<head>, and <body>) reliably and efficiently. To fix this, have a ' +
+          'single top-level component that never unmounts render these ' +
+          'elements.',
+          this._tag
         );
@@ -1198,2 +1191,3 @@ ReactDOMComponent.Mixin = {
   },
+
 };
@@ -1203,3 +1197,3 @@ Object.assign(
   ReactDOMComponent.Mixin,
-  ReactMultiChild.Mixin,
+  ReactMultiChild.Mixin
 );
diff --git a/src/renderers/dom/shared/ReactDOMContainerInfo.js b/src/renderers/dom/shared/ReactDOMContainerInfo.js
index 263c42c76..0f74f733a 100644
--- a/src/renderers/dom/shared/ReactDOMContainerInfo.js
+++ b/src/renderers/dom/shared/ReactDOMContainerInfo.js
@@ -21,5 +21,5 @@ function ReactDOMContainerInfo(topLevelWrapper, node) {
     _idCounter: 1,
-    _ownerDocument: node
-      ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument
-      : null,
+    _ownerDocument: node ?
+      node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument :
+      null,
     _node: node,
@@ -29,5 +29,4 @@ function ReactDOMContainerInfo(topLevelWrapper, node) {
   if (__DEV__) {
-    info._ancestorInfo = node
-      ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null)
-      : null;
+    info._ancestorInfo = node ?
+      validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
   }
diff --git a/src/renderers/dom/shared/ReactDOMEmptyComponent.js b/src/renderers/dom/shared/ReactDOMEmptyComponent.js
index bbc631634..0a7b8c6b2 100644
--- a/src/renderers/dom/shared/ReactDOMEmptyComponent.js
+++ b/src/renderers/dom/shared/ReactDOMEmptyComponent.js
@@ -16,2 +16,3 @@ var ReactDOMComponentTree = require('ReactDOMComponentTree');
 
+
 var ReactDOMEmptyComponent = function(instantiate) {
@@ -30,3 +31,3 @@ Object.assign(ReactDOMEmptyComponent.prototype, {
     hostContainerInfo,
-    context,
+    context
   ) {
@@ -53,3 +54,4 @@ Object.assign(ReactDOMEmptyComponent.prototype, {
   },
-  receiveComponent: function() {},
+  receiveComponent: function() {
+  },
   getHostNode: function() {
diff --git a/src/renderers/dom/shared/ReactDOMTextComponent.js b/src/renderers/dom/shared/ReactDOMTextComponent.js
index c305207a9..860bc3349 100644
--- a/src/renderers/dom/shared/ReactDOMTextComponent.js
+++ b/src/renderers/dom/shared/ReactDOMTextComponent.js
@@ -52,2 +52,3 @@ var ReactDOMTextComponent = function(text) {
 Object.assign(ReactDOMTextComponent.prototype, {
+
   /**
@@ -64,3 +65,3 @@ Object.assign(ReactDOMTextComponent.prototype, {
     hostContainerInfo,
-    context,
+    context
   ) {
@@ -94,3 +95,3 @@ Object.assign(ReactDOMTextComponent.prototype, {
           lazyTree,
-          DOMLazyTree(ownerDocument.createTextNode(this._stringText)),
+          DOMLazyTree(ownerDocument.createTextNode(this._stringText))
         );
@@ -112,9 +113,4 @@ Object.assign(ReactDOMTextComponent.prototype, {
       return (
-        '<!--' +
-        openingValue +
-        '-->' +
-        escapedText +
-        '<!--' +
-        closingValue +
-        '-->'
+        '<!--' + openingValue + '-->' + escapedText +
+        '<!--' + closingValue + '-->'
       );
@@ -143,3 +139,3 @@ Object.assign(ReactDOMTextComponent.prototype, {
           commentNodes[1],
-          nextStringText,
+          nextStringText
         );
@@ -161,3 +157,3 @@ Object.assign(ReactDOMTextComponent.prototype, {
           'Missing closing comment for text component %s',
-          this._domID,
+          this._domID
         );
@@ -180,2 +176,3 @@ Object.assign(ReactDOMTextComponent.prototype, {
   },
+
 });
diff --git a/src/renderers/dom/shared/ReactDefaultInjection.js b/src/renderers/dom/shared/ReactDefaultInjection.js
index 277052c25..20b89c8c9 100644
--- a/src/renderers/dom/shared/ReactDefaultInjection.js
+++ b/src/renderers/dom/shared/ReactDefaultInjection.js
@@ -19,3 +19,4 @@ var EnterLeaveEventPlugin = require('EnterLeaveEventPlugin');
 var HTMLDOMPropertyConfig = require('HTMLDOMPropertyConfig');
-var ReactComponentBrowserEnvironment = require('ReactComponentBrowserEnvironment');
+var ReactComponentBrowserEnvironment =
+  require('ReactComponentBrowserEnvironment');
 var ReactDOMComponent = require('ReactDOMComponent');
@@ -44,3 +45,5 @@ function inject() {
 
-  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
+  ReactInjection.EventEmitter.injectReactEventListener(
+    ReactEventListener
+  );
 
@@ -65,5 +68,9 @@ function inject() {
 
-  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
+  ReactInjection.HostComponent.injectGenericComponentClass(
+    ReactDOMComponent
+  );
 
-  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
+  ReactInjection.HostComponent.injectTextComponentClass(
+    ReactDOMTextComponent
+  );
 
@@ -73,10 +80,14 @@ function inject() {
 
-  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function(
-    instantiate,
-  ) {
-    return new ReactDOMEmptyComponent(instantiate);
-  });
+  ReactInjection.EmptyComponent.injectEmptyComponentFactory(
+    function(instantiate) {
+      return new ReactDOMEmptyComponent(instantiate);
+    }
+  );
 
-  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
-  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
+  ReactInjection.Updates.injectReconcileTransaction(
+    ReactReconcileTransaction
+  );
+  ReactInjection.Updates.injectBatchingStrategy(
+    ReactDefaultBatchingStrategy
+  );
 
diff --git a/src/renderers/dom/shared/SVGDOMPropertyConfig.js b/src/renderers/dom/shared/SVGDOMPropertyConfig.js
index dbb9da3be..d2ae11d8c 100644
--- a/src/renderers/dom/shared/SVGDOMPropertyConfig.js
+++ b/src/renderers/dom/shared/SVGDOMPropertyConfig.js
@@ -294,3 +294,3 @@ var SVGDOMPropertyConfig = {
 
-Object.keys(ATTRS).forEach(key => {
+Object.keys(ATTRS).forEach((key) => {
   SVGDOMPropertyConfig.Properties[key] = 0;
diff --git a/src/renderers/dom/shared/__tests__/CSSProperty-test.js b/src/renderers/dom/shared/__tests__/CSSProperty-test.js
index 711a9c387..331d38fc2 100644
--- a/src/renderers/dom/shared/__tests__/CSSProperty-test.js
+++ b/src/renderers/dom/shared/__tests__/CSSProperty-test.js
@@ -27,10 +27,5 @@ describe('CSSProperty', () => {
     expect(CSSProperty.isUnitlessNumber.msGridRow).toBeTruthy();
-    expect(CSSProperty.isUnitlessNumber.msGridRowEnd).toBeTruthy();
-    expect(CSSProperty.isUnitlessNumber.msGridRowSpan).toBeTruthy();
-    expect(CSSProperty.isUnitlessNumber.msGridRowStart).toBeTruthy();
     expect(CSSProperty.isUnitlessNumber.msGridColumn).toBeTruthy();
-    expect(CSSProperty.isUnitlessNumber.msGridColumnEnd).toBeTruthy();
-    expect(CSSProperty.isUnitlessNumber.msGridColumnSpan).toBeTruthy();
-    expect(CSSProperty.isUnitlessNumber.msGridColumnStart).toBeTruthy();
   });
+
 });
diff --git a/src/renderers/dom/shared/__tests__/CSSPropertyOperations-test.js b/src/renderers/dom/shared/__tests__/CSSPropertyOperations-test.js
index e383549ec..b35f8a1b9 100644
--- a/src/renderers/dom/shared/__tests__/CSSPropertyOperations-test.js
+++ b/src/renderers/dom/shared/__tests__/CSSPropertyOperations-test.js
@@ -26,8 +26,6 @@ describe('CSSPropertyOperations', () => {
   it('should create markup for simple styles', () => {
-    expect(
-      CSSPropertyOperations.createMarkupForStyles({
-        backgroundColor: '#3b5998',
-        display: 'none',
-      }),
-    ).toBe('background-color:#3b5998;display:none;');
+    expect(CSSPropertyOperations.createMarkupForStyles({
+      backgroundColor: '#3b5998',
+      display: 'none',
+    })).toBe('background-color:#3b5998;display:none;');
   });
@@ -35,8 +33,6 @@ describe('CSSPropertyOperations', () => {
   it('should ignore undefined styles', () => {
-    expect(
-      CSSPropertyOperations.createMarkupForStyles({
-        backgroundColor: undefined,
-        display: 'none',
-      }),
-    ).toBe('display:none;');
+    expect(CSSPropertyOperations.createMarkupForStyles({
+      backgroundColor: undefined,
+      display: 'none',
+    })).toBe('display:none;');
   });
@@ -44,8 +40,6 @@ describe('CSSPropertyOperations', () => {
   it('should ignore null styles', () => {
-    expect(
-      CSSPropertyOperations.createMarkupForStyles({
-        backgroundColor: null,
-        display: 'none',
-      }),
-    ).toBe('display:none;');
+    expect(CSSPropertyOperations.createMarkupForStyles({
+      backgroundColor: null,
+      display: 'none',
+    })).toBe('display:none;');
   });
@@ -53,8 +47,6 @@ describe('CSSPropertyOperations', () => {
   it('should return null for no styles', () => {
-    expect(
-      CSSPropertyOperations.createMarkupForStyles({
-        backgroundColor: null,
-        display: null,
-      }),
-    ).toBe(null);
+    expect(CSSPropertyOperations.createMarkupForStyles({
+      backgroundColor: null,
+      display: null,
+    })).toBe(null);
   });
@@ -62,10 +54,8 @@ describe('CSSPropertyOperations', () => {
   it('should automatically append `px` to relevant styles', () => {
-    expect(
-      CSSPropertyOperations.createMarkupForStyles({
-        left: 0,
-        margin: 16,
-        opacity: 0.5,
-        padding: '4px',
-      }),
-    ).toBe('left:0;margin:16px;opacity:0.5;padding:4px;');
+    expect(CSSPropertyOperations.createMarkupForStyles({
+      left: 0,
+      margin: 16,
+      opacity: 0.5,
+      padding: '4px',
+    })).toBe('left:0;margin:16px;opacity:0.5;padding:4px;');
   });
@@ -73,9 +63,7 @@ describe('CSSPropertyOperations', () => {
   it('should trim values so `px` will be appended correctly', () => {
-    expect(
-      CSSPropertyOperations.createMarkupForStyles({
-        margin: '16 ',
-        opacity: 0.5,
-        padding: ' 4 ',
-      }),
-    ).toBe('margin:16px;opacity:0.5;padding:4px;');
+    expect(CSSPropertyOperations.createMarkupForStyles({
+      margin: '16 ',
+      opacity: 0.5,
+      padding: ' 4 ',
+    })).toBe('margin:16px;opacity:0.5;padding:4px;');
   });
@@ -88,5 +76,4 @@ describe('CSSPropertyOperations', () => {
       styles[property] = 1;
-      expect(CSSPropertyOperations.createMarkupForStyles(styles)).toMatch(
-        /:1;$/,
-      );
+      expect(CSSPropertyOperations.createMarkupForStyles(styles))
+        .toMatch(/:1;$/);
     });
@@ -95,8 +82,6 @@ describe('CSSPropertyOperations', () => {
   it('should create vendor-prefixed markup correctly', () => {
-    expect(
-      CSSPropertyOperations.createMarkupForStyles({
-        msTransition: 'none',
-        MozTransition: 'none',
-      }),
-    ).toBe('-ms-transition:none;-moz-transition:none;');
+    expect(CSSPropertyOperations.createMarkupForStyles({
+      msTransition: 'none',
+      MozTransition: 'none',
+    })).toBe('-ms-transition:none;-moz-transition:none;');
   });
@@ -129,3 +114,3 @@ describe('CSSPropertyOperations', () => {
       render() {
-        return <div style={{'background-color': 'crimson'}} />;
+        return <div style={{ 'background-color': 'crimson' }}/>;
       }
@@ -139,3 +124,3 @@ describe('CSSPropertyOperations', () => {
       'Warning: Unsupported style property background-color. Did you mean backgroundColor? ' +
-        'Check the render method of `Comp`.',
+      'Check the render method of `Comp`.'
     );
@@ -164,3 +149,3 @@ describe('CSSPropertyOperations', () => {
       'Warning: Unsupported style property -ms-transform. Did you mean msTransform? ' +
-        'Check the render method of `Comp`.',
+      'Check the render method of `Comp`.'
     );
@@ -168,3 +153,3 @@ describe('CSSPropertyOperations', () => {
       'Warning: Unsupported style property -webkit-transform. Did you mean WebkitTransform? ' +
-        'Check the render method of `Comp`.',
+      'Check the render method of `Comp`.'
     );
@@ -177,11 +162,7 @@ describe('CSSPropertyOperations', () => {
       render() {
-        return (
-          <div
-            style={{
-              msTransform: 'translate3d(0, 0, 0)',
-              oTransform: 'translate3d(0, 0, 0)',
-              webkitTransform: 'translate3d(0, 0, 0)',
-            }}
-          />
-        );
+        return (<div style={{
+          msTransform: 'translate3d(0, 0, 0)',
+          oTransform: 'translate3d(0, 0, 0)',
+          webkitTransform: 'translate3d(0, 0, 0)',
+        }} />);
       }
@@ -196,3 +177,3 @@ describe('CSSPropertyOperations', () => {
       'Warning: Unsupported vendor-prefixed style property oTransform. ' +
-        'Did you mean OTransform? Check the render method of `Comp`.',
+      'Did you mean OTransform? Check the render method of `Comp`.'
     );
@@ -200,3 +181,3 @@ describe('CSSPropertyOperations', () => {
       'Warning: Unsupported vendor-prefixed style property webkitTransform. ' +
-        'Did you mean WebkitTransform? Check the render method of `Comp`.',
+      'Did you mean WebkitTransform? Check the render method of `Comp`.'
     );
@@ -209,12 +190,8 @@ describe('CSSPropertyOperations', () => {
       render() {
-        return (
-          <div
-            style={{
-              fontFamily: 'Helvetica, arial',
-              backgroundImage: 'url(foo;bar)',
-              backgroundColor: 'blue;',
-              color: 'red;   ',
-            }}
-          />
-        );
+        return (<div style={{
+          fontFamily: 'Helvetica, arial',
+          backgroundImage: 'url(foo;bar)',
+          backgroundColor: 'blue;',
+          color: 'red;   ',
+        }} />);
       }
@@ -227,8 +204,8 @@ describe('CSSPropertyOperations', () => {
     expect(console.error.calls.argsFor(0)[0]).toEqual(
-      "Warning: Style property values shouldn't contain a semicolon. " +
-        'Check the render method of `Comp`. Try "backgroundColor: blue" instead.',
+      'Warning: Style property values shouldn\'t contain a semicolon. ' +
+      'Check the render method of `Comp`. Try "backgroundColor: blue" instead.',
     );
     expect(console.error.calls.argsFor(1)[0]).toEqual(
-      "Warning: Style property values shouldn't contain a semicolon. " +
-        'Check the render method of `Comp`. Try "color: red" instead.',
+      'Warning: Style property values shouldn\'t contain a semicolon. ' +
+      'Check the render method of `Comp`. Try "color: red" instead.',
     );
@@ -241,3 +218,3 @@ describe('CSSPropertyOperations', () => {
       render() {
-        return <div style={{fontSize: NaN}} />;
+        return <div style={{ fontSize: NaN }}/>;
       }
@@ -252,19 +229,5 @@ describe('CSSPropertyOperations', () => {
       'Warning: `NaN` is an invalid value for the `fontSize` css style property. ' +
-        'Check the render method of `Comp`.',
+      'Check the render method of `Comp`.'
     );
   });
-
-  it('should not warn when setting CSS variables', () => {
-    class Comp extends React.Component {
-      render() {
-        return <div style={{'--foo-primary': 'red', backgroundColor: 'red'}} />;
-      }
-    }
-
-    spyOn(console, 'error');
-    var root = document.createElement('div');
-    ReactDOM.render(<Comp />, root);
-
-    expect(console.error.calls.count()).toBe(0);
-  });
 });
diff --git a/src/renderers/dom/shared/__tests__/DOMPropertyOperations-test.js b/src/renderers/dom/shared/__tests__/DOMPropertyOperations-test.js
index 9e440956e..d5e755fbd 100644
--- a/src/renderers/dom/shared/__tests__/DOMPropertyOperations-test.js
+++ b/src/renderers/dom/shared/__tests__/DOMPropertyOperations-test.js
@@ -29,14 +29,18 @@ describe('DOMPropertyOperations', () => {
   describe('createMarkupForProperty', () => {
-    it('should create markup for simple properties', () => {
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('name', 'simple'),
-      ).toBe('name="simple"');
-
-      expect(DOMPropertyOperations.createMarkupForProperty('name', false)).toBe(
-        'name="false"',
-      );
 
-      expect(DOMPropertyOperations.createMarkupForProperty('name', null)).toBe(
-        '',
-      );
+    it('should create markup for simple properties', () => {
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'name',
+        'simple'
+      )).toBe('name="simple"');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'name',
+        false
+      )).toBe('name="false"');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'name',
+        null
+      )).toBe('');
     });
@@ -44,5 +48,6 @@ describe('DOMPropertyOperations', () => {
     it('should work with the id attribute', () => {
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('id', 'simple'),
-      ).toBe('id="simple"');
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'id',
+        'simple'
+      )).toBe('id="simple"');
     });
@@ -50,17 +55,21 @@ describe('DOMPropertyOperations', () => {
     it('should create markup for boolean properties', () => {
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('checked', 'simple'),
-      ).toBe('checked=""');
-
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('checked', true),
-      ).toBe('checked=""');
-
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('checked', false),
-      ).toBe('');
-
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('scoped', true),
-      ).toBe('scoped=""');
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'checked',
+        'simple'
+      )).toBe('checked=""');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'checked',
+        true
+      )).toBe('checked=""');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'checked',
+        false
+      )).toBe('');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'scoped',
+        true
+      )).toBe('scoped=""');
     });
@@ -68,33 +77,41 @@ describe('DOMPropertyOperations', () => {
     it('should create markup for booleanish properties', () => {
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('download', 'simple'),
-      ).toBe('download="simple"');
-
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('download', true),
-      ).toBe('download=""');
-
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('download', 'true'),
-      ).toBe('download="true"');
-
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('download', false),
-      ).toBe('');
-
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('download', 'false'),
-      ).toBe('download="false"');
-
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('download', undefined),
-      ).toBe('');
-
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('download', null),
-      ).toBe('');
-
-      expect(DOMPropertyOperations.createMarkupForProperty('download', 0)).toBe(
-        'download="0"',
-      );
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'download',
+        'simple'
+      )).toBe('download="simple"');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'download',
+        true
+      )).toBe('download=""');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'download',
+        'true'
+      )).toBe('download="true"');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'download',
+        false
+      )).toBe('');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'download',
+        'false'
+      )).toBe('download="false"');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'download',
+        undefined
+      )).toBe('');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'download',
+        null
+      )).toBe('');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'download',
+        0
+      )).toBe('download="0"');
     });
@@ -102,13 +119,16 @@ describe('DOMPropertyOperations', () => {
     it('should create markup for custom attributes', () => {
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('aria-label', 'simple'),
-      ).toBe('aria-label="simple"');
-
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('aria-label', false),
-      ).toBe('aria-label="false"');
-
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('aria-label', null),
-      ).toBe('');
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'aria-label',
+        'simple'
+      )).toBe('aria-label="simple"');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'aria-label',
+        false
+      )).toBe('aria-label="false"');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'aria-label',
+        null
+      )).toBe('');
     });
@@ -116,16 +136,23 @@ describe('DOMPropertyOperations', () => {
     it('should create markup for numeric properties', () => {
-      expect(DOMPropertyOperations.createMarkupForProperty('start', 5)).toBe(
-        'start="5"',
-      );
-
-      expect(DOMPropertyOperations.createMarkupForProperty('start', 0)).toBe(
-        'start="0"',
-      );
-
-      expect(DOMPropertyOperations.createMarkupForProperty('size', 0)).toBe('');
-
-      expect(DOMPropertyOperations.createMarkupForProperty('size', 1)).toBe(
-        'size="1"',
-      );
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'start',
+        5
+      )).toBe('start="5"');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'start',
+        0
+      )).toBe('start="0"');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'size',
+        0
+      )).toBe('');
+
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'size',
+        1
+      )).toBe('size="1"');
     });
+
   });
@@ -133,10 +160,13 @@ describe('DOMPropertyOperations', () => {
   describe('createMarkupForProperty', () => {
-    it('should allow custom properties on web components', () => {
-      expect(
-        DOMPropertyOperations.createMarkupForCustomAttribute('awesomeness', 5),
-      ).toBe('awesomeness="5"');
 
-      expect(
-        DOMPropertyOperations.createMarkupForCustomAttribute('dev', 'jim'),
-      ).toBe('dev="jim"');
+    it('should allow custom properties on web components', () => {
+      expect(DOMPropertyOperations.createMarkupForCustomAttribute(
+        'awesomeness',
+        5
+      )).toBe('awesomeness="5"');
+
+      expect(DOMPropertyOperations.createMarkupForCustomAttribute(
+        'dev',
+        'jim'
+      )).toBe('dev="jim"');
     });
@@ -170,10 +200,7 @@ describe('DOMPropertyOperations', () => {
         'xlinkHref',
-        'about:blank',
+        'about:blank'
       );
       expect(stubNode.setAttributeNS.calls.count()).toBe(1);
-      expect(stubNode.setAttributeNS.calls.argsFor(0)).toEqual([
-        'http://www.w3.org/1999/xlink',
-        'xlink:href',
-        'about:blank',
-      ]);
+      expect(stubNode.setAttributeNS.calls.argsFor(0))
+        .toEqual(['http://www.w3.org/1999/xlink', 'xlink:href', 'about:blank']);
     });
@@ -181,7 +208,3 @@ describe('DOMPropertyOperations', () => {
     it('should set values as boolean properties', () => {
-      DOMPropertyOperations.setValueForProperty(
-        stubNode,
-        'disabled',
-        'disabled',
-      );
+      DOMPropertyOperations.setValueForProperty(stubNode, 'disabled', 'disabled');
       expect(stubNode.getAttribute('disabled')).toBe('');
@@ -219,3 +242,3 @@ describe('DOMPropertyOperations', () => {
         'allowFullScreen',
-        false,
+        false
       );
@@ -225,5 +248,13 @@ describe('DOMPropertyOperations', () => {
     it('should remove when setting custom attr to null', () => {
-      DOMPropertyOperations.setValueForProperty(stubNode, 'data-foo', 'bar');
+      DOMPropertyOperations.setValueForProperty(
+        stubNode,
+        'data-foo',
+        'bar'
+      );
       expect(stubNode.hasAttribute('data-foo')).toBe(true);
-      DOMPropertyOperations.setValueForProperty(stubNode, 'data-foo', null);
+      DOMPropertyOperations.setValueForProperty(
+        stubNode,
+        'data-foo',
+        null
+      );
       expect(stubNode.hasAttribute('data-foo')).toBe(false);
@@ -244,3 +275,3 @@ describe('DOMPropertyOperations', () => {
         'foobar',
-        'cows say moo',
+        'cows say moo'
       );
@@ -256,3 +287,3 @@ describe('DOMPropertyOperations', () => {
         'className',
-        'selected',
+        'selected'
       );
@@ -260,3 +291,7 @@ describe('DOMPropertyOperations', () => {
 
-      DOMPropertyOperations.setValueForProperty(stubNode, 'className', null);
+      DOMPropertyOperations.setValueForProperty(
+        stubNode,
+        'className',
+        null
+      );
       // className should be '', not 'null' or null (which becomes 'null' in
@@ -268,6 +303,14 @@ describe('DOMPropertyOperations', () => {
     it('should remove property properly for boolean properties', () => {
-      DOMPropertyOperations.setValueForProperty(stubNode, 'hidden', true);
+      DOMPropertyOperations.setValueForProperty(
+        stubNode,
+        'hidden',
+        true
+      );
       expect(stubNode.hasAttribute('hidden')).toBe(true);
 
-      DOMPropertyOperations.setValueForProperty(stubNode, 'hidden', false);
+      DOMPropertyOperations.setValueForProperty(
+        stubNode,
+        'hidden',
+        false
+      );
       expect(stubNode.hasAttribute('hidden')).toBe(false);
@@ -288,6 +331,14 @@ describe('DOMPropertyOperations', () => {
 
-      DOMPropertyOperations.setValueForProperty(stubNode, 'foobar', 'selected');
+      DOMPropertyOperations.setValueForProperty(
+        stubNode,
+        'foobar',
+        'selected'
+      );
       expect(stubNode.className).toBe('selected');
 
-      DOMPropertyOperations.setValueForProperty(stubNode, 'foobar', null);
+      DOMPropertyOperations.setValueForProperty(
+        stubNode,
+        'foobar',
+        null
+      );
       // className should be '', not 'null' or null (which becomes 'null' in
@@ -296,2 +347,3 @@ describe('DOMPropertyOperations', () => {
     });
+
   });
@@ -374,5 +426,6 @@ describe('DOMPropertyOperations', () => {
 
-      expect(stubNode.options[0].selected && stubNode.options[1].selected).toBe(
-        false,
-      );
+      expect(
+        stubNode.options[0].selected &&
+        stubNode.options[1].selected
+      ).toBe(false);
     });
@@ -383,10 +436,12 @@ describe('DOMPropertyOperations', () => {
       // foobar does not exist yet
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('foobar', 'simple'),
-      ).toBe(null);
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'foobar',
+        'simple'
+      )).toBe(null);
 
       // foo-* does not exist yet
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('foo-xyz', 'simple'),
-      ).toBe(null);
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'foo-xyz',
+        'simple'
+      )).toBe(null);
 
@@ -401,18 +456,22 @@ describe('DOMPropertyOperations', () => {
       // Ensure old attributes still work
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('name', 'simple'),
-      ).toBe('name="simple"');
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('data-name', 'simple'),
-      ).toBe('data-name="simple"');
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'name',
+        'simple'
+      )).toBe('name="simple"');
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'data-name',
+        'simple'
+      )).toBe('data-name="simple"');
 
       // foobar should work
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('foobar', 'simple'),
-      ).toBe('foobar="simple"');
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'foobar',
+        'simple'
+      )).toBe('foobar="simple"');
 
       // foo-* should work
-      expect(
-        DOMPropertyOperations.createMarkupForProperty('foo-xyz', 'simple'),
-      ).toBe('foo-xyz="simple"');
+      expect(DOMPropertyOperations.createMarkupForProperty(
+        'foo-xyz',
+        'simple'
+      )).toBe('foo-xyz="simple"');
 
@@ -420,5 +479,5 @@ describe('DOMPropertyOperations', () => {
       expect(function() {
-        DOMProperty.injection.injectDOMPropertyConfig({
-          Properties: {foobar: null},
-        });
+        DOMProperty.injection.injectDOMPropertyConfig(
+          {Properties: {foobar: null}}
+        );
       }).toThrow();
diff --git a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js
index 1cf818de2..71bb4cb18 100644
--- a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js
+++ b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js
@@ -13,2 +13,3 @@
 
+
 describe('ReactDOMComponent', () => {
@@ -18,3 +19,2 @@ describe('ReactDOMComponent', () => {
   var ReactDOMServer;
-  var inputValueTracking;
 
@@ -30,3 +30,2 @@ describe('ReactDOMComponent', () => {
     ReactDOMServer = require('ReactDOMServer');
-    inputValueTracking = require('inputValueTracking');
   });
@@ -132,6 +131,6 @@ describe('ReactDOMComponent', () => {
         'Warning: `div` was passed a style object that has previously been ' +
-          'mutated. Mutating `style` is deprecated. Consider cloning it ' +
-          'beforehand. Check the `render` of `App`. Previous style: ' +
-          '{border: "1px solid black"}. Mutated style: ' +
-          '{border: "1px solid black", position: "absolute"}.',
+        'mutated. Mutating `style` is deprecated. Consider cloning it ' +
+        'beforehand. Check the `render` of `App`. Previous style: ' +
+        '{border: "1px solid black"}. Mutated style: ' +
+        '{border: "1px solid black", position: "absolute"}.'
       );
@@ -160,3 +159,3 @@ describe('ReactDOMComponent', () => {
         'Warning: Unknown prop `foo` on <div> tag. Remove this prop from the element. ' +
-          'For details, see https://fb.me/react-unknown-prop\n    in div (at **)',
+        'For details, see https://fb.me/react-unknown-prop\n    in div (at **)'
       );
@@ -171,3 +170,3 @@ describe('ReactDOMComponent', () => {
         'Warning: Unknown props `foo`, `baz` on <div> tag. Remove these props from the element. ' +
-          'For details, see https://fb.me/react-unknown-prop\n    in div (at **)',
+        'For details, see https://fb.me/react-unknown-prop\n    in div (at **)'
       );
@@ -181,3 +180,3 @@ describe('ReactDOMComponent', () => {
       expect(normalizeCodeLocInfo(console.error.calls.argsFor(0)[0])).toBe(
-        'Warning: Unknown event handler property onDblClick. Did you mean `onDoubleClick`?\n    in div (at **)',
+        'Warning: Unknown event handler property onDblClick. Did you mean `onDoubleClick`?\n    in div (at **)'
       );
@@ -185,2 +184,3 @@ describe('ReactDOMComponent', () => {
 
+
     it('should warn about styles with numeric string values for non-unitless properties', function() {
@@ -190,5 +190,5 @@ describe('ReactDOMComponent', () => {
       function One(props) {
-        return props.inline
-          ? <span style={{fontSize: '1'}} />
-          : <div style={{fontSize: '1'}} />;
+        return props.inline ?
+          <span style={{fontSize: '1'}} /> :
+          <div style={{fontSize: '1'}} />;
       }
@@ -201,4 +201,4 @@ describe('ReactDOMComponent', () => {
         'Warning: a `div` tag (owner: `One`) was passed a numeric string value ' +
-          'for CSS property `fontSize` (value: `1`) which will be treated ' +
-          'as a unitless number in a future version of React.',
+        'for CSS property `fontSize` (value: `1`) which will be treated ' +
+        'as a unitless number in a future version of React.'
       );
@@ -214,4 +214,4 @@ describe('ReactDOMComponent', () => {
         'Warning: a `div` tag (owner: `Two`) was passed a numeric string value ' +
-          'for CSS property `fontSize` (value: `1`) which will be treated ' +
-          'as a unitless number in a future version of React.',
+        'for CSS property `fontSize` (value: `1`) which will be treated ' +
+        'as a unitless number in a future version of React.'
       );
@@ -292,3 +292,3 @@ describe('ReactDOMComponent', () => {
         />,
-        container,
+        container
       );
@@ -296,3 +296,3 @@ describe('ReactDOMComponent', () => {
       expect(
-        container.firstChild.hasAttribute('suppressContentEditableWarning'),
+        container.firstChild.hasAttribute('suppressContentEditableWarning')
       ).toBe(false);
@@ -304,3 +304,3 @@ describe('ReactDOMComponent', () => {
         />,
-        container,
+        container
       );
@@ -308,3 +308,3 @@ describe('ReactDOMComponent', () => {
       expect(
-        container.firstChild.hasAttribute('suppressContentEditableWarning'),
+        container.firstChild.hasAttribute('suppressContentEditableWarning')
       ).toBe(false);
@@ -317,7 +317,7 @@ describe('ReactDOMComponent', () => {
         <my-component dangerouslySetInnerHTML={{__html: 'hi'}} />,
-        container,
-      );
-      expect(container.firstChild.hasAttribute('dangerouslySetInnerHTML')).toBe(
-        false,
+        container
       );
+      expect(
+        container.firstChild.hasAttribute('dangerouslySetInnerHTML')
+      ).toBe(false);
 
@@ -325,7 +325,7 @@ describe('ReactDOMComponent', () => {
         <my-component dangerouslySetInnerHTML={{__html: 'bye'}} />,
-        container,
-      );
-      expect(container.firstChild.hasAttribute('dangerouslySetInnerHTML')).toBe(
-        false,
+        container
       );
+      expect(
+        container.firstChild.hasAttribute('dangerouslySetInnerHTML')
+      ).toBe(false);
     });
@@ -352,4 +352,4 @@ describe('ReactDOMComponent', () => {
       var container = document.createElement('div');
-      ReactDOM.render(<some-custom-element foo="bar" />, container);
-      ReactDOM.render(<some-custom-element bar="buzz" />, container);
+      ReactDOM.render(<some-custom-element foo="bar"/>, container);
+      ReactDOM.render(<some-custom-element bar="buzz"/>, container);
       var node = container.firstChild;
@@ -379,3 +379,3 @@ describe('ReactDOMComponent', () => {
           {'blah" onclick="beevil" noise="hi': 'selected'},
-          null,
+          null
         );
@@ -385,3 +385,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(0)[0]).toEqual(
-        'Warning: Invalid attribute name: `blah" onclick="beevil" noise="hi`',
+        'Warning: Invalid attribute name: `blah" onclick="beevil" noise="hi`'
       );
@@ -399,3 +399,3 @@ describe('ReactDOMComponent', () => {
           {'blah" onclick="beevil" noise="hi': 'selected'},
-          null,
+          null
         );
@@ -405,3 +405,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(0)[0]).toEqual(
-        'Warning: Invalid attribute name: `blah" onclick="beevil" noise="hi`',
+        'Warning: Invalid attribute name: `blah" onclick="beevil" noise="hi`'
       );
@@ -446,6 +446,3 @@ describe('ReactDOMComponent', () => {
       var container = document.createElement('div');
-      ReactDOM.render(
-        <div dangerouslySetInnerHTML={{__html: ':)'}} />,
-        container,
-      );
+      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: ':)'}} />, container);
 
@@ -463,3 +460,3 @@ describe('ReactDOMComponent', () => {
         <div dangerouslySetInnerHTML={{__html: 'goodbye'}} />,
-        container,
+        container
       );
@@ -472,3 +469,3 @@ describe('ReactDOMComponent', () => {
         <div dangerouslySetInnerHTML={{__html: 'bonjour'}} />,
-        container,
+        container
       );
@@ -484,3 +481,3 @@ describe('ReactDOMComponent', () => {
         <div><div dangerouslySetInnerHTML={{__html: 'bonjour'}} /></div>,
-        container,
+        container
       );
@@ -499,3 +496,3 @@ describe('ReactDOMComponent', () => {
         <div><div dangerouslySetInnerHTML={{__html: 'bonjour'}} /></div>,
-        container,
+        container
       );
@@ -606,3 +603,3 @@ describe('ReactDOMComponent', () => {
       var container = document.createElement('div');
-      ReactDOM.render(<button is="test" cowabunga="chevynova" />, container);
+      ReactDOM.render(<button is="test" cowabunga="chevynova"/>, container);
       expect(container.firstChild.hasAttribute('cowabunga')).toBe(true);
@@ -641,3 +638,3 @@ describe('ReactDOMComponent', () => {
         </div>,
-        container,
+        container
       );
@@ -653,3 +650,3 @@ describe('ReactDOMComponent', () => {
         </div>,
-        container,
+        container
       );
@@ -682,5 +679,5 @@ describe('ReactDOMComponent', () => {
         var transaction = new ReactReconcileTransaction();
-        return new NodeStub(props)._createOpenTagMarkupAndPutListeners(
+        return (new NodeStub(props))._createOpenTagMarkupAndPutListeners(
           transaction,
-          props,
+          props
         );
@@ -698,3 +695,3 @@ describe('ReactDOMComponent', () => {
               return {
-                pass: new RegExp(re).test(actual),
+                pass: (new RegExp(re)).test(actual),
               };
@@ -713,7 +710,5 @@ describe('ReactDOMComponent', () => {
     it('should escape style names and values', () => {
-      expect(
-        genMarkup({
-          style: {'b&ckground': '<3'},
-        }),
-      ).toHaveAttribute(['style', 'b&amp;ckground:&lt;3;']);
+      expect(genMarkup({
+        style: {'b&ckground': '<3'},
+      })).toHaveAttribute(['style', 'b&amp;ckground:&lt;3;']);
     });
@@ -740,3 +735,7 @@ describe('ReactDOMComponent', () => {
         var transaction = new ReactReconcileTransaction();
-        return new NodeStub(props)._createContentMarkup(transaction, props, {});
+        return (new NodeStub(props))._createContentMarkup(
+          transaction,
+          props,
+          {}
+        );
       };
@@ -749,3 +748,3 @@ describe('ReactDOMComponent', () => {
               return {
-                pass: new RegExp(re).test(actual),
+                pass: (new RegExp(re)).test(actual),
               };
@@ -759,5 +758,5 @@ describe('ReactDOMComponent', () => {
       var innerHTML = {__html: 'testContent'};
-      expect(genMarkup({dangerouslySetInnerHTML: innerHTML})).toHaveInnerhtml(
-        'testContent',
-      );
+      expect(
+        genMarkup({dangerouslySetInnerHTML: innerHTML})
+      ).toHaveInnerhtml('testContent');
     });
@@ -780,9 +779,5 @@ describe('ReactDOMComponent', () => {
         <video>
-          <source
-            src="http://example.org/video"
-            type="video/mp4"
-            onError={e => console.error('onError called')}
-          />
+          <source src="http://example.org/video" type="video/mp4" onError={(e) => console.error('onError called')} />
         </video>,
-        container,
+        container
       );
@@ -794,3 +789,5 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.count()).toBe(1);
-      expect(console.error.calls.argsFor(0)[0]).toContain('onError called');
+      expect(console.error.calls.argsFor(0)[0]).toContain(
+        'onError called'
+      );
     });
@@ -804,3 +801,3 @@ describe('ReactDOMComponent', () => {
 
-      var returnedValue = ReactDOMServer.renderToString(<Container />);
+      var returnedValue = ReactDOMServer.renderToString(<Container/>);
       expect(returnedValue).not.toContain('</BR>');
@@ -815,3 +812,3 @@ describe('ReactDOMComponent', () => {
         'input is a void element tag and must neither have `children` nor ' +
-          'use `dangerouslySetInnerHTML`.',
+        'use `dangerouslySetInnerHTML`.'
       );
@@ -825,3 +822,3 @@ describe('ReactDOMComponent', () => {
           <input dangerouslySetInnerHTML={{__html: 'content'}} />,
-          container,
+          container
         );
@@ -829,3 +826,3 @@ describe('ReactDOMComponent', () => {
         'input is a void element tag and must neither have `children` nor use ' +
-          '`dangerouslySetInnerHTML`.',
+        '`dangerouslySetInnerHTML`.'
       );
@@ -836,5 +833,3 @@ describe('ReactDOMComponent', () => {
 
-      var returnedValue = ReactDOMServer.renderToString(
-        <menu><menuitem /></menu>,
-      );
+      var returnedValue = ReactDOMServer.renderToString(<menu><menuitem /></menu>);
 
@@ -846,4 +841,5 @@ describe('ReactDOMComponent', () => {
         'menuitem is a void element tag and must neither have `children` nor use ' +
-          '`dangerouslySetInnerHTML`.',
+        '`dangerouslySetInnerHTML`.'
       );
+
     });
@@ -854,3 +850,3 @@ describe('ReactDOMComponent', () => {
       }).toThrowError(
-        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
+        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
       );
@@ -859,2 +855,3 @@ describe('ReactDOMComponent', () => {
     it('should validate against use of innerHTML', () => {
+
       spyOn(console, 'error');
@@ -863,3 +860,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(0)[0]).toContain(
-        'Directly setting property `innerHTML` is not permitted. ',
+        'Directly setting property `innerHTML` is not permitted. '
       );
@@ -872,3 +869,3 @@ describe('ReactDOMComponent', () => {
         '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +
-          'Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.',
+        'Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.'
       );
@@ -878,6 +875,6 @@ describe('ReactDOMComponent', () => {
       expect(function() {
-        mountComponent({dangerouslySetInnerHTML: {foo: 'bar'}});
+        mountComponent({dangerouslySetInnerHTML: {foo: 'bar'} });
       }).toThrowError(
         '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +
-          'Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.',
+        'Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.'
       );
@@ -887,3 +884,3 @@ describe('ReactDOMComponent', () => {
       expect(function() {
-        mountComponent({dangerouslySetInnerHTML: {__html: null}});
+        mountComponent({dangerouslySetInnerHTML: {__html: null} });
       }).not.toThrow();
@@ -900,7 +897,3 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      mountComponent({
-        contentEditable: true,
-        children: '',
-        suppressContentEditableWarning: true,
-      });
+      mountComponent({contentEditable: true, children: '', suppressContentEditableWarning: true});
       expect(console.error.calls.count()).toBe(0);
@@ -913,29 +906,8 @@ describe('ReactDOMComponent', () => {
         'The `style` prop expects a mapping from style properties to values, ' +
-          "not a string. For example, style={{marginRight: spacing + 'em'}} " +
-          'when using JSX.',
-      );
-    });
-
-    it('should track input values', function() {
-      var container = document.createElement('div');
-      var inst = ReactDOM.render(
-        <input type="text" defaultValue="foo" />,
-        container,
+        'not a string. For example, style={{marginRight: spacing + \'em\'}} ' +
+        'when using JSX.'
       );
-
-      var tracker = inputValueTracking._getTrackerFromNode(inst);
-
-      expect(tracker.getValue()).toEqual('foo');
-    });
-
-    it('should track textarea values', function() {
-      var container = document.createElement('div');
-      var inst = ReactDOM.render(<textarea defaultValue="foo" />, container);
-
-      var tracker = inputValueTracking._getTrackerFromNode(inst);
-
-      expect(tracker.getValue()).toEqual('foo');
     });
 
-    it('should execute custom event plugin listening behavior', function() {
+    it('should execute custom event plugin listening behavior', () => {
       var SimpleEventPlugin = require('SimpleEventPlugin');
@@ -946,3 +918,6 @@ describe('ReactDOMComponent', () => {
       var container = document.createElement('div');
-      ReactDOM.render(<div onClick={() => true} />, container);
+      ReactDOM.render(
+        <div onClick={() => true} />,
+        container
+      );
 
@@ -1003,3 +978,3 @@ describe('ReactDOMComponent', () => {
         'input is a void element tag and must neither have `children` ' +
-          'nor use `dangerouslySetInnerHTML`. Check the render method of X.',
+        'nor use `dangerouslySetInnerHTML`. Check the render method of X.'
       );
@@ -1012,10 +987,5 @@ describe('ReactDOMComponent', () => {
         ReactDOM.render(<div is="custom-div" />, container);
-        expect(document.createElement).toHaveBeenCalledWith(
-          'div',
-          'custom-div',
-        );
+        expect(document.createElement).toHaveBeenCalledWith('div', 'custom-div');
       } else {
-        expect(
-          ReactDOMServer.renderToString(<div is="custom-div" />),
-        ).toContain('is="custom-div"');
+        expect(ReactDOMServer.renderToString(<div is="custom-div" />)).toContain('is="custom-div"');
       }
@@ -1038,3 +1008,3 @@ describe('ReactDOMComponent', () => {
         'input is a void element tag and must neither have `children` nor use ' +
-          '`dangerouslySetInnerHTML`.',
+        '`dangerouslySetInnerHTML`.'
       );
@@ -1048,3 +1018,3 @@ describe('ReactDOMComponent', () => {
           <input dangerouslySetInnerHTML={{__html: 'content'}} />,
-          container,
+          container
         );
@@ -1052,3 +1022,3 @@ describe('ReactDOMComponent', () => {
         'input is a void element tag and must neither have `children` nor use ' +
-          '`dangerouslySetInnerHTML`.',
+        '`dangerouslySetInnerHTML`.'
       );
@@ -1062,6 +1032,6 @@ describe('ReactDOMComponent', () => {
           <div children="" dangerouslySetInnerHTML={{__html: ''}} />,
-          container,
+          container
         );
       }).toThrowError(
-        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
+        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
       );
@@ -1071,3 +1041,6 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactDOM.render(<div contentEditable={true}><div /></div>, container);
+      ReactDOM.render(
+        <div contentEditable={true}><div /></div>,
+        container
+      );
       expect(console.error.calls.count()).toBe(1);
@@ -1083,4 +1056,4 @@ describe('ReactDOMComponent', () => {
         'The `style` prop expects a mapping from style properties to values, ' +
-          "not a string. For example, style={{marginRight: spacing + 'em'}} " +
-          'when using JSX.',
+        'not a string. For example, style={{marginRight: spacing + \'em\'}} ' +
+        'when using JSX.'
       );
@@ -1096,7 +1069,7 @@ describe('ReactDOMComponent', () => {
       expect(function() {
-        ReactDOM.render(<Animal />, container);
+        ReactDOM.render(<Animal/>, container);
       }).toThrowError(
         'The `style` prop expects a mapping from style properties to values, ' +
-          "not a string. For example, style={{marginRight: spacing + 'em'}} " +
-          'when using JSX. This DOM node was rendered by `Animal`.',
+        'not a string. For example, style={{marginRight: spacing + \'em\'}} ' +
+        'when using JSX. This DOM node was rendered by `Animal`.'
       );
@@ -1107,13 +1080,9 @@ describe('ReactDOMComponent', () => {
         ReactDOMServer.renderToStaticMarkup(
-          React.createElement(
-            'div',
-            {
-              title: '\'"<>&',
-              style: {
-                textAlign: '\'"<>&',
-              },
+          React.DOM.div({
+            title: '\'"<>&',
+            style: {
+              textAlign: '\'"<>&',
             },
-            '\'"<>&',
-          ),
-        ),
+          }, '\'"<>&')
+        )
       ).toBe(
@@ -1121,3 +1090,3 @@ describe('ReactDOMComponent', () => {
           '&#x27;&quot;&lt;&gt;&amp;' +
-          '</div>',
+        '</div>'
       );
@@ -1140,3 +1109,5 @@ describe('ReactDOMComponent', () => {
       var inst = ReactDOMComponentTree.getInstanceFromNode(rootNode);
-      expect(EventPluginHub.getListener(inst, 'onClick')).toBe(callback);
+      expect(
+        EventPluginHub.getListener(inst, 'onClick')
+      ).toBe(callback);
       expect(rootNode).toBe(ReactDOM.findDOMNode(instance));
@@ -1145,33 +1116,8 @@ describe('ReactDOMComponent', () => {
 
-      expect(EventPluginHub.getListener(inst, 'onClick')).toBe(undefined);
-    });
-
-    it('should clean up input value tracking', function() {
-      var container = document.createElement('div');
-      var node = ReactDOM.render(
-        <input type="text" defaultValue="foo" />,
-        container,
-      );
-      var tracker = inputValueTracking._getTrackerFromNode(node);
-
-      spyOn(tracker, 'stopTracking');
-
-      ReactDOM.unmountComponentAtNode(container);
-
-      expect(tracker.stopTracking.calls.count()).toBe(1);
-    });
-
-    it('should clean up input textarea tracking', function() {
-      var container = document.createElement('div');
-      var node = ReactDOM.render(<textarea defaultValue="foo" />, container);
-      var tracker = inputValueTracking._getTrackerFromNode(node);
-
-      spyOn(tracker, 'stopTracking');
-
-      ReactDOM.unmountComponentAtNode(container);
-
-      expect(tracker.stopTracking.calls.count()).toBe(1);
+      expect(
+        EventPluginHub.getListener(inst, 'onClick')
+      ).toBe(undefined);
     });
 
-    it('unmounts children before unsetting DOM node info', function() {
+    it('unmounts children before unsetting DOM node info', () => {
       class Inner extends React.Component {
@@ -1197,3 +1143,4 @@ describe('ReactDOMComponent', () => {
       // before React so it's pre-mocked before React would require it.
-      jest.resetModuleRegistry().mock('isEventSupported');
+      jest.resetModuleRegistry()
+        .mock('isEventSupported');
       var isEventSupported = require('isEventSupported');
@@ -1207,3 +1154,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(0)[0]).toBe(
-        "Warning: This browser doesn't support the `onScroll` event",
+        'Warning: This browser doesn\'t support the `onScroll` event'
       );
@@ -1213,3 +1160,3 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactDOMServer.renderToString(<div onScroll={() => {}} />);
+      ReactDOMServer.renderToString(<div onScroll={() => {}}/>);
       expect(console.error).not.toHaveBeenCalled();
@@ -1222,4 +1169,6 @@ describe('ReactDOMComponent', () => {
       var hackzor = React.createElement('script tag');
-      expect(() => ReactTestUtils.renderIntoDocument(hackzor)).toThrowError(
-        'Invalid tag: script tag',
+      expect(
+        () => ReactTestUtils.renderIntoDocument(hackzor)
+      ).toThrowError(
+        'Invalid tag: script tag'
       );
@@ -1230,4 +1179,6 @@ describe('ReactDOMComponent', () => {
       var hackzor = React.createElement('div><img /><div');
-      expect(() => ReactTestUtils.renderIntoDocument(hackzor)).toThrowError(
-        'Invalid tag: div><img /><div',
+      expect(
+        () => ReactTestUtils.renderIntoDocument(hackzor)
+      ).toThrowError(
+        'Invalid tag: div><img /><div'
       );
@@ -1250,3 +1201,3 @@ describe('ReactDOMComponent', () => {
         'Warning: validateDOMNesting(...): <tr> cannot appear as a child of ' +
-          '<div>. See div > tr.',
+        '<div>. See div > tr.'
       );
@@ -1262,3 +1213,3 @@ describe('ReactDOMComponent', () => {
         'Warning: validateDOMNesting(...): <p> cannot appear as a descendant ' +
-          'of <p>. See p > ... > p.',
+        'of <p>. See p > ... > p.'
       );
@@ -1286,4 +1237,4 @@ describe('ReactDOMComponent', () => {
         'Warning: validateDOMNesting(...): <tr> cannot appear as a child of ' +
-          '<table>. See Foo > table > Row > tr. Add a <tbody> to your code to ' +
-          'match the DOM tree generated by the browser.',
+        '<table>. See Foo > table > Row > tr. Add a <tbody> to your code to ' +
+        'match the DOM tree generated by the browser.'
       );
@@ -1291,3 +1242,3 @@ describe('ReactDOMComponent', () => {
         'Warning: validateDOMNesting(...): Text nodes cannot appear as a ' +
-          'child of <tr>. See Row > tr > #text.',
+        'child of <tr>. See Row > tr > #text.'
       );
@@ -1295,5 +1246,5 @@ describe('ReactDOMComponent', () => {
         'Warning: validateDOMNesting(...): Whitespace text nodes cannot ' +
-          "appear as a child of <table>. Make sure you don't have any extra " +
-          'whitespace between tags on each line of your source code. See Foo > ' +
-          'table > #text.',
+        'appear as a child of <table>. Make sure you don\'t have any extra ' +
+        'whitespace between tags on each line of your source code. See Foo > ' +
+        'table > #text.'
       );
@@ -1331,3 +1282,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(0)[0]).toContain(
-        'See Viz1 > table > FancyRow > Row > tr.',
+        'See Viz1 > table > FancyRow > Row > tr.'
       );
@@ -1343,3 +1294,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(1)[0]).toContain(
-        'See Viz2 > FancyTable > Table > table > FancyRow > Row > tr.',
+        'See Viz2 > FancyTable > Table > table > FancyRow > Row > tr.'
       );
@@ -1349,3 +1300,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(2)[0]).toContain(
-        'See FancyTable > Table > table > FancyRow > Row > tr.',
+        'See FancyTable > Table > table > FancyRow > Row > tr.'
       );
@@ -1355,3 +1306,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(3)[0]).toContain(
-        'See table > FancyRow > Row > tr.',
+        'See table > FancyRow > Row > tr.'
       );
@@ -1361,3 +1312,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(4)[0]).toContain(
-        'See FancyTable > Table > table > tr.',
+        'See FancyTable > Table > table > tr.'
       );
@@ -1373,3 +1324,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(5)[0]).toContain(
-        'See Link > a > ... > Link > a.',
+        'See Link > a > ... > Link > a.'
       );
@@ -1379,5 +1330,3 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactDOMServer.renderToString(
-        React.createElement('input', {type: 'text', tabindex: '1'}),
-      );
+      ReactDOMServer.renderToString(React.createElement('input', {type: 'text', tabindex: '1'}));
       expect(console.error.calls.count()).toBe(1);
@@ -1388,8 +1337,4 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactDOMServer.renderToString(
-        React.createElement('input', {type: 'text', onclick: '1'}),
-      );
-      ReactDOMServer.renderToString(
-        React.createElement('input', {type: 'text', onKeydown: '1'}),
-      );
+      ReactDOMServer.renderToString(React.createElement('input', {type: 'text', onclick: '1'}));
+      ReactDOMServer.renderToString(React.createElement('input', {type: 'text', onKeydown: '1'}));
       expect(console.error.calls.count()).toBe(2);
@@ -1401,5 +1346,3 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactTestUtils.renderIntoDocument(
-        React.createElement('input', {type: 'text', tabindex: '1'}),
-      );
+      ReactTestUtils.renderIntoDocument(React.createElement('input', {type: 'text', tabindex: '1'}));
       expect(console.error.calls.count()).toBe(1);
@@ -1410,8 +1353,4 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactTestUtils.renderIntoDocument(
-        React.createElement('input', {type: 'text', onclick: '1'}),
-      );
-      ReactTestUtils.renderIntoDocument(
-        React.createElement('input', {type: 'text', onKeydown: '1'}),
-      );
+      ReactTestUtils.renderIntoDocument(React.createElement('input', {type: 'text', onclick: '1'}));
+      ReactTestUtils.renderIntoDocument(React.createElement('input', {type: 'text', onKeydown: '1'}));
       expect(console.error.calls.count()).toBe(2);
@@ -1423,5 +1362,3 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactDOMServer.renderToString(
-        React.createElement('div', {class: 'muffins'}),
-      );
+      ReactDOMServer.renderToString(React.createElement('div', {class: 'muffins'}));
       expect(console.error.calls.count()).toBe(1);
@@ -1444,11 +1381,15 @@ describe('ReactDOMComponent', () => {
       spyOn(console, 'error');
-      ReactDOMServer.renderToString(<div class="paladin" />);
-      ReactDOMServer.renderToString(<input type="text" onclick="1" />);
+      ReactDOMServer.renderToString(<div class="paladin"/>);
+      ReactDOMServer.renderToString(<input type="text" onclick="1"/>);
       expect(console.error.calls.count()).toBe(2);
-      expect(normalizeCodeLocInfo(console.error.calls.argsFor(0)[0])).toBe(
-        'Warning: Unknown DOM property class. Did you mean className?\n    in div (at **)',
+      expect(
+        normalizeCodeLocInfo(console.error.calls.argsFor(0)[0])
+      ).toBe(
+        'Warning: Unknown DOM property class. Did you mean className?\n    in div (at **)'
       );
-      expect(normalizeCodeLocInfo(console.error.calls.argsFor(1)[0])).toBe(
+      expect(
+        normalizeCodeLocInfo(console.error.calls.argsFor(1)[0])
+      ).toBe(
         'Warning: Unknown event handler property onclick. Did you mean ' +
-          '`onClick`?\n    in input (at **)',
+        '`onClick`?\n    in input (at **)'
       );
@@ -1465,5 +1406,8 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.count()).toBe(1);
-      expect(normalizeCodeLocInfo(console.error.calls.argsFor(0)[0])).toBe(
-        'Warning: Unknown DOM property class. Did you mean className?\n    in div (at **)',
+      expect(
+        normalizeCodeLocInfo(console.error.calls.argsFor(0)[0])
+      ).toBe(
+        'Warning: Unknown DOM property class. Did you mean className?\n    in div (at **)'
       );
+
     });
@@ -1475,8 +1419,8 @@ describe('ReactDOMComponent', () => {
         <div className="foo1">
-          <div class="foo2" />
-          <div onClick="foo3" />
-          <div onclick="foo4" />
-          <div className="foo5" />
-          <div className="foo6" />
-        </div>,
+        <div class="foo2"/>
+        <div onClick="foo3"/>
+        <div onclick="foo4"/>
+        <div className="foo5"/>
+        <div className="foo6"/>
+        </div>
       );
@@ -1552,8 +1496,4 @@ describe('ReactDOMComponent', () => {
 
-      ReactTestUtils.renderIntoDocument(
-        React.createElement('label', {for: 'test'}),
-      );
-      ReactTestUtils.renderIntoDocument(
-        React.createElement('input', {type: 'text', autofocus: true}),
-      );
+      ReactTestUtils.renderIntoDocument(React.createElement('label', {for: 'test'}));
+      ReactTestUtils.renderIntoDocument(React.createElement('input', {type: 'text', autofocus: true}));
 
@@ -1562,3 +1502,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(0)[0]).toBe(
-        'Warning: Unknown DOM property for. Did you mean htmlFor?\n    in label',
+        'Warning: Unknown DOM property for. Did you mean htmlFor?\n    in label'
       );
@@ -1566,3 +1506,3 @@ describe('ReactDOMComponent', () => {
       expect(console.error.calls.argsFor(1)[0]).toBe(
-        'Warning: Unknown DOM property autofocus. Did you mean autoFocus?\n    in input',
+        'Warning: Unknown DOM property autofocus. Did you mean autoFocus?\n    in input'
       );
diff --git a/src/renderers/dom/shared/__tests__/ReactDOMInvalidARIAHook-test.js b/src/renderers/dom/shared/__tests__/ReactDOMInvalidARIAHook-test.js
index 1fae95ffe..3be7d6127 100644
--- a/src/renderers/dom/shared/__tests__/ReactDOMInvalidARIAHook-test.js
+++ b/src/renderers/dom/shared/__tests__/ReactDOMInvalidARIAHook-test.js
@@ -40,3 +40,3 @@ describe('ReactDOMInvalidARIAHook', () => {
         'Warning: Invalid aria prop `aria-badprop` on <div> tag. ' +
-          'For details, see https://fb.me/invalid-aria-prop',
+        'For details, see https://fb.me/invalid-aria-prop'
       );
@@ -45,6 +45,8 @@ describe('ReactDOMInvalidARIAHook', () => {
       spyOn(console, 'error');
-      mountComponent({
-        'aria-badprop': 'Very tall trees',
-        'aria-malprop': 'Turbulent seas',
-      });
+      mountComponent(
+        {
+          'aria-badprop': 'Very tall trees',
+          'aria-malprop': 'Turbulent seas',
+        }
+      );
       expect(console.error.calls.count()).toBe(1);
@@ -52,3 +54,3 @@ describe('ReactDOMInvalidARIAHook', () => {
         'Warning: Invalid aria props `aria-badprop`, `aria-malprop` on <div> ' +
-          'tag. For details, see https://fb.me/invalid-aria-prop',
+        'tag. For details, see https://fb.me/invalid-aria-prop'
       );
@@ -62,3 +64,3 @@ describe('ReactDOMInvalidARIAHook', () => {
         'Warning: Unknown ARIA attribute aria-hasPopup. ' +
-          'Did you mean aria-haspopup?',
+        'Did you mean aria-haspopup?'
       );
diff --git a/src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js b/src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js
index 8dc2b9792..0d42152d8 100644
--- a/src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js
+++ b/src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js
@@ -14,2 +14,3 @@
 describe('escapeTextContentForBrowser', () => {
+
   var escapeTextContentForBrowser = require('escapeTextContentForBrowser');
@@ -36,9 +37,7 @@ describe('escapeTextContentForBrowser', () => {
   it('should escape string', () => {
-    var escaped = escapeTextContentForBrowser(
-      '<script type=\'\' src=""></script>',
-    );
+    var escaped = escapeTextContentForBrowser('<script type=\'\' src=""></script>');
     expect(escaped).not.toContain('<');
     expect(escaped).not.toContain('>');
-    expect(escaped).not.toContain("'");
-    expect(escaped).not.toContain('"');
+    expect(escaped).not.toContain('\'');
+    expect(escaped).not.toContain('\"');
 
@@ -47,2 +46,3 @@ describe('escapeTextContentForBrowser', () => {
   });
+
 });
diff --git a/src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js b/src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js
index 884fc322c..aeba0bc4f 100644
--- a/src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js
+++ b/src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js
@@ -14,2 +14,3 @@
 describe('quoteAttributeValueForBrowser', () => {
+
   var quoteAttributeValueForBrowser = require('quoteAttributeValueForBrowser');
@@ -36,9 +37,7 @@ describe('quoteAttributeValueForBrowser', () => {
   it('should escape string', () => {
-    var escaped = quoteAttributeValueForBrowser(
-      '<script type=\'\' src=""></script>',
-    );
+    var escaped = quoteAttributeValueForBrowser('<script type=\'\' src=""></script>');
     expect(escaped).not.toContain('<');
     expect(escaped).not.toContain('>');
-    expect(escaped).not.toContain("'");
-    expect(escaped.substr(1, -1)).not.toContain('"');
+    expect(escaped).not.toContain('\'');
+    expect(escaped.substr(1, -1)).not.toContain('\"');
 
@@ -47,2 +46,3 @@ describe('quoteAttributeValueForBrowser', () => {
   });
+
 });
diff --git a/src/renderers/dom/shared/dangerousStyleValue.js b/src/renderers/dom/shared/dangerousStyleValue.js
index 287a91f40..8b5424cc8 100644
--- a/src/renderers/dom/shared/dangerousStyleValue.js
+++ b/src/renderers/dom/shared/dangerousStyleValue.js
@@ -46,7 +46,4 @@ function dangerousStyleValue(name, value, component) {
   var isNonNumeric = isNaN(value);
-  if (
-    isNonNumeric ||
-    value === 0 ||
-    (isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])
-  ) {
+  if (isNonNumeric || value === 0 ||
+      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
     return '' + value; // cast to string
@@ -76,4 +73,4 @@ function dangerousStyleValue(name, value, component) {
             'a `%s` tag (owner: `%s`) was passed a numeric string value ' +
-              'for CSS property `%s` (value: `%s`) which will be treated ' +
-              'as a unitless number in a future version of React.',
+            'for CSS property `%s` (value: `%s`) which will be treated ' +
+            'as a unitless number in a future version of React.',
             component._currentElement.type,
@@ -81,3 +78,3 @@ function dangerousStyleValue(name, value, component) {
             name,
-            value,
+            value
           );
diff --git a/src/renderers/dom/shared/escapeTextContentForBrowser.js b/src/renderers/dom/shared/escapeTextContentForBrowser.js
index 9a7a2f10d..3735627f8 100644
--- a/src/renderers/dom/shared/escapeTextContentForBrowser.js
+++ b/src/renderers/dom/shared/escapeTextContentForBrowser.js
@@ -76,3 +76,3 @@ function escapeHtml(string) {
       case 39: // '
-        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
+        escape = '&#x27;';  // modified from escape-html; used to be '&#39'
         break;
@@ -96,3 +96,5 @@ function escapeHtml(string) {
 
-  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
+  return lastIndex !== index
+    ? html + str.substring(lastIndex, index)
+    : html;
 }
@@ -100,2 +102,3 @@ function escapeHtml(string) {
 
+
 /**
diff --git a/src/renderers/dom/shared/hooks/ReactDOMInvalidARIAHook.js b/src/renderers/dom/shared/hooks/ReactDOMInvalidARIAHook.js
index 9f06f149f..6e2fdcfa3 100644
--- a/src/renderers/dom/shared/hooks/ReactDOMInvalidARIAHook.js
+++ b/src/renderers/dom/shared/hooks/ReactDOMInvalidARIAHook.js
@@ -22,3 +22,6 @@ var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
 function validateProperty(tagName, name, debugID) {
-  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
+  if (
+    warnedProperties.hasOwnProperty(name)
+    && warnedProperties[name]
+  ) {
     return true;
@@ -28,7 +31,6 @@ function validateProperty(tagName, name, debugID) {
     var lowerCasedName = name.toLowerCase();
-    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(
-      lowerCasedName,
-    )
-      ? DOMProperty.getPossibleStandardName[lowerCasedName]
-      : null;
+    var standardName =
+      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
+        DOMProperty.getPossibleStandardName[lowerCasedName] :
+        null;
 
@@ -47,3 +49,3 @@ function validateProperty(tagName, name, debugID) {
         standardName,
-        ReactComponentTreeHook.getStackAddendumByID(debugID),
+        ReactComponentTreeHook.getStackAddendumByID(debugID)
       );
@@ -75,6 +77,6 @@ function warnInvalidARIAProps(debugID, element) {
       'Invalid aria prop %s on <%s> tag. ' +
-        'For details, see https://fb.me/invalid-aria-prop%s',
+      'For details, see https://fb.me/invalid-aria-prop%s',
       unknownPropString,
       element.type,
-      ReactComponentTreeHook.getStackAddendumByID(debugID),
+      ReactComponentTreeHook.getStackAddendumByID(debugID)
     );
@@ -84,6 +86,6 @@ function warnInvalidARIAProps(debugID, element) {
       'Invalid aria props %s on <%s> tag. ' +
-        'For details, see https://fb.me/invalid-aria-prop%s',
+      'For details, see https://fb.me/invalid-aria-prop%s',
       unknownPropString,
       element.type,
-      ReactComponentTreeHook.getStackAddendumByID(debugID),
+      ReactComponentTreeHook.getStackAddendumByID(debugID)
     );
diff --git a/src/renderers/dom/shared/hooks/ReactDOMNullInputValuePropHook.js b/src/renderers/dom/shared/hooks/ReactDOMNullInputValuePropHook.js
index 21cbae338..959db6bf2 100644
--- a/src/renderers/dom/shared/hooks/ReactDOMNullInputValuePropHook.js
+++ b/src/renderers/dom/shared/hooks/ReactDOMNullInputValuePropHook.js
@@ -23,14 +23,6 @@ function handleElement(debugID, element) {
   }
-  if (
-    element.type !== 'input' &&
-    element.type !== 'textarea' &&
-    element.type !== 'select'
-  ) {
+  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
     return;
   }
-  if (
-    element.props != null &&
-    element.props.value === null &&
-    !didWarnValueNull
-  ) {
+  if (element.props != null && element.props.value === null && !didWarnValueNull) {
     warning(
@@ -38,6 +30,6 @@ function handleElement(debugID, element) {
       '`value` prop on `%s` should not be null. ' +
-        'Consider using the empty string to clear the component or `undefined` ' +
-        'for uncontrolled components.%s',
+      'Consider using the empty string to clear the component or `undefined` ' +
+      'for uncontrolled components.%s',
       element.type,
-      ReactComponentTreeHook.getStackAddendumByID(debugID),
+      ReactComponentTreeHook.getStackAddendumByID(debugID)
     );
diff --git a/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js b/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js
index 6720bc7f0..ef0937a7f 100644
--- a/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js
+++ b/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js
@@ -39,12 +39,7 @@ if (__DEV__) {
   var validateProperty = function(tagName, name, debugID) {
-    if (
-      DOMProperty.properties.hasOwnProperty(name) ||
-      DOMProperty.isCustomAttribute(name)
-    ) {
+    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
       return true;
     }
-    if (
-      (reactProps.hasOwnProperty(name) && reactProps[name]) ||
-      (warnedProperties.hasOwnProperty(name) && warnedProperties[name])
-    ) {
+    if (reactProps.hasOwnProperty(name) && reactProps[name] ||
+        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
       return true;
@@ -58,13 +53,17 @@ if (__DEV__) {
     // data-* attributes should be lowercase; suggest the lowercase version
-    var standardName = DOMProperty.isCustomAttribute(lowerCasedName)
-      ? lowerCasedName
-      : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName)
-        ? DOMProperty.getPossibleStandardName[lowerCasedName]
-        : null;
+    var standardName = (
+      DOMProperty.isCustomAttribute(lowerCasedName) ?
+        lowerCasedName :
+      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
+        DOMProperty.getPossibleStandardName[lowerCasedName] :
+        null
+    );
 
-    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(
-      lowerCasedName,
-    )
-      ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName]
-      : null;
+    var registrationName = (
+      EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(
+        lowerCasedName
+      ) ?
+      EventPluginRegistry.possibleRegistrationNames[lowerCasedName] :
+      null
+    );
 
@@ -76,3 +75,3 @@ if (__DEV__) {
         standardName,
-        ReactComponentTreeHook.getStackAddendumByID(debugID),
+        ReactComponentTreeHook.getStackAddendumByID(debugID)
       );
@@ -85,3 +84,3 @@ if (__DEV__) {
         registrationName,
-        ReactComponentTreeHook.getStackAddendumByID(debugID),
+        ReactComponentTreeHook.getStackAddendumByID(debugID)
       );
@@ -107,3 +106,5 @@ var warnUnknownProperties = function(debugID, element) {
 
-  var unknownPropString = unknownProps.map(prop => '`' + prop + '`').join(', ');
+  var unknownPropString = unknownProps
+    .map(prop => '`' + prop + '`')
+    .join(', ');
 
@@ -113,6 +114,6 @@ var warnUnknownProperties = function(debugID, element) {
       'Unknown prop %s on <%s> tag. Remove this prop from the element. ' +
-        'For details, see https://fb.me/react-unknown-prop%s',
+      'For details, see https://fb.me/react-unknown-prop%s',
       unknownPropString,
       element.type,
-      ReactComponentTreeHook.getStackAddendumByID(debugID),
+      ReactComponentTreeHook.getStackAddendumByID(debugID)
     );
@@ -122,6 +123,6 @@ var warnUnknownProperties = function(debugID, element) {
       'Unknown props %s on <%s> tag. Remove these props from the element. ' +
-        'For details, see https://fb.me/react-unknown-prop%s',
+      'For details, see https://fb.me/react-unknown-prop%s',
       unknownPropString,
       element.type,
-      ReactComponentTreeHook.getStackAddendumByID(debugID),
+      ReactComponentTreeHook.getStackAddendumByID(debugID)
     );
diff --git a/src/renderers/native/NativeMethodsMixin.js b/src/renderers/native/NativeMethodsMixin.js
index 1ad5dc00b..5bc75fc33 100644
--- a/src/renderers/native/NativeMethodsMixin.js
+++ b/src/renderers/native/NativeMethodsMixin.js
@@ -26,4 +26,4 @@ type MeasureOnSuccessCallback = (
   pageX: number,
-  pageY: number,
-) => void;
+  pageY: number
+) => void
 
@@ -34,3 +34,3 @@ type MeasureInWindowOnSuccessCallback = (
   height: number,
-) => void;
+) => void
 
@@ -40,4 +40,4 @@ type MeasureLayoutOnSuccessCallback = (
   width: number,
-  height: number,
-) => void;
+  height: number
+) => void
 
@@ -47,9 +47,5 @@ function warnForStyleProps(props, validAttributes) {
       console.error(
-        'You are setting the style `{ ' +
-          key +
-          ': ... }` as a prop. You ' +
-          'should nest it in a style object. ' +
-          'E.g. `{ style: { ' +
-          key +
-          ': ... } }`',
+        'You are setting the style `{ ' + key + ': ... }` as a prop. You ' +
+        'should nest it in a style object. ' +
+        'E.g. `{ style: { ' + key + ': ... } }`'
       );
@@ -90,3 +86,6 @@ var NativeMethodsMixin = {
   measure: function(callback: MeasureOnSuccessCallback) {
-    UIManager.measure(findNodeHandle(this), mountSafeCallback(this, callback));
+    UIManager.measure(
+      findNodeHandle(this),
+      mountSafeCallback(this, callback)
+    );
   },
@@ -111,3 +110,3 @@ var NativeMethodsMixin = {
       findNodeHandle(this),
-      mountSafeCallback(this, callback),
+      mountSafeCallback(this, callback)
     );
@@ -126,3 +125,3 @@ var NativeMethodsMixin = {
     onSuccess: MeasureLayoutOnSuccessCallback,
-    onFail: () => void /* currently unused */,
+    onFail: () => void /* currently unused */
   ) {
@@ -132,3 +131,3 @@ var NativeMethodsMixin = {
       mountSafeCallback(this, onFail),
-      mountSafeCallback(this, onSuccess),
+      mountSafeCallback(this, onSuccess)
     );
@@ -149,3 +148,3 @@ var NativeMethodsMixin = {
       nativeProps,
-      this.viewConfig.validAttributes,
+      this.viewConfig.validAttributes
     );
@@ -155,3 +154,3 @@ var NativeMethodsMixin = {
       this.viewConfig.uiViewClassName,
-      updatePayload,
+      updatePayload
     );
@@ -179,12 +178,6 @@ function throwOnStylesProp(component, props) {
     var name = component.constructor.displayName;
-    var msg =
-      '`styles` is not a supported property of `' +
-      name +
-      '`, did ' +
+    var msg = '`styles` is not a supported property of `' + name + '`, did ' +
       'you mean `style` (singular)?';
     if (owner && owner.constructor && owner.constructor.displayName) {
-      msg +=
-        '\n\nCheck the `' +
-        owner.constructor.displayName +
-        '` parent ' +
+      msg += '\n\nCheck the `' + owner.constructor.displayName + '` parent ' +
         ' component.';
@@ -201,4 +194,4 @@ if (__DEV__) {
     !NativeMethodsMixin_DEV.componentWillMount &&
-      !NativeMethodsMixin_DEV.componentWillReceiveProps,
-    'Do not override existing functions.',
+    !NativeMethodsMixin_DEV.componentWillReceiveProps,
+    'Do not override existing functions.'
   );
@@ -218,9 +211,6 @@ function mountSafeCallback(
   context: ReactComponent<any, any, any>,
-  callback: ?Function,
+  callback: ?Function
 ): any {
   return function() {
-    if (
-      !callback ||
-      (typeof context.isMounted === 'function' && !context.isMounted())
-    ) {
+    if (!callback || (typeof context.isMounted === 'function' && !context.isMounted())) {
       return undefined;
diff --git a/src/renderers/native/ReactNative.js b/src/renderers/native/ReactNative.js
index 218defb7f..23648da92 100644
--- a/src/renderers/native/ReactNative.js
+++ b/src/renderers/native/ReactNative.js
@@ -28,3 +28,3 @@ var render = function(
   mountInto: number,
-  callback?: ?() => void,
+  callback?: ?(() => void)
 ): ?ReactComponent<any, any, any> {
@@ -43,4 +43,3 @@ var ReactNative = {
 
-  unmountComponentAtNodeAndRemoveContainer:
-    ReactNativeMount.unmountComponentAtNodeAndRemoveContainer,
+  unmountComponentAtNodeAndRemoveContainer: ReactNativeMount.unmountComponentAtNodeAndRemoveContainer,
 };
@@ -52,4 +51,3 @@ if (
   typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
-  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'
-) {
+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
   __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
diff --git a/src/renderers/native/ReactNativeAttributePayload.js b/src/renderers/native/ReactNativeAttributePayload.js
index 13a0aa52f..6c6e4f9da 100644
--- a/src/renderers/native/ReactNativeAttributePayload.js
+++ b/src/renderers/native/ReactNativeAttributePayload.js
@@ -33,11 +33,10 @@ type AttributePreprocessor = (nextProp: mixed) => mixed;
 type CustomAttributeConfiguration =
-  | {diff: AttributeDiffer, process: AttributePreprocessor}
-  | {diff: AttributeDiffer}
-  | {process: AttributePreprocessor};
-
-type AttributeConfiguration = {
-  [key: string]:
-    | CustomAttributeConfiguration
-    | AttributeConfiguration /*| boolean*/,
-};
+  { diff: AttributeDiffer, process: AttributePreprocessor } |
+  { diff: AttributeDiffer } |
+  { process: AttributePreprocessor };
+
+type AttributeConfiguration =
+  { [key: string]: (
+    CustomAttributeConfiguration | AttributeConfiguration /*| boolean*/
+  ) };
 
@@ -49,3 +48,3 @@ var removedKeyCount = 0;
 
-function defaultDiffer(prevProp: mixed, nextProp: mixed): boolean {
+function defaultDiffer(prevProp: mixed, nextProp: mixed) : boolean {
   if (typeof nextProp !== 'object' || nextProp === null) {
@@ -59,3 +58,3 @@ function defaultDiffer(prevProp: mixed, nextProp: mixed): boolean {
 
-function resolveObject(idOrObject: number | Object): Object {
+function resolveObject(idOrObject: number | Object) : Object {
   if (typeof idOrObject === 'number') {
@@ -69,3 +68,3 @@ function restoreDeletedValuesInNestedArray(
   node: NestedNode,
-  validAttributes: AttributeConfiguration,
+  validAttributes: AttributeConfiguration
 ) {
@@ -77,3 +76,3 @@ function restoreDeletedValuesInNestedArray(
         node[i],
-        validAttributes,
+        validAttributes
       );
@@ -106,10 +105,8 @@ function restoreDeletedValuesInNestedArray(
         updatePayload[propKey] = nextProp;
-      } else if (
-        typeof attributeConfig.diff === 'function' ||
-        typeof attributeConfig.process === 'function'
-      ) {
+      } else if (typeof attributeConfig.diff === 'function' ||
+                 typeof attributeConfig.process === 'function') {
         // case: CustomAttributeConfiguration
-        var nextValue = typeof attributeConfig.process === 'function'
-          ? attributeConfig.process(nextProp)
-          : nextProp;
+        var nextValue = typeof attributeConfig.process === 'function' ?
+                        attributeConfig.process(nextProp) :
+                        nextProp;
         updatePayload[propKey] = nextValue;
@@ -123,10 +120,10 @@ function restoreDeletedValuesInNestedArray(
 function diffNestedArrayProperty(
-  updatePayload: ?Object,
+  updatePayload:? Object,
   prevArray: Array<NestedNode>,
   nextArray: Array<NestedNode>,
-  validAttributes: AttributeConfiguration,
-): ?Object {
-  var minLength = prevArray.length < nextArray.length
-    ? prevArray.length
-    : nextArray.length;
+  validAttributes: AttributeConfiguration
+) : ?Object {
+  var minLength = prevArray.length < nextArray.length ?
+                  prevArray.length :
+                  nextArray.length;
   var i;
@@ -139,3 +136,3 @@ function diffNestedArrayProperty(
       nextArray[i],
-      validAttributes,
+      validAttributes
     );
@@ -147,3 +144,3 @@ function diffNestedArrayProperty(
       prevArray[i],
-      validAttributes,
+      validAttributes
     );
@@ -155,3 +152,3 @@ function diffNestedArrayProperty(
       nextArray[i],
-      validAttributes,
+      validAttributes
     );
@@ -162,7 +159,8 @@ function diffNestedArrayProperty(
 function diffNestedProperty(
-  updatePayload: ?Object,
+  updatePayload:? Object,
   prevProp: NestedNode,
   nextProp: NestedNode,
-  validAttributes: AttributeConfiguration,
-): ?Object {
+  validAttributes: AttributeConfiguration
+) : ?Object {
+
   if (!updatePayload && prevProp === nextProp) {
@@ -175,6 +173,14 @@ function diffNestedProperty(
     if (nextProp) {
-      return addNestedProperty(updatePayload, nextProp, validAttributes);
+      return addNestedProperty(
+        updatePayload,
+        nextProp,
+        validAttributes
+      );
     }
     if (prevProp) {
-      return clearNestedProperty(updatePayload, prevProp, validAttributes);
+      return clearNestedProperty(
+        updatePayload,
+        prevProp,
+        validAttributes
+      );
     }
@@ -189,3 +195,3 @@ function diffNestedProperty(
       resolveObject(nextProp),
-      validAttributes,
+      validAttributes
     );
@@ -199,3 +205,3 @@ function diffNestedProperty(
       nextProp,
-      validAttributes,
+      validAttributes
     );
@@ -210,3 +216,3 @@ function diffNestedProperty(
       resolveObject(nextProp),
-      validAttributes,
+      validAttributes
     );
@@ -217,5 +223,5 @@ function diffNestedProperty(
     resolveObject(prevProp),
-    // $FlowFixMe - We know that this is always an object when the input is.
+      // $FlowFixMe - We know that this is always an object when the input is.
     flattenStyle(nextProp),
-    validAttributes,
+    validAttributes
   );
@@ -229,5 +235,5 @@ function diffNestedProperty(
 function addNestedProperty(
-  updatePayload: ?Object,
+  updatePayload:? Object,
   nextProp: NestedNode,
-  validAttributes: AttributeConfiguration,
+  validAttributes: AttributeConfiguration
 ) {
@@ -242,3 +248,3 @@ function addNestedProperty(
       resolveObject(nextProp),
-      validAttributes,
+      validAttributes
     );
@@ -251,3 +257,3 @@ function addNestedProperty(
       nextProp[i],
-      validAttributes,
+      validAttributes
     );
@@ -263,6 +269,6 @@ function addNestedProperty(
 function clearNestedProperty(
-  updatePayload: ?Object,
+  updatePayload:? Object,
   prevProp: NestedNode,
-  validAttributes: AttributeConfiguration,
-): ?Object {
+  validAttributes: AttributeConfiguration
+) : ?Object {
   if (!prevProp) {
@@ -276,3 +282,3 @@ function clearNestedProperty(
       resolveObject(prevProp),
-      validAttributes,
+      validAttributes
     );
@@ -285,3 +291,3 @@ function clearNestedProperty(
       prevProp[i],
-      validAttributes,
+      validAttributes
     );
@@ -301,5 +307,5 @@ function diffProperties(
   nextProps: Object,
-  validAttributes: AttributeConfiguration,
+  validAttributes: AttributeConfiguration
 ): ?Object {
-  var attributeConfig: ?(CustomAttributeConfiguration | AttributeConfiguration);
+  var attributeConfig : ?(CustomAttributeConfiguration | AttributeConfiguration);
   var nextProp;
@@ -319,3 +325,3 @@ function diffProperties(
     if (typeof nextProp === 'function') {
-      nextProp = (true: any);
+      nextProp = (true : any);
       // If nextProp is not a function, then don't bother changing prevProp
@@ -323,3 +329,3 @@ function diffProperties(
       if (typeof prevProp === 'function') {
-        prevProp = (true: any);
+        prevProp = (true : any);
       }
@@ -330,5 +336,5 @@ function diffProperties(
     if (typeof nextProp === 'undefined') {
-      nextProp = (null: any);
+      nextProp = (null : any);
       if (typeof prevProp === 'undefined') {
-        prevProp = (null: any);
+        prevProp = (null : any);
       }
@@ -350,10 +356,8 @@ function diffProperties(
         updatePayload[propKey] = nextProp;
-      } else if (
-        typeof attributeConfig.diff === 'function' ||
-        typeof attributeConfig.process === 'function'
-      ) {
+      } else if (typeof attributeConfig.diff === 'function' ||
+                 typeof attributeConfig.process === 'function') {
         // case: CustomAttributeConfiguration
-        var nextValue = typeof attributeConfig.process === 'function'
-          ? attributeConfig.process(nextProp)
-          : nextProp;
+        var nextValue = typeof attributeConfig.process === 'function' ?
+                        attributeConfig.process(nextProp) :
+                        nextProp;
         updatePayload[propKey] = nextValue;
@@ -374,16 +378,14 @@ function diffProperties(
       }
-    } else if (
-      typeof attributeConfig.diff === 'function' ||
-      typeof attributeConfig.process === 'function'
-    ) {
+    } else if (typeof attributeConfig.diff === 'function' ||
+               typeof attributeConfig.process === 'function') {
       // case: CustomAttributeConfiguration
-      var shouldUpdate =
-        prevProp === undefined ||
-        (typeof attributeConfig.diff === 'function'
-          ? attributeConfig.diff(prevProp, nextProp)
-          : defaultDiffer(prevProp, nextProp));
+      var shouldUpdate = prevProp === undefined || (
+        typeof attributeConfig.diff === 'function' ?
+        attributeConfig.diff(prevProp, nextProp) :
+        defaultDiffer(prevProp, nextProp)
+      );
       if (shouldUpdate) {
-        nextValue = typeof attributeConfig.process === 'function'
-          ? attributeConfig.process(nextProp)
-          : nextProp;
+        nextValue = typeof attributeConfig.process === 'function' ?
+                    attributeConfig.process(nextProp) :
+                    nextProp;
         (updatePayload || (updatePayload = {}))[propKey] = nextValue;
@@ -400,3 +402,3 @@ function diffProperties(
         nextProp,
-        ((attributeConfig: any): AttributeConfiguration),
+        ((attributeConfig : any) : AttributeConfiguration)
       );
@@ -406,3 +408,3 @@ function diffProperties(
           nextProp,
-          ((attributeConfig: any): AttributeConfiguration),
+          ((attributeConfig : any) : AttributeConfiguration)
         );
@@ -435,7 +437,6 @@ function diffProperties(
     // Pattern match on: attributeConfig
-    if (
-      typeof attributeConfig !== 'object' ||
-      typeof attributeConfig.diff === 'function' ||
-      typeof attributeConfig.process === 'function'
-    ) {
+    if (typeof attributeConfig !== 'object' ||
+        typeof attributeConfig.diff === 'function' ||
+        typeof attributeConfig.process === 'function') {
+
       // case: CustomAttributeConfiguration | !Object
@@ -457,3 +458,3 @@ function diffProperties(
         prevProp,
-        ((attributeConfig: any): AttributeConfiguration),
+        ((attributeConfig : any) : AttributeConfiguration)
       );
@@ -470,4 +471,4 @@ function addProperties(
   props: Object,
-  validAttributes: AttributeConfiguration,
-): ?Object {
+  validAttributes: AttributeConfiguration
+) : ?Object {
   // TODO: Fast path
@@ -483,4 +484,4 @@ function clearProperties(
   prevProps: Object,
-  validAttributes: AttributeConfiguration,
-): ?Object {
+  validAttributes: AttributeConfiguration
+) :? Object {
   // TODO: Fast path
@@ -490,6 +491,7 @@ function clearProperties(
 var ReactNativeAttributePayload = {
+
   create: function(
     props: Object,
-    validAttributes: AttributeConfiguration,
-  ): ?Object {
+    validAttributes: AttributeConfiguration
+  ) : ?Object {
     return addProperties(
@@ -497,3 +499,3 @@ var ReactNativeAttributePayload = {
       props,
-      validAttributes,
+      validAttributes
     );
@@ -504,4 +506,4 @@ var ReactNativeAttributePayload = {
     nextProps: Object,
-    validAttributes: AttributeConfiguration,
-  ): ?Object {
+    validAttributes: AttributeConfiguration
+  ) : ?Object {
     return diffProperties(
@@ -510,5 +512,6 @@ var ReactNativeAttributePayload = {
       nextProps,
-      validAttributes,
+      validAttributes
     );
   },
+
 };
diff --git a/src/renderers/native/ReactNativeBaseComponent.js b/src/renderers/native/ReactNativeBaseComponent.js
index 37de96770..06306a753 100644
--- a/src/renderers/native/ReactNativeBaseComponent.js
+++ b/src/renderers/native/ReactNativeBaseComponent.js
@@ -31,3 +31,3 @@ type ReactNativeBaseComponentViewConfig = {
   uiViewClassName: string,
-};
+}
 
@@ -42,3 +42,3 @@ type ReactNativeBaseComponentViewConfig = {
 var ReactNativeBaseComponent = function(
-  viewConfig: ReactNativeBaseComponentViewConfig,
+  viewConfig: ReactNativeBaseComponentViewConfig
 ) {
@@ -78,2 +78,3 @@ ReactNativeBaseComponent.Mixin = {
     if (mountImages.length) {
+
       // TODO: Pool these per platform view class. Reusing the `mountImages`
@@ -113,3 +114,3 @@ ReactNativeBaseComponent.Mixin = {
       nextElement.props,
-      this.viewConfig.validAttributes,
+      this.viewConfig.validAttributes
     );
@@ -120,3 +121,3 @@ ReactNativeBaseComponent.Mixin = {
         this.viewConfig.uiViewClassName,
-        updatePayload,
+        updatePayload
       );
@@ -124,3 +125,6 @@ ReactNativeBaseComponent.Mixin = {
 
-    this._reconcileListenersUponUpdate(prevElement.props, nextElement.props);
+    this._reconcileListenersUponUpdate(
+      prevElement.props,
+      nextElement.props
+    );
     this.updateChildren(nextElement.props.children, transaction, context);
@@ -149,3 +153,3 @@ ReactNativeBaseComponent.Mixin = {
     for (var key in nextProps) {
-      if (registrationNames[key] && nextProps[key] !== prevProps[key]) {
+      if (registrationNames[key] && (nextProps[key] !== prevProps[key])) {
         if (nextProps[key]) {
@@ -175,8 +179,3 @@ ReactNativeBaseComponent.Mixin = {
    */
-  mountComponent: function(
-    transaction,
-    hostParent,
-    hostContainerInfo,
-    context,
-  ) {
+  mountComponent: function(transaction, hostParent, hostContainerInfo, context) {
     var tag = ReactNativeTagHandles.allocateTag();
@@ -197,3 +196,3 @@ ReactNativeBaseComponent.Mixin = {
       this._currentElement.props,
-      this.viewConfig.validAttributes,
+      this.viewConfig.validAttributes
     );
@@ -205,3 +204,3 @@ ReactNativeBaseComponent.Mixin = {
       nativeTopRootTag,
-      updatePayload,
+      updatePayload
     );
@@ -215,3 +214,3 @@ ReactNativeBaseComponent.Mixin = {
       transaction,
-      context,
+      context
     );
@@ -229,3 +228,3 @@ Object.assign(
   ReactNativeBaseComponent.Mixin,
-  NativeMethodsMixin,
+  NativeMethodsMixin
 );
diff --git a/src/renderers/native/ReactNativeBridgeEventPlugin.js b/src/renderers/native/ReactNativeBridgeEventPlugin.js
index 35c2dad39..1e5f4ee7a 100644
--- a/src/renderers/native/ReactNativeBridgeEventPlugin.js
+++ b/src/renderers/native/ReactNativeBridgeEventPlugin.js
@@ -25,4 +25,3 @@ var allTypesByEventName = {};
 for (var bubblingTypeName in customBubblingEventTypes) {
-  allTypesByEventName[bubblingTypeName] =
-    customBubblingEventTypes[bubblingTypeName];
+  allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];
 }
@@ -33,3 +32,3 @@ for (var directTypeName in customDirectEventTypes) {
     'Event cannot be both direct and bubbling: %s',
-    directTypeName,
+    directTypeName
   );
@@ -39,3 +38,4 @@ for (var directTypeName in customDirectEventTypes) {
 var ReactNativeBridgeEventPlugin = {
-  eventTypes: {...customBubblingEventTypes, ...customDirectEventTypes},
+
+  eventTypes: { ...customBubblingEventTypes, ...customDirectEventTypes },
 
@@ -48,3 +48,3 @@ var ReactNativeBridgeEventPlugin = {
     nativeEvent: Event,
-    nativeEventTarget: Object,
+    nativeEventTarget: Object
   ): ?Object {
@@ -56,3 +56,3 @@ var ReactNativeBridgeEventPlugin = {
       nativeEvent,
-      nativeEventTarget,
+      nativeEventTarget
     );
diff --git a/src/renderers/native/ReactNativeComponentEnvironment.js b/src/renderers/native/ReactNativeComponentEnvironment.js
index 041b7bac5..64e0c9371 100644
--- a/src/renderers/native/ReactNativeComponentEnvironment.js
+++ b/src/renderers/native/ReactNativeComponentEnvironment.js
@@ -17,7 +17,6 @@ var ReactNativeReconcileTransaction = require('ReactNativeReconcileTransaction')
 var ReactNativeComponentEnvironment = {
-  processChildrenUpdates:
-    ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,
 
-  replaceNodeWithMarkup:
-    ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,
+  processChildrenUpdates: ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,
+
+  replaceNodeWithMarkup: ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,
 
@@ -26,3 +25,5 @@ var ReactNativeComponentEnvironment = {
    */
-  clearNode: function(/*containerView*/) {},
+  clearNode: function(/*containerView*/) {
+
+  },
 
diff --git a/src/renderers/native/ReactNativeDOMIDOperations.js b/src/renderers/native/ReactNativeDOMIDOperations.js
index c008373f6..4c38f3c57 100644
--- a/src/renderers/native/ReactNativeDOMIDOperations.js
+++ b/src/renderers/native/ReactNativeDOMIDOperations.js
@@ -61,3 +61,3 @@ var dangerouslyProcessChildrenUpdates = function(inst, childrenUpdates) {
     addAtIndices,
-    removeAtIndices,
+    removeAtIndices
   );
diff --git a/src/renderers/native/ReactNativeDefaultInjection.js b/src/renderers/native/ReactNativeDefaultInjection.js
index 3deef3b0e..4d15ab577 100644
--- a/src/renderers/native/ReactNativeDefaultInjection.js
+++ b/src/renderers/native/ReactNativeDefaultInjection.js
@@ -57,3 +57,3 @@ function inject() {
   ResponderEventPlugin.injection.injectGlobalResponderHandler(
-    ReactNativeGlobalResponderHandler,
+    ReactNativeGlobalResponderHandler
   );
@@ -65,4 +65,4 @@ function inject() {
   EventPluginHub.injection.injectEventPluginsByName({
-    ResponderEventPlugin: ResponderEventPlugin,
-    ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin,
+    'ResponderEventPlugin': ResponderEventPlugin,
+    'ReactNativeBridgeEventPlugin': ReactNativeBridgeEventPlugin,
   });
@@ -70,12 +70,14 @@ function inject() {
   ReactUpdates.injection.injectReconcileTransaction(
-    ReactNativeComponentEnvironment.ReactReconcileTransaction,
+    ReactNativeComponentEnvironment.ReactReconcileTransaction
   );
 
-  ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
+  ReactUpdates.injection.injectBatchingStrategy(
+    ReactDefaultBatchingStrategy
+  );
 
   ReactComponentEnvironment.injection.injectEnvironment(
-    ReactNativeComponentEnvironment,
+    ReactNativeComponentEnvironment
   );
 
-  var EmptyComponent = instantiate => {
+  var EmptyComponent = (instantiate) => {
     // Can't import View at the top because it depends on React to make its composite
@@ -85,5 +87,5 @@ function inject() {
         collapsable: true,
-        style: {position: 'absolute'},
+        style: { position: 'absolute' },
       }),
-      instantiate,
+      instantiate
     );
@@ -94,3 +96,3 @@ function inject() {
   ReactHostComponent.injection.injectTextComponentClass(
-    ReactNativeTextComponent,
+    ReactNativeTextComponent
   );
diff --git a/src/renderers/native/ReactNativeEventEmitter.js b/src/renderers/native/ReactNativeEventEmitter.js
index 95011989c..0c4c3a7da 100644
--- a/src/renderers/native/ReactNativeEventEmitter.js
+++ b/src/renderers/native/ReactNativeEventEmitter.js
@@ -58,3 +58,3 @@ var removeTouchesAtIndices = function(
   touches: Array<Object>,
-  indices: Array<number>,
+  indices: Array<number>
 ): Array<Object> {
@@ -90,2 +90,3 @@ var removeTouchesAtIndices = function(
 var ReactNativeEventEmitter = {
+
   ...ReactEventEmitterMixin,
@@ -115,3 +116,3 @@ var ReactNativeEventEmitter = {
     topLevelType: string,
-    nativeEventParam: Object,
+    nativeEventParam: Object
   ) {
@@ -129,3 +130,3 @@ var ReactNativeEventEmitter = {
         nativeEvent,
-        nativeEvent.target,
+        nativeEvent.target
       );
@@ -144,3 +145,3 @@ var ReactNativeEventEmitter = {
     topLevelType: string,
-    nativeEventParam: Object,
+    nativeEventParam: Object
   ) {
@@ -150,3 +151,3 @@ var ReactNativeEventEmitter = {
       topLevelType,
-      nativeEventParam,
+      nativeEventParam
     );
@@ -181,8 +182,9 @@ var ReactNativeEventEmitter = {
     touches: Array<Object>,
-    changedIndices: Array<number>,
+    changedIndices: Array<number>
   ) {
-    var changedTouches = eventTopLevelType === 'topTouchEnd' ||
-      eventTopLevelType === 'topTouchCancel'
-      ? removeTouchesAtIndices(touches, changedIndices)
-      : touchSubsequence(touches, changedIndices);
+    var changedTouches =
+      eventTopLevelType === 'topTouchEnd' ||
+      eventTopLevelType === 'topTouchCancel' ?
+      removeTouchesAtIndices(touches, changedIndices) :
+      touchSubsequence(touches, changedIndices);
 
@@ -202,3 +204,3 @@ var ReactNativeEventEmitter = {
               false,
-              'A view is reporting that a touch occured on tag zero.',
+              'A view is reporting that a touch occured on tag zero.'
             );
@@ -212,3 +214,3 @@ var ReactNativeEventEmitter = {
         eventTopLevelType,
-        nativeEvent,
+        nativeEvent
       );
diff --git a/src/renderers/native/ReactNativeGlobalResponderHandler.js b/src/renderers/native/ReactNativeGlobalResponderHandler.js
index 26bf46d87..84bd45fb6 100644
--- a/src/renderers/native/ReactNativeGlobalResponderHandler.js
+++ b/src/renderers/native/ReactNativeGlobalResponderHandler.js
@@ -17,3 +17,6 @@ var ReactNativeGlobalResponderHandler = {
     if (to !== null) {
-      UIManager.setJSResponder(to._rootNodeID, blockNativeResponder);
+      UIManager.setJSResponder(
+        to._rootNodeID,
+        blockNativeResponder
+      );
     } else {
diff --git a/src/renderers/native/ReactNativeMount.js b/src/renderers/native/ReactNativeMount.js
index 8654fbcec..2d508631a 100644
--- a/src/renderers/native/ReactNativeMount.js
+++ b/src/renderers/native/ReactNativeMount.js
@@ -49,3 +49,6 @@ TopLevelWrapper.isReactTopLevelWrapper = true;
  */
-function mountComponentIntoNode(componentInstance, containerTag, transaction) {
+function mountComponentIntoNode(
+    componentInstance,
+    containerTag,
+    transaction) {
   var markup = ReactReconciler.mountComponent(
@@ -56,3 +59,3 @@ function mountComponentIntoNode(componentInstance, containerTag, transaction) {
     emptyObject,
-    0 /* parentDebugID */,
+    0 /* parentDebugID */
   );
@@ -69,3 +72,5 @@ function mountComponentIntoNode(componentInstance, containerTag, transaction) {
  */
-function batchedMountComponentIntoNode(componentInstance, containerTag) {
+function batchedMountComponentIntoNode(
+    componentInstance,
+    containerTag) {
   var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
@@ -76,3 +81,3 @@ function batchedMountComponentIntoNode(componentInstance, containerTag) {
     containerTag,
-    transaction,
+    transaction
   );
@@ -98,7 +103,8 @@ var ReactNativeMount = {
     containerTag: number,
-    callback?: ?() => void,
+    callback?: ?(() => void)
   ): ?ReactComponent<any, any, any> {
-    var nextWrappedElement = React.createElement(TopLevelWrapper, {
-      child: nextElement,
-    });
+    var nextWrappedElement = React.createElement(
+      TopLevelWrapper,
+      { child: nextElement }
+    );
 
@@ -110,7 +116,3 @@ var ReactNativeMount = {
       if (shouldUpdateReactComponent(prevElement, nextElement)) {
-        ReactUpdateQueue.enqueueElementInternal(
-          prevComponent,
-          nextWrappedElement,
-          emptyObject,
-        );
+        ReactUpdateQueue.enqueueElementInternal(prevComponent, nextWrappedElement, emptyObject);
         if (callback) {
@@ -141,3 +143,3 @@ var ReactNativeMount = {
       instance,
-      containerTag,
+      containerTag
     );
@@ -154,3 +156,3 @@ var ReactNativeMount = {
    */
-  _mountImageIntoNode: function(mountImage: number, containerID: number) {
+  _mountImageIntoNode: function(mountImage : number, containerID : number) {
     // Since we now know that the `mountImage` has been mounted, we can
@@ -158,3 +160,6 @@ var ReactNativeMount = {
     var childTag = mountImage;
-    UIManager.setChildren(containerID, [childTag]);
+    UIManager.setChildren(
+      containerID,
+      [childTag]
+    );
   },
@@ -169,3 +174,5 @@ var ReactNativeMount = {
    */
-  unmountComponentAtNodeAndRemoveContainer: function(containerTag: number) {
+  unmountComponentAtNodeAndRemoveContainer: function(
+    containerTag: number
+  ) {
     ReactNativeMount.unmountComponentAtNode(containerTag);
@@ -212,3 +219,3 @@ var ReactNativeMount = {
     instance: ReactComponent<any, any, any>,
-    containerID: number,
+    containerID: number
   ) {
@@ -218,2 +225,3 @@ var ReactNativeMount = {
   },
+
 };
diff --git a/src/renderers/native/ReactNativeReconcileTransaction.js b/src/renderers/native/ReactNativeReconcileTransaction.js
index 9ee4fc981..de34a657b 100644
--- a/src/renderers/native/ReactNativeReconcileTransaction.js
+++ b/src/renderers/native/ReactNativeReconcileTransaction.js
@@ -126,3 +126,3 @@ Object.assign(
   ReactNativeReconcileTransaction,
-  Mixin,
+  Mixin
 );
diff --git a/src/renderers/native/ReactNativeTagHandles.js b/src/renderers/native/ReactNativeTagHandles.js
index 6b878dbdb..d0c7bb268 100644
--- a/src/renderers/native/ReactNativeTagHandles.js
+++ b/src/renderers/native/ReactNativeTagHandles.js
@@ -46,4 +46,3 @@ var ReactNativeTagHandles = {
       this.reactTagIsNativeTopRootID(tag),
-      'Expect a native root tag, instead got %s',
-      tag,
+      'Expect a native root tag, instead got %s', tag
     );
diff --git a/src/renderers/native/ReactNativeTextComponent.js b/src/renderers/native/ReactNativeTextComponent.js
index bc98cabf2..8e815f9ef 100644
--- a/src/renderers/native/ReactNativeTextComponent.js
+++ b/src/renderers/native/ReactNativeTextComponent.js
@@ -28,8 +28,4 @@ var ReactNativeTextComponent = function(text) {
 Object.assign(ReactNativeTextComponent.prototype, {
-  mountComponent: function(
-    transaction,
-    hostParent,
-    hostContainerInfo,
-    context,
-  ) {
+
+  mountComponent: function(transaction, hostParent, hostContainerInfo, context) {
     // TODO: hostParent should have this context already. Stop abusing context.
@@ -38,3 +34,3 @@ Object.assign(ReactNativeTextComponent.prototype, {
       'RawText "%s" must be wrapped in an explicit <Text> component.',
-      this._stringText,
+      this._stringText
     );
@@ -44,5 +40,8 @@ Object.assign(ReactNativeTextComponent.prototype, {
     var nativeTopRootTag = hostContainerInfo._tag;
-    UIManager.createView(tag, 'RCTRawText', nativeTopRootTag, {
-      text: this._stringText,
-    });
+    UIManager.createView(
+      tag,
+      'RCTRawText',
+      nativeTopRootTag,
+      {text: this._stringText}
+    );
 
@@ -63,5 +62,7 @@ Object.assign(ReactNativeTextComponent.prototype, {
         this._stringText = nextStringText;
-        UIManager.updateView(this._rootNodeID, 'RCTRawText', {
-          text: this._stringText,
-        });
+        UIManager.updateView(
+          this._rootNodeID,
+          'RCTRawText',
+          {text: this._stringText}
+        );
       }
@@ -76,2 +77,3 @@ Object.assign(ReactNativeTextComponent.prototype, {
   },
+
 });
diff --git a/src/renderers/native/ReactNativeTreeTraversal.js b/src/renderers/native/ReactNativeTreeTraversal.js
index 80c6f5ddf..4e98fa895 100644
--- a/src/renderers/native/ReactNativeTreeTraversal.js
+++ b/src/renderers/native/ReactNativeTreeTraversal.js
@@ -83,3 +83,3 @@ function traverseTwoPhase(inst, fn, arg) {
   var i;
-  for (i = path.length; i-- > 0; ) {
+  for (i = path.length; i-- > 0;) {
     fn(path[i], 'captured', arg);
@@ -114,3 +114,3 @@ function traverseEnterLeave(from, to, fn, argFrom, argTo) {
   }
-  for (i = pathTo.length; i-- > 0; ) {
+  for (i = pathTo.length; i-- > 0;) {
     fn(pathTo[i], 'captured', argTo);
diff --git a/src/renderers/native/__mocks__/InitializeJavaScriptAppEngine.js b/src/renderers/native/__mocks__/InitializeJavaScriptAppEngine.js
index 9df419b05..bc540c10d 100644
--- a/src/renderers/native/__mocks__/InitializeJavaScriptAppEngine.js
+++ b/src/renderers/native/__mocks__/InitializeJavaScriptAppEngine.js
@@ -14,2 +14 @@
 // TODO #10932517: Move all initialization callers back into react-native
-
diff --git a/src/renderers/native/__mocks__/deepDiffer.js b/src/renderers/native/__mocks__/deepDiffer.js
index 313565af4..34e4da74a 100644
--- a/src/renderers/native/__mocks__/deepDiffer.js
+++ b/src/renderers/native/__mocks__/deepDiffer.js
@@ -18,3 +18,3 @@ var deepDiffer = function(one: any, two: any): boolean {
   }
-  if (typeof one === 'function' && typeof two === 'function') {
+  if ((typeof one === 'function') && (typeof two === 'function')) {
     // We consider all functions equal
@@ -22,3 +22,3 @@ var deepDiffer = function(one: any, two: any): boolean {
   }
-  if (typeof one !== 'object' || one === null) {
+  if ((typeof one !== 'object') || (one === null)) {
     // Primitives can be directly compared
@@ -26,3 +26,3 @@ var deepDiffer = function(one: any, two: any): boolean {
   }
-  if (typeof two !== 'object' || two === null) {
+  if ((typeof two !== 'object') || (two === null)) {
     // We know they are different because the previous case would have triggered
diff --git a/src/renderers/native/__mocks__/deepFreezeAndThrowOnMutationInDev.js b/src/renderers/native/__mocks__/deepFreezeAndThrowOnMutationInDev.js
index 8d8ceb859..ebb81c333 100644
--- a/src/renderers/native/__mocks__/deepFreezeAndThrowOnMutationInDev.js
+++ b/src/renderers/native/__mocks__/deepFreezeAndThrowOnMutationInDev.js
@@ -13,3 +13,3 @@
 
-var deepFreezeAndThrowOnMutationInDev = function() {};
+var deepFreezeAndThrowOnMutationInDev = function() { };
 
diff --git a/src/renderers/native/__mocks__/flattenStyle.js b/src/renderers/native/__mocks__/flattenStyle.js
index d9b46a98a..a766c705f 100644
--- a/src/renderers/native/__mocks__/flattenStyle.js
+++ b/src/renderers/native/__mocks__/flattenStyle.js
@@ -13,3 +13,3 @@
 
-var flattenStyle = function() {};
+var flattenStyle = function() { };
 
diff --git a/src/renderers/native/__tests__/ReactNativeAttributePayload-test.js b/src/renderers/native/__tests__/ReactNativeAttributePayload-test.js
index 77c8ae799..568764dc0 100644
--- a/src/renderers/native/__tests__/ReactNativeAttributePayload-test.js
+++ b/src/renderers/native/__tests__/ReactNativeAttributePayload-test.js
@@ -17,7 +17,9 @@ var diff = ReactNativeAttributePayload.diff;
 describe('ReactNativeAttributePayload', () => {
+
   it('should work with simple example', () => {
-    expect(diff({a: 1, c: 3}, {b: 2, c: 3}, {a: true, b: true})).toEqual({
-      a: null,
-      b: 2,
-    });
+    expect(diff(
+      {a: 1, c: 3},
+      {b: 2, c: 3},
+      {a: true, b: true}
+    )).toEqual({a: null, b: 2});
   });
@@ -25,9 +27,7 @@ describe('ReactNativeAttributePayload', () => {
   it('should skip fields that are equal', () => {
-    expect(
-      diff(
-        {a: 1, b: 'two', c: true, d: false, e: undefined, f: 0},
-        {a: 1, b: 'two', c: true, d: false, e: undefined, f: 0},
-        {a: true, b: true, c: true, d: true, e: true, f: true},
-      ),
-    ).toEqual(null);
+    expect(diff(
+      {a: 1, b: 'two', c: true, d: false, e: undefined, f: 0},
+      {a: 1, b: 'two', c: true, d: false, e: undefined, f: 0},
+      {a: true, b: true, c: true, d: true, e: true, f: true}
+    )).toEqual(null);
   });
@@ -35,3 +35,7 @@ describe('ReactNativeAttributePayload', () => {
   it('should remove fields', () => {
-    expect(diff({a: 1}, {}, {a: true})).toEqual({a: null});
+    expect(diff(
+      {a: 1},
+      {},
+      {a: true}
+    )).toEqual({a: null});
   });
@@ -39,3 +43,7 @@ describe('ReactNativeAttributePayload', () => {
   it('should remove fields that are set to undefined', () => {
-    expect(diff({a: 1}, {a: undefined}, {a: true})).toEqual({a: null});
+    expect(diff(
+      {a: 1},
+      {a: undefined},
+      {a: true}
+    )).toEqual({a: null});
   });
@@ -43,3 +51,7 @@ describe('ReactNativeAttributePayload', () => {
   it('should ignore invalid fields', () => {
-    expect(diff({a: 1}, {b: 2}, {})).toEqual(null);
+    expect(diff(
+      {a: 1},
+      {b: 2},
+      {}
+    )).toEqual(null);
   });
@@ -49,9 +61,7 @@ describe('ReactNativeAttributePayload', () => {
     var diffB = jest.fn((a, b) => false);
-    expect(
-      diff(
-        {a: [1], b: [3]},
-        {a: [2], b: [4]},
-        {a: {diff: diffA}, b: {diff: diffB}},
-      ),
-    ).toEqual({a: [2]});
+    expect(diff(
+      {a: [1], b: [3]},
+      {a: [2], b: [4]},
+      {a: {diff: diffA}, b: {diff: diffB}}
+    )).toEqual({a: [2]});
     expect(diffA).toBeCalledWith([1], [2]);
@@ -63,5 +73,7 @@ describe('ReactNativeAttributePayload', () => {
     var diffB = jest.fn();
-    expect(
-      diff({a: [1]}, {b: [2]}, {a: {diff: diffA}, b: {diff: diffB}}),
-    ).toEqual({a: null, b: [2]});
+    expect(diff(
+      {a: [1]},
+      {b: [2]},
+      {a: {diff: diffA}, b: {diff: diffB}}
+    )).toEqual({a: null, b: [2]});
     expect(diffA).not.toBeCalled();
@@ -71,9 +83,7 @@ describe('ReactNativeAttributePayload', () => {
   it('should do deep diffs of Objects by default', () => {
-    expect(
-      diff(
-        {a: [1], b: {k: [3, 4]}, c: {k: [4, 4]}},
-        {a: [2], b: {k: [3, 4]}, c: {k: [4, 5]}},
-        {a: true, b: true, c: true},
-      ),
-    ).toEqual({a: [2], c: {k: [4, 5]}});
+    expect(diff(
+      {a: [1], b: {k: [3, 4]}, c: {k: [4, 4]} },
+      {a: [2], b: {k: [3, 4]}, c: {k: [4, 5]} },
+      {a: true, b: true, c: true}
+    )).toEqual({a: [2], c: {k: [4, 5]}});
   });
@@ -81,19 +91,17 @@ describe('ReactNativeAttributePayload', () => {
   it('should work with undefined styles', () => {
-    expect(
-      diff(
-        {style: {a: '#ffffff', b: 1}},
-        {style: undefined},
-        {style: {b: true}},
-      ),
-    ).toEqual({b: null});
-    expect(
-      diff(
-        {style: undefined},
-        {style: {a: '#ffffff', b: 1}},
-        {style: {b: true}},
-      ),
-    ).toEqual({b: 1});
-    expect(
-      diff({style: undefined}, {style: undefined}, {style: {b: true}}),
-    ).toEqual(null);
+    expect(diff(
+      { style: { a: '#ffffff', b: 1 } },
+      { style: undefined },
+      { style: { b: true } }
+    )).toEqual({ b: null });
+    expect(diff(
+      { style: undefined },
+      { style: { a: '#ffffff', b: 1 } },
+      { style: { b: true } }
+    )).toEqual({ b: 1 });
+    expect(diff(
+      { style: undefined },
+      { style: undefined },
+      { style: { b: true } }
+    )).toEqual(null);
   });
@@ -101,5 +109,17 @@ describe('ReactNativeAttributePayload', () => {
   it('should work with empty styles', () => {
-    expect(diff({a: 1, c: 3}, {}, {a: true, b: true})).toEqual({a: null});
-    expect(diff({}, {a: 1, c: 3}, {a: true, b: true})).toEqual({a: 1});
-    expect(diff({}, {}, {a: true, b: true})).toEqual(null);
+    expect(diff(
+      {a: 1, c: 3},
+      {},
+      {a: true, b: true}
+    )).toEqual({a: null});
+    expect(diff(
+      {},
+      {a: 1, c: 3},
+      {a: true, b: true}
+    )).toEqual({a: 1});
+    expect(diff(
+      {},
+      {},
+      {a: true, b: true}
+    )).toEqual(null);
   });
@@ -107,11 +127,15 @@ describe('ReactNativeAttributePayload', () => {
   it('should flatten nested styles and predefined styles', () => {
-    var validStyleAttribute = {someStyle: {foo: true, bar: true}};
+    var validStyleAttribute = { someStyle: { foo: true, bar: true } };
 
-    expect(
-      diff({}, {someStyle: [{foo: 1}, {bar: 2}]}, validStyleAttribute),
-    ).toEqual({foo: 1, bar: 2});
+    expect(diff(
+      {},
+      { someStyle: [{ foo: 1 }, { bar: 2 }]},
+      validStyleAttribute
+    )).toEqual({ foo: 1, bar: 2 });
 
-    expect(
-      diff({someStyle: [{foo: 1}, {bar: 2}]}, {}, validStyleAttribute),
-    ).toEqual({foo: null, bar: null});
+    expect(diff(
+      { someStyle: [{ foo: 1 }, { bar: 2 }]},
+      {},
+      validStyleAttribute
+    )).toEqual({ foo: null, bar: null });
 
@@ -121,9 +145,7 @@ describe('ReactNativeAttributePayload', () => {
 
-    expect(
-      diff(
-        {},
-        {someStyle: [[{foo: 1}, {foo: 2}], barStyle]},
-        validStyleAttribute,
-      ),
-    ).toEqual({foo: 2, bar: 3});
+    expect(diff(
+      {},
+      { someStyle: [[{ foo: 1 }, { foo: 2 }], barStyle]},
+      validStyleAttribute
+    )).toEqual({ foo: 2, bar: 3 });
   });
@@ -131,11 +153,9 @@ describe('ReactNativeAttributePayload', () => {
   it('should reset a value to a previous if it is removed', () => {
-    var validStyleAttribute = {someStyle: {foo: true, bar: true}};
-
-    expect(
-      diff(
-        {someStyle: [{foo: 1}, {foo: 3}]},
-        {someStyle: [{foo: 1}, {bar: 2}]},
-        validStyleAttribute,
-      ),
-    ).toEqual({foo: 1, bar: 2});
+    var validStyleAttribute = { someStyle: { foo: true, bar: true } };
+
+    expect(diff(
+      { someStyle: [{ foo: 1 }, { foo: 3 }]},
+      { someStyle: [{ foo: 1 }, { bar: 2 }]},
+      validStyleAttribute
+    )).toEqual({ foo: 1, bar: 2 });
   });
@@ -143,19 +163,15 @@ describe('ReactNativeAttributePayload', () => {
   it('should not clear removed props if they are still in another slot', () => {
-    var validStyleAttribute = {someStyle: {foo: true, bar: true}};
-
-    expect(
-      diff(
-        {someStyle: [{}, {foo: 3, bar: 2}]},
-        {someStyle: [{foo: 3}, {bar: 2}]},
-        validStyleAttribute,
-      ),
-    ).toEqual({foo: 3}); // this should ideally be null. heuristic tradeoff.
-
-    expect(
-      diff(
-        {someStyle: [{}, {foo: 3, bar: 2}]},
-        {someStyle: [{foo: 1, bar: 1}, {bar: 2}]},
-        validStyleAttribute,
-      ),
-    ).toEqual({bar: 2, foo: 1});
+    var validStyleAttribute = { someStyle: { foo: true, bar: true } };
+
+    expect(diff(
+      { someStyle: [{}, { foo: 3, bar: 2 }]},
+      { someStyle: [{ foo: 3 }, { bar: 2 }]},
+      validStyleAttribute
+    )).toEqual({ foo: 3 }); // this should ideally be null. heuristic tradeoff.
+
+    expect(diff(
+      { someStyle: [{}, { foo: 3, bar: 2 }]},
+      { someStyle: [{ foo: 1, bar: 1 }, { bar: 2 }]},
+      validStyleAttribute
+    )).toEqual({ bar: 2, foo: 1 });
   });
@@ -163,26 +179,20 @@ describe('ReactNativeAttributePayload', () => {
   it('should clear a prop if a later style is explicit null/undefined', () => {
-    var validStyleAttribute = {someStyle: {foo: true, bar: true}};
-    expect(
-      diff(
-        {someStyle: [{}, {foo: 3, bar: 2}]},
-        {someStyle: [{foo: 1}, {bar: 2, foo: null}]},
-        validStyleAttribute,
-      ),
-    ).toEqual({foo: null});
-
-    expect(
-      diff(
-        {someStyle: [{foo: 3}, {foo: null, bar: 2}]},
-        {someStyle: [{foo: null}, {bar: 2}]},
-        validStyleAttribute,
-      ),
-    ).toEqual({foo: null});
-
-    expect(
-      diff(
-        {someStyle: [{foo: 1}, {foo: null}]},
-        {someStyle: [{foo: 2}, {foo: null}]},
-        validStyleAttribute,
-      ),
-    ).toEqual({foo: null}); // this should ideally be null. heuristic.
+    var validStyleAttribute = { someStyle: { foo: true, bar: true } };
+    expect(diff(
+      { someStyle: [{}, { foo: 3, bar: 2 }]},
+      { someStyle: [{ foo: 1 }, { bar: 2, foo: null }]},
+      validStyleAttribute
+    )).toEqual({ foo: null });
+
+    expect(diff(
+      { someStyle: [{ foo: 3 }, { foo: null, bar: 2 }]},
+      { someStyle: [{ foo: null }, { bar: 2 }]},
+      validStyleAttribute
+    )).toEqual({ foo: null });
+
+    expect(diff(
+      { someStyle: [{ foo: 1 }, { foo: null }]},
+      { someStyle: [{ foo: 2 }, { foo: null }]},
+      validStyleAttribute
+    )).toEqual({ foo: null }); // this should ideally be null. heuristic.
 
@@ -190,18 +200,14 @@ describe('ReactNativeAttributePayload', () => {
     // work in this case.
-    var fooObj = {foo: 3};
-    expect(
-      diff(
-        {someStyle: [{foo: 1}, fooObj]},
-        {someStyle: [{foo: 2}, fooObj]},
-        validStyleAttribute,
-      ),
-    ).toEqual({foo: 3}); // this should ideally be null. heuristic.
-
-    expect(
-      diff(
-        {someStyle: [{foo: 1}, {foo: 3}]},
-        {someStyle: [{foo: 2}, {foo: undefined}]},
-        validStyleAttribute,
-      ),
-    ).toEqual({foo: null}); // this should ideally be null. heuristic.
+    var fooObj = { foo: 3 };
+    expect(diff(
+      { someStyle: [{ foo: 1 }, fooObj]},
+      { someStyle: [{ foo: 2 }, fooObj]},
+      validStyleAttribute
+    )).toEqual({ foo: 3 }); // this should ideally be null. heuristic.
+
+    expect(diff(
+      { someStyle: [{ foo: 1 }, { foo: 3 }]},
+      { someStyle: [{ foo: 2 }, { foo: undefined }]},
+      validStyleAttribute
+    )).toEqual({ foo: null }); // this should ideally be null. heuristic.
   });
@@ -212,25 +218,24 @@ describe('ReactNativeAttributePayload', () => {
     // need to send an update.
-    expect(
-      diff(
-        {
-          a: function() {
-            return 1;
-          },
-          b: function() {
-            return 2;
-          },
-          c: 3,
+    expect(diff(
+      {
+        a: function() {
+          return 1;
         },
-        {
-          b: function() {
-            return 9;
-          },
-          c: function() {
-            return 3;
-          },
+        b: function() {
+          return 2;
         },
-        {a: true, b: true, c: true},
-      ),
-    ).toEqual({a: null, c: true});
+        c: 3,
+      },
+      {
+        b: function() {
+          return 9;
+        },
+        c: function() {
+          return 3;
+        },
+      },
+      {a: true, b: true, c: true}
+    )).toEqual({a: null, c: true});
   });
+
 });
diff --git a/src/renderers/native/__tests__/ReactNativeEvents-test.js b/src/renderers/native/__tests__/ReactNativeEvents-test.js
index 40543e92f..8110dcff2 100644
--- a/src/renderers/native/__tests__/ReactNativeEvents-test.js
+++ b/src/renderers/native/__tests__/ReactNativeEvents-test.js
@@ -40,3 +40,3 @@ it('handles events', () => {
   var View = createReactNativeComponentClass({
-    validAttributes: {foo: true},
+    validAttributes: { foo: true },
     uiViewClassName: 'View',
@@ -44,2 +44,3 @@ it('handles events', () => {
 
+
   var log = [];
@@ -60,3 +61,3 @@ it('handles events', () => {
     </View>,
-    1,
+    1
   );
@@ -69,3 +70,3 @@ it('handles events', () => {
     [{target: innerTag, identifier: 17}],
-    [0],
+    [0]
   );
@@ -74,3 +75,3 @@ it('handles events', () => {
     [{target: innerTag, identifier: 17}],
-    [0],
+    [0]
   );
diff --git a/src/renderers/native/__tests__/ReactNativeMount-test.js b/src/renderers/native/__tests__/ReactNativeMount-test.js
index bf479384a..aa433e45e 100644
--- a/src/renderers/native/__tests__/ReactNativeMount-test.js
+++ b/src/renderers/native/__tests__/ReactNativeMount-test.js
@@ -28,3 +28,3 @@ describe('ReactNative', () => {
     var View = createReactNativeComponentClass({
-      validAttributes: {foo: true},
+      validAttributes: { foo: true },
       uiViewClassName: 'View',
@@ -41,3 +41,3 @@ describe('ReactNative', () => {
     var View = createReactNativeComponentClass({
-      validAttributes: {foo: true},
+      validAttributes: { foo: true },
       uiViewClassName: 'View',
@@ -57,4 +57,5 @@ describe('ReactNative', () => {
     expect(UIManager.manageChildren).not.toBeCalled();
-    expect(UIManager.updateView).toBeCalledWith(3, 'View', {foo: 'bar'});
+    expect(UIManager.updateView).toBeCalledWith(3, 'View', { foo: 'bar' });
   });
+
 });
diff --git a/src/renderers/native/createReactNativeComponentClass.js b/src/renderers/native/createReactNativeComponentClass.js
index 4d4e0d03f..e5f113bf0 100644
--- a/src/renderers/native/createReactNativeComponentClass.js
+++ b/src/renderers/native/createReactNativeComponentClass.js
@@ -21,3 +21,3 @@ type ReactNativeBaseComponentViewConfig = {
   propTypes?: Object,
-};
+}
 
@@ -28,3 +28,3 @@ type ReactNativeBaseComponentViewConfig = {
 var createReactNativeComponentClass = function(
-  viewConfig: ReactNativeBaseComponentViewConfig,
+  viewConfig: ReactNativeBaseComponentViewConfig
 ): ReactClass<any> {
diff --git a/src/renderers/native/findNodeHandle.js b/src/renderers/native/findNodeHandle.js
index 3226c2e93..0c30a344e 100644
--- a/src/renderers/native/findNodeHandle.js
+++ b/src/renderers/native/findNodeHandle.js
@@ -57,7 +57,7 @@ function findNodeHandle(componentOrHandle: any): ?number {
         '%s is accessing findNodeHandle inside its render(). ' +
-          'render() should be a pure function of props and state. It should ' +
-          'never access something that requires stale data from the previous ' +
-          'render, such as refs. Move this logic to componentDidMount and ' +
-          'componentDidUpdate instead.',
-        owner.getName() || 'A component',
+        'render() should be a pure function of props and state. It should ' +
+        'never access something that requires stale data from the previous ' +
+        'render, such as refs. Move this logic to componentDidMount and ' +
+        'componentDidUpdate instead.',
+        owner.getName() || 'A component'
       );
@@ -87,10 +87,15 @@ function findNodeHandle(componentOrHandle: any): ?number {
       invariant(
-        // Native
-        (typeof component === 'object' && '_rootNodeID' in component) ||
+        (
+          // Native
+          typeof component === 'object' &&
+          '_rootNodeID' in component
+        ) || (
           // Composite
-          (component.render != null && typeof component.render === 'function'),
+          component.render != null &&
+          typeof component.render === 'function'
+        ),
         'findNodeHandle(...): Argument is not a component ' +
-          '(type: %s, keys: %s)',
+        '(type: %s, keys: %s)',
         typeof component,
-        Object.keys(component),
+        Object.keys(component)
       );
@@ -99,3 +104,3 @@ function findNodeHandle(componentOrHandle: any): ?number {
         'findNodeHandle(...): Unable to find node handle for unmounted ' +
-          'component.',
+        'component.'
       );
diff --git a/src/renderers/noop/ReactNoop.js b/src/renderers/noop/ReactNoop.js
index 3f420e9f0..ff316945e 100644
--- a/src/renderers/noop/ReactNoop.js
+++ b/src/renderers/noop/ReactNoop.js
@@ -21,8 +21,10 @@
 
-import type {Fiber} from 'ReactFiber';
-import type {UpdateQueue} from 'ReactFiberUpdateQueue';
-import type {HostChildren} from 'ReactFiberReconciler';
+import type { Fiber } from 'ReactFiber';
+import type { UpdateQueue } from 'ReactFiberUpdateQueue';
+import type { HostChildren } from 'ReactFiberReconciler';
 
 var ReactFiberReconciler = require('ReactFiberReconciler');
-var {AnimationPriority} = require('ReactPriorityLevel');
+var {
+  AnimationPriority,
+} = require('ReactPriorityLevel');
 
@@ -33,11 +35,5 @@ const TERMINAL_TAG = 99;
 
-type Container = {rootID: number, children: Array<Instance>};
-type Props = {prop: any};
-type Instance = {
-  tag: 99,
-  type: string,
-  id: number,
-  children: Array<Instance>,
-  prop: any,
-};
+type Container = { rootID: number, children: Array<Instance> };
+type Props = { prop: any };
+type Instance = { tag: 99, type: string, id: number, children: Array<Instance>, prop: any };
 
@@ -45,6 +41,3 @@ var instanceCounter = 0;
 
-function recursivelyAppendChildren(
-  flatArray: Array<Instance>,
-  child: HostChildren<Instance>,
-) {
+function recursivelyAppendChildren(flatArray : Array<Instance>, child : HostChildren<Instance>) {
   if (!child) {
@@ -58,3 +51,3 @@ function recursivelyAppendChildren(
       recursivelyAppendChildren(flatArray, node.output);
-    } while ((node = node.sibling));
+    } while (node = node.sibling);
   }
@@ -62,3 +55,3 @@ function recursivelyAppendChildren(
 
-function flattenChildren(children: HostChildren<Instance>) {
+function flattenChildren(children : HostChildren<Instance>) {
   const flatArray = [];
@@ -69,6 +62,4 @@ function flattenChildren(children: HostChildren<Instance>) {
 var NoopRenderer = ReactFiberReconciler({
-  updateContainer(
-    containerInfo: Container,
-    children: HostChildren<Instance>,
-  ): void {
+
+  updateContainer(containerInfo : Container, children : HostChildren<Instance>) : void {
     containerInfo.children = flattenChildren(children);
@@ -76,7 +67,3 @@ var NoopRenderer = ReactFiberReconciler({
 
-  createInstance(
-    type: string,
-    props: Props,
-    children: HostChildren<Instance>,
-  ): Instance {
+  createInstance(type : string, props : Props, children : HostChildren<Instance>) : Instance {
     const inst = {
@@ -89,4 +76,4 @@ var NoopRenderer = ReactFiberReconciler({
     // Hide from unit tests
-    Object.defineProperty(inst, 'tag', {value: inst.tag, enumerable: false});
-    Object.defineProperty(inst, 'id', {value: inst.id, enumerable: false});
+    Object.defineProperty(inst, 'tag', { value: inst.tag, enumerable: false });
+    Object.defineProperty(inst, 'id', { value: inst.id, enumerable: false });
     return inst;
@@ -94,8 +81,3 @@ var NoopRenderer = ReactFiberReconciler({
 
-  prepareUpdate(
-    instance: Instance,
-    oldProps: Props,
-    newProps: Props,
-    children: HostChildren<Instance>,
-  ): boolean {
+  prepareUpdate(instance : Instance, oldProps : Props, newProps : Props, children : HostChildren<Instance>) : boolean {
     return true;
@@ -103,8 +85,3 @@ var NoopRenderer = ReactFiberReconciler({
 
-  commitUpdate(
-    instance: Instance,
-    oldProps: Props,
-    newProps: Props,
-    children: HostChildren<Instance>,
-  ): void {
+  commitUpdate(instance : Instance, oldProps : Props, newProps : Props, children : HostChildren<Instance>) : void {
     instance.children = flattenChildren(children);
@@ -113,3 +90,4 @@ var NoopRenderer = ReactFiberReconciler({
 
-  deleteInstance(instance: Instance): void {},
+  deleteInstance(instance : Instance) : void {
+  },
 
@@ -122,5 +100,6 @@ var NoopRenderer = ReactFiberReconciler({
   },
+
 });
 
-var rootContainer = {rootID: 0, children: []};
+var rootContainer = { rootID: 0, children: [] };
 
@@ -129,5 +108,6 @@ var root = null;
 var ReactNoop = {
+
   root: rootContainer,
 
-  render(element: ReactElement<any>) {
+  render(element : ReactElement<any>) {
     if (!root) {
@@ -148,3 +128,3 @@ var ReactNoop = {
 
-  flushDeferredPri(timeout: number = Infinity) {
+  flushDeferredPri(timeout : number = Infinity) {
     var cb = scheduledDeferredCallback;
@@ -195,3 +175,3 @@ var ReactNoop = {
     }
-    function logContainer(container: Container, depth) {
+    function logContainer(container : Container, depth) {
       log('  '.repeat(depth) + '- [root#' + container.rootID + ']');
@@ -200,3 +180,3 @@ var ReactNoop = {
 
-    function logUpdateQueue(updateQueue: UpdateQueue, depth) {
+    function logUpdateQueue(updateQueue : UpdateQueue, depth) {
       log(
@@ -204,3 +184,3 @@ var ReactNoop = {
         updateQueue.isReplace ? 'is replace' : '',
-        updateQueue.isForced ? 'is forced' : '',
+        updateQueue.isForced ? 'is forced' : ''
       );
@@ -209,6 +189,6 @@ var ReactNoop = {
         updateQueue.partialState,
-        updateQueue.callback ? 'with callback' : '',
+        updateQueue.callback ? 'with callback' : ''
       );
       var next;
-      while ((next = updateQueue.next)) {
+      while (next = updateQueue.next) {
         log(
@@ -216,3 +196,3 @@ var ReactNoop = {
           next.partialState,
-          next.callback ? 'with callback' : '',
+          next.callback ? 'with callback' : ''
         );
@@ -221,8 +201,6 @@ var ReactNoop = {
 
-    function logFiber(fiber: Fiber, depth) {
+    function logFiber(fiber : Fiber, depth) {
       log(
-        '  '.repeat(depth) +
-          '- ' +
-          (fiber.type ? fiber.type.name || fiber.type : '[root]'),
-        '[' + fiber.pendingWorkPriority + (fiber.pendingProps ? '*' : '') + ']',
+        '  '.repeat(depth) + '- ' + (fiber.type ? fiber.type.name || fiber.type : '[root]'),
+        '[' + fiber.pendingWorkPriority + (fiber.pendingProps ? '*' : '') + ']'
       );
@@ -233,5 +211,3 @@ var ReactNoop = {
       if (childInProgress && childInProgress !== fiber.child) {
-        log(
-          '  '.repeat(depth + 1) + 'IN PROGRESS: ' + fiber.progressedPriority,
-        );
+        log('  '.repeat(depth + 1) + 'IN PROGRESS: ' + fiber.progressedPriority);
         logFiber(childInProgress, depth + 1);
@@ -254,3 +230,3 @@ var ReactNoop = {
     log('FIBERS:');
-    logFiber((root.stateNode: any).current, 0);
+    logFiber((root.stateNode : any).current, 0);
 
@@ -258,2 +234,3 @@ var ReactNoop = {
   },
+
 };
diff --git a/src/renderers/shared/ReactDebugTool.js b/src/renderers/shared/ReactDebugTool.js
index a83432a1a..f7edbfbc7 100644
--- a/src/renderers/shared/ReactDebugTool.js
+++ b/src/renderers/shared/ReactDebugTool.js
@@ -22,5 +22,5 @@ var warning = require('warning');
 
-import type {ReactElement} from 'ReactElementType';
-import type {DebugID} from 'ReactInstanceType';
-import type {Operation} from 'ReactHostOperationHistoryHook';
+import type { ReactElement } from 'ReactElementType';
+import type { DebugID } from 'ReactInstanceType';
+import type { Operation } from 'ReactHostOperationHistoryHook';
 
@@ -29,11 +29,11 @@ type Hook = any;
 type TimerType =
-  | 'ctor'
-  | 'render'
-  | 'componentWillMount'
-  | 'componentWillUnmount'
-  | 'componentWillReceiveProps'
-  | 'shouldComponentUpdate'
-  | 'componentWillUpdate'
-  | 'componentDidUpdate'
-  | 'componentDidMount';
+  'ctor' |
+  'render' |
+  'componentWillMount' |
+  'componentWillUnmount' |
+  'componentWillReceiveProps' |
+  'shouldComponentUpdate' |
+  'componentWillUpdate' |
+  'componentDidUpdate' |
+  'componentDidMount';
 
@@ -53,3 +53,3 @@ type TreeSnapshot = {
     parentID: DebugID,
-  },
+  }
 };
@@ -76,3 +76,3 @@ function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
       event,
-      e + '\n' + e.stack,
+      e + '\n' + e.stack
     );
@@ -120,6 +120,5 @@ function getTreeSnapshot(registeredIDs) {
       // Text nodes don't have owners but this is close enough.
-      ownerID:
-        ownerID ||
-          (parentID && ReactComponentTreeHook.getOwnerID(parentID)) ||
-          0,
+      ownerID: ownerID ||
+        parentID && ReactComponentTreeHook.getOwnerID(parentID) ||
+        0,
       parentID,
@@ -174,7 +173,7 @@ function beginLifeCycleTimer(debugID, timerType) {
       'There is an internal error in the React performance measurement code. ' +
-        'Did not expect %s timer to start while %s timer is still in ' +
-        'progress for %s instance.',
+      'Did not expect %s timer to start while %s timer is still in ' +
+      'progress for %s instance.',
       timerType,
       currentTimerType || 'no',
-      debugID === currentTimerDebugID ? 'the same' : 'another',
+      (debugID === currentTimerDebugID) ? 'the same' : 'another'
     );
@@ -196,7 +195,7 @@ function endLifeCycleTimer(debugID, timerType) {
       'There is an internal error in the React performance measurement code. ' +
-        'We did not expect %s timer to stop while %s timer is still in ' +
-        'progress for %s instance. Please report this as a bug in React.',
+      'We did not expect %s timer to stop while %s timer is still in ' +
+      'progress for %s instance. Please report this as a bug in React.',
       timerType,
       currentTimerType || 'no',
-      debugID === currentTimerDebugID ? 'the same' : 'another',
+      (debugID === currentTimerDebugID) ? 'the same' : 'another'
     );
@@ -208,6 +207,3 @@ function endLifeCycleTimer(debugID, timerType) {
       instanceID: debugID,
-      duration:
-        performanceNow() -
-          currentTimerStartTime -
-          currentTimerNestedFlushDuration,
+      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration,
     });
@@ -235,8 +231,3 @@ function pauseCurrentLifeCycleTimer() {
 function resumeCurrentLifeCycleTimer() {
-  var {
-    startTime,
-    nestedFlushStartTime,
-    debugID,
-    timerType,
-  } = lifeCycleTimerStack.pop();
+  var {startTime, nestedFlushStartTime, debugID, timerType} = lifeCycleTimerStack.pop();
   var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
@@ -302,5 +293,3 @@ function markEnd(debugID, markType) {
   performance.clearMarks(markName);
-  if (measurementName) {
-    performance.clearMeasures(measurementName);
-  }
+  performance.clearMeasures(measurementName);
 }
@@ -386,7 +375,3 @@ var ReactDebugTool = {
   },
-  onBeforeMountComponent(
-    debugID: DebugID,
-    element: ReactElement,
-    parentDebugID: DebugID,
-  ): void {
+  onBeforeMountComponent(debugID: DebugID, element: ReactElement, parentDebugID: DebugID): void {
     checkDebugID(debugID);
@@ -433,3 +418,3 @@ ReactDebugTool.addHook(ReactComponentTreeHook);
 var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
-if (/[?&]react_perf\b/.test(url)) {
+if ((/[?&]react_perf\b/).test(url)) {
   ReactDebugTool.beginProfiling();
diff --git a/src/renderers/shared/ReactPerf.js b/src/renderers/shared/ReactPerf.js
index 17abb5809..0f3886f69 100644
--- a/src/renderers/shared/ReactPerf.js
+++ b/src/renderers/shared/ReactPerf.js
@@ -15,6 +15,6 @@
 var ReactDebugTool = require('ReactDebugTool');
-var lowPriorityWarning = require('lowPriorityWarning');
+var warning = require('warning');
 var alreadyWarned = false;
 
-import type {FlushHistory} from 'ReactDebugTool';
+import type { FlushHistory } from 'ReactDebugTool';
 
@@ -39,3 +39,3 @@ function warnInProduction() {
       'ReactPerf is not supported in the production builds of React. ' +
-        'To collect measurements, please use the development build of React instead.',
+      'To collect measurements, please use the development build of React instead.'
     );
@@ -62,8 +62,3 @@ function getExclusive(flushHistory = getLastMeasurements()) {
 
-  function updateAggregatedStats(
-    treeSnapshot,
-    instanceID,
-    timerType,
-    applyUpdate,
-  ) {
+  function updateAggregatedStats(treeSnapshot, instanceID, timerType, applyUpdate) {
     var {displayName} = treeSnapshot[instanceID];
@@ -108,3 +103,5 @@ function getExclusive(flushHistory = getLastMeasurements()) {
     }))
-    .sort((a, b) => b.totalDuration - a.totalDuration);
+    .sort((a, b) =>
+      b.totalDuration - a.totalDuration
+    );
 }
@@ -179,3 +176,5 @@ function getInclusive(flushHistory = getLastMeasurements()) {
     }))
-    .sort((a, b) => b.inclusiveRenderDuration - a.inclusiveRenderDuration);
+    .sort((a, b) =>
+      b.inclusiveRenderDuration - a.inclusiveRenderDuration
+    );
 }
@@ -243,3 +242,3 @@ function getWasted(flushHistory = getLastMeasurements()) {
       // mounted, its render() is not considered wasted.
-      var {updateCount} = treeSnapshot[instanceID];
+      var { updateCount } = treeSnapshot[instanceID];
       if (isDefinitelyNotWastedByID[instanceID] || updateCount === 0) {
@@ -275,3 +274,5 @@ function getWasted(flushHistory = getLastMeasurements()) {
     }))
-    .sort((a, b) => b.inclusiveRenderDuration - a.inclusiveRenderDuration);
+    .sort((a, b) =>
+      b.inclusiveRenderDuration - a.inclusiveRenderDuration
+    );
 }
@@ -318,3 +319,3 @@ function printExclusive(flushHistory?: FlushHistory) {
     return {
-      Component: key,
+      'Component': key,
       'Total time (ms)': roundFloat(totalDuration),
@@ -322,5 +323,5 @@ function printExclusive(flushHistory?: FlushHistory) {
       'Total render time (ms)': roundFloat(renderDuration),
-      'Average render time (ms)': renderCount
-        ? roundFloat(renderDuration / renderCount)
-        : undefined,
+      'Average render time (ms)': renderCount ?
+        roundFloat(renderDuration / renderCount) :
+        undefined,
       'Render count': renderCount,
@@ -379,6 +380,6 @@ function printOperations(flushHistory?: FlushHistory) {
     'Owner > Node': stat.key,
-    Operation: stat.type,
-    Payload: typeof stat.payload === 'object'
-      ? JSON.stringify(stat.payload)
-      : stat.payload,
+    'Operation': stat.type,
+    'Payload': typeof stat.payload === 'object' ?
+      JSON.stringify(stat.payload) :
+      stat.payload,
     'Flush index': stat.flushIndex,
@@ -392,6 +393,6 @@ var warnedAboutPrintDOM = false;
 function printDOM(measurements: FlushHistory) {
-  lowPriorityWarning(
+  warning(
     warnedAboutPrintDOM,
     '`ReactPerf.printDOM(...)` is deprecated. Use ' +
-      '`ReactPerf.printOperations(...)` instead.',
+    '`ReactPerf.printOperations(...)` instead.'
   );
@@ -403,6 +404,6 @@ var warnedAboutGetMeasurementsSummaryMap = false;
 function getMeasurementsSummaryMap(measurements: FlushHistory) {
-  lowPriorityWarning(
+  warning(
     warnedAboutGetMeasurementsSummaryMap,
     '`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use ' +
-      '`ReactPerf.getWasted(...)` instead.',
+    '`ReactPerf.getWasted(...)` instead.'
   );
diff --git a/src/renderers/shared/__tests__/ReactDebugTool-test.js b/src/renderers/shared/__tests__/ReactDebugTool-test.js
index ab702ce34..6f849c62f 100644
--- a/src/renderers/shared/__tests__/ReactDebugTool-test.js
+++ b/src/renderers/shared/__tests__/ReactDebugTool-test.js
@@ -67,3 +67,4 @@ describe('ReactDebugTool', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Exception thrown by hook while handling ' + 'onTestEvent: Error: Hi.',
+      'Exception thrown by hook while handling ' +
+      'onTestEvent: Error: Hi.'
     );
diff --git a/src/renderers/shared/__tests__/ReactPerf-test.js b/src/renderers/shared/__tests__/ReactPerf-test.js
index 3c5f3d58e..25ffd77d7 100644
--- a/src/renderers/shared/__tests__/ReactPerf-test.js
+++ b/src/renderers/shared/__tests__/ReactPerf-test.js
@@ -101,16 +101,13 @@ describe('ReactPerf', () => {
     var summary = ReactPerf.getWasted(measurements);
-    expect(summary).toEqual([
-      {
-        key: 'App',
-        instanceCount: 1,
-        inclusiveRenderDuration: 3,
-        renderCount: 1,
-      },
-      {
-        key: 'App > Box',
-        instanceCount: 2,
-        inclusiveRenderDuration: 2,
-        renderCount: 2,
-      },
-    ]);
+    expect(summary).toEqual([{
+      key: 'App',
+      instanceCount: 1,
+      inclusiveRenderDuration: 3,
+      renderCount: 1,
+    }, {
+      key: 'App > Box',
+      instanceCount: 2,
+      inclusiveRenderDuration: 2,
+      renderCount: 2,
+    }]);
   });
@@ -128,10 +125,8 @@ describe('ReactPerf', () => {
     var summary = ReactPerf.getWasted(measurements);
-    expect(summary).toEqual([
-      {
-        key: 'App > Box',
-        instanceCount: 1,
-        inclusiveRenderDuration: 1,
-        renderCount: 1,
-      },
-    ]);
+    expect(summary).toEqual([{
+      key: 'App > Box',
+      instanceCount: 1,
+      inclusiveRenderDuration: 1,
+      renderCount: 1,
+    }]);
   });
@@ -210,3 +205,3 @@ describe('ReactPerf', () => {
       <Div dangerouslySetInnerHTML={{__html: 'me'}} />,
-      container,
+      container
     );
@@ -215,3 +210,3 @@ describe('ReactPerf', () => {
         <Div dangerouslySetInnerHTML={{__html: 'you'}} />,
-        container,
+        container
       );
@@ -268,11 +263,9 @@ describe('ReactPerf', () => {
     });
-    expect(ReactPerf.getExclusive(measurements)).toEqual([
-      {
-        key: 'Div',
-        instanceCount: 3,
-        counts: {ctor: 3, render: 4},
-        durations: {ctor: 3, render: 4},
-        totalDuration: 7,
-      },
-    ]);
+    expect(ReactPerf.getExclusive(measurements)).toEqual([{
+      key: 'Div',
+      instanceCount: 3,
+      counts: { ctor: 3, render: 4 },
+      durations: { ctor: 3, render: 4 },
+      totalDuration: 7,
+    }]);
   });
@@ -287,31 +280,29 @@ describe('ReactPerf', () => {
     });
-    expect(ReactPerf.getExclusive(measurements)).toEqual([
-      {
-        key: 'LifeCycle',
-        instanceCount: 1,
-        totalDuration: 14,
-        counts: {
-          ctor: 1,
-          shouldComponentUpdate: 2,
-          componentWillMount: 1,
-          componentDidMount: 1,
-          componentWillReceiveProps: 1,
-          componentWillUpdate: 2,
-          componentDidUpdate: 2,
-          componentWillUnmount: 1,
-          render: 3,
-        },
-        durations: {
-          ctor: 1,
-          shouldComponentUpdate: 2,
-          componentWillMount: 1,
-          componentDidMount: 1,
-          componentWillReceiveProps: 1,
-          componentWillUpdate: 2,
-          componentDidUpdate: 2,
-          componentWillUnmount: 1,
-          render: 3,
-        },
+    expect(ReactPerf.getExclusive(measurements)).toEqual([{
+      key: 'LifeCycle',
+      instanceCount: 1,
+      totalDuration: 14,
+      counts: {
+        ctor: 1,
+        shouldComponentUpdate: 2,
+        componentWillMount: 1,
+        componentDidMount: 1,
+        componentWillReceiveProps: 1,
+        componentWillUpdate: 2,
+        componentDidUpdate: 2,
+        componentWillUnmount: 1,
+        render: 3,
+      },
+      durations: {
+        ctor: 1,
+        shouldComponentUpdate: 2,
+        componentWillMount: 1,
+        componentDidMount: 1,
+        componentWillReceiveProps: 1,
+        componentWillUpdate: 2,
+        componentDidUpdate: 2,
+        componentWillUnmount: 1,
+        render: 3,
       },
-    ]);
+    }]);
   });
@@ -327,15 +318,13 @@ describe('ReactPerf', () => {
     });
-    expect(ReactPerf.getExclusive(measurements)).toEqual([
-      {
-        key: 'Foo',
-        instanceCount: 1,
-        totalDuration: 1,
-        counts: {
-          render: 1,
-        },
-        durations: {
-          render: 1,
-        },
+    expect(ReactPerf.getExclusive(measurements)).toEqual([{
+      key: 'Foo',
+      instanceCount: 1,
+      totalDuration: 1,
+      counts: {
+        render: 1,
       },
-    ]);
+      durations: {
+        render: 1,
+      },
+    }]);
   });
@@ -362,39 +351,36 @@ describe('ReactPerf', () => {
 
-    expect(ReactPerf.getExclusive(measurements)).toEqual([
-      {
-        key: 'Portal',
-        instanceCount: 1,
-        totalDuration: 6,
-        counts: {
-          ctor: 1,
-          componentDidMount: 1,
-          render: 1,
-        },
-        durations: {
-          ctor: 1,
-          // We want to exclude nested imperative ReactDOM.render() from lifecycle hook's own time.
-          // Otherwise it would artificially float to the top even though its exclusive time is small.
-          // This is how we get 4 as a number with the performanceNow() mock:
-          // - we capture the time we enter componentDidMount (n = 0)
-          // - we capture the time when we enter a nested flush (n = 1)
-          // - in the nested flush, we call it twice: before and after <Foo /> rendering. (n = 3)
-          // - we capture the time when we exit a nested flush (n = 4)
-          // - we capture the time we exit componentDidMount (n = 5)
-          // Time spent in componentDidMount = (5 - 0 - (4 - 3)) = 4.
-          componentDidMount: 4,
-          render: 1,
-        },
+    expect(ReactPerf.getExclusive(measurements)).toEqual([{
+      key: 'Portal',
+      instanceCount: 1,
+      totalDuration: 6,
+      counts: {
+        ctor: 1,
+        componentDidMount: 1,
+        render: 1,
+      },
+      durations: {
+        ctor: 1,
+        // We want to exclude nested imperative ReactDOM.render() from lifecycle hook's own time.
+        // Otherwise it would artificially float to the top even though its exclusive time is small.
+        // This is how we get 4 as a number with the performanceNow() mock:
+        // - we capture the time we enter componentDidMount (n = 0)
+        // - we capture the time when we enter a nested flush (n = 1)
+        // - in the nested flush, we call it twice: before and after <Foo /> rendering. (n = 3)
+        // - we capture the time when we exit a nested flush (n = 4)
+        // - we capture the time we exit componentDidMount (n = 5)
+        // Time spent in componentDidMount = (5 - 0 - (4 - 3)) = 4.
+        componentDidMount: 4,
+        render: 1,
       },
-      {
-        key: 'Foo',
-        instanceCount: 1,
-        totalDuration: 1,
-        counts: {
-          render: 1,
-        },
-        durations: {
-          render: 1,
-        },
+    }, {
+      key: 'Foo',
+      instanceCount: 1,
+      totalDuration: 1,
+      counts: {
+        render: 1,
       },
-    ]);
+      durations: {
+        render: 1,
+      },
+    }]);
   });
@@ -403,8 +389,8 @@ describe('ReactPerf', () => {
     var measurements = measure(() => {});
-    spyOn(console, 'warn');
+    spyOn(console, 'error');
     ReactPerf.getMeasurementsSummaryMap(measurements);
-    expect(console.warn.calls.count()).toBe(1);
-    expect(console.warn.calls.argsFor(0)[0]).toContain(
+    expect(console.error.calls.count()).toBe(1);
+    expect(console.error.calls.argsFor(0)[0]).toContain(
       '`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use ' +
-        '`ReactPerf.getWasted(...)` instead.',
+      '`ReactPerf.getWasted(...)` instead.'
     );
@@ -412,3 +398,3 @@ describe('ReactPerf', () => {
     ReactPerf.getMeasurementsSummaryMap(measurements);
-    expect(console.warn.calls.count()).toBe(1);
+    expect(console.error.calls.count()).toBe(1);
   });
@@ -417,8 +403,8 @@ describe('ReactPerf', () => {
     var measurements = measure(() => {});
-    spyOn(console, 'warn');
+    spyOn(console, 'error');
     ReactPerf.printDOM(measurements);
-    expect(console.warn.calls.count()).toBe(1);
-    expect(console.warn.calls.argsFor(0)[0]).toContain(
+    expect(console.error.calls.count()).toBe(1);
+    expect(console.error.calls.argsFor(0)[0]).toContain(
       '`ReactPerf.printDOM(...)` is deprecated. Use ' +
-        '`ReactPerf.printOperations(...)` instead.',
+      '`ReactPerf.printOperations(...)` instead.'
     );
@@ -426,3 +412,3 @@ describe('ReactPerf', () => {
     ReactPerf.printDOM(measurements);
-    expect(console.warn.calls.count()).toBe(1);
+    expect(console.error.calls.count()).toBe(1);
   });
@@ -515,22 +501,18 @@ describe('ReactPerf', () => {
     ReactDOM.render(<Measurer><App /></Measurer>, container);
-    expect(ReactPerf.getWasted()).toEqual([
-      {
-        key: 'Measurer',
-        instanceCount: 1,
-        inclusiveRenderDuration: 4,
-        renderCount: 1,
-      },
-      {
-        key: 'App',
-        instanceCount: 1,
-        inclusiveRenderDuration: 3,
-        renderCount: 1,
-      },
-      {
-        key: 'App > Box',
-        instanceCount: 2,
-        inclusiveRenderDuration: 2,
-        renderCount: 2,
-      },
-    ]);
+    expect(ReactPerf.getWasted()).toEqual([{
+      key: 'Measurer',
+      instanceCount: 1,
+      inclusiveRenderDuration: 4,
+      renderCount: 1,
+    }, {
+      key: 'App',
+      instanceCount: 1,
+      inclusiveRenderDuration: 3,
+      renderCount: 1,
+    }, {
+      key: 'App > Box',
+      instanceCount: 2,
+      inclusiveRenderDuration: 2,
+      renderCount: 2,
+    }]);
   });
@@ -554,3 +536,3 @@ describe('ReactPerf', () => {
         </div>,
-        container,
+        container
       );
@@ -584,3 +566,3 @@ describe('ReactPerf', () => {
         </div>,
-        container,
+        container
       );
@@ -614,3 +596,3 @@ describe('ReactPerf', () => {
         </div>,
-        container,
+        container
       );
@@ -650,3 +632,3 @@ describe('ReactPerf', () => {
         </div>,
-        container,
+        container
       );
@@ -690,3 +672,3 @@ describe('ReactPerf', () => {
         </div>,
-        container,
+        container
       );
@@ -730,3 +712,3 @@ describe('ReactPerf', () => {
         </div>,
-        container,
+        container
       );
diff --git a/src/renderers/shared/fiber/ReactChildFiber.js b/src/renderers/shared/fiber/ReactChildFiber.js
index 31d186022..93839caed 100644
--- a/src/renderers/shared/fiber/ReactChildFiber.js
+++ b/src/renderers/shared/fiber/ReactChildFiber.js
@@ -14,10 +14,13 @@
 
-import type {ReactCoroutine, ReactYield} from 'ReactCoroutine';
-import type {Fiber} from 'ReactFiber';
-import type {PriorityLevel} from 'ReactPriorityLevel';
+import type { ReactCoroutine, ReactYield } from 'ReactCoroutine';
+import type { Fiber } from 'ReactFiber';
+import type { PriorityLevel } from 'ReactPriorityLevel';
 
-import type {ReactNodeList} from 'ReactTypes';
+import type { ReactNodeList } from 'ReactTypes';
 
 var REACT_ELEMENT_TYPE = require('ReactElementSymbol');
-var {REACT_COROUTINE_TYPE, REACT_YIELD_TYPE} = require('ReactCoroutine');
+var {
+  REACT_COROUTINE_TYPE,
+  REACT_YIELD_TYPE,
+} = require('ReactCoroutine');
 
@@ -33,3 +36,5 @@ const {
 
-const {createReifiedYield} = ReactReifiedYield;
+const {
+  createReifiedYield,
+} = ReactReifiedYield;
 
@@ -38,9 +43,10 @@ const isArray = Array.isArray;
 function ChildReconciler(shouldClone) {
+
   function createSubsequentChild(
-    returnFiber: Fiber,
-    existingChild: ?Fiber,
-    previousSibling: Fiber,
+    returnFiber : Fiber,
+    existingChild : ?Fiber,
+    previousSibling : Fiber,
     newChildren,
-    priority: PriorityLevel,
-  ): Fiber {
+    priority : PriorityLevel
+  ) : Fiber {
     if (typeof newChildren !== 'object' || newChildren === null) {
@@ -51,13 +57,9 @@ function ChildReconciler(shouldClone) {
       case REACT_ELEMENT_TYPE: {
-        const element = (newChildren: ReactElement<any>);
-        if (
-          existingChild &&
-          element.type === existingChild.type &&
-          element.key === existingChild.key
-        ) {
+        const element = (newChildren : ReactElement<any>);
+        if (existingChild &&
+            element.type === existingChild.type &&
+            element.key === existingChild.key) {
           // TODO: This is not sufficient since previous siblings could be new.
           // Will fix reconciliation properly later.
-          const clone = shouldClone
-            ? cloneFiber(existingChild, priority)
-            : existingChild;
+          const clone = shouldClone ? cloneFiber(existingChild, priority) : existingChild;
           if (!shouldClone) {
@@ -79,3 +81,3 @@ function ChildReconciler(shouldClone) {
       case REACT_COROUTINE_TYPE: {
-        const coroutine = (newChildren: ReactCoroutine);
+        const coroutine = (newChildren : ReactCoroutine);
         const child = createFiberFromCoroutine(coroutine, priority);
@@ -87,3 +89,3 @@ function ChildReconciler(shouldClone) {
       case REACT_YIELD_TYPE: {
-        const yieldNode = (newChildren: ReactYield);
+        const yieldNode = (newChildren : ReactYield);
         const reifiedYield = createReifiedYield(yieldNode);
@@ -98,13 +100,7 @@ function ChildReconciler(shouldClone) {
     if (isArray(newChildren)) {
-      let prev: Fiber = previousSibling;
-      let existing: ?Fiber = existingChild;
+      let prev : Fiber = previousSibling;
+      let existing : ?Fiber = existingChild;
       for (var i = 0; i < newChildren.length; i++) {
         var nextExisting = existing && existing.sibling;
-        prev = createSubsequentChild(
-          returnFiber,
-          existing,
-          prev,
-          newChildren[i],
-          priority,
-        );
+        prev = createSubsequentChild(returnFiber, existing, prev, newChildren[i], priority);
         if (prev && existing) {
@@ -133,12 +129,8 @@ function ChildReconciler(shouldClone) {
          */
-        const element = (newChildren: ReactElement<any>);
-        if (
-          existingChild &&
-          element.type === existingChild.type &&
-          element.key === existingChild.key
-        ) {
+        const element = (newChildren : ReactElement<any>);
+        if (existingChild &&
+            element.type === existingChild.type &&
+            element.key === existingChild.key) {
           // Get the clone of the existing fiber.
-          const clone = shouldClone
-            ? cloneFiber(existingChild, priority)
-            : existingChild;
+          const clone = shouldClone ? cloneFiber(existingChild, priority) : existingChild;
           if (!shouldClone) {
@@ -160,3 +152,3 @@ function ChildReconciler(shouldClone) {
          */
-        const coroutine = (newChildren: ReactCoroutine);
+        const coroutine = (newChildren : ReactCoroutine);
         const child = createFiberFromCoroutine(coroutine, priority);
@@ -173,3 +165,3 @@ function ChildReconciler(shouldClone) {
          */
-        const yieldNode = (newChildren: ReactYield);
+        const yieldNode = (newChildren : ReactYield);
         const reifiedYield = createReifiedYield(yieldNode);
@@ -183,5 +175,5 @@ function ChildReconciler(shouldClone) {
     if (isArray(newChildren)) {
-      var first: ?Fiber = null;
-      var prev: ?Fiber = null;
-      var existing: ?Fiber = existingChild;
+      var first : ?Fiber = null;
+      var prev : ?Fiber = null;
+      var existing : ?Fiber = existingChild;
       /* $FlowIssue(>=0.31.0) #12747709
@@ -194,17 +186,6 @@ function ChildReconciler(shouldClone) {
         if (prev == null) {
-          prev = createFirstChild(
-            returnFiber,
-            existing,
-            newChildren[i],
-            priority,
-          );
+          prev = createFirstChild(returnFiber, existing, newChildren[i], priority);
           first = prev;
         } else {
-          prev = createSubsequentChild(
-            returnFiber,
-            existing,
-            prev,
-            newChildren[i],
-            priority,
-          );
+          prev = createSubsequentChild(returnFiber, existing, prev, newChildren[i], priority);
         }
@@ -226,13 +207,8 @@ function ChildReconciler(shouldClone) {
   function reconcileChildFibers(
-    returnFiber: Fiber,
-    currentFirstChild: ?Fiber,
-    newChildren: ReactNodeList,
-    priority: PriorityLevel,
-  ): ?Fiber {
-    return createFirstChild(
-      returnFiber,
-      currentFirstChild,
-      newChildren,
-      priority,
-    );
+    returnFiber : Fiber,
+    currentFirstChild : ?Fiber,
+    newChildren : ReactNodeList,
+    priority : PriorityLevel
+  ) : ?Fiber {
+    return createFirstChild(returnFiber, currentFirstChild, newChildren, priority);
   }
@@ -246,7 +222,4 @@ exports.reconcileChildFibersInPlace = ChildReconciler(false);
 
-function cloneSiblings(
-  current: Fiber,
-  workInProgress: Fiber,
-  returnFiber: Fiber,
-) {
+
+function cloneSiblings(current : Fiber, workInProgress : Fiber, returnFiber : Fiber) {
   workInProgress.return = returnFiber;
@@ -256,3 +229,3 @@ function cloneSiblings(
       current,
-      current.pendingWorkPriority,
+      current.pendingWorkPriority
     );
@@ -263,3 +236,3 @@ function cloneSiblings(
 
-exports.cloneChildFibers = function(current: ?Fiber, workInProgress: Fiber) {
+exports.cloneChildFibers = function(current : ?Fiber, workInProgress : Fiber) {
   if (!workInProgress.child) {
diff --git a/src/renderers/shared/fiber/ReactFiber.js b/src/renderers/shared/fiber/ReactFiber.js
index 6bd8c0e9a..f7c103edc 100644
--- a/src/renderers/shared/fiber/ReactFiber.js
+++ b/src/renderers/shared/fiber/ReactFiber.js
@@ -14,6 +14,6 @@
 
-import type {ReactCoroutine, ReactYield} from 'ReactCoroutine';
-import type {TypeOfWork} from 'ReactTypeOfWork';
-import type {PriorityLevel} from 'ReactPriorityLevel';
-import type {UpdateQueue} from 'ReactFiberUpdateQueue';
+import type { ReactCoroutine, ReactYield } from 'ReactCoroutine';
+import type { TypeOfWork } from 'ReactTypeOfWork';
+import type { PriorityLevel } from 'ReactPriorityLevel';
+import type { UpdateQueue } from 'ReactFiberUpdateQueue';
 
@@ -29,3 +29,5 @@ var {
 
-var {NoWork} = require('ReactPriorityLevel');
+var {
+  NoWork,
+} = require('ReactPriorityLevel');
 
@@ -36,2 +38,3 @@ var {NoWork} = require('ReactPriorityLevel');
 type Instance = {
+
   // Tag identifying the type of fiber.
@@ -51,2 +54,3 @@ type Instance = {
   // return fiber since we've merged the fiber and instance.
+
 };
@@ -56,2 +60,3 @@ type Instance = {
 export type Fiber = Instance & {
+
   // The Fiber to return to after finishing processing this one.
@@ -68,3 +73,3 @@ export type Fiber = Instance & {
   // I'll avoid adding an owner field for prod and model that as functions.
-  ref: null | ((handle: ?Object) => void),
+  ref: null | (handle : ?Object) => void,
 
@@ -115,2 +120,3 @@ export type Fiber = Instance & {
   // to be the same as work in progress.
+
 };
@@ -130,4 +136,5 @@ export type Fiber = Instance & {
 //    compatible.
-var createFiber = function(tag: TypeOfWork, key: null | string): Fiber {
+var createFiber = function(tag : TypeOfWork, key : null | string) : Fiber {
   return {
+
     // Instance
@@ -167,2 +174,3 @@ var createFiber = function(tag: TypeOfWork, key: null | string): Fiber {
     alternate: null,
+
   };
@@ -176,6 +184,3 @@ function shouldConstruct(Component) {
 // TODO: Rename to createWorkInProgressFiber or something like that.
-exports.cloneFiber = function(
-  fiber: Fiber,
-  priorityLevel: PriorityLevel,
-): Fiber {
+exports.cloneFiber = function(fiber : Fiber, priorityLevel : PriorityLevel) : Fiber {
   // We clone to get a work in progress. That means that this fiber is the
@@ -234,7 +239,4 @@ exports.createHostContainerFiber = function() {
 
-exports.createFiberFromElement = function(
-  element: ReactElement<*>,
-  priorityLevel: PriorityLevel,
-) {
-  // $FlowFixMe: ReactElement.key is currently defined as ?string but should be defined as null | string in Flow.
+exports.createFiberFromElement = function(element : ReactElement<*>, priorityLevel : PriorityLevel) {
+// $FlowFixMe: ReactElement.key is currently defined as ?string but should be defined as null | string in Flow.
   const fiber = createFiberFromElementType(element.type, element.key);
@@ -245,8 +247,8 @@ exports.createFiberFromElement = function(
 
-function createFiberFromElementType(type: mixed, key: null | string) {
+function createFiberFromElementType(type : mixed, key : null | string) {
   let fiber;
   if (typeof type === 'function') {
-    fiber = shouldConstruct(type)
-      ? createFiber(ClassComponent, key)
-      : createFiber(IndeterminateComponent, key);
+    fiber = shouldConstruct(type) ?
+      createFiber(ClassComponent, key) :
+      createFiber(IndeterminateComponent, key);
     fiber.type = type;
@@ -257,3 +259,3 @@ function createFiberFromElementType(type: mixed, key: null | string) {
     // Currently assumed to be a continuation and therefore is a fiber already.
-    fiber = ((type: any): Fiber);
+    fiber = ((type : any) : Fiber);
   } else {
@@ -266,6 +268,3 @@ exports.createFiberFromElementType = createFiberFromElementType;
 
-exports.createFiberFromCoroutine = function(
-  coroutine: ReactCoroutine,
-  priorityLevel: PriorityLevel,
-) {
+exports.createFiberFromCoroutine = function(coroutine : ReactCoroutine, priorityLevel : PriorityLevel) {
   const fiber = createFiber(CoroutineComponent, coroutine.key);
@@ -277,6 +276,3 @@ exports.createFiberFromCoroutine = function(
 
-exports.createFiberFromYield = function(
-  yieldNode: ReactYield,
-  priorityLevel: PriorityLevel,
-) {
+exports.createFiberFromYield = function(yieldNode : ReactYield, priorityLevel : PriorityLevel) {
   const fiber = createFiber(YieldComponent, yieldNode.key);
diff --git a/src/renderers/shared/fiber/ReactFiberBeginWork.js b/src/renderers/shared/fiber/ReactFiberBeginWork.js
index 107c3fce7..b2d3f3ab4 100644
--- a/src/renderers/shared/fiber/ReactFiberBeginWork.js
+++ b/src/renderers/shared/fiber/ReactFiberBeginWork.js
@@ -14,9 +14,9 @@
 
-import type {ReactCoroutine} from 'ReactCoroutine';
-import type {Fiber} from 'ReactFiber';
-import type {FiberRoot} from 'ReactFiberRoot';
-import type {HostConfig} from 'ReactFiberReconciler';
-import type {Scheduler} from 'ReactFiberScheduler';
-import type {PriorityLevel} from 'ReactPriorityLevel';
-import type {UpdateQueue} from 'ReactFiberUpdateQueue';
+import type { ReactCoroutine } from 'ReactCoroutine';
+import type { Fiber } from 'ReactFiber';
+import type { FiberRoot } from 'ReactFiberRoot';
+import type { HostConfig } from 'ReactFiberReconciler';
+import type { Scheduler } from 'ReactFiberScheduler';
+import type { PriorityLevel } from 'ReactPriorityLevel';
+import type { UpdateQueue } from 'ReactFiberUpdateQueue';
 
@@ -27,3 +27,3 @@ var {
 } = require('ReactChildFiber');
-var {LowPriority} = require('ReactPriorityLevel');
+var { LowPriority } = require('ReactPriorityLevel');
 var ReactTypeOfWork = require('ReactTypeOfWork');
@@ -39,3 +39,6 @@ var {
 } = ReactTypeOfWork;
-var {NoWork, OffscreenPriority} = require('ReactPriorityLevel');
+var {
+  NoWork,
+  OffscreenPriority,
+} = require('ReactPriorityLevel');
 var {
@@ -48,6 +51,4 @@ var ReactInstanceMap = require('ReactInstanceMap');
 
-module.exports = function<T, P, I, C>(
-  config: HostConfig<T, P, I, C>,
-  getScheduler: () => Scheduler,
-) {
+module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>, getScheduler : () => Scheduler) {
+
   function markChildAsProgressed(current, workInProgress, priorityLevel) {
@@ -66,16 +67,6 @@ module.exports = function<T, P, I, C>(
     const priorityLevel = workInProgress.pendingWorkPriority;
-    reconcileChildrenAtPriority(
-      current,
-      workInProgress,
-      nextChildren,
-      priorityLevel,
-    );
+    reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel);
   }
 
-  function reconcileChildrenAtPriority(
-    current,
-    workInProgress,
-    nextChildren,
-    priorityLevel,
-  ) {
+  function reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel) {
     // At this point any memoization is no longer valid since we'll have changed
@@ -91,3 +82,3 @@ module.exports = function<T, P, I, C>(
         nextChildren,
-        priorityLevel,
+        priorityLevel
       );
@@ -102,3 +93,3 @@ module.exports = function<T, P, I, C>(
         nextChildren,
-        priorityLevel,
+        priorityLevel
       );
@@ -127,8 +118,4 @@ module.exports = function<T, P, I, C>(
 
-  function scheduleUpdate(
-    fiber: Fiber,
-    updateQueue: UpdateQueue,
-    priorityLevel: PriorityLevel,
-  ): void {
-    const {scheduleDeferredWork} = getScheduler();
+  function scheduleUpdate(fiber: Fiber, updateQueue: UpdateQueue, priorityLevel : PriorityLevel): void {
+    const { scheduleDeferredWork } = getScheduler();
     fiber.updateQueue = updateQueue;
@@ -140,6 +127,4 @@ module.exports = function<T, P, I, C>(
     while (true) {
-      if (
-        fiber.pendingWorkPriority === NoWork ||
-        fiber.pendingWorkPriority >= priorityLevel
-      ) {
+      if (fiber.pendingWorkPriority === NoWork ||
+          fiber.pendingWorkPriority >= priorityLevel) {
         fiber.pendingWorkPriority = priorityLevel;
@@ -147,6 +132,4 @@ module.exports = function<T, P, I, C>(
       if (fiber.alternate) {
-        if (
-          fiber.alternate.pendingWorkPriority === NoWork ||
-          fiber.alternate.pendingWorkPriority >= priorityLevel
-        ) {
+        if (fiber.alternate.pendingWorkPriority === NoWork ||
+            fiber.alternate.pendingWorkPriority >= priorityLevel) {
           fiber.alternate.pendingWorkPriority = priorityLevel;
@@ -156,3 +139,3 @@ module.exports = function<T, P, I, C>(
       if (fiber.stateNode && fiber.stateNode.containerInfo) {
-        const root: FiberRoot = (fiber.stateNode: any);
+        const root : FiberRoot = (fiber.stateNode : any);
         scheduleDeferredWork(root, priorityLevel);
@@ -171,5 +154,5 @@ module.exports = function<T, P, I, C>(
       const fiber = ReactInstanceMap.get(instance);
-      const updateQueue = fiber.updateQueue
-        ? addToQueue(fiber.updateQueue, partialState)
-        : createUpdateQueue(partialState);
+      const updateQueue = fiber.updateQueue ?
+        addToQueue(fiber.updateQueue, partialState) :
+        createUpdateQueue(partialState);
       scheduleUpdate(fiber, updateQueue, LowPriority);
@@ -190,5 +173,5 @@ module.exports = function<T, P, I, C>(
       const fiber = ReactInstanceMap.get(instance);
-      let updateQueue = fiber.updateQueue
-        ? fiber.updateQueue
-        : createUpdateQueue(null);
+      let updateQueue = fiber.updateQueue ?
+        fiber.updateQueue :
+        createUpdateQueue(null);
       addCallbackToQueue(updateQueue, callback);
@@ -201,3 +184,3 @@ module.exports = function<T, P, I, C>(
 
-  function updateClassComponent(current: ?Fiber, workInProgress: Fiber) {
+  function updateClassComponent(current : ?Fiber, workInProgress : Fiber) {
     // A class component update is the result of either new props or new state.
@@ -212,5 +195,5 @@ module.exports = function<T, P, I, C>(
     var previousState = current ? current.memoizedState : null;
-    var state = updateQueue
-      ? mergeUpdateQueue(updateQueue, previousState, props)
-      : previousState;
+    var state = updateQueue ?
+      mergeUpdateQueue(updateQueue, previousState, props) :
+      previousState;
 
@@ -229,6 +212,4 @@ module.exports = function<T, P, I, C>(
       instance.updater = updater;
-    } else if (
-      typeof instance.shouldComponentUpdate === 'function' &&
-      !(updateQueue && updateQueue.isForced)
-    ) {
+    } else if (typeof instance.shouldComponentUpdate === 'function' &&
+               !(updateQueue && updateQueue.isForced)) {
       if (workInProgress.memoizedProps !== null) {
@@ -255,6 +236,4 @@ module.exports = function<T, P, I, C>(
     const nextChildren = workInProgress.pendingProps.children;
-    if (
-      workInProgress.pendingProps.hidden &&
-      workInProgress.pendingWorkPriority !== OffscreenPriority
-    ) {
+    if (workInProgress.pendingProps.hidden &&
+        workInProgress.pendingWorkPriority !== OffscreenPriority) {
       // If this host component is hidden, we can bail out on the children.
@@ -274,8 +253,3 @@ module.exports = function<T, P, I, C>(
       // Reconcile the children and stash them for later work.
-      reconcileChildrenAtPriority(
-        current,
-        workInProgress,
-        nextChildren,
-        OffscreenPriority,
-      );
+      reconcileChildrenAtPriority(current, workInProgress, nextChildren, OffscreenPriority);
       workInProgress.child = current ? current.child : null;
@@ -293,7 +267,3 @@ module.exports = function<T, P, I, C>(
     var value = fn(props);
-    if (
-      typeof value === 'object' &&
-      value &&
-      typeof value.render === 'function'
-    ) {
+    if (typeof value === 'object' && value && typeof value.render === 'function') {
       // Proceed under the assumption that this is a class instance
@@ -316,3 +286,3 @@ module.exports = function<T, P, I, C>(
   function updateCoroutineComponent(current, workInProgress) {
-    var coroutine = (workInProgress.pendingProps: ?ReactCoroutine);
+    var coroutine = (workInProgress.pendingProps : ?ReactCoroutine);
     if (!coroutine) {
@@ -342,6 +312,3 @@ module.exports = function<T, P, I, C>(
 
-  function bailoutOnAlreadyFinishedWork(
-    current,
-    workInProgress: Fiber,
-  ): ?Fiber {
+  function bailoutOnAlreadyFinishedWork(current, workInProgress : Fiber) : ?Fiber {
     const priorityLevel = workInProgress.pendingWorkPriority;
@@ -376,11 +343,5 @@ module.exports = function<T, P, I, C>(
 
-  function beginWork(
-    current: ?Fiber,
-    workInProgress: Fiber,
-    priorityLevel: PriorityLevel,
-  ): ?Fiber {
-    if (
-      workInProgress.pendingWorkPriority === NoWork ||
-      workInProgress.pendingWorkPriority > priorityLevel
-    ) {
+  function beginWork(current : ?Fiber, workInProgress : Fiber, priorityLevel : PriorityLevel) : ?Fiber {
+    if (workInProgress.pendingWorkPriority === NoWork ||
+        workInProgress.pendingWorkPriority > priorityLevel) {
       return bailoutOnLowPriority(current, workInProgress);
@@ -394,8 +355,7 @@ module.exports = function<T, P, I, C>(
 
-    if (
-      (workInProgress.pendingProps === null ||
-        (workInProgress.memoizedProps !== null &&
-          workInProgress.pendingProps === workInProgress.memoizedProps)) &&
-      workInProgress.updateQueue === null
-    ) {
+    if ((workInProgress.pendingProps === null || (
+      workInProgress.memoizedProps !== null &&
+      workInProgress.pendingProps === workInProgress.memoizedProps
+      )) &&
+      workInProgress.updateQueue === null) {
       return bailoutOnAlreadyFinishedWork(current, workInProgress);
@@ -418,3 +378,3 @@ module.exports = function<T, P, I, C>(
             workInProgress.child,
-            priorityLevel,
+            priorityLevel
           );
@@ -423,6 +383,3 @@ module.exports = function<T, P, I, C>(
       case HostComponent:
-        if (
-          workInProgress.stateNode &&
-          typeof config.beginUpdate === 'function'
-        ) {
+        if (workInProgress.stateNode && typeof config.beginUpdate === 'function') {
           config.beginUpdate(workInProgress.stateNode);
@@ -433,3 +390,3 @@ module.exports = function<T, P, I, C>(
         workInProgress.tag = CoroutineComponent;
-      // Intentionally fall through since this is now the same.
+        // Intentionally fall through since this is now the same.
       case CoroutineComponent:
@@ -442,3 +399,3 @@ module.exports = function<T, P, I, C>(
             workInProgress.child,
-            priorityLevel,
+            priorityLevel
           );
@@ -453,3 +410,3 @@ module.exports = function<T, P, I, C>(
             workInProgress.sibling,
-            priorityLevel,
+            priorityLevel
           );
@@ -465,2 +422,3 @@ module.exports = function<T, P, I, C>(
   };
+
 };
diff --git a/src/renderers/shared/fiber/ReactFiberCommitWork.js b/src/renderers/shared/fiber/ReactFiberCommitWork.js
index f1de612a4..beb773a2e 100644
--- a/src/renderers/shared/fiber/ReactFiberCommitWork.js
+++ b/src/renderers/shared/fiber/ReactFiberCommitWork.js
@@ -14,11 +14,16 @@
 
-import type {Fiber} from 'ReactFiber';
-import type {FiberRoot} from 'ReactFiberRoot';
-import type {HostConfig} from 'ReactFiberReconciler';
+import type { Fiber } from 'ReactFiber';
+import type { FiberRoot } from 'ReactFiberRoot';
+import type { HostConfig } from 'ReactFiberReconciler';
 
 var ReactTypeOfWork = require('ReactTypeOfWork');
-var {ClassComponent, HostContainer, HostComponent} = ReactTypeOfWork;
-var {callCallbacks} = require('ReactFiberUpdateQueue');
+var {
+  ClassComponent,
+  HostContainer,
+  HostComponent,
+} = ReactTypeOfWork;
+var { callCallbacks } = require('ReactFiberUpdateQueue');
+
+module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
 
-module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
   const updateContainer = config.updateContainer;
@@ -26,3 +31,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function commitWork(current: ?Fiber, finishedWork: Fiber): void {
+  function commitWork(current : ?Fiber, finishedWork : Fiber) : void {
     switch (finishedWork.tag) {
@@ -37,3 +42,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
         if (finishedWork.callbackList) {
-          const {callbackList} = finishedWork;
+          const { callbackList } = finishedWork;
           finishedWork.callbackList = null;
@@ -47,4 +52,4 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
         const children = finishedWork.output;
-        const root: FiberRoot = finishedWork.stateNode;
-        const containerInfo: C = root.containerInfo;
+        const root : FiberRoot = finishedWork.stateNode;
+        const containerInfo : C = root.containerInfo;
         updateContainer(containerInfo, children);
@@ -58,8 +63,6 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
         const child = finishedWork.child;
-        const children = child && !child.sibling
-          ? (child.output: ?Fiber | I)
-          : child;
+        const children = (child && !child.sibling) ? (child.output : ?Fiber | I) : child;
         const newProps = finishedWork.memoizedProps;
         const oldProps = current.memoizedProps;
-        const instance: I = finishedWork.stateNode;
+        const instance : I = finishedWork.stateNode;
         commitUpdate(instance, oldProps, newProps, children);
@@ -75,2 +78,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
   };
+
 };
diff --git a/src/renderers/shared/fiber/ReactFiberCompleteWork.js b/src/renderers/shared/fiber/ReactFiberCompleteWork.js
index 572736e79..d4687f457 100644
--- a/src/renderers/shared/fiber/ReactFiberCompleteWork.js
+++ b/src/renderers/shared/fiber/ReactFiberCompleteWork.js
@@ -14,8 +14,8 @@
 
-import type {ReactCoroutine} from 'ReactCoroutine';
-import type {Fiber} from 'ReactFiber';
-import type {HostConfig} from 'ReactFiberReconciler';
-import type {ReifiedYield} from 'ReactReifiedYield';
+import type { ReactCoroutine } from 'ReactCoroutine';
+import type { Fiber } from 'ReactFiber';
+import type { HostConfig } from 'ReactFiberReconciler';
+import type { ReifiedYield } from 'ReactReifiedYield';
 
-var {reconcileChildFibers} = require('ReactChildFiber');
+var { reconcileChildFibers } = require('ReactChildFiber');
 var ReactTypeOfWork = require('ReactTypeOfWork');
@@ -32,3 +32,4 @@ var {
 
-module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
+module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
+
   const createInstance = config.createInstance;
@@ -36,3 +37,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function markForPreEffect(workInProgress: Fiber) {
+  function markForPreEffect(workInProgress : Fiber) {
     // Schedule a side-effect on this fiber, BEFORE the children's side-effects.
@@ -50,3 +51,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
   // of a sibling reads, then the next sibling updates and reads etc.
-  function markForPostEffect(workInProgress: Fiber) {
+  function markForPostEffect(workInProgress : Fiber) {
     // Schedule a side-effect on this fiber, AFTER the children's side-effects.
@@ -60,3 +61,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function transferOutput(child: ?Fiber, returnFiber: Fiber) {
+  function transferOutput(child : ?Fiber, returnFiber : Fiber) {
     // If we have a single result, we just pass that through as the output to
@@ -64,3 +65,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
     // the linked list of fibers that has the individual output values.
-    returnFiber.output = child && !child.sibling ? child.output : child;
+    returnFiber.output = (child && !child.sibling) ? child.output : child;
     returnFiber.memoizedProps = returnFiber.pendingProps;
@@ -68,10 +69,9 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function recursivelyFillYields(yields, output: ?Fiber | ?ReifiedYield) {
+  function recursivelyFillYields(yields, output : ?Fiber | ?ReifiedYield) {
     if (!output) {
       // Ignore nulls etc.
-    } else if (output.tag !== undefined) {
-      // TODO: Fix this fragile duck test.
+    } else if (output.tag !== undefined) { // TODO: Fix this fragile duck test.
       // Detect if this is a fiber, if so it is a fragment result.
       // $FlowFixMe: Refinement issue.
-      var item = (output: Fiber);
+      var item = (output : Fiber);
       do {
@@ -86,4 +86,4 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function moveCoroutineToHandlerPhase(current: ?Fiber, workInProgress: Fiber) {
-    var coroutine = (workInProgress.pendingProps: ?ReactCoroutine);
+  function moveCoroutineToHandlerPhase(current : ?Fiber, workInProgress : Fiber) {
+    var coroutine = (workInProgress.pendingProps : ?ReactCoroutine);
     if (!coroutine) {
@@ -103,3 +103,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
     // TODO: Compare this to a generator or opaque helpers like Children.
-    var yields: Array<ReifiedYield> = [];
+    var yields : Array<ReifiedYield> = [];
     var child = workInProgress.child;
@@ -120,3 +120,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
       nextChildren,
-      priority,
+      priority
     );
@@ -125,3 +125,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function completeWork(current: ?Fiber, workInProgress: Fiber): ?Fiber {
+  function completeWork(current : ?Fiber, workInProgress : Fiber) : ?Fiber {
     switch (workInProgress.tag) {
@@ -136,3 +136,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
         // in the case of an update
-        const {state, props} = workInProgress.stateNode;
+        const { state, props } = workInProgress.stateNode;
         workInProgress.memoizedState = state;
@@ -156,5 +156,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
         const child = workInProgress.child;
-        const children = child && !child.sibling
-          ? (child.output: ?Fiber | I)
-          : child;
+        const children = (child && !child.sibling) ? (child.output : ?Fiber | I) : child;
         if (current && workInProgress.stateNode != null) {
@@ -170,3 +168,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
           }
-          const instance: I = workInProgress.stateNode;
+          const instance : I = workInProgress.stateNode;
           if (prepareUpdate(instance, oldProps, newProps, children)) {
@@ -186,7 +184,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
           }
-          const instance = createInstance(
-            workInProgress.type,
-            newProps,
-            children,
-          );
+          const instance = createInstance(workInProgress.type, newProps, children);
           // TODO: This seems like unnecessary duplication.
@@ -207,7 +201,6 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
         return null;
+
       // Error cases
       case IndeterminateComponent:
-        throw new Error(
-          'An indeterminate component should have become determinate before completing.',
-        );
+        throw new Error('An indeterminate component should have become determinate before completing.');
       default:
@@ -220,2 +213,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
   };
+
 };
diff --git a/src/renderers/shared/fiber/ReactFiberReconciler.js b/src/renderers/shared/fiber/ReactFiberReconciler.js
index 1034d1d5c..f0443a43c 100644
--- a/src/renderers/shared/fiber/ReactFiberReconciler.js
+++ b/src/renderers/shared/fiber/ReactFiberReconciler.js
@@ -14,8 +14,8 @@
 
-import type {Fiber} from 'ReactFiber';
-import type {FiberRoot} from 'ReactFiberRoot';
-import type {TypeOfWork} from 'ReactTypeOfWork';
-import type {PriorityLevel} from 'ReactPriorityLevel';
+import type { Fiber } from 'ReactFiber';
+import type { FiberRoot } from 'ReactFiberRoot';
+import type { TypeOfWork } from 'ReactTypeOfWork';
+import type { PriorityLevel } from 'ReactPriorityLevel';
 
-var {createFiberRoot} = require('ReactFiberRoot');
+var { createFiberRoot } = require('ReactFiberRoot');
 var ReactFiberScheduler = require('ReactFiberScheduler');
@@ -23,10 +23,6 @@ var ReactFiberScheduler = require('ReactFiberScheduler');
 type Deadline = {
-  timeRemaining: () => number,
+  timeRemaining : () => number
 };
 
-type HostChildNode<I> = {
-  tag: TypeOfWork,
-  output: HostChildren<I>,
-  sibling: any,
-};
+type HostChildNode<I> = { tag: TypeOfWork, output: HostChildren<I>, sibling: any };
 
@@ -35,2 +31,3 @@ export type HostChildren<I> = null | void | I | HostChildNode<I>;
 export type HostConfig<T, P, I, C> = {
+
   // TODO: We don't currently have a quick way to detect that children didn't
@@ -39,21 +36,12 @@ export type HostConfig<T, P, I, C> = {
 
-  updateContainer(containerInfo: C, children: HostChildren<I>): void,
-
-  createInstance(type: T, props: P, children: HostChildren<I>): I,
-  prepareUpdate(
-    instance: I,
-    oldProps: P,
-    newProps: P,
-    children: HostChildren<I>,
-  ): boolean,
-  commitUpdate(
-    instance: I,
-    oldProps: P,
-    newProps: P,
-    children: HostChildren<I>,
-  ): void,
-  deleteInstance(instance: I): void,
-
-  scheduleAnimationCallback(callback: () => void): void,
-  scheduleDeferredCallback(callback: (deadline: Deadline) => void): void,
+  updateContainer(containerInfo : C, children : HostChildren<I>) : void;
+
+  createInstance(type : T, props : P, children : HostChildren<I>) : I,
+  prepareUpdate(instance : I, oldProps : P, newProps : P, children : HostChildren<I>) : boolean,
+  commitUpdate(instance : I, oldProps : P, newProps : P, children : HostChildren<I>) : void,
+  deleteInstance(instance : I) : void,
+
+  scheduleAnimationCallback(callback : () => void) : void,
+  scheduleDeferredCallback(callback : (deadline : Deadline) => void) : void
+
 };
@@ -63,18 +51,18 @@ type OpaqueNode = Fiber;
 export type Reconciler<C> = {
-  mountContainer(element: ReactElement<any>, containerInfo: C): OpaqueNode,
-  updateContainer(element: ReactElement<any>, container: OpaqueNode): void,
-  unmountContainer(container: OpaqueNode): void,
-  performWithPriority(priorityLevel: PriorityLevel, fn: Function): void,
+  mountContainer(element : ReactElement<any>, containerInfo : C) : OpaqueNode,
+  updateContainer(element : ReactElement<any>, container : OpaqueNode) : void,
+  unmountContainer(container : OpaqueNode) : void,
+  performWithPriority(priorityLevel : PriorityLevel, fn : Function) : void,
 
   // Used to extract the return value from the initial render. Legacy API.
-  getPublicRootInstance(container: OpaqueNode): C | null,
+  getPublicRootInstance(container : OpaqueNode) : (C | null),
 };
 
-module.exports = function<T, P, I, C>(
-  config: HostConfig<T, P, I, C>,
-): Reconciler<C> {
-  var {scheduleWork, performWithPriority} = ReactFiberScheduler(config);
+module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) : Reconciler<C> {
+
+  var { scheduleWork, performWithPriority } = ReactFiberScheduler(config);
 
   return {
-    mountContainer(element: ReactElement<any>, containerInfo: C): OpaqueNode {
+
+    mountContainer(element : ReactElement<any>, containerInfo : C) : OpaqueNode {
       const root = createFiberRoot(containerInfo);
@@ -94,5 +82,5 @@ module.exports = function<T, P, I, C>(
 
-    updateContainer(element: ReactElement<any>, container: OpaqueNode): void {
+    updateContainer(element : ReactElement<any>, container : OpaqueNode) : void {
       // TODO: If this is a nested container, this won't be the root.
-      const root: FiberRoot = (container.stateNode: any);
+      const root : FiberRoot = (container.stateNode : any);
       // TODO: Use pending work/state instead of props.
@@ -103,5 +91,5 @@ module.exports = function<T, P, I, C>(
 
-    unmountContainer(container: OpaqueNode): void {
+    unmountContainer(container : OpaqueNode) : void {
       // TODO: If this is a nested container, this won't be the root.
-      const root: FiberRoot = (container.stateNode: any);
+      const root : FiberRoot = (container.stateNode : any);
       // TODO: Use pending work/state instead of props.
@@ -114,6 +102,8 @@ module.exports = function<T, P, I, C>(
 
-    getPublicRootInstance(container: OpaqueNode): C | null {
+    getPublicRootInstance(container : OpaqueNode) : (C | null) {
       return null;
     },
+
   };
+
 };
diff --git a/src/renderers/shared/fiber/ReactFiberRoot.js b/src/renderers/shared/fiber/ReactFiberRoot.js
index c36382795..1c972700b 100644
--- a/src/renderers/shared/fiber/ReactFiberRoot.js
+++ b/src/renderers/shared/fiber/ReactFiberRoot.js
@@ -14,5 +14,5 @@
 
-import type {Fiber} from 'ReactFiber';
+import type { Fiber } from 'ReactFiber';
 
-const {createHostContainerFiber} = require('ReactFiber');
+const { createHostContainerFiber } = require('ReactFiber');
 
@@ -29,3 +29,3 @@ export type FiberRoot = {
 
-exports.createFiberRoot = function(containerInfo: any): FiberRoot {
+exports.createFiberRoot = function(containerInfo : any) : FiberRoot {
   // Cyclic construction. This cheats the type system right now because
diff --git a/src/renderers/shared/fiber/ReactFiberScheduler.js b/src/renderers/shared/fiber/ReactFiberScheduler.js
index a8e1b77cc..5bc128f5e 100644
--- a/src/renderers/shared/fiber/ReactFiberScheduler.js
+++ b/src/renderers/shared/fiber/ReactFiberScheduler.js
@@ -14,6 +14,6 @@
 
-import type {Fiber} from 'ReactFiber';
-import type {FiberRoot} from 'ReactFiberRoot';
-import type {HostConfig} from 'ReactFiberReconciler';
-import type {PriorityLevel} from 'ReactPriorityLevel';
+import type { Fiber } from 'ReactFiber';
+import type { FiberRoot } from 'ReactFiberRoot';
+import type { HostConfig } from 'ReactFiberReconciler';
+import type { PriorityLevel } from 'ReactPriorityLevel';
 
@@ -23,3 +23,3 @@ var ReactFiberCommitWork = require('ReactFiberCommitWork');
 
-var {cloneFiber} = require('ReactFiber');
+var { cloneFiber } = require('ReactFiber');
 
@@ -35,6 +35,6 @@ var timeHeuristicForUnitOfWork = 1;
 export type Scheduler = {
-  scheduleDeferredWork: (root: FiberRoot, priority: PriorityLevel) => void,
+  scheduleDeferredWork: (root : FiberRoot, priority : PriorityLevel) => void
 };
 
-module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
+module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {
   // Use a closure to circumvent the circular dependency between the scheduler
@@ -46,5 +46,5 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  const {beginWork} = ReactFiberBeginWork(config, getScheduler);
-  const {completeWork} = ReactFiberCompleteWork(config);
-  const {commitWork} = ReactFiberCommitWork(config);
+  const { beginWork } = ReactFiberBeginWork(config, getScheduler);
+  const { completeWork } = ReactFiberCompleteWork(config);
+  const { commitWork } = ReactFiberCommitWork(config);
 
@@ -54,11 +54,11 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
   // The default priority to use for updates.
-  let defaultPriority: PriorityLevel = LowPriority;
+  let defaultPriority : PriorityLevel = LowPriority;
 
   // The next work in progress fiber that we're currently working on.
-  let nextUnitOfWork: ?Fiber = null;
-  let nextPriorityLevel: PriorityLevel = NoWork;
+  let nextUnitOfWork : ?Fiber = null;
+  let nextPriorityLevel : PriorityLevel = NoWork;
 
   // Linked list of roots with scheduled work on them.
-  let nextScheduledRoot: ?FiberRoot = null;
-  let lastScheduledRoot: ?FiberRoot = null;
+  let nextScheduledRoot : ?FiberRoot = null;
+  let lastScheduledRoot : ?FiberRoot = null;
 
@@ -66,6 +66,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
     // Clear out roots with no more work on them.
-    while (
-      nextScheduledRoot &&
-      nextScheduledRoot.current.pendingWorkPriority === NoWork
-    ) {
+    while (nextScheduledRoot && nextScheduledRoot.current.pendingWorkPriority === NoWork) {
       nextScheduledRoot.isScheduled = false;
@@ -85,6 +82,4 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
     while (root) {
-      if (
-        highestPriorityLevel === NoWork ||
-        highestPriorityLevel > root.current.pendingWorkPriority
-      ) {
+      if (highestPriorityLevel === NoWork ||
+          highestPriorityLevel > root.current.pendingWorkPriority) {
         highestPriorityLevel = root.current.pendingWorkPriority;
@@ -97,3 +92,6 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
       nextPriorityLevel = highestPriorityLevel;
-      return cloneFiber(highestPriorityRoot.current, highestPriorityLevel);
+      return cloneFiber(
+        highestPriorityRoot.current,
+        highestPriorityLevel
+      );
     }
@@ -104,3 +102,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function commitAllWork(finishedWork: Fiber) {
+  function commitAllWork(finishedWork : Fiber) {
     // Commit all the side-effects within a tree.
@@ -121,3 +119,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function resetWorkPriority(workInProgress: Fiber) {
+  function resetWorkPriority(workInProgress : Fiber) {
     let newPriority = NoWork;
@@ -129,6 +127,5 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
       // Ensure that remaining work priority bubbles up.
-      if (
-        child.pendingWorkPriority !== NoWork &&
-        (newPriority === NoWork || newPriority > child.pendingWorkPriority)
-      ) {
+      if (child.pendingWorkPriority !== NoWork &&
+          (newPriority === NoWork ||
+          newPriority > child.pendingWorkPriority)) {
         newPriority = child.pendingWorkPriority;
@@ -140,3 +137,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function completeUnitOfWork(workInProgress: Fiber): ?Fiber {
+  function completeUnitOfWork(workInProgress : Fiber) : ?Fiber {
     while (true) {
@@ -185,3 +182,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
         // If we're at the root, there's no more work to do. We can flush it.
-        const root: FiberRoot = (workInProgress.stateNode: any);
+        const root : FiberRoot = (workInProgress.stateNode : any);
         if (root.current === workInProgress) {
@@ -189,3 +186,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
             'Cannot commit the same tree as before. This is probably a bug ' +
-              'related to the return field.',
+            'related to the return field.'
           );
@@ -200,7 +197,7 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
         // if (!nextWork && hasMoreWork) {
-        // TODO: This can happen when some deep work completes and we don't
-        // know if this was the last one. We should be able to keep track of
-        // the highest priority still in the tree for one pass. But if we
-        // terminate an update we don't know.
-        // throw new Error('FiberRoots should not have flagged more work if there is none.');
+          // TODO: This can happen when some deep work completes and we don't
+          // know if this was the last one. We should be able to keep track of
+          // the highest priority still in the tree for one pass. But if we
+          // terminate an update we don't know.
+          // throw new Error('FiberRoots should not have flagged more work if there is none.');
         // }
@@ -211,3 +208,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function performUnitOfWork(workInProgress: Fiber): ?Fiber {
+  function performUnitOfWork(workInProgress : Fiber) : ?Fiber {
     // The current, flushed, state of this fiber is the alternate.
@@ -246,3 +243,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function scheduleDeferredWork(root: FiberRoot, priority: PriorityLevel) {
+  function scheduleDeferredWork(root : FiberRoot, priority : PriorityLevel) {
     // We must reset the current unit of work pointer so that we restart the
@@ -255,6 +252,4 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
     // Set the priority on the root, without deprioritizing
-    if (
-      root.current.pendingWorkPriority === NoWork ||
-      priority <= root.current.pendingWorkPriority
-    ) {
+    if (root.current.pendingWorkPriority === NoWork ||
+        priority <= root.current.pendingWorkPriority) {
       root.current.pendingWorkPriority = priority;
@@ -282,3 +277,4 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
     nextUnitOfWork = findNextUnitOfWork();
-    while (nextUnitOfWork && nextPriorityLevel !== NoWork) {
+    while (nextUnitOfWork &&
+           nextPriorityLevel !== NoWork) {
       nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
@@ -296,11 +292,6 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function scheduleAnimationWork(
-    root: FiberRoot,
-    priorityLevel: PriorityLevel,
-  ) {
+  function scheduleAnimationWork(root: FiberRoot, priorityLevel : PriorityLevel) {
     // Set the priority on the root, without deprioritizing
-    if (
-      root.current.pendingWorkPriority === NoWork ||
-      priorityLevel <= root.current.pendingWorkPriority
-    ) {
+    if (root.current.pendingWorkPriority === NoWork ||
+        priorityLevel <= root.current.pendingWorkPriority) {
       root.current.pendingWorkPriority = priorityLevel;
@@ -325,3 +316,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function scheduleWork(root: FiberRoot) {
+  function scheduleWork(root : FiberRoot) {
     if (defaultPriority === SynchronousPriority) {
@@ -340,3 +331,3 @@ module.exports = function<T, P, I, C>(config: HostConfig<T, P, I, C>) {
 
-  function performWithPriority(priorityLevel: PriorityLevel, fn: Function) {
+  function performWithPriority(priorityLevel : PriorityLevel, fn : Function) {
     const previousDefaultPriority = defaultPriority;
diff --git a/src/renderers/shared/fiber/ReactFiberUpdateQueue.js b/src/renderers/shared/fiber/ReactFiberUpdateQueue.js
index 65d8bb66d..aab252b65 100644
--- a/src/renderers/shared/fiber/ReactFiberUpdateQueue.js
+++ b/src/renderers/shared/fiber/ReactFiberUpdateQueue.js
@@ -24,6 +24,6 @@ export type UpdateQueue = UpdateQueueNode & {
   isForced: boolean,
-  tail: UpdateQueueNode,
+  tail: UpdateQueueNode
 };
 
-exports.createUpdateQueue = function(partialState: mixed): UpdateQueue {
+exports.createUpdateQueue = function(partialState : mixed) : UpdateQueue {
   const queue = {
@@ -35,3 +35,3 @@ exports.createUpdateQueue = function(partialState: mixed): UpdateQueue {
     isForced: false,
-    tail: (null: any),
+    tail: (null : any),
   };
@@ -41,6 +41,3 @@ exports.createUpdateQueue = function(partialState: mixed): UpdateQueue {
 
-exports.addToQueue = function(
-  queue: UpdateQueue,
-  partialState: mixed,
-): UpdateQueue {
+exports.addToQueue = function(queue : UpdateQueue, partialState : mixed) : UpdateQueue {
   const node = {
@@ -56,6 +53,3 @@ exports.addToQueue = function(
 
-exports.addCallbackToQueue = function(
-  queue: UpdateQueue,
-  callback: Function,
-): UpdateQueue {
+exports.addCallbackToQueue = function(queue : UpdateQueue, callback: Function) : UpdateQueue {
   if (queue.tail.callback) {
@@ -68,4 +62,4 @@ exports.addCallbackToQueue = function(
 
-exports.callCallbacks = function(queue: UpdateQueue, context: any) {
-  let node: ?UpdateQueueNode = queue;
+exports.callCallbacks = function(queue : UpdateQueue, context : any) {
+  let node : ?UpdateQueueNode = queue;
   while (node) {
@@ -79,8 +73,4 @@ exports.callCallbacks = function(queue: UpdateQueue, context: any) {
 
-exports.mergeUpdateQueue = function(
-  queue: UpdateQueue,
-  prevState: any,
-  props: any,
-): any {
-  let node: ?UpdateQueueNode = queue;
+exports.mergeUpdateQueue = function(queue : UpdateQueue, prevState : any, props : any) : any {
+  let node : ?UpdateQueueNode = queue;
   let state = queue.isReplace ? null : Object.assign({}, prevState);
diff --git a/src/renderers/shared/fiber/ReactReifiedYield.js b/src/renderers/shared/fiber/ReactReifiedYield.js
index c41676379..41ef6b921 100644
--- a/src/renderers/shared/fiber/ReactReifiedYield.js
+++ b/src/renderers/shared/fiber/ReactReifiedYield.js
@@ -14,11 +14,14 @@
 
-import type {ReactYield} from 'ReactCoroutine';
-import type {Fiber} from 'ReactFiber';
+import type { ReactYield } from 'ReactCoroutine';
+import type { Fiber } from 'ReactFiber';
 
-var {createFiberFromElementType} = require('ReactFiber');
+var { createFiberFromElementType } = require('ReactFiber');
 
-export type ReifiedYield = {continuation: Fiber, props: Object};
+export type ReifiedYield = { continuation: Fiber, props: Object };
 
-exports.createReifiedYield = function(yieldNode: ReactYield): ReifiedYield {
-  var fiber = createFiberFromElementType(yieldNode.continuation, yieldNode.key);
+exports.createReifiedYield = function(yieldNode : ReactYield) : ReifiedYield {
+  var fiber = createFiberFromElementType(
+    yieldNode.continuation,
+    yieldNode.key
+  );
   return {
@@ -29,6 +32,3 @@ exports.createReifiedYield = function(yieldNode: ReactYield): ReifiedYield {
 
-exports.createUpdatedReifiedYield = function(
-  previousYield: ReifiedYield,
-  yieldNode: ReactYield,
-): ReifiedYield {
+exports.createUpdatedReifiedYield = function(previousYield : ReifiedYield, yieldNode : ReactYield) : ReifiedYield {
   return {
diff --git a/src/renderers/shared/fiber/__tests__/ReactCoroutine-test.js b/src/renderers/shared/fiber/__tests__/ReactCoroutine-test.js
index af5632305..5f75c9280 100644
--- a/src/renderers/shared/fiber/__tests__/ReactCoroutine-test.js
+++ b/src/renderers/shared/fiber/__tests__/ReactCoroutine-test.js
@@ -25,5 +25,7 @@ describe('ReactCoroutine', () => {
   xit('should render a coroutine', () => {
+
     var ops = [];
 
-    function Continuation({isSame}) {
+
+    function Continuation({ isSame }) {
       ops.push(['Continuation', isSame]);
@@ -34,11 +36,7 @@ describe('ReactCoroutine', () => {
     // yielding. E.g. Continuation.yieldType = 123;
-    function Child({bar}) {
+    function Child({ bar }) {
       ops.push(['Child', bar]);
-      return ReactCoroutine.createYield(
-        {
-          bar: bar,
-        },
-        Continuation,
-        null,
-      );
+      return ReactCoroutine.createYield({
+        bar: bar,
+      }, Continuation, null);
     }
@@ -53,3 +51,3 @@ describe('ReactCoroutine', () => {
       return yields.map(y =>
-        <y.continuation isSame={props.foo === y.props.bar} />,
+        <y.continuation isSame={props.foo === y.props.bar} />
       );
@@ -64,3 +62,3 @@ describe('ReactCoroutine', () => {
         HandleYields,
-        props,
+        props
       );
@@ -87,3 +85,5 @@ describe('ReactCoroutine', () => {
     ]);
+
   });
+
 });
diff --git a/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js b/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js
index 520cbd476..24f0bddfa 100644
--- a/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js
+++ b/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js
@@ -23,2 +23,3 @@ describe('ReactIncremental', () => {
   it('should render a simple component', () => {
+
     function Bar() {
@@ -33,2 +34,3 @@ describe('ReactIncremental', () => {
     ReactNoop.flush();
+
   });
@@ -36,2 +38,3 @@ describe('ReactIncremental', () => {
   it('should render a simple component, in steps if needed', () => {
+
     var barCalled = false;
@@ -45,3 +48,6 @@ describe('ReactIncremental', () => {
       fooCalled = true;
-      return [<Bar isBar={true} />, <Bar isBar={true} />];
+      return [
+        <Bar isBar={true} />,
+        <Bar isBar={true} />,
+      ];
     }
@@ -62,2 +68,3 @@ describe('ReactIncremental', () => {
   it('updates a previous render', () => {
+
     var ops = [];
@@ -108,2 +115,3 @@ describe('ReactIncremental', () => {
     expect(ops).toEqual(['Foo', 'Content']);
+
   });
@@ -111,2 +119,3 @@ describe('ReactIncremental', () => {
   it('can cancel partially rendered work and restart', () => {
+
     var ops = [];
@@ -154,2 +163,3 @@ describe('ReactIncremental', () => {
     expect(ops).toEqual(['Foo', 'Bar', 'Bar']);
+
   });
@@ -157,2 +167,3 @@ describe('ReactIncremental', () => {
   it('can deprioritize unfinished work and resume it later', () => {
+
     var ops = [];
@@ -206,2 +217,3 @@ describe('ReactIncremental', () => {
     expect(ops).toEqual(['Middle', 'Middle']);
+
   });
@@ -266,2 +278,3 @@ describe('ReactIncremental', () => {
   it('can resume work in a subtree even when a parent bails out', () => {
+
     var ops = [];
@@ -409,2 +422,3 @@ describe('ReactIncremental', () => {
   it('can reuse work done after being preempted', () => {
+
     var ops = [];
@@ -443,3 +457,7 @@ describe('ReactIncremental', () => {
           <div hidden={true}>
-            {props.step === 0 ? step0 : middleContent}
+            {
+              props.step === 0 ?
+                step0
+                : middleContent
+            }
           </div>
@@ -499,2 +517,3 @@ describe('ReactIncremental', () => {
     expect(ops).toEqual(['Middle']);
+
   });
@@ -502,2 +521,3 @@ describe('ReactIncremental', () => {
   it('can reuse work if shouldComponentUpdate is false, after being preempted', () => {
+
     var ops = [];
@@ -593,2 +613,3 @@ describe('ReactIncremental', () => {
     expect(ops).toEqual(['Content', 'Bar', 'Middle']);
+
   });
@@ -600,3 +621,3 @@ describe('ReactIncremental', () => {
         super();
-        this.state = {a: 'a'};
+        this.state = { a: 'a' };
         instance = this;
@@ -618,6 +639,6 @@ describe('ReactIncremental', () => {
     ReactNoop.flush();
-    expect(instance.state).toEqual({a: 'a'});
-    instance.setState({b: 'b'});
+    expect(instance.state).toEqual({ a: 'a' });
+    instance.setState({ b: 'b' });
     ReactNoop.flush();
-    expect(instance.state).toEqual({a: 'a', b: 'b'});
+    expect(instance.state).toEqual({ a: 'a', b: 'b' });
   });
@@ -629,3 +650,3 @@ describe('ReactIncremental', () => {
         super();
-        this.state = {a: 'a'};
+        this.state = { a: 'a' };
         instance = this;
@@ -648,7 +669,7 @@ describe('ReactIncremental', () => {
     // Call setState multiple times before flushing
-    instance.setState({b: 'b'});
-    instance.setState({c: 'c'});
-    instance.setState({d: 'd'});
+    instance.setState({ b: 'b' });
+    instance.setState({ c: 'c' });
+    instance.setState({ d: 'd' });
     ReactNoop.flush();
-    expect(instance.state).toEqual({a: 'a', b: 'b', c: 'c', d: 'd'});
+    expect(instance.state).toEqual({ a: 'a', b: 'b', c: 'c', d: 'd' });
   });
@@ -660,3 +681,3 @@ describe('ReactIncremental', () => {
         super();
-        this.state = {num: 1};
+        this.state = { num: 1 };
         instance = this;
@@ -668,3 +689,3 @@ describe('ReactIncremental', () => {
 
-    function Foo({multiplier}) {
+    function Foo({ multiplier }) {
       return (
@@ -677,3 +698,3 @@ describe('ReactIncremental', () => {
     function updater(state, props) {
-      return {num: state.num * props.multiplier};
+      return { num: state.num * props.multiplier };
     }
@@ -697,3 +718,3 @@ describe('ReactIncremental', () => {
         super();
-        this.state = {num: 1};
+        this.state = { num: 1 };
         instance = this;
@@ -705,3 +726,3 @@ describe('ReactIncremental', () => {
 
-    function Foo({multiplier}) {
+    function Foo({ multiplier }) {
       return (
@@ -714,3 +735,3 @@ describe('ReactIncremental', () => {
     function updater(state, props) {
-      return {num: state.num * props.multiplier};
+      return { num: state.num * props.multiplier };
     }
@@ -718,3 +739,3 @@ describe('ReactIncremental', () => {
     function callback() {
-      this.setState({called: true});
+      this.setState({ called: true });
     }
@@ -750,7 +771,7 @@ describe('ReactIncremental', () => {
     ReactNoop.flush();
-    instance.setState({b: 'b'});
-    instance.setState({c: 'c'});
+    instance.setState({ b: 'b' });
+    instance.setState({ c: 'c' });
     instance.updater.enqueueReplaceState(instance, {d: 'd'});
     ReactNoop.flush();
-    expect(instance.state).toEqual({d: 'd'});
+    expect(instance.state).toEqual({ d: 'd' });
   });
diff --git a/src/renderers/shared/fiber/__tests__/ReactIncrementalSideEffects-test.js b/src/renderers/shared/fiber/__tests__/ReactIncrementalSideEffects-test.js
index d874ac7bc..901b55f0d 100644
--- a/src/renderers/shared/fiber/__tests__/ReactIncrementalSideEffects-test.js
+++ b/src/renderers/shared/fiber/__tests__/ReactIncrementalSideEffects-test.js
@@ -23,3 +23,3 @@ describe('ReactIncrementalSideEffects', () => {
   function div(...children) {
-    return {type: 'div', children, prop: undefined};
+    return { type: 'div', children, prop: undefined };
   }
@@ -27,3 +27,3 @@ describe('ReactIncrementalSideEffects', () => {
   function span(prop) {
-    return {type: 'span', children: [], prop};
+    return { type: 'span', children: [], prop };
   }
@@ -31,2 +31,3 @@ describe('ReactIncrementalSideEffects', () => {
   it('can update child nodes of a host instance', () => {
+
     function Bar(props) {
@@ -46,3 +47,5 @@ describe('ReactIncrementalSideEffects', () => {
     ReactNoop.flush();
-    expect(ReactNoop.root.children).toEqual([div(span())]);
+    expect(ReactNoop.root.children).toEqual([
+      div(span()),
+    ]);
 
@@ -50,3 +53,6 @@ describe('ReactIncrementalSideEffects', () => {
     ReactNoop.flush();
-    expect(ReactNoop.root.children).toEqual([div(span(), span())]);
+    expect(ReactNoop.root.children).toEqual([
+      div(span(), span()),
+    ]);
+
   });
@@ -54,2 +60,3 @@ describe('ReactIncrementalSideEffects', () => {
   it('does not update child nodes if a flush is aborted', () => {
+
     function Bar(props) {
@@ -81,2 +88,3 @@ describe('ReactIncrementalSideEffects', () => {
     ]);
+
   });
@@ -84,2 +92,3 @@ describe('ReactIncrementalSideEffects', () => {
   it('preserves a previously rendered node when deprioritized', () => {
+
     function Middle(props) {
@@ -101,3 +110,5 @@ describe('ReactIncrementalSideEffects', () => {
 
-    expect(ReactNoop.root.children).toEqual([div(div(span('foo')))]);
+    expect(ReactNoop.root.children).toEqual([
+      div(div(span('foo'))),
+    ]);
 
@@ -106,3 +117,5 @@ describe('ReactIncrementalSideEffects', () => {
 
-    expect(ReactNoop.root.children).toEqual([div(div(span('foo')))]);
+    expect(ReactNoop.root.children).toEqual([
+      div(div(span('foo'))),
+    ]);
 
@@ -110,3 +123,6 @@ describe('ReactIncrementalSideEffects', () => {
 
-    expect(ReactNoop.root.children).toEqual([div(div(span('bar')))]);
+    expect(ReactNoop.root.children).toEqual([
+      div(div(span('bar'))),
+    ]);
+
   });
@@ -114,2 +130,3 @@ describe('ReactIncrementalSideEffects', () => {
   it('can reuse side-effects after being preempted', () => {
+
     function Bar(props) {
@@ -128,4 +145,5 @@ describe('ReactIncrementalSideEffects', () => {
         <div hidden={true}>
-          {props.step === 0
-            ? <div>
+          {
+            props.step === 0 ?
+              <div>
                 <Bar>Hi</Bar>
@@ -133,3 +151,4 @@ describe('ReactIncrementalSideEffects', () => {
               </div>
-            : middleContent}
+              : middleContent
+          }
         </div>
@@ -172,2 +191,3 @@ describe('ReactIncrementalSideEffects', () => {
   it('can reuse side-effects after being preempted, if shouldComponentUpdate is false', () => {
+
     class Bar extends React.Component {
@@ -247,3 +267,5 @@ describe('ReactIncrementalSideEffects', () => {
     ReactNoop.flush();
-    expect(ReactNoop.root.children).toEqual([div(span(1))]);
+    expect(ReactNoop.root.children).toEqual([
+      div(span(1)),
+    ]);
   });
@@ -275,3 +297,3 @@ describe('ReactIncrementalSideEffects', () => {
         span(0),
-        div(/*the spans are down-prioritized and not rendered yet*/),
+        div(/*the spans are down-prioritized and not rendered yet*/)
       ),
@@ -281,3 +303,6 @@ describe('ReactIncrementalSideEffects', () => {
     expect(ReactNoop.root.children).toEqual([
-      div(span(1), div(/*still not rendered yet*/)),
+      div(
+        span(1),
+        div(/*still not rendered yet*/)
+      ),
     ]);
@@ -290,4 +315,4 @@ describe('ReactIncrementalSideEffects', () => {
           span(0),
-          span(1),
-        ),
+          span(1)
+        )
       ),
@@ -303,4 +328,4 @@ describe('ReactIncrementalSideEffects', () => {
           span(0),
-          span(1),
-        ),
+          span(1)
+        )
       ),
@@ -314,4 +339,4 @@ describe('ReactIncrementalSideEffects', () => {
           span(1),
-          span(2),
-        ),
+          span(2)
+        )
       ),
@@ -326,2 +351,3 @@ describe('ReactIncrementalSideEffects', () => {
 
+
   // TODO: Test that side-effects are not cut off when a work in progress node
@@ -336,3 +362,3 @@ describe('ReactIncrementalSideEffects', () => {
         instance = this;
-        this.state = {text: 'foo'};
+        this.state = { text: 'foo' };
       }
@@ -345,6 +371,10 @@ describe('ReactIncrementalSideEffects', () => {
     ReactNoop.flush();
-    expect(ReactNoop.root.children).toEqual([span('foo')]);
+    expect(ReactNoop.root.children).toEqual([
+      span('foo'),
+    ]);
     let called = false;
-    instance.setState({text: 'bar'}, () => {
-      expect(ReactNoop.root.children).toEqual([span('bar')]);
+    instance.setState({ text: 'bar' }, () => {
+      expect(ReactNoop.root.children).toEqual([
+        span('bar'),
+      ]);
       called = true;
diff --git a/src/renderers/shared/fiber/isomorphic/ReactCoroutine.js b/src/renderers/shared/fiber/isomorphic/ReactCoroutine.js
index 7f44eb8d0..dda4ca1fb 100644
--- a/src/renderers/shared/fiber/isomorphic/ReactCoroutine.js
+++ b/src/renderers/shared/fiber/isomorphic/ReactCoroutine.js
@@ -14,3 +14,3 @@
 
-import type {ReactNodeList} from 'ReactTypes';
+import type { ReactNodeList } from 'ReactTypes';
 
@@ -19,5 +19,3 @@ import type {ReactNodeList} from 'ReactTypes';
 var REACT_COROUTINE_TYPE =
-  (typeof Symbol === 'function' &&
-    Symbol.for &&
-    Symbol.for('react.coroutine')) ||
+  (typeof Symbol === 'function' && Symbol.for && Symbol.for('react.coroutine')) ||
   0xeac8;
@@ -28,7 +26,4 @@ var REACT_YIELD_TYPE =
 
-type ReifiedYield = {continuation: Object, props: Object};
-type CoroutineHandler<T> = (
-  props: T,
-  yields: Array<ReifiedYield>,
-) => ReactNodeList;
+type ReifiedYield = { continuation: Object, props: Object };
+type CoroutineHandler<T> = (props: T, yields: Array<ReifiedYield>) => ReactNodeList;
 
@@ -49,3 +44,3 @@ export type ReactYield = {
   props: Object,
-  continuation: mixed,
+  continuation: mixed
 };
@@ -53,7 +48,7 @@ export type ReactYield = {
 exports.createCoroutine = function<T>(
-  children: mixed,
-  handler: CoroutineHandler<T>,
-  props: T,
-  key: ?string = null,
-): ReactCoroutine {
+  children : mixed,
+  handler : CoroutineHandler<T>,
+  props : T,
+  key : ?string = null
+) : ReactCoroutine {
   var coroutine = {
@@ -78,7 +73,3 @@ exports.createCoroutine = function<T>(
 
-exports.createYield = function(
-  props: mixed,
-  continuation: mixed,
-  key: ?string = null,
-) {
+exports.createYield = function(props : mixed, continuation : mixed, key : ?string = null) {
   var yieldNode = {
@@ -105,3 +96,3 @@ exports.createYield = function(
  */
-exports.isCoroutine = function(object: mixed): boolean {
+exports.isCoroutine = function(object : mixed) : boolean {
   return (
@@ -116,3 +107,3 @@ exports.isCoroutine = function(object: mixed): boolean {
  */
-exports.isYield = function(object: mixed): boolean {
+exports.isYield = function(object : mixed) : boolean {
   return (
diff --git a/src/renderers/shared/fiber/isomorphic/ReactTypes.js b/src/renderers/shared/fiber/isomorphic/ReactTypes.js
index 2ba79535d..643048b46 100644
--- a/src/renderers/shared/fiber/isomorphic/ReactTypes.js
+++ b/src/renderers/shared/fiber/isomorphic/ReactTypes.js
@@ -14,10 +14,5 @@
 
-import type {ReactCoroutine, ReactYield} from 'ReactCoroutine';
+import type { ReactCoroutine, ReactYield } from 'ReactCoroutine';
 
-export type ReactNode =
-  | ReactElement<any>
-  | ReactCoroutine
-  | ReactYield
-  | ReactText
-  | ReactFragment;
+export type ReactNode = ReactElement<any> | ReactCoroutine | ReactYield | ReactText | ReactFragment;
 
diff --git a/src/renderers/shared/hooks/ReactHostOperationHistoryHook.js b/src/renderers/shared/hooks/ReactHostOperationHistoryHook.js
index bbe1aa890..675a00e73 100644
--- a/src/renderers/shared/hooks/ReactHostOperationHistoryHook.js
+++ b/src/renderers/shared/hooks/ReactHostOperationHistoryHook.js
@@ -14,14 +14,15 @@
 
-import type {DebugID} from 'ReactInstanceType';
+import type { DebugID } from 'ReactInstanceType';
 
 export type Operation = {instanceID: DebugID} & (
-  | {type: 'mount', payload: string}
-  | {type: 'insert child', payload: {toIndex: number, content: string}}
-  | {type: 'move child', payload: {fromIndex: number, toIndex: number}}
-  | {type: 'replace children', payload: string}
-  | {type: 'replace text', payload: string}
-  | {type: 'replace with', payload: string}
-  | {type: 'update styles', payload: mixed /* Style Object */}
-  | {type: 'update attribute', payload: {[name: string]: string}}
-  | {type: 'remove attribute', payload: string});
+  {type: 'mount', payload: string} |
+  {type: 'insert child', payload: {toIndex: number, content: string}} |
+  {type: 'move child', payload: {fromIndex: number, toIndex: number}} |
+  {type: 'replace children', payload: string} |
+  {type: 'replace text', payload: string} |
+  {type: 'replace with', payload: string} |
+  {type: 'update styles', payload: mixed /* Style Object */} |
+  {type: 'update attribute', payload: {[name: string]: string}} |
+  {type: 'remove attribute', payload: string}
+);
 
diff --git a/src/renderers/shared/hooks/ReactInvalidSetStateWarningHook.js b/src/renderers/shared/hooks/ReactInvalidSetStateWarningHook.js
index 3c309ed0f..66378b50d 100644
--- a/src/renderers/shared/hooks/ReactInvalidSetStateWarningHook.js
+++ b/src/renderers/shared/hooks/ReactInvalidSetStateWarningHook.js
@@ -22,3 +22,3 @@ if (__DEV__) {
       !processingChildContext,
-      'setState(...): Cannot call setState() inside getChildContext()',
+      'setState(...): Cannot call setState() inside getChildContext()'
     );
diff --git a/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js b/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js
index 974ed201b..d639848ae 100644
--- a/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js
+++ b/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js
@@ -135,16 +135,12 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'div',
-        children: [
-          {
-            displayName: 'Bar',
-            children: [],
-          },
-          {
-            displayName: 'Baz',
-            children: [],
-          },
-          {
-            displayName: 'Unknown',
-            children: [],
-          },
-        ],
+        children: [{
+          displayName: 'Bar',
+          children: [],
+        }, {
+          displayName: 'Baz',
+          children: [],
+        }, {
+          displayName: 'Unknown',
+          children: [],
+        }],
       };
@@ -176,17 +172,13 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: 'Bar',
-            children: [],
-          },
-          {
-            displayName: 'Baz',
-            children: [],
-          },
-          {
-            // Note: Ideally fallback name should be consistent (e.g. "Unknown")
-            displayName: 'ReactComponent',
-            children: [],
-          },
-        ],
+        children: [{
+          displayName: 'Bar',
+          children: [],
+        }, {
+          displayName: 'Baz',
+          children: [],
+        }, {
+          // Note: Ideally fallback name should be consistent (e.g. "Unknown")
+          displayName: 'ReactComponent',
+          children: [],
+        }],
       };
@@ -224,16 +216,12 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: 'Bar',
-            children: [],
-          },
-          {
-            displayName: 'Baz',
-            children: [],
-          },
-          {
-            displayName: 'Unknown',
-            children: [],
-          },
-        ],
+        children: [{
+          displayName: 'Bar',
+          children: [],
+        }, {
+          displayName: 'Baz',
+          children: [],
+        }, {
+          displayName: 'Unknown',
+          children: [],
+        }],
       };
@@ -259,16 +247,12 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: 'Bar',
-            children: [],
-          },
-          {
-            displayName: 'Baz',
-            children: [],
-          },
-          {
-            displayName: 'Unknown',
-            children: [],
-          },
-        ],
+        children: [{
+          displayName: 'Bar',
+          children: [],
+        }, {
+          displayName: 'Baz',
+          children: [],
+        }, {
+          displayName: 'Unknown',
+          children: [],
+        }],
       };
@@ -291,27 +275,19 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'div',
-        children: [
-          {
-            displayName: 'p',
-            children: [
-              {
-                displayName: 'span',
-                children: [
-                  {
-                    displayName: '#text',
-                    text: 'Hi!',
-                  },
-                ],
-              },
-              {
-                displayName: '#text',
-                text: 'Wow.',
-              },
-            ],
-          },
-          {
-            displayName: 'hr',
-            element: <hr />,
-            children: [],
-          },
-        ],
+        children: [{
+          displayName: 'p',
+          children: [{
+            displayName: 'span',
+            children: [{
+              displayName: '#text',
+              text: 'Hi!',
+            }],
+          }, {
+            displayName: '#text',
+            text: 'Wow.',
+          }],
+        }, {
+          displayName: 'hr',
+          element: <hr />,
+          children: [],
+        }],
       };
@@ -331,9 +307,7 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: 'div',
-            element: <div />,
-            children: [],
-          },
-        ],
+        children: [{
+          displayName: 'div',
+          element: <div />,
+          children: [],
+        }],
       };
@@ -378,55 +352,38 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: 'div',
-            children: [
-              {
-                displayName: 'Foo',
-                element: <Foo />,
-                children: [
-                  {
-                    displayName: 'Qux',
-                    element: <Qux />,
-                    children: [],
-                  },
-                ],
-              },
-              {
-                displayName: 'Bar',
-                children: [
-                  {
-                    displayName: 'h1',
-                    children: [
-                      {
-                        displayName: 'span',
-                        children: [
-                          {
-                            displayName: '#text',
-                            element: 'Hi,',
-                            text: 'Hi,',
-                          },
-                        ],
-                      },
-                      {
-                        displayName: '#text',
-                        text: 'Mom',
-                        element: 'Mom',
-                      },
-                    ],
-                  },
-                ],
-              },
-              {
-                displayName: 'a',
-                children: [
-                  {
-                    displayName: '#text',
-                    text: 'Click me.',
-                    element: 'Click me.',
-                  },
-                ],
-              },
-            ],
-          },
-        ],
+        children: [{
+          displayName: 'div',
+          children: [{
+            displayName: 'Foo',
+            element: <Foo />,
+            children: [{
+              displayName: 'Qux',
+              element: <Qux />,
+              children: [],
+            }],
+          }, {
+            displayName: 'Bar',
+            children: [{
+              displayName: 'h1',
+              children: [{
+                displayName: 'span',
+                children: [{
+                  displayName: '#text',
+                  element: 'Hi,',
+                  text: 'Hi,',
+                }],
+              }, {
+                displayName: '#text',
+                text: 'Mom',
+                element: 'Mom',
+              }],
+            }],
+          }, {
+            displayName: 'a',
+            children: [{
+              displayName: '#text',
+              text: 'Click me.',
+              element: 'Click me.',
+            }],
+          }],
+        }],
       };
@@ -468,12 +425,9 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: '#text',
-            text: '1',
-          },
-          {
-            displayName: '#text',
-            text: '2',
-          },
-        ],
+        children: [{
+          displayName: '#text',
+          text: '1',
+        }, {
+          displayName: '#text',
+          text: '2',
+        }],
       };
@@ -487,8 +441,6 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: '#text',
-            text: '1',
-          },
-        ],
+        children: [{
+          displayName: '#text',
+          text: '1',
+        }],
       };
@@ -502,8 +454,6 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: '#text',
-            text: '42',
-          },
-        ],
+        children: [{
+          displayName: '#text',
+          text: '42',
+        }],
       };
@@ -517,8 +467,6 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: '#text',
-            text: '0',
-          },
-        ],
+        children: [{
+          displayName: '#text',
+          text: '0',
+        }],
       };
@@ -543,25 +491,19 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: '#text',
-            text: 'hi',
-            element: 'hi',
-          },
-          {
-            displayName: '#text',
-            text: '42',
-            element: 42,
-          },
-          {
-            displayName: 'Foo',
-            element: <Foo />,
-            children: [
-              {
-                displayName: 'div',
-                element: <div />,
-                children: [],
-              },
-            ],
-          },
-        ],
+        children: [{
+          displayName: '#text',
+          text: 'hi',
+          element: 'hi',
+        }, {
+          displayName: '#text',
+          text: '42',
+          element: 42,
+        }, {
+          displayName: 'Foo',
+          element: <Foo />,
+          children: [{
+            displayName: 'div',
+            element: <div />,
+            children: [],
+          }],
+        }],
       };
@@ -586,8 +528,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }],
         };
@@ -597,8 +537,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Bye.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Bye.',
+          }],
         };
@@ -621,8 +559,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }],
         };
@@ -639,8 +575,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }],
         };
@@ -669,8 +603,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }],
         };
@@ -687,8 +619,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }],
         };
@@ -717,12 +647,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-            {
-              displayName: '#text',
-              text: 'Bye.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }, {
+            displayName: '#text',
+            text: 'Bye.',
+          }],
         };
@@ -739,12 +666,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-            {
-              displayName: '#text',
-              text: 'Bye.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }, {
+            displayName: '#text',
+            text: 'Bye.',
+          }],
         };
@@ -773,12 +697,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-            {
-              displayName: '#text',
-              text: 'Bye.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }, {
+            displayName: '#text',
+            text: 'Bye.',
+          }],
         };
@@ -795,12 +716,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-            {
-              displayName: '#text',
-              text: 'Bye.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }, {
+            displayName: '#text',
+            text: 'Bye.',
+          }],
         };
@@ -861,8 +779,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }],
         };
@@ -872,12 +788,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-            {
-              displayName: '#text',
-              text: 'Bye.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }, {
+            displayName: '#text',
+            text: 'Bye.',
+          }],
         };
@@ -894,12 +807,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-            {
-              displayName: '#text',
-              text: 'Bye.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }, {
+            displayName: '#text',
+            text: 'Bye.',
+          }],
         };
@@ -909,8 +819,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }],
         };
@@ -926,12 +834,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-            {
-              displayName: '#text',
-              text: 'Bye.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Hi.',
+          }, {
+            displayName: '#text',
+            text: 'Bye.',
+          }],
         };
@@ -941,12 +846,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'Bye.',
-            },
-            {
-              displayName: '#text',
-              text: 'Hi.',
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'Bye.',
+          }, {
+            displayName: '#text',
+            text: 'Hi.',
+          }],
         };
@@ -967,22 +869,15 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: 'div',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-              ],
-            },
-            {
-              displayName: 'div',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Bye.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }],
+          }, {
+            displayName: 'div',
+            children: [{
+              displayName: '#text',
+              text: 'Bye.',
+            }],
+          }],
         };
@@ -997,22 +892,15 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: 'div',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Bye.',
-                },
-              ],
-            },
-            {
-              displayName: 'div',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [{
+              displayName: '#text',
+              text: 'Bye.',
+            }],
+          }, {
+            displayName: 'div',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }],
+          }],
         };
@@ -1034,22 +922,15 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: 'div',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-              ],
-            },
-            {
-              displayName: 'div',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Bye.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }],
+          }, {
+            displayName: 'div',
+            children: [{
+              displayName: '#text',
+              text: 'Bye.',
+            }],
+          }],
         };
@@ -1064,22 +945,15 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: 'div',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Bye.',
-                },
-              ],
-            },
-            {
-              displayName: 'div',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [{
+              displayName: '#text',
+              text: 'Bye.',
+            }],
+          }, {
+            displayName: 'div',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }],
+          }],
         };
@@ -1104,8 +978,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [],
+          }],
         };
@@ -1115,8 +987,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1130,3 +1000,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates a single composite child of the same type', () => {
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1137,13 +1007,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [
-                {
-                  displayName: 'div',
-                  children: [],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [{
+              displayName: 'div',
+              children: [],
+            }],
+          }],
         };
@@ -1153,13 +1019,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [
-                {
-                  displayName: 'span',
-                  children: [],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [{
+              displayName: 'span',
+              children: [],
+            }],
+          }],
         };
@@ -1186,8 +1048,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [],
+          }],
         };
@@ -1208,8 +1068,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [],
+          }],
         };
@@ -1243,21 +1101,15 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: '#text',
-              text: 'hi',
-            },
-            {
-              displayName: '#text',
-              text: '42',
-            },
-            {
-              displayName: 'Foo',
-              children: [
-                {
-                  displayName: 'div',
-                  children: [],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: '#text',
+            text: 'hi',
+          }, {
+            displayName: '#text',
+            text: '42',
+          }, {
+            displayName: 'Foo',
+            children: [{
+              displayName: 'div',
+              children: [],
+            }],
+          }],
         };
@@ -1274,17 +1126,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [
-                {
-                  displayName: 'div',
-                  children: [],
-                },
-              ],
-            },
-            {
-              displayName: '#text',
-              text: 'hi',
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [{
+              displayName: 'div',
+              children: [],
+            }],
+          }, {
+            displayName: '#text',
+            text: 'hi',
+          }],
         };
@@ -1298,13 +1145,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'div',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [
-                {
-                  displayName: 'div',
-                  children: [],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [{
+              displayName: 'div',
+              children: [],
+            }],
+          }],
         };
@@ -1321,3 +1164,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates with a host child', () => {
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1328,8 +1171,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'div',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [],
+          }],
         };
@@ -1339,8 +1180,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'span',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'span',
+            children: [],
+          }],
         };
@@ -1354,3 +1193,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates from null to a host child', () => {
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1367,8 +1206,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'div',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [],
+          }],
         };
@@ -1382,3 +1219,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates from a host child to null', () => {
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1389,8 +1226,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'div',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [],
+          }],
         };
@@ -1414,3 +1249,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1421,8 +1256,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'div',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [],
+          }],
         };
@@ -1432,8 +1265,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1451,3 +1282,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1458,8 +1289,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1469,8 +1298,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'div',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [],
+          }],
         };
@@ -1488,3 +1315,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1501,8 +1328,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1520,3 +1345,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1527,8 +1352,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1559,8 +1382,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'div',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [],
+          }],
         };
@@ -1570,8 +1391,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'span',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'span',
+            children: [],
+          }],
         };
@@ -1600,8 +1419,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'div',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [],
+          }],
         };
@@ -1624,8 +1441,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'div',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [],
+          }],
         };
@@ -1660,8 +1475,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'div',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [],
+          }],
         };
@@ -1671,8 +1484,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1701,8 +1512,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1712,8 +1521,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'div',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'div',
+            children: [],
+          }],
         };
@@ -1748,8 +1555,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1778,8 +1583,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1815,35 +1618,24 @@ describe('ReactComponentTreeHook', () => {
       displayName: 'article',
-      children: [
-        {
-          displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
+      children: [{
+        displayName: 'Foo',
+        children: [{
+          displayName: 'Bar',
+          ownerDisplayName: 'Foo',
+          children: [{
+            displayName: 'div',
+            ownerDisplayName: 'Bar',
+            children: [{
+              displayName: 'h1',
               ownerDisplayName: 'Foo',
-              children: [
-                {
-                  displayName: 'div',
-                  ownerDisplayName: 'Bar',
-                  children: [
-                    {
-                      displayName: 'h1',
-                      ownerDisplayName: 'Foo',
-                      children: [
-                        {
-                          displayName: '#text',
-                          text: 'Hi.',
-                        },
-                      ],
-                    },
-                    {
-                      displayName: '#text',
-                      text: ' Mom',
-                    },
-                  ],
-                },
-              ],
-            },
-          ],
-        },
-      ],
+              children: [{
+                displayName: '#text',
+                text: 'Hi.',
+              }],
+            }, {
+              displayName: '#text',
+              text: ' Mom',
+            }],
+          }],
+        }],
+      }],
     };
@@ -1873,12 +1665,8 @@ describe('ReactComponentTreeHook', () => {
     ReactDOM.render(<Foo />, node);
-    ReactComponentTreeTestUtils.expectTree(
-      barInstance._debugID,
-      {
-        displayName: 'Bar',
-        parentDisplayName: 'Foo',
-        parentID: fooInstance._debugID,
-        children: [],
-      },
-      'Foo',
-    );
+    ReactComponentTreeTestUtils.expectTree(barInstance._debugID, {
+      displayName: 'Bar',
+      parentDisplayName: 'Foo',
+      parentID: fooInstance._debugID,
+      children: [],
+    }, 'Foo');
 
@@ -1887,22 +1675,14 @@ describe('ReactComponentTreeHook', () => {
     ReactDOM.render(<Foo />, node);
-    ReactComponentTreeTestUtils.expectTree(
-      barInstance._debugID,
-      {
-        displayName: 'Unknown',
-        children: [],
-        parentID: null,
-      },
-      'Foo',
-    );
+    ReactComponentTreeTestUtils.expectTree(barInstance._debugID, {
+      displayName: 'Unknown',
+      children: [],
+      parentID: null,
+    }, 'Foo');
 
     ReactDOM.unmountComponentAtNode(node);
-    ReactComponentTreeTestUtils.expectTree(
-      barInstance._debugID,
-      {
-        displayName: 'Unknown',
-        children: [],
-        parentID: null,
-      },
-      'Foo',
-    );
+    ReactComponentTreeTestUtils.expectTree(barInstance._debugID, {
+      displayName: 'Unknown',
+      children: [],
+      parentID: null,
+    }, 'Foo');
   });
@@ -1952,6 +1732,3 @@ describe('ReactComponentTreeHook', () => {
     ReactDOM.render(<div>hi</div>, node);
-    expect(ReactComponentTreeTestUtils.getRegisteredDisplayNames()).toEqual([
-      'div',
-      '#text',
-    ]);
+    expect(ReactComponentTreeTestUtils.getRegisteredDisplayNames()).toEqual(['div', '#text']);
 
@@ -1978,7 +1755,17 @@ describe('ReactComponentTreeHook', () => {
 
-      expect(getAddendum()).toBe('');
-      expect(getAddendum(<div />)).toBe('\n    in div (at **)');
-      expect(getAddendum(<Anon />)).toBe('\n    in Unknown (at **)');
-      expect(getAddendum(<Orange />)).toBe('\n    in Orange (at **)');
-      expect(getAddendum(React.createElement(Orange))).toBe('\n    in Orange');
+      expect(getAddendum()).toBe(
+        ''
+      );
+      expect(getAddendum(<div />)).toBe(
+        '\n    in div (at **)'
+      );
+      expect(getAddendum(<Anon />)).toBe(
+        '\n    in Unknown (at **)'
+      );
+      expect(getAddendum(<Orange />)).toBe(
+        '\n    in Orange (at **)'
+      );
+      expect(getAddendum(React.createElement(Orange))).toBe(
+        '\n    in Orange'
+      );
 
@@ -2002,5 +1789,5 @@ describe('ReactComponentTreeHook', () => {
             '\n    in S (at **)' +
-              '\n    in div (at **)' +
-              '\n    in R (created by Q)' +
-              '\n    in Q (at **)',
+            '\n    in div (at **)' +
+            '\n    in R (created by Q)' +
+            '\n    in Q (at **)'
           );
@@ -2008,6 +1795,6 @@ describe('ReactComponentTreeHook', () => {
             '\n    in span (at **)' +
-              '\n    in S (at **)' +
-              '\n    in div (at **)' +
-              '\n    in R (created by Q)' +
-              '\n    in Q (at **)',
+            '\n    in S (at **)' +
+            '\n    in div (at **)' +
+            '\n    in R (created by Q)' +
+            '\n    in Q (at **)'
           );
@@ -2015,6 +1802,6 @@ describe('ReactComponentTreeHook', () => {
             '\n    in span (created by S)' +
-              '\n    in S (at **)' +
-              '\n    in div (at **)' +
-              '\n    in R (created by Q)' +
-              '\n    in Q (at **)',
+            '\n    in S (at **)' +
+            '\n    in div (at **)' +
+            '\n    in R (created by Q)' +
+            '\n    in Q (at **)'
           );
@@ -2028,3 +1815,5 @@ describe('ReactComponentTreeHook', () => {
       // Make sure owner is fetched for the top element too.
-      expect(getAddendum(rOwnedByQ)).toBe('\n    in R (created by Q)');
+      expect(getAddendum(rOwnedByQ)).toBe(
+        '\n    in R (created by Q)'
+      );
     });
@@ -2045,3 +1834,3 @@ describe('ReactComponentTreeHook', () => {
       expect(getAddendum(ReactInstanceMap.get(q)._debugID)).toBe(
-        '\n    in Q (at **)',
+        '\n    in Q (at **)'
       );
@@ -2053,3 +1842,3 @@ describe('ReactComponentTreeHook', () => {
         'Warning: ReactComponentTreeHook: Missing React element for ' +
-          'debugID -17 when building stack',
+        'debugID -17 when building stack'
       );
@@ -2156,55 +1945,38 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: 'div',
-            children: [
-              {
-                displayName: 'Foo',
-                element: <Foo />,
-                children: [
-                  {
-                    displayName: 'Qux',
-                    element: <Qux />,
-                    children: [],
-                  },
-                ],
-              },
-              {
-                displayName: 'Bar',
-                children: [
-                  {
-                    displayName: 'h1',
-                    children: [
-                      {
-                        displayName: 'span',
-                        children: [
-                          {
-                            displayName: '#text',
-                            element: 'Hi,',
-                            text: 'Hi,',
-                          },
-                        ],
-                      },
-                      {
-                        displayName: '#text',
-                        text: 'Mom',
-                        element: 'Mom',
-                      },
-                    ],
-                  },
-                ],
-              },
-              {
-                displayName: 'a',
-                children: [
-                  {
-                    displayName: '#text',
-                    text: 'Click me.',
-                    element: 'Click me.',
-                  },
-                ],
-              },
-            ],
-          },
-        ],
+        children: [{
+          displayName: 'div',
+          children: [{
+            displayName: 'Foo',
+            element: <Foo />,
+            children: [{
+              displayName: 'Qux',
+              element: <Qux />,
+              children: [],
+            }],
+          }, {
+            displayName: 'Bar',
+            children: [{
+              displayName: 'h1',
+              children: [{
+                displayName: 'span',
+                children: [{
+                  displayName: '#text',
+                  element: 'Hi,',
+                  text: 'Hi,',
+                }],
+              }, {
+                displayName: '#text',
+                text: 'Mom',
+                element: 'Mom',
+              }],
+            }],
+          }, {
+            displayName: 'a',
+            children: [{
+              displayName: '#text',
+              text: 'Click me.',
+              element: 'Click me.',
+            }],
+          }],
+        }],
       };
diff --git a/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.native.js b/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.native.js
index 15cbde7b5..bdbf4c549 100644
--- a/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.native.js
+++ b/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.native.js
@@ -14,3 +14,2 @@
 describe('ReactComponentTreeHook', () => {
-  var PropTypes;
   var React;
@@ -28,3 +27,2 @@ describe('ReactComponentTreeHook', () => {
 
-    PropTypes = require('prop-types');
     React = require('React');
@@ -46,3 +44,3 @@ describe('ReactComponentTreeHook', () => {
       static childContextTypes = {
-        isInAParentText: PropTypes.bool,
+        isInAParentText: React.PropTypes.bool,
       };
@@ -153,16 +151,12 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: 'Bar',
-            children: [],
-          },
-          {
-            displayName: 'Baz',
-            children: [],
-          },
-          {
-            displayName: 'Unknown',
-            children: [],
-          },
-        ],
+        children: [{
+          displayName: 'Bar',
+          children: [],
+        }, {
+          displayName: 'Baz',
+          children: [],
+        }, {
+          displayName: 'Unknown',
+          children: [],
+        }],
       };
@@ -193,17 +187,13 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'View',
-        children: [
-          {
-            displayName: 'Bar',
-            children: [],
-          },
-          {
-            displayName: 'Baz',
-            children: [],
-          },
-          {
-            // Note: Ideally fallback name should be consistent (e.g. "Unknown")
-            displayName: 'ReactComponent',
-            children: [],
-          },
-        ],
+        children: [{
+          displayName: 'Bar',
+          children: [],
+        }, {
+          displayName: 'Baz',
+          children: [],
+        }, {
+          // Note: Ideally fallback name should be consistent (e.g. "Unknown")
+          displayName: 'ReactComponent',
+          children: [],
+        }],
       };
@@ -240,16 +230,12 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'View',
-        children: [
-          {
-            displayName: 'Bar',
-            children: [],
-          },
-          {
-            displayName: 'Baz',
-            children: [],
-          },
-          {
-            displayName: 'Unknown',
-            children: [],
-          },
-        ],
+        children: [{
+          displayName: 'Bar',
+          children: [],
+        }, {
+          displayName: 'Baz',
+          children: [],
+        }, {
+          displayName: 'Unknown',
+          children: [],
+        }],
       };
@@ -274,16 +260,12 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'View',
-        children: [
-          {
-            displayName: 'Bar',
-            children: [],
-          },
-          {
-            displayName: 'Baz',
-            children: [],
-          },
-          {
-            displayName: 'Unknown',
-            children: [],
-          },
-        ],
+        children: [{
+          displayName: 'Bar',
+          children: [],
+        }, {
+          displayName: 'Baz',
+          children: [],
+        }, {
+          displayName: 'Unknown',
+          children: [],
+        }],
       };
@@ -306,29 +288,20 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: 'View',
-            children: [
-              {
-                displayName: 'Text',
-                children: [
-                  {
-                    displayName: 'RCText',
-                    children: [
-                      {
-                        displayName: '#text',
-                        element: 'Hi!',
-                        text: 'Hi!',
-                      },
-                    ],
-                  },
-                ],
-              },
-            ],
-          },
-          {
-            displayName: 'Image',
-            element: <Image />,
-            children: [],
-          },
-        ],
+        children: [{
+          displayName: 'View',
+          children: [{
+            displayName: 'Text',
+            children: [{
+              displayName: 'RCText',
+              children: [{
+                displayName: '#text',
+                element: 'Hi!',
+                text: 'Hi!',
+              }],
+            }],
+          }],
+        }, {
+          displayName: 'Image',
+          element: <Image />,
+          children: [],
+        }],
       };
@@ -348,9 +321,7 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: 'Image',
-            element: <Image />,
-            children: [],
-          },
-        ],
+        children: [{
+          displayName: 'Image',
+          element: <Image />,
+          children: [],
+        }],
       };
@@ -394,50 +365,34 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: 'View',
-            children: [
-              {
-                displayName: 'Foo',
-                element: <Foo />,
-                children: [
-                  {
-                    displayName: 'Qux',
-                    element: <Qux />,
-                    children: [],
-                  },
-                ],
-              },
-              {
-                displayName: 'Bar',
-                children: [
-                  {
-                    displayName: 'View',
-                    children: [
-                      {
-                        displayName: 'Text',
-                        children: [
-                          {
-                            displayName: 'RCText',
-                            children: [
-                              {
-                                displayName: '#text',
-                                element: 'Hi,',
-                                text: 'Hi,',
-                              },
-                            ],
-                          },
-                        ],
-                      },
-                    ],
-                  },
-                ],
-              },
-              {
-                displayName: 'Image',
-                element: <Image />,
-                children: [],
-              },
-            ],
-          },
-        ],
+        children: [{
+          displayName: 'View',
+          children: [{
+            displayName: 'Foo',
+            element: <Foo />,
+            children: [{
+              displayName: 'Qux',
+              element: <Qux />,
+              children: [],
+            }],
+          }, {
+            displayName: 'Bar',
+            children: [{
+              displayName: 'View',
+              children: [{
+                displayName: 'Text',
+                children: [{
+                  displayName: 'RCText',
+                  children: [{
+                    displayName: '#text',
+                    element: 'Hi,',
+                    text: 'Hi,',
+                  }],
+                }],
+              }],
+            }],
+          }, {
+            displayName: 'Image',
+            element: <Image />,
+            children: [],
+          }],
+        }],
       };
@@ -478,17 +433,12 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'Text',
-        children: [
-          {
-            displayName: 'RCText',
-            children: [
-              {
-                displayName: '#text',
-                text: '1',
-              },
-              {
-                displayName: '#text',
-                text: '2',
-              },
-            ],
-          },
-        ],
+        children: [{
+          displayName: 'RCText',
+          children: [{
+            displayName: '#text',
+            text: '1',
+          }, {
+            displayName: '#text',
+            text: '2',
+          }],
+        }],
       };
@@ -501,13 +451,9 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'Text',
-        children: [
-          {
-            displayName: 'RCText',
-            children: [
-              {
-                displayName: '#text',
-                text: '1',
-              },
-            ],
-          },
-        ],
+        children: [{
+          displayName: 'RCText',
+          children: [{
+            displayName: '#text',
+            text: '1',
+          }],
+        }],
       };
@@ -520,13 +466,9 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'Text',
-        children: [
-          {
-            displayName: 'RCText',
-            children: [
-              {
-                displayName: '#text',
-                text: '42',
-              },
-            ],
-          },
-        ],
+        children: [{
+          displayName: 'RCText',
+          children: [{
+            displayName: '#text',
+            text: '42',
+          }],
+        }],
       };
@@ -539,13 +481,9 @@ describe('ReactComponentTreeHook', () => {
         displayName: 'Text',
-        children: [
-          {
-            displayName: 'RCText',
-            children: [
-              {
-                displayName: '#text',
-                text: '0',
-              },
-            ],
-          },
-        ],
+        children: [{
+          displayName: 'RCText',
+          children: [{
+            displayName: '#text',
+            text: '0',
+          }],
+        }],
       };
@@ -569,26 +507,19 @@ describe('ReactComponentTreeHook', () => {
         element,
-        children: [
-          {
-            displayName: 'Foo',
-            element: <Foo />,
-            children: [
-              {
-                displayName: 'Image',
-                element: <Image />,
-                children: [],
-              },
-            ],
-          },
-          {
-            displayName: 'Foo',
-            element: <Foo />,
-            children: [
-              {
-                displayName: 'Image',
-                element: <Image />,
-                children: [],
-              },
-            ],
-          },
-        ],
+        children: [{
+          displayName: 'Foo',
+          element: <Foo />,
+          children: [{
+            displayName: 'Image',
+            element: <Image />,
+            children: [],
+          }],
+        }, {
+          displayName: 'Foo',
+          element: <Foo />,
+          children: [{
+            displayName: 'Image',
+            element: <Image />,
+            children: [],
+          }],
+        }],
       };
@@ -604,13 +535,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }],
+          }],
         };
@@ -620,13 +547,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Bye.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [{
+              displayName: '#text',
+              text: 'Bye.',
+            }],
+          }],
         };
@@ -643,8 +566,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [],
+          }],
         };
@@ -654,13 +575,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }],
+          }],
         };
@@ -677,13 +594,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }],
+          }],
         };
@@ -693,8 +606,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [],
+          }],
         };
@@ -711,8 +622,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [],
+          }],
         };
@@ -722,17 +631,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-                {
-                  displayName: '#text',
-                  text: 'Bye.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }, {
+              displayName: '#text',
+              text: 'Bye.',
+            }],
+          }],
         };
@@ -749,17 +653,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-                {
-                  displayName: '#text',
-                  text: 'Bye.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }, {
+              displayName: '#text',
+              text: 'Bye.',
+            }],
+          }],
         };
@@ -769,8 +668,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [],
+          }],
         };
@@ -786,13 +683,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }],
+          }],
         };
@@ -802,17 +695,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-                {
-                  displayName: '#text',
-                  text: 'Bye.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }, {
+              displayName: '#text',
+              text: 'Bye.',
+            }],
+          }],
         };
@@ -829,17 +717,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-                {
-                  displayName: '#text',
-                  text: 'Bye.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }, {
+              displayName: '#text',
+              text: 'Bye.',
+            }],
+          }],
         };
@@ -849,13 +732,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }],
+          }],
         };
@@ -871,17 +750,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-                {
-                  displayName: '#text',
-                  text: 'Bye.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [{
+              displayName: '#text',
+              text: 'Hi.',
+            }, {
+              displayName: '#text',
+              text: 'Bye.',
+            }],
+          }],
         };
@@ -891,17 +765,12 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Text',
-          children: [
-            {
-              displayName: 'RCText',
-              children: [
-                {
-                  displayName: '#text',
-                  text: 'Bye.',
-                },
-                {
-                  displayName: '#text',
-                  text: 'Hi.',
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'RCText',
+            children: [{
+              displayName: '#text',
+              text: 'Bye.',
+            }, {
+              displayName: '#text',
+              text: 'Hi.',
+            }],
+          }],
         };
@@ -922,32 +791,21 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Text',
-              children: [
-                {
-                  displayName: 'RCText',
-                  children: [
-                    {
-                      displayName: '#text',
-                      text: 'Hi.',
-                    },
-                  ],
-                },
-              ],
-            },
-            {
-              displayName: 'Text',
-              children: [
-                {
-                  displayName: 'RCText',
-                  children: [
-                    {
-                      displayName: '#text',
-                      text: 'Bye.',
-                    },
-                  ],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'Text',
+            children: [{
+              displayName: 'RCText',
+              children: [{
+                displayName: '#text',
+                text: 'Hi.',
+              }],
+            }],
+          }, {
+            displayName: 'Text',
+            children: [{
+              displayName: 'RCText',
+              children: [{
+                displayName: '#text',
+                text: 'Bye.',
+              }],
+            }],
+          }],
         };
@@ -962,32 +820,21 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Text',
-              children: [
-                {
-                  displayName: 'RCText',
-                  children: [
-                    {
-                      displayName: '#text',
-                      text: 'Bye.',
-                    },
-                  ],
-                },
-              ],
-            },
-            {
-              displayName: 'Text',
-              children: [
-                {
-                  displayName: 'RCText',
-                  children: [
-                    {
-                      displayName: '#text',
-                      text: 'Hi.',
-                    },
-                  ],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'Text',
+            children: [{
+              displayName: 'RCText',
+              children: [{
+                displayName: '#text',
+                text: 'Bye.',
+              }],
+            }],
+          }, {
+            displayName: 'Text',
+            children: [{
+              displayName: 'RCText',
+              children: [{
+                displayName: '#text',
+                text: 'Hi.',
+              }],
+            }],
+          }],
         };
@@ -1009,32 +856,21 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Text',
-              children: [
-                {
-                  displayName: 'RCText',
-                  children: [
-                    {
-                      displayName: '#text',
-                      text: 'Hi.',
-                    },
-                  ],
-                },
-              ],
-            },
-            {
-              displayName: 'Text',
-              children: [
-                {
-                  displayName: 'RCText',
-                  children: [
-                    {
-                      displayName: '#text',
-                      text: 'Bye.',
-                    },
-                  ],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'Text',
+            children: [{
+              displayName: 'RCText',
+              children: [{
+                displayName: '#text',
+                text: 'Hi.',
+              }],
+            }],
+          }, {
+            displayName: 'Text',
+            children: [{
+              displayName: 'RCText',
+              children: [{
+                displayName: '#text',
+                text: 'Bye.',
+              }],
+            }],
+          }],
         };
@@ -1049,32 +885,21 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Text',
-              children: [
-                {
-                  displayName: 'RCText',
-                  children: [
-                    {
-                      displayName: '#text',
-                      text: 'Bye.',
-                    },
-                  ],
-                },
-              ],
-            },
-            {
-              displayName: 'Text',
-              children: [
-                {
-                  displayName: 'RCText',
-                  children: [
-                    {
-                      displayName: '#text',
-                      text: 'Hi.',
-                    },
-                  ],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'Text',
+            children: [{
+              displayName: 'RCText',
+              children: [{
+                displayName: '#text',
+                text: 'Bye.',
+              }],
+            }],
+          }, {
+            displayName: 'Text',
+            children: [{
+              displayName: 'RCText',
+              children: [{
+                displayName: '#text',
+                text: 'Hi.',
+              }],
+            }],
+          }],
         };
@@ -1099,8 +924,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [],
+          }],
         };
@@ -1110,8 +933,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1125,3 +946,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates a single composite child of the same type', () => {
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1132,13 +953,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [
-                {
-                  displayName: 'View',
-                  children: [],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [{
+              displayName: 'View',
+              children: [],
+            }],
+          }],
         };
@@ -1148,13 +965,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [
-                {
-                  displayName: 'Image',
-                  children: [],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [{
+              displayName: 'Image',
+              children: [],
+            }],
+          }],
         };
@@ -1181,8 +994,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [],
+          }],
         };
@@ -1203,8 +1014,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [],
+          }],
         };
@@ -1238,41 +1047,27 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Text',
-              children: [
-                {
-                  displayName: 'RCText',
-                  children: [
-                    {
-                      displayName: '#text',
-                      text: 'hi',
-                    },
-                  ],
-                },
-              ],
-            },
-            {
-              displayName: 'Text',
-              children: [
-                {
-                  displayName: 'RCText',
-                  children: [
-                    {
-                      displayName: '#text',
-                      text: '42',
-                    },
-                  ],
-                },
-              ],
-            },
-            {
-              displayName: 'Foo',
-              children: [
-                {
-                  displayName: 'View',
-                  children: [],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'Text',
+            children: [{
+              displayName: 'RCText',
+              children: [{
+                displayName: '#text',
+                text: 'hi',
+              }],
+            }],
+          }, {
+            displayName: 'Text',
+            children: [{
+              displayName: 'RCText',
+              children: [{
+                displayName: '#text',
+                text: '42',
+              }],
+            }],
+          }, {
+            displayName: 'Foo',
+            children: [{
+              displayName: 'View',
+              children: [],
+            }],
+          }],
         };
@@ -1289,27 +1084,18 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [
-                {
-                  displayName: 'View',
-                  children: [],
-                },
-              ],
-            },
-            {
-              displayName: 'Text',
-              children: [
-                {
-                  displayName: 'RCText',
-                  children: [
-                    {
-                      displayName: '#text',
-                      text: 'hi',
-                    },
-                  ],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [{
+              displayName: 'View',
+              children: [],
+            }],
+          }, {
+            displayName: 'Text',
+            children: [{
+              displayName: 'RCText',
+              children: [{
+                displayName: '#text',
+                text: 'hi',
+              }],
+            }],
+          }],
         };
@@ -1323,13 +1109,9 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'View',
-          children: [
-            {
-              displayName: 'Foo',
-              children: [
-                {
-                  displayName: 'View',
-                  children: [],
-                },
-              ],
-            },
-          ],
+          children: [{
+            displayName: 'Foo',
+            children: [{
+              displayName: 'View',
+              children: [],
+            }],
+          }],
         };
@@ -1346,3 +1128,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates with a host child', () => {
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1353,8 +1135,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'View',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'View',
+            children: [],
+          }],
         };
@@ -1364,8 +1144,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Image',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Image',
+            children: [],
+          }],
         };
@@ -1379,3 +1157,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates from null to a host child', () => {
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1392,8 +1170,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'View',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'View',
+            children: [],
+          }],
         };
@@ -1407,3 +1183,3 @@ describe('ReactComponentTreeHook', () => {
       it('updates from a host child to null', () => {
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1414,8 +1190,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'View',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'View',
+            children: [],
+          }],
         };
@@ -1439,3 +1213,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1446,8 +1220,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'View',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'View',
+            children: [],
+          }],
         };
@@ -1457,8 +1229,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1476,3 +1246,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1483,8 +1253,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1494,8 +1262,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'View',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'View',
+            children: [],
+          }],
         };
@@ -1513,3 +1279,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1526,8 +1292,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1545,3 +1309,3 @@ describe('ReactComponentTreeHook', () => {
 
-        function Foo({children}) {
+        function Foo({ children }) {
           return children;
@@ -1552,8 +1316,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1584,8 +1346,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'View',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'View',
+            children: [],
+          }],
         };
@@ -1595,8 +1355,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Image',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Image',
+            children: [],
+          }],
         };
@@ -1625,8 +1383,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'View',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'View',
+            children: [],
+          }],
         };
@@ -1649,8 +1405,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'View',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'View',
+            children: [],
+          }],
         };
@@ -1685,8 +1439,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'View',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'View',
+            children: [],
+          }],
         };
@@ -1696,8 +1448,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1726,8 +1476,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1737,8 +1485,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'View',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'View',
+            children: [],
+          }],
         };
@@ -1773,8 +1519,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1803,8 +1547,6 @@ describe('ReactComponentTreeHook', () => {
           displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
-              children: [],
-            },
-          ],
+          children: [{
+            displayName: 'Bar',
+            children: [],
+          }],
         };
@@ -1840,53 +1582,36 @@ describe('ReactComponentTreeHook', () => {
       displayName: 'View',
-      children: [
-        {
-          displayName: 'Foo',
-          children: [
-            {
-              displayName: 'Bar',
+      children: [{
+        displayName: 'Foo',
+        children: [{
+          displayName: 'Bar',
+          ownerDisplayName: 'Foo',
+          children: [{
+            displayName: 'View',
+            ownerDisplayName: 'Bar',
+            children: [{
+              displayName: 'Text',
               ownerDisplayName: 'Foo',
-              children: [
-                {
-                  displayName: 'View',
-                  ownerDisplayName: 'Bar',
-                  children: [
-                    {
-                      displayName: 'Text',
-                      ownerDisplayName: 'Foo',
-                      children: [
-                        {
-                          displayName: 'RCText',
-                          ownerDisplayName: 'Text',
-                          children: [
-                            {
-                              displayName: '#text',
-                              text: 'Hi.',
-                            },
-                          ],
-                        },
-                      ],
-                    },
-                    {
-                      displayName: 'Text',
-                      ownerDisplayName: 'Bar',
-                      children: [
-                        {
-                          displayName: 'RCText',
-                          ownerDisplayName: 'Text',
-                          children: [
-                            {
-                              displayName: '#text',
-                              text: 'Mom',
-                            },
-                          ],
-                        },
-                      ],
-                    },
-                  ],
-                },
-              ],
-            },
-          ],
-        },
-      ],
+              children: [{
+                displayName: 'RCText',
+                ownerDisplayName: 'Text',
+                children: [{
+                  displayName: '#text',
+                  text: 'Hi.',
+                }],
+              }],
+            }, {
+              displayName: 'Text',
+              ownerDisplayName: 'Bar',
+              children: [{
+                displayName: 'RCText',
+                ownerDisplayName: 'Text',
+                children: [{
+                  displayName: '#text',
+                  text: 'Mom',
+                }],
+              }],
+            }],
+          }],
+        }],
+      }],
     };
@@ -1915,12 +1640,8 @@ describe('ReactComponentTreeHook', () => {
     ReactNative.render(<Foo />, 1);
-    ReactComponentTreeTestUtils.expectTree(
-      barInstance._debugID,
-      {
-        displayName: 'Bar',
-        parentDisplayName: 'Foo',
-        parentID: fooInstance._debugID,
-        children: [],
-      },
-      'Foo',
-    );
+    ReactComponentTreeTestUtils.expectTree(barInstance._debugID, {
+      displayName: 'Bar',
+      parentDisplayName: 'Foo',
+      parentID: fooInstance._debugID,
+      children: [],
+    }, 'Foo');
 
@@ -1928,22 +1649,14 @@ describe('ReactComponentTreeHook', () => {
     ReactNative.render(<Foo />, 1);
-    ReactComponentTreeTestUtils.expectTree(
-      barInstance._debugID,
-      {
-        displayName: 'Unknown',
-        children: [],
-        parentID: null,
-      },
-      'Foo',
-    );
+    ReactComponentTreeTestUtils.expectTree(barInstance._debugID, {
+      displayName: 'Unknown',
+      children: [],
+      parentID: null,
+    }, 'Foo');
 
     ReactNative.unmountComponentAtNode(1);
-    ReactComponentTreeTestUtils.expectTree(
-      barInstance._debugID,
-      {
-        displayName: 'Unknown',
-        children: [],
-        parentID: null,
-      },
-      'Foo',
-    );
+    ReactComponentTreeTestUtils.expectTree(barInstance._debugID, {
+      displayName: 'Unknown',
+      children: [],
+      parentID: null,
+    }, 'Foo');
   });
diff --git a/src/renderers/shared/hooks/__tests__/ReactHostOperationHistoryHook-test.js b/src/renderers/shared/hooks/__tests__/ReactHostOperationHistoryHook-test.js
index 87877916a..c3e8d1773 100644
--- a/src/renderers/shared/hooks/__tests__/ReactHostOperationHistoryHook-test.js
+++ b/src/renderers/shared/hooks/__tests__/ReactHostOperationHistoryHook-test.js
@@ -50,11 +50,9 @@ describe('ReactHostOperationHistoryHook', () => {
       var inst = ReactDOMComponentTree.getInstanceFromNode(node.firstChild);
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'mount',
-          payload: ReactDOMFeatureFlags.useCreateElement
-            ? 'DIV'
-            : '<div data-reactroot="" data-reactid="1"><p data-reactid="2">Hi.</p></div>',
-        },
-      ]);
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'mount',
+        payload: ReactDOMFeatureFlags.useCreateElement ?
+          'DIV' :
+          '<div data-reactroot="" data-reactid="1"><p data-reactid="2">Hi.</p></div>',
+      }]);
     });
@@ -71,12 +69,10 @@ describe('ReactHostOperationHistoryHook', () => {
       var inst = ReactDOMComponentTree.getInstanceFromNode(node.firstChild);
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'mount',
-          payload: ReactDOMFeatureFlags.useCreateElement
-            ? 'DIV'
-            : '<div data-reactroot="" data-reactid="1">' +
-                '<p data-reactid="2">Hi.</p></div>',
-        },
-      ]);
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'mount',
+        payload: ReactDOMFeatureFlags.useCreateElement ?
+          'DIV' :
+          '<div data-reactroot="" data-reactid="1">' +
+          '<p data-reactid="2">Hi.</p></div>',
+      }]);
     });
@@ -114,9 +110,7 @@ describe('ReactHostOperationHistoryHook', () => {
       // we record a "mount" event rather than a "replace with".
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'mount',
-          payload: 'SPAN',
-        },
-      ]);
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'mount',
+        payload: 'SPAN',
+      }]);
     });
@@ -129,11 +123,6 @@ describe('ReactHostOperationHistoryHook', () => {
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(
-        <div
-          style={{
-            color: 'red',
-            backgroundColor: 'yellow',
-          }}
-        />,
-        node,
-      );
+      ReactDOM.render(<div style={{
+        color: 'red',
+        backgroundColor: 'yellow',
+      }} />, node);
 
@@ -141,27 +130,21 @@ describe('ReactHostOperationHistoryHook', () => {
       if (ReactDOMFeatureFlags.useCreateElement) {
-        assertHistoryMatches([
-          {
-            instanceID: inst._debugID,
-            type: 'update styles',
-            payload: {
-              color: 'red',
-              backgroundColor: 'yellow',
-            },
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'mount',
-            payload: 'DIV',
+        assertHistoryMatches([{
+          instanceID: inst._debugID,
+          type: 'update styles',
+          payload: {
+            color: 'red',
+            backgroundColor: 'yellow',
           },
-        ]);
+        }, {
+          instanceID: inst._debugID,
+          type: 'mount',
+          payload: 'DIV',
+        }]);
       } else {
-        assertHistoryMatches([
-          {
-            instanceID: inst._debugID,
-            type: 'mount',
-            payload:
-              '<div style="color:red;background-color:yellow;" ' +
-                'data-reactroot="" data-reactid="1"></div>',
-          },
-        ]);
+        assertHistoryMatches([{
+          instanceID: inst._debugID,
+          type: 'mount',
+          payload: '<div style="color:red;background-color:yellow;" ' +
+          'data-reactroot="" data-reactid="1"></div>',
+        }]);
       }
@@ -175,37 +158,27 @@ describe('ReactHostOperationHistoryHook', () => {
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(<div style={{color: 'red'}} />, node);
-      ReactDOM.render(
-        <div
-          style={{
-            color: 'blue',
-            backgroundColor: 'yellow',
-          }}
-        />,
-        node,
-      );
-      ReactDOM.render(<div style={{backgroundColor: 'green'}} />, node);
+      ReactDOM.render(<div style={{ color: 'red' }} />, node);
+      ReactDOM.render(<div style={{
+        color: 'blue',
+        backgroundColor: 'yellow',
+      }} />, node);
+      ReactDOM.render(<div style={{ backgroundColor: 'green' }} />, node);
       ReactDOM.render(<div />, node);
 
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'update styles',
-          payload: {color: 'red'},
-        },
-        {
-          instanceID: inst._debugID,
-          type: 'update styles',
-          payload: {color: 'blue', backgroundColor: 'yellow'},
-        },
-        {
-          instanceID: inst._debugID,
-          type: 'update styles',
-          payload: {color: '', backgroundColor: 'green'},
-        },
-        {
-          instanceID: inst._debugID,
-          type: 'update styles',
-          payload: {backgroundColor: ''},
-        },
-      ]);
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'update styles',
+        payload: { color: 'red' },
+      }, {
+        instanceID: inst._debugID,
+        type: 'update styles',
+        payload: { color: 'blue', backgroundColor: 'yellow' },
+      }, {
+        instanceID: inst._debugID,
+        type: 'update styles',
+        payload: { color: '', backgroundColor: 'green' },
+      }, {
+        instanceID: inst._debugID,
+        type: 'update styles',
+        payload: { backgroundColor: '' },
+      }]);
     });
@@ -218,31 +191,19 @@ describe('ReactHostOperationHistoryHook', () => {
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(
-        <div
-          style={{
-            color: 'red',
-            backgroundColor: 'yellow',
-          }}
-        />,
-        node,
-      );
-      ReactDOM.render(
-        <div
-          style={{
-            color: 'red',
-            backgroundColor: 'yellow',
-          }}
-        />,
-        node,
-      );
-
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'update styles',
-          payload: {
-            color: 'red',
-            backgroundColor: 'yellow',
-          },
+      ReactDOM.render(<div style={{
+        color: 'red',
+        backgroundColor: 'yellow',
+      }} />, node);
+      ReactDOM.render(<div style={{
+        color: 'red',
+        backgroundColor: 'yellow',
+      }} />, node);
+
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'update styles',
+        payload: {
+          color: 'red',
+          backgroundColor: 'yellow',
         },
-      ]);
+      }]);
     });
@@ -260,29 +221,22 @@ describe('ReactHostOperationHistoryHook', () => {
         if (ReactDOMFeatureFlags.useCreateElement) {
-          assertHistoryMatches([
-            {
-              instanceID: inst._debugID,
-              type: 'update attribute',
-              payload: {className: 'rad'},
-            },
-            {
-              instanceID: inst._debugID,
-              type: 'update attribute',
-              payload: {tabIndex: 42},
-            },
-            {
-              instanceID: inst._debugID,
-              type: 'mount',
-              payload: 'DIV',
-            },
-          ]);
+          assertHistoryMatches([{
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: { className: 'rad' },
+          }, {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: { tabIndex: 42 },
+          }, {
+            instanceID: inst._debugID,
+            type: 'mount',
+            payload: 'DIV',
+          }]);
         } else {
-          assertHistoryMatches([
-            {
-              instanceID: inst._debugID,
-              type: 'mount',
-              payload:
-                '<div class="rad" tabindex="42" data-reactroot="" ' +
-                  'data-reactid="1"></div>',
-            },
-          ]);
+          assertHistoryMatches([{
+            instanceID: inst._debugID,
+            type: 'mount',
+            payload: '<div class="rad" tabindex="42" data-reactroot="" ' +
+            'data-reactid="1"></div>',
+          }]);
         }
@@ -300,29 +254,23 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {className: 'rad'},
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {className: 'mad'},
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {tabIndex: 42},
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'remove attribute',
-            payload: 'className',
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {tabIndex: 43},
-          },
-        ]);
+        assertHistoryMatches([{
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { className: 'rad' },
+        }, {
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { className: 'mad' },
+        }, {
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { tabIndex: 42 },
+        }, {
+          instanceID: inst._debugID,
+          type: 'remove attribute',
+          payload: 'className',
+        }, {
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { tabIndex: 43 },
+        }]);
       });
@@ -340,14 +288,11 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {disabled: true},
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'remove attribute',
-            payload: 'disabled',
-          },
-        ]);
+        assertHistoryMatches([{
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { disabled: true },
+        }, {
+          instanceID: inst._debugID,
+          type: 'remove attribute',
+          payload: 'disabled',
+        }]);
       });
@@ -364,29 +309,22 @@ describe('ReactHostOperationHistoryHook', () => {
         if (ReactDOMFeatureFlags.useCreateElement) {
-          assertHistoryMatches([
-            {
-              instanceID: inst._debugID,
-              type: 'update attribute',
-              payload: {'data-x': 'rad'},
-            },
-            {
-              instanceID: inst._debugID,
-              type: 'update attribute',
-              payload: {'data-y': 42},
-            },
-            {
-              instanceID: inst._debugID,
-              type: 'mount',
-              payload: 'DIV',
-            },
-          ]);
+          assertHistoryMatches([{
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: { 'data-x': 'rad' },
+          }, {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: { 'data-y': 42 },
+          }, {
+            instanceID: inst._debugID,
+            type: 'mount',
+            payload: 'DIV',
+          }]);
         } else {
-          assertHistoryMatches([
-            {
-              instanceID: inst._debugID,
-              type: 'mount',
-              payload:
-                '<div data-x="rad" data-y="42" data-reactroot="" ' +
-                  'data-reactid="1"></div>',
-            },
-          ]);
+          assertHistoryMatches([{
+            instanceID: inst._debugID,
+            type: 'mount',
+            payload: '<div data-x="rad" data-y="42" data-reactroot="" ' +
+            'data-reactid="1"></div>',
+          }]);
         }
@@ -404,29 +342,23 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {'data-x': 'rad'},
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {'data-x': 'mad'},
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {'data-y': 42},
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'remove attribute',
-            payload: 'data-x',
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {'data-y': 43},
-          },
-        ]);
+        assertHistoryMatches([{
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { 'data-x': 'rad' },
+        }, {
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { 'data-x': 'mad' },
+        }, {
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { 'data-y': 42 },
+        }, {
+          instanceID: inst._debugID,
+          type: 'remove attribute',
+          payload: 'data-x',
+        }, {
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { 'data-y': 43 },
+        }]);
       });
@@ -443,29 +375,22 @@ describe('ReactHostOperationHistoryHook', () => {
         if (ReactDOMFeatureFlags.useCreateElement) {
-          assertHistoryMatches([
-            {
-              instanceID: inst._debugID,
-              type: 'update attribute',
-              payload: {className: 'rad'},
-            },
-            {
-              instanceID: inst._debugID,
-              type: 'update attribute',
-              payload: {tabIndex: 42},
-            },
-            {
-              instanceID: inst._debugID,
-              type: 'mount',
-              payload: 'MY-COMPONENT',
-            },
-          ]);
+          assertHistoryMatches([{
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: { className: 'rad' },
+          }, {
+            instanceID: inst._debugID,
+            type: 'update attribute',
+            payload: { tabIndex: 42 },
+          }, {
+            instanceID: inst._debugID,
+            type: 'mount',
+            payload: 'MY-COMPONENT',
+          }]);
         } else {
-          assertHistoryMatches([
-            {
-              instanceID: inst._debugID,
-              type: 'mount',
-              payload:
-                '<my-component className="rad" tabIndex="42" ' +
-                  'data-reactroot="" data-reactid="1"></my-component>',
-            },
-          ]);
+          assertHistoryMatches([{
+            instanceID: inst._debugID,
+            type: 'mount',
+            payload: '<my-component className="rad" tabIndex="42" ' +
+            'data-reactroot="" data-reactid="1"></my-component>',
+          }]);
         }
@@ -483,29 +408,23 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {className: 'rad'},
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {className: 'mad'},
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {tabIndex: 42},
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'remove attribute',
-            payload: 'className',
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'update attribute',
-            payload: {tabIndex: 43},
-          },
-        ]);
+        assertHistoryMatches([{
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { className: 'rad' },
+        }, {
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { className: 'mad' },
+        }, {
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { tabIndex: 42 },
+        }, {
+          instanceID: inst._debugID,
+          type: 'remove attribute',
+          payload: 'className',
+        }, {
+          instanceID: inst._debugID,
+          type: 'update attribute',
+          payload: { tabIndex: 43 },
+        }]);
       });
@@ -524,9 +443,7 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([
-          {
-            instanceID: inst._debugID,
-            type: 'replace text',
-            payload: 'Bye.',
-          },
-        ]);
+        assertHistoryMatches([{
+          instanceID: inst._debugID,
+          type: 'replace text',
+          payload: 'Bye.',
+        }]);
       });
@@ -535,6 +452,3 @@ describe('ReactHostOperationHistoryHook', () => {
         var node = document.createElement('div');
-        ReactDOM.render(
-          <div dangerouslySetInnerHTML={{__html: 'Hi.'}} />,
-          node,
-        );
+        ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Hi.'}} />, node);
         var inst = ReactDOMComponentTree.getInstanceFromNode(node.firstChild);
@@ -544,9 +458,7 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([
-          {
-            instanceID: inst._debugID,
-            type: 'replace text',
-            payload: 'Bye.',
-          },
-        ]);
+        assertHistoryMatches([{
+          instanceID: inst._debugID,
+          type: 'replace text',
+          payload: 'Bye.',
+        }]);
       });
@@ -561,19 +473,15 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([
-          {
-            instanceID: inst._debugID,
-            type: 'remove child',
-            payload: {fromIndex: 0},
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'remove child',
-            payload: {fromIndex: 1},
-          },
-          {
-            instanceID: inst._debugID,
-            type: 'replace text',
-            payload: 'Bye.',
-          },
-        ]);
+        assertHistoryMatches([{
+          instanceID: inst._debugID,
+          type: 'remove child',
+          payload: {fromIndex: 0},
+        }, {
+          instanceID: inst._debugID,
+          type: 'remove child',
+          payload: {fromIndex: 1},
+        }, {
+          instanceID: inst._debugID,
+          type: 'replace text',
+          payload: 'Bye.',
+        }]);
       });
@@ -595,8 +503,4 @@ describe('ReactHostOperationHistoryHook', () => {
         ReactDOM.render(<div>{'Hi.'}{42}</div>, node);
-        var inst1 = ReactDOMComponentTree.getInstanceFromNode(
-          node.firstChild.childNodes[0],
-        );
-        var inst2 = ReactDOMComponentTree.getInstanceFromNode(
-          node.firstChild.childNodes[3],
-        );
+        var inst1 = ReactDOMComponentTree.getInstanceFromNode(node.firstChild.childNodes[0]);
+        var inst2 = ReactDOMComponentTree.getInstanceFromNode(node.firstChild.childNodes[3]);
 
@@ -605,14 +509,11 @@ describe('ReactHostOperationHistoryHook', () => {
 
-        assertHistoryMatches([
-          {
-            instanceID: inst1._debugID,
-            type: 'replace text',
-            payload: 'Bye.',
-          },
-          {
-            instanceID: inst2._debugID,
-            type: 'replace text',
-            payload: '43',
-          },
-        ]);
+        assertHistoryMatches([{
+          instanceID: inst1._debugID,
+          type: 'replace text',
+          payload: 'Bye.',
+        }, {
+          instanceID: inst2._debugID,
+          type: 'replace text',
+          payload: '43',
+        }]);
       });
@@ -648,9 +549,7 @@ describe('ReactHostOperationHistoryHook', () => {
 
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'replace with',
-          payload: 'SPAN',
-        },
-      ]);
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'replace with',
+        payload: 'SPAN',
+      }]);
     });
@@ -673,9 +572,7 @@ describe('ReactHostOperationHistoryHook', () => {
 
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'replace with',
-          payload: '#comment',
-        },
-      ]);
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'replace with',
+        payload: '#comment',
+      }]);
     });
@@ -708,11 +605,12 @@ describe('ReactHostOperationHistoryHook', () => {
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Bye.'}} />, node);
+      ReactDOM.render(
+        <div dangerouslySetInnerHTML={{__html: 'Bye.'}} />,
+        node
+      );
 
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'replace children',
-          payload: 'Bye.',
-        },
-      ]);
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'replace children',
+        payload: 'Bye.',
+      }]);
     });
@@ -721,3 +619,6 @@ describe('ReactHostOperationHistoryHook', () => {
       var node = document.createElement('div');
-      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Hi.'}} />, node);
+      ReactDOM.render(
+        <div dangerouslySetInnerHTML={{__html: 'Hi.'}} />,
+        node
+      );
       var inst = ReactDOMComponentTree.getInstanceFromNode(node.firstChild);
@@ -725,11 +626,12 @@ describe('ReactHostOperationHistoryHook', () => {
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Bye.'}} />, node);
+      ReactDOM.render(
+        <div dangerouslySetInnerHTML={{__html: 'Bye.'}} />,
+        node
+      );
 
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'replace children',
-          payload: 'Bye.',
-        },
-      ]);
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'replace children',
+        payload: 'Bye.',
+      }]);
     });
@@ -742,21 +644,20 @@ describe('ReactHostOperationHistoryHook', () => {
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Hi.'}} />, node);
+      ReactDOM.render(
+        <div dangerouslySetInnerHTML={{__html: 'Hi.'}} />,
+        node
+      );
 
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'remove child',
-          payload: {fromIndex: 0},
-        },
-        {
-          instanceID: inst._debugID,
-          type: 'remove child',
-          payload: {fromIndex: 1},
-        },
-        {
-          instanceID: inst._debugID,
-          type: 'replace children',
-          payload: 'Hi.',
-        },
-      ]);
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'remove child',
+        payload: {fromIndex: 0},
+      }, {
+        instanceID: inst._debugID,
+        type: 'remove child',
+        payload: {fromIndex: 1},
+      }, {
+        instanceID: inst._debugID,
+        type: 'replace children',
+        payload: 'Hi.',
+      }]);
     });
@@ -765,6 +666,12 @@ describe('ReactHostOperationHistoryHook', () => {
       var node = document.createElement('div');
-      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Hi.'}} />, node);
+      ReactDOM.render(
+        <div dangerouslySetInnerHTML={{__html: 'Hi.'}} />,
+        node
+      );
 
       ReactHostOperationHistoryHook._preventClearing = true;
-      ReactDOM.render(<div dangerouslySetInnerHTML={{__html: 'Hi.'}} />, node);
+      ReactDOM.render(
+        <div dangerouslySetInnerHTML={{__html: 'Hi.'}} />,
+        node
+      );
 
@@ -783,9 +690,7 @@ describe('ReactHostOperationHistoryHook', () => {
 
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'insert child',
-          payload: {toIndex: 1, content: 'P'},
-        },
-      ]);
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'insert child',
+        payload: {toIndex: 1, content: 'P'},
+      }]);
     });
@@ -802,9 +707,7 @@ describe('ReactHostOperationHistoryHook', () => {
 
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'move child',
-          payload: {fromIndex: 0, toIndex: 1},
-        },
-      ]);
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'move child',
+        payload: {fromIndex: 0, toIndex: 1},
+      }]);
     });
@@ -821,9 +724,7 @@ describe('ReactHostOperationHistoryHook', () => {
 
-      assertHistoryMatches([
-        {
-          instanceID: inst._debugID,
-          type: 'remove child',
-          payload: {fromIndex: 1},
-        },
-      ]);
+      assertHistoryMatches([{
+        instanceID: inst._debugID,
+        type: 'remove child',
+        payload: {fromIndex: 1},
+      }]);
     });
diff --git a/src/renderers/shared/shared/ReactInstanceMap.js b/src/renderers/shared/shared/ReactInstanceMap.js
index 495c82c31..24eeb2d74 100644
--- a/src/renderers/shared/shared/ReactInstanceMap.js
+++ b/src/renderers/shared/shared/ReactInstanceMap.js
@@ -22,2 +22,3 @@
 var ReactInstanceMap = {
+
   /**
@@ -42,2 +43,3 @@ var ReactInstanceMap = {
   },
+
 };
diff --git a/src/renderers/shared/shared/shouldUpdateReactComponent.js b/src/renderers/shared/shared/shouldUpdateReactComponent.js
index 097eab1c5..2c4a15542 100644
--- a/src/renderers/shared/shared/shouldUpdateReactComponent.js
+++ b/src/renderers/shared/shared/shouldUpdateReactComponent.js
@@ -34,3 +34,3 @@ function shouldUpdateReactComponent(prevElement, nextElement) {
   if (prevType === 'string' || prevType === 'number') {
-    return nextType === 'string' || nextType === 'number';
+    return (nextType === 'string' || nextType === 'number');
   } else {
diff --git a/src/renderers/shared/stack/event/EventPluginHub.js b/src/renderers/shared/stack/event/EventPluginHub.js
index 8eb3fc8f2..a72676543 100644
--- a/src/renderers/shared/stack/event/EventPluginHub.js
+++ b/src/renderers/shared/stack/event/EventPluginHub.js
@@ -63,6 +63,4 @@ function isInteractive(tag) {
   return (
-    tag === 'button' ||
-    tag === 'input' ||
-    tag === 'select' ||
-    tag === 'textarea'
+    tag === 'button' || tag === 'input' ||
+    tag === 'select' || tag === 'textarea'
   );
@@ -111,2 +109,3 @@ function shouldPreventMouseEvent(name, type, props) {
 var EventPluginHub = {
+
   /**
@@ -115,2 +114,3 @@ var EventPluginHub = {
   injection: {
+
     /**
@@ -125,2 +125,3 @@ var EventPluginHub = {
     injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName,
+
   },
@@ -138,4 +139,3 @@ var EventPluginHub = {
       'Expected %s listener to be a function, instead got type %s',
-      registrationName,
-      typeof listener,
+      registrationName, typeof listener
     );
@@ -163,9 +163,3 @@ var EventPluginHub = {
     var bankForRegistrationName = listenerBank[registrationName];
-    if (
-      shouldPreventMouseEvent(
-        registrationName,
-        inst._currentElement.type,
-        inst._currentElement.props,
-      )
-    ) {
+    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
       return null;
@@ -231,7 +225,6 @@ var EventPluginHub = {
   extractEvents: function(
-    topLevelType,
-    targetInst,
-    nativeEvent,
-    nativeEventTarget,
-  ) {
+      topLevelType,
+      targetInst,
+      nativeEvent,
+      nativeEventTarget) {
     var events;
@@ -246,3 +239,3 @@ var EventPluginHub = {
           nativeEvent,
-          nativeEventTarget,
+          nativeEventTarget
         );
@@ -282,3 +275,3 @@ var EventPluginHub = {
         processingEventQueue,
-        executeDispatchesAndReleaseSimulated,
+        executeDispatchesAndReleaseSimulated
       );
@@ -287,3 +280,3 @@ var EventPluginHub = {
         processingEventQueue,
-        executeDispatchesAndReleaseTopLevel,
+        executeDispatchesAndReleaseTopLevel
       );
@@ -293,3 +286,3 @@ var EventPluginHub = {
       'processEventQueue(): Additional events were enqueued while processing ' +
-        'an event queue. Support for this has not yet been implemented.',
+      'an event queue. Support for this has not yet been implemented.'
     );
@@ -309,2 +302,3 @@ var EventPluginHub = {
   },
+
 };
diff --git a/src/renderers/shared/stack/event/EventPluginRegistry.js b/src/renderers/shared/stack/event/EventPluginRegistry.js
index be2159edf..f44593eab 100644
--- a/src/renderers/shared/stack/event/EventPluginRegistry.js
+++ b/src/renderers/shared/stack/event/EventPluginRegistry.js
@@ -19,3 +19,7 @@ import type {
 
-import type {AnyNativeEvent, PluginName, PluginModule} from 'PluginModuleType';
+import type {
+  AnyNativeEvent,
+  PluginName,
+  PluginModule,
+} from 'PluginModuleType';
 
@@ -53,3 +57,3 @@ function recomputePluginOrdering(): void {
       'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
-        'the plugin ordering, `%s`.',
+      'the plugin ordering, `%s`.',
       pluginName,
@@ -62,3 +66,3 @@ function recomputePluginOrdering(): void {
       'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
-        'method, but `%s` does not.',
+      'method, but `%s` does not.',
       pluginName,
@@ -98,3 +102,3 @@ function publishEventForPlugin(
     'EventPluginHub: More than one plugin attempted to publish the same ' +
-      'event name, `%s`.',
+    'event name, `%s`.',
     eventName,
@@ -143,3 +147,3 @@ function publishRegistrationName(
     'EventPluginHub: More than one plugin attempted to publish the same ' +
-      'registration name, `%s`.',
+    'registration name, `%s`.',
     registrationName,
@@ -152,5 +156,5 @@ function publishRegistrationName(
     var lowerCasedName = registrationName.toLowerCase();
-    EventPluginRegistry.possibleRegistrationNames[
-      lowerCasedName
-    ] = registrationName;
+    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] =
+      registrationName;
+
 
@@ -168,2 +172,3 @@ function publishRegistrationName(
 var EventPluginRegistry = {
+
   /**
@@ -212,3 +217,3 @@ var EventPluginRegistry = {
       'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
-        'once. You are likely trying to load more than one copy of React.',
+      'once. You are likely trying to load more than one copy of React.',
     );
@@ -230,3 +235,3 @@ var EventPluginRegistry = {
   injectEventPluginsByName: function(
-    injectedNamesToPlugins: NamesToPlugins,
+    injectedNamesToPlugins: NamesToPlugins
   ): void {
@@ -238,6 +243,4 @@ var EventPluginRegistry = {
       var pluginModule = injectedNamesToPlugins[pluginName];
-      if (
-        !namesToPlugins.hasOwnProperty(pluginName) ||
-        namesToPlugins[pluginName] !== pluginModule
-      ) {
+      if (!namesToPlugins.hasOwnProperty(pluginName) ||
+          namesToPlugins[pluginName] !== pluginModule) {
         invariant(
@@ -245,3 +248,3 @@ var EventPluginRegistry = {
           'EventPluginRegistry: Cannot inject two different event plugins ' +
-            'using the same name, `%s`.',
+          'using the same name, `%s`.',
           pluginName,
@@ -269,7 +272,5 @@ var EventPluginRegistry = {
     if (dispatchConfig.registrationName) {
-      return (
-        EventPluginRegistry.registrationNameModules[
-          dispatchConfig.registrationName
-        ] || null
-      );
+      return EventPluginRegistry.registrationNameModules[
+        dispatchConfig.registrationName
+      ] || null;
     }
@@ -283,6 +284,5 @@ var EventPluginRegistry = {
         }
-        var pluginModule =
-          EventPluginRegistry.registrationNameModules[
-            phasedRegistrationNames[phase]
-          ];
+        var pluginModule = EventPluginRegistry.registrationNameModules[
+          phasedRegistrationNames[phase]
+        ];
         if (pluginModule) {
@@ -332,2 +332,3 @@ var EventPluginRegistry = {
   },
+
 };
diff --git a/src/renderers/shared/stack/event/EventPluginUtils.js b/src/renderers/shared/stack/event/EventPluginUtils.js
index cd4531e40..4bad7e316 100644
--- a/src/renderers/shared/stack/event/EventPluginUtils.js
+++ b/src/renderers/shared/stack/event/EventPluginUtils.js
@@ -34,6 +34,6 @@ var injection = {
         Injected &&
-          Injected.getNodeFromInstance &&
-          Injected.getInstanceFromNode,
+        Injected.getNodeFromInstance &&
+        Injected.getInstanceFromNode,
         'EventPluginUtils.injection.injectComponentTree(...): Injected ' +
-          'module is missing getNodeFromInstance or getInstanceFromNode.',
+        'module is missing getNodeFromInstance or getInstanceFromNode.'
       );
@@ -47,3 +47,3 @@ var injection = {
         'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' +
-          'module is missing isAncestor or getLowestCommonAncestor.',
+        'module is missing isAncestor or getLowestCommonAncestor.'
       );
@@ -54,7 +54,5 @@ var injection = {
 function isEndish(topLevelType) {
-  return (
-    topLevelType === 'topMouseUp' ||
-    topLevelType === 'topTouchEnd' ||
-    topLevelType === 'topTouchCancel'
-  );
+  return topLevelType === 'topMouseUp' ||
+         topLevelType === 'topTouchEnd' ||
+         topLevelType === 'topTouchCancel';
 }
@@ -62,8 +60,11 @@ function isEndish(topLevelType) {
 function isMoveish(topLevelType) {
-  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
+  return topLevelType === 'topMouseMove' ||
+         topLevelType === 'topTouchMove';
 }
 function isStartish(topLevelType) {
-  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
+  return topLevelType === 'topMouseDown' ||
+         topLevelType === 'topTouchStart';
 }
 
+
 var validateEventDispatches;
@@ -75,10 +76,10 @@ if (__DEV__) {
     var listenersIsArr = Array.isArray(dispatchListeners);
-    var listenersLen = listenersIsArr
-      ? dispatchListeners.length
-      : dispatchListeners ? 1 : 0;
+    var listenersLen = listenersIsArr ?
+      dispatchListeners.length :
+      dispatchListeners ? 1 : 0;
 
     var instancesIsArr = Array.isArray(dispatchInstances);
-    var instancesLen = instancesIsArr
-      ? dispatchInstances.length
-      : dispatchInstances ? 1 : 0;
+    var instancesLen = instancesIsArr ?
+      dispatchInstances.length :
+      dispatchInstances ? 1 : 0;
 
@@ -86,3 +87,3 @@ if (__DEV__) {
       instancesIsArr === listenersIsArr && instancesLen === listenersLen,
-      'EventPluginUtils: Invalid `event`.',
+      'EventPluginUtils: Invalid `event`.'
     );
@@ -102,3 +103,7 @@ function executeDispatch(event, simulated, listener, inst) {
   if (simulated) {
-    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
+    ReactErrorUtils.invokeGuardedCallbackWithCatch(
+      type,
+      listener,
+      event
+    );
   } else {
@@ -128,3 +133,3 @@ function executeDispatchesInOrder(event, simulated) {
         dispatchListeners[i],
-        dispatchInstances[i],
+        dispatchInstances[i]
       );
@@ -196,7 +201,5 @@ function executeDirectDispatch(event) {
     !Array.isArray(dispatchListener),
-    'executeDirectDispatch(...): Invalid `event`.',
+    'executeDirectDispatch(...): Invalid `event`.'
   );
-  event.currentTarget = dispatchListener
-    ? EventPluginUtils.getNodeFromInstance(dispatchInstance)
-    : null;
+  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
   var res = dispatchListener ? dispatchListener(event) : null;
diff --git a/src/renderers/shared/stack/event/EventPropagators.js b/src/renderers/shared/stack/event/EventPropagators.js
index ec0766729..da1b23841 100644
--- a/src/renderers/shared/stack/event/EventPropagators.js
+++ b/src/renderers/shared/stack/event/EventPropagators.js
@@ -20,3 +20,3 @@ var warning = require('warning');
 
-import type {PropagationPhases} from 'EventConstants';
+import type { PropagationPhases } from 'EventConstants';
 
@@ -42,3 +42,6 @@ function accumulateDirectionalDispatches(inst, phase, event) {
   if (__DEV__) {
-    warning(inst, 'Dispatching inst must not be null');
+    warning(
+      inst,
+      'Dispatching inst must not be null'
+    );
   }
@@ -46,6 +49,4 @@ function accumulateDirectionalDispatches(inst, phase, event) {
   if (listener) {
-    event._dispatchListeners = accumulateInto(
-      event._dispatchListeners,
-      listener,
-    );
+    event._dispatchListeners =
+      accumulateInto(event._dispatchListeners, listener);
     event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
@@ -66,3 +67,3 @@ function accumulateTwoPhaseDispatchesSingle(event) {
       accumulateDirectionalDispatches,
-      event,
+      event
     );
@@ -77,5 +78,4 @@ function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
     var targetInst = event._targetInst;
-    var parentInst = targetInst
-      ? EventPluginUtils.getParentInstance(targetInst)
-      : null;
+    var parentInst =
+      targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
     EventPluginUtils.traverseTwoPhase(
@@ -83,3 +83,3 @@ function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
       accumulateDirectionalDispatches,
-      event,
+      event
     );
@@ -88,2 +88,3 @@ function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
 
+
 /**
@@ -98,6 +99,4 @@ function accumulateDispatches(inst, ignoredDirection, event) {
     if (listener) {
-      event._dispatchListeners = accumulateInto(
-        event._dispatchListeners,
-        listener,
-      );
+      event._dispatchListeners =
+        accumulateInto(event._dispatchListeners, listener);
       event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
@@ -132,3 +131,3 @@ function accumulateEnterLeaveDispatches(leave, enter, from, to) {
     leave,
-    enter,
+    enter
   );
@@ -136,2 +135,3 @@ function accumulateEnterLeaveDispatches(leave, enter, from, to) {
 
+
 function accumulateDirectDispatches(events) {
@@ -140,2 +140,4 @@ function accumulateDirectDispatches(events) {
 
+
+
 /**
diff --git a/src/renderers/shared/stack/event/PluginModuleType.js b/src/renderers/shared/stack/event/PluginModuleType.js
index bfcdbb0c1..ce00d28f9 100644
--- a/src/renderers/shared/stack/event/PluginModuleType.js
+++ b/src/renderers/shared/stack/event/PluginModuleType.js
@@ -22,3 +22,7 @@ export type EventTypes = {[key: string]: DispatchConfig};
 
-export type AnyNativeEvent = Event | KeyboardEvent | MouseEvent | Touch;
+export type AnyNativeEvent =
+  Event |
+  KeyboardEvent |
+  MouseEvent |
+  Touch;
 
@@ -39,3 +43,6 @@ export type PluginModule<NativeEvent> = {
   ) => void,
-  willDeleteListener?: (inst: ReactInstance, registrationName: string) => void,
+  willDeleteListener?: (
+    inst: ReactInstance,
+    registrationName: string,
+  ) => void,
   tapMoveThreshold?: number,
diff --git a/src/renderers/shared/stack/event/SyntheticEvent.js b/src/renderers/shared/stack/event/SyntheticEvent.js
index 8325c734e..6c7d4fe16 100644
--- a/src/renderers/shared/stack/event/SyntheticEvent.js
+++ b/src/renderers/shared/stack/event/SyntheticEvent.js
@@ -68,8 +68,3 @@ var EventInterface = {
  */
-function SyntheticEvent(
-  dispatchConfig,
-  targetInst,
-  nativeEvent,
-  nativeEventTarget,
-) {
+function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
   if (__DEV__) {
@@ -105,5 +100,5 @@ function SyntheticEvent(
 
-  var defaultPrevented = nativeEvent.defaultPrevented != null
-    ? nativeEvent.defaultPrevented
-    : nativeEvent.returnValue === false;
+  var defaultPrevented = nativeEvent.defaultPrevented != null ?
+    nativeEvent.defaultPrevented :
+    nativeEvent.returnValue === false;
   if (defaultPrevented) {
@@ -118,2 +113,3 @@ function SyntheticEvent(
 Object.assign(SyntheticEvent.prototype, {
+
   preventDefault: function() {
@@ -127,4 +123,3 @@ Object.assign(SyntheticEvent.prototype, {
       event.preventDefault();
-      // eslint-disable-next-line valid-typeof
-    } else if (typeof event.returnValue !== 'unknown') {
+    } else if (typeof event.returnValue !== 'unknown') { // eslint-disable-line valid-typeof
       event.returnValue = false;
@@ -142,4 +137,3 @@ Object.assign(SyntheticEvent.prototype, {
       event.stopPropagation();
-      // eslint-disable-next-line valid-typeof
-    } else if (typeof event.cancelBubble !== 'unknown') {
+    } else if (typeof event.cancelBubble !== 'unknown') { // eslint-disable-line valid-typeof
       // The ChangeEventPlugin registers a "propertychange" event for
@@ -178,7 +172,3 @@ Object.assign(SyntheticEvent.prototype, {
       if (__DEV__) {
-        Object.defineProperty(
-          this,
-          propName,
-          getPooledWarningPropertyDefinition(propName, Interface[propName]),
-        );
+        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
       } else {
@@ -194,3 +184,3 @@ Object.assign(SyntheticEvent.prototype, {
         'nativeEvent',
-        getPooledWarningPropertyDefinition('nativeEvent', null),
+        getPooledWarningPropertyDefinition('nativeEvent', null)
       );
@@ -199,3 +189,3 @@ Object.assign(SyntheticEvent.prototype, {
         'preventDefault',
-        getPooledWarningPropertyDefinition('preventDefault', emptyFunction),
+        getPooledWarningPropertyDefinition('preventDefault', emptyFunction)
       );
@@ -204,3 +194,3 @@ Object.assign(SyntheticEvent.prototype, {
         'stopPropagation',
-        getPooledWarningPropertyDefinition('stopPropagation', emptyFunction),
+        getPooledWarningPropertyDefinition('stopPropagation', emptyFunction)
       );
@@ -208,2 +198,3 @@ Object.assign(SyntheticEvent.prototype, {
   },
+
 });
@@ -222,13 +213,11 @@ if (__DEV__) {
           set: function(target, prop, value) {
-            if (
-              prop !== 'isPersistent' &&
-              !target.constructor.Interface.hasOwnProperty(prop) &&
-              shouldBeReleasedProperties.indexOf(prop) === -1
-            ) {
+            if (prop !== 'isPersistent' &&
+                !target.constructor.Interface.hasOwnProperty(prop) &&
+                shouldBeReleasedProperties.indexOf(prop) === -1) {
               warning(
                 didWarnForAddedNewProperty || target.isPersistent(),
-                "This synthetic event is reused for performance reasons. If you're " +
-                  "seeing this, you're adding a new property in the synthetic event object. " +
-                  'The property is never released. See ' +
-                  'https://fb.me/react-event-pooling for more information.',
+                'This synthetic event is reused for performance reasons. If you\'re ' +
+                'seeing this, you\'re adding a new property in the synthetic event object. ' +
+                'The property is never released. See ' +
+                'https://fb.me/react-event-pooling for more information.'
               );
@@ -295,5 +284,3 @@ function getPooledWarningPropertyDefinition(propName, getVal) {
     var action = isFunction ? 'accessing the method' : 'accessing the property';
-    var result = isFunction
-      ? 'This is a no-op function'
-      : 'This is set to null';
+    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
     warn(action, result);
@@ -306,9 +293,9 @@ function getPooledWarningPropertyDefinition(propName, getVal) {
       warningCondition,
-      "This synthetic event is reused for performance reasons. If you're seeing this, " +
-        "you're %s `%s` on a released/nullified synthetic event. %s. " +
-        'If you must keep the original synthetic event around, use event.persist(). ' +
-        'See https://fb.me/react-event-pooling for more information.',
+      'This synthetic event is reused for performance reasons. If you\'re seeing this, ' +
+      'you\'re %s `%s` on a released/nullified synthetic event. %s. ' +
+      'If you must keep the original synthetic event around, use event.persist(). ' +
+      'See https://fb.me/react-event-pooling for more information.',
       action,
       propName,
-      result,
+      result
     );
diff --git a/src/renderers/shared/stack/event/__tests__/EventPluginHub-test.js b/src/renderers/shared/stack/event/__tests__/EventPluginHub-test.js
index 7f9598f2b..2e49bc4f4 100644
--- a/src/renderers/shared/stack/event/__tests__/EventPluginHub-test.js
+++ b/src/renderers/shared/stack/event/__tests__/EventPluginHub-test.js
@@ -30,3 +30,3 @@ describe('EventPluginHub', () => {
     }).toThrowError(
-      'Expected onClick listener to be a function, instead got type string',
+      'Expected onClick listener to be a function, instead got type string'
     );
diff --git a/src/renderers/shared/stack/event/__tests__/EventPluginRegistry-test.js b/src/renderers/shared/stack/event/__tests__/EventPluginRegistry-test.js
index 7e068e214..245e7bcc4 100644
--- a/src/renderers/shared/stack/event/__tests__/EventPluginRegistry-test.js
+++ b/src/renderers/shared/stack/event/__tests__/EventPluginRegistry-test.js
@@ -13,2 +13,3 @@
 
+
 describe('EventPluginRegistry', () => {
@@ -98,3 +99,3 @@ describe('EventPluginRegistry', () => {
       'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
-        'method, but `bad` does not.',
+      'method, but `bad` does not.'
     );
@@ -115,3 +116,3 @@ describe('EventPluginRegistry', () => {
       'EventPluginRegistry: Cannot inject event plugins that do not exist ' +
-        'in the plugin ordering, `random`.',
+      'in the plugin ordering, `random`.'
     );
@@ -128,3 +129,3 @@ describe('EventPluginRegistry', () => {
       'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
-        'once. You are likely trying to load more than one copy of React.',
+      'once. You are likely trying to load more than one copy of React.'
     );
@@ -142,3 +143,3 @@ describe('EventPluginRegistry', () => {
       'EventPluginRegistry: Cannot inject two different event plugins using ' +
-        'the same name, `same`.',
+      'the same name, `same`.'
     );
@@ -167,5 +168,3 @@ describe('EventPluginRegistry', () => {
 
-    expect(
-      Object.keys(EventPluginRegistry.registrationNameModules).length,
-    ).toBe(2);
+    expect(Object.keys(EventPluginRegistry.registrationNameModules).length).toBe(2);
     expect(EventPluginRegistry.registrationNameModules.onClick).toBe(OnePlugin);
@@ -175,11 +174,7 @@ describe('EventPluginRegistry', () => {
 
+    expect(Object.keys(EventPluginRegistry.registrationNameModules).length).toBe(4);
+    expect(EventPluginRegistry.registrationNameModules.onMagicBubble).toBe(TwoPlugin);
     expect(
-      Object.keys(EventPluginRegistry.registrationNameModules).length,
-    ).toBe(4);
-    expect(EventPluginRegistry.registrationNameModules.onMagicBubble).toBe(
-      TwoPlugin,
-    );
-    expect(EventPluginRegistry.registrationNameModules.onMagicCapture).toBe(
-      TwoPlugin,
-    );
+      EventPluginRegistry.registrationNameModules.onMagicCapture
+    ).toBe(TwoPlugin);
   });
@@ -212,3 +207,3 @@ describe('EventPluginRegistry', () => {
       'EventPluginHub: More than one plugin attempted to publish the same ' +
-        'registration name, `onPhotoCapture`.',
+      'registration name, `onPhotoCapture`.'
     );
@@ -219,5 +214,3 @@ describe('EventPluginRegistry', () => {
       eventTypes: {
-        badEvent: {
-          /* missing configuration */
-        },
+        badEvent: {/* missing configuration */},
       },
@@ -231,3 +224,3 @@ describe('EventPluginRegistry', () => {
       'EventPluginRegistry: Failed to publish event `badEvent` for plugin ' +
-        '`one`.',
+      '`one`.'
     );
@@ -262,9 +255,10 @@ describe('EventPluginRegistry', () => {
 
-    expect(EventPluginRegistry.getPluginModuleForEvent(clickEvent)).toBe(
-      OnePlugin,
-    );
-    expect(EventPluginRegistry.getPluginModuleForEvent(magicEvent)).toBe(
-      OnePlugin,
-    );
+    expect(
+      EventPluginRegistry.getPluginModuleForEvent(clickEvent)
+    ).toBe(OnePlugin);
+    expect(
+      EventPluginRegistry.getPluginModuleForEvent(magicEvent)
+    ).toBe(OnePlugin);
   });
+
 });
diff --git a/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js b/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js
index 15601903b..2f26f4f24 100644
--- a/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js
+++ b/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js
@@ -52,3 +52,3 @@ var changeResponder = function(nextResponderInst, blockHostResponder) {
       nextResponderInst,
-      blockHostResponder,
+      blockHostResponder
     );
@@ -255,2 +255,4 @@ to return true:wantsResponderID|                            |
 
+
+
 /**
@@ -319,16 +321,15 @@ function setResponderAndExtractTransfer(
   nativeEvent,
-  nativeEventTarget,
+  nativeEventTarget
 ) {
-  var shouldSetEventType = isStartish(topLevelType)
-    ? eventTypes.startShouldSetResponder
-    : isMoveish(topLevelType)
-      ? eventTypes.moveShouldSetResponder
-      : topLevelType === 'topSelectionChange'
-        ? eventTypes.selectionChangeShouldSetResponder
-        : eventTypes.scrollShouldSetResponder;
+  var shouldSetEventType =
+    isStartish(topLevelType) ? eventTypes.startShouldSetResponder :
+    isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder :
+    topLevelType === 'topSelectionChange' ?
+      eventTypes.selectionChangeShouldSetResponder :
+    eventTypes.scrollShouldSetResponder;
 
   // TODO: stop one short of the current responder.
-  var bubbleShouldSetFrom = !responderInst
-    ? targetInst
-    : EventPluginUtils.getLowestCommonAncestor(responderInst, targetInst);
+  var bubbleShouldSetFrom = !responderInst ?
+    targetInst :
+    EventPluginUtils.getLowestCommonAncestor(responderInst, targetInst);
 
@@ -343,3 +344,3 @@ function setResponderAndExtractTransfer(
     nativeEvent,
-    nativeEventTarget,
+    nativeEventTarget
   );
@@ -364,3 +365,3 @@ function setResponderAndExtractTransfer(
     nativeEvent,
-    nativeEventTarget,
+    nativeEventTarget
   );
@@ -371,2 +372,3 @@ function setResponderAndExtractTransfer(
   if (responderInst) {
+
     var terminationRequestEvent = ResponderSyntheticEvent.getPooled(
@@ -375,9 +377,7 @@ function setResponderAndExtractTransfer(
       nativeEvent,
-      nativeEventTarget,
+      nativeEventTarget
     );
-    terminationRequestEvent.touchHistory =
-      ResponderTouchHistoryStore.touchHistory;
+    terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
     EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
-    var shouldSwitch =
-      !hasDispatches(terminationRequestEvent) ||
+    var shouldSwitch = !hasDispatches(terminationRequestEvent) ||
       executeDirectDispatch(terminationRequestEvent);
@@ -392,3 +392,3 @@ function setResponderAndExtractTransfer(
         nativeEvent,
-        nativeEventTarget,
+        nativeEventTarget
       );
@@ -403,3 +403,3 @@ function setResponderAndExtractTransfer(
         nativeEvent,
-        nativeEventTarget,
+        nativeEventTarget
       );
@@ -425,4 +425,3 @@ function setResponderAndExtractTransfer(
 function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
-  return (
-    topLevelInst &&
+  return topLevelInst && (
     // responderIgnoreScroll: We are trying to migrate away from specifically
@@ -430,6 +429,8 @@ function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
     // will send topTouchCancel to handle canceling touch events instead
-    ((topLevelType === 'topScroll' && !nativeEvent.responderIgnoreScroll) ||
-      (trackedTouchCount > 0 && topLevelType === 'topSelectionChange') ||
-      isStartish(topLevelType) ||
-      isMoveish(topLevelType))
+    (topLevelType === 'topScroll' &&
+      !nativeEvent.responderIgnoreScroll) ||
+    (trackedTouchCount > 0 &&
+      topLevelType === 'topSelectionChange') ||
+    isStartish(topLevelType) ||
+    isMoveish(topLevelType)
   );
@@ -463,3 +464,5 @@ function noResponderTouches(nativeEvent) {
 
+
 var ResponderEventPlugin = {
+
   /* For unit testing only */
@@ -480,3 +483,3 @@ var ResponderEventPlugin = {
     nativeEvent,
-    nativeEventTarget,
+    nativeEventTarget
   ) {
@@ -489,3 +492,3 @@ var ResponderEventPlugin = {
         console.error(
-          'Ended a touch event which was not counted in `trackedTouchCount`.',
+          'Ended a touch event which was not counted in `trackedTouchCount`.'
         );
@@ -497,10 +500,9 @@ var ResponderEventPlugin = {
 
-    var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent)
-      ? setResponderAndExtractTransfer(
-          topLevelType,
-          targetInst,
-          nativeEvent,
-          nativeEventTarget,
-        )
-      : null;
+    var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ?
+      setResponderAndExtractTransfer(
+        topLevelType,
+        targetInst,
+        nativeEvent,
+        nativeEventTarget) :
+      null;
     // Responder may or may not have transferred on a new touch start/move.
@@ -518,15 +520,16 @@ var ResponderEventPlugin = {
     var isResponderTouchEnd = responderInst && isEndish(topLevelType);
-    var incrementalTouch = isResponderTouchStart
-      ? eventTypes.responderStart
-      : isResponderTouchMove
-        ? eventTypes.responderMove
-        : isResponderTouchEnd ? eventTypes.responderEnd : null;
+    var incrementalTouch =
+      isResponderTouchStart ? eventTypes.responderStart :
+      isResponderTouchMove ? eventTypes.responderMove :
+      isResponderTouchEnd ? eventTypes.responderEnd :
+      null;
 
     if (incrementalTouch) {
-      var gesture = ResponderSyntheticEvent.getPooled(
-        incrementalTouch,
-        responderInst,
-        nativeEvent,
-        nativeEventTarget,
-      );
+      var gesture =
+        ResponderSyntheticEvent.getPooled(
+          incrementalTouch,
+          responderInst,
+          nativeEvent,
+          nativeEventTarget
+        );
       gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;
@@ -537,3 +540,4 @@ var ResponderEventPlugin = {
     var isResponderTerminate =
-      responderInst && topLevelType === 'topTouchCancel';
+      responderInst &&
+      topLevelType === 'topTouchCancel';
     var isResponderRelease =
@@ -543,11 +547,9 @@ var ResponderEventPlugin = {
       noResponderTouches(nativeEvent);
-    var finalTouch = isResponderTerminate
-      ? eventTypes.responderTerminate
-      : isResponderRelease ? eventTypes.responderRelease : null;
+    var finalTouch =
+      isResponderTerminate ? eventTypes.responderTerminate :
+      isResponderRelease ? eventTypes.responderRelease :
+      null;
     if (finalTouch) {
       var finalEvent = ResponderSyntheticEvent.getPooled(
-        finalTouch,
-        responderInst,
-        nativeEvent,
-        nativeEventTarget,
+        finalTouch, responderInst, nativeEvent, nativeEventTarget
       );
@@ -561,8 +563,6 @@ var ResponderEventPlugin = {
       ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
-    if (
-      ResponderEventPlugin.GlobalInteractionHandler &&
-      numberActiveTouches !== previousActiveTouches
-    ) {
+    if (ResponderEventPlugin.GlobalInteractionHandler &&
+      numberActiveTouches !== previousActiveTouches) {
       ResponderEventPlugin.GlobalInteractionHandler.onChange(
-        numberActiveTouches,
+        numberActiveTouches
       );
diff --git a/src/renderers/shared/stack/event/eventPlugins/ResponderSyntheticEvent.js b/src/renderers/shared/stack/event/eventPlugins/ResponderSyntheticEvent.js
index f8e2132d5..f1cf77fea 100644
--- a/src/renderers/shared/stack/event/eventPlugins/ResponderSyntheticEvent.js
+++ b/src/renderers/shared/stack/event/eventPlugins/ResponderSyntheticEvent.js
@@ -32,15 +32,4 @@ var ResponderEventInterface = {
  */
-function ResponderSyntheticEvent(
-  dispatchConfig,
-  dispatchMarker,
-  nativeEvent,
-  nativeEventTarget,
-) {
-  return SyntheticEvent.call(
-    this,
-    dispatchConfig,
-    dispatchMarker,
-    nativeEvent,
-    nativeEventTarget,
-  );
+function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
+  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
 }
diff --git a/src/renderers/shared/stack/event/eventPlugins/ResponderTouchHistoryStore.js b/src/renderers/shared/stack/event/eventPlugins/ResponderTouchHistoryStore.js
index 5bebd29d1..94012a655 100644
--- a/src/renderers/shared/stack/event/eventPlugins/ResponderTouchHistoryStore.js
+++ b/src/renderers/shared/stack/event/eventPlugins/ResponderTouchHistoryStore.js
@@ -19,3 +19,7 @@ const warning = require('warning');
 
-const {isEndish, isMoveish, isStartish} = EventPluginUtils;
+const {
+  isEndish,
+  isMoveish,
+  isStartish,
+} = EventPluginUtils;
 
@@ -106,5 +110,5 @@ function getTouchIdentifier({identifier}: Touch): number {
     'Touch identifier %s is greater than maximum supported %s which causes ' +
-      'performance issues backfilling array locations for all of the indices.',
+    'performance issues backfilling array locations for all of the indices.',
     identifier,
-    MAX_TOUCH_BANK,
+    MAX_TOUCH_BANK
   );
@@ -137,6 +141,7 @@ function recordTouchMove(touch: Touch): void {
     console.error(
-      'Cannot record touch move without a touch start.\n' + 'Touch Move: %s\n',
+      'Cannot record touch move without a touch start.\n' +
+      'Touch Move: %s\n',
       'Touch Bank: %s',
       printTouch(touch),
-      printTouchBank(),
+      printTouchBank()
     );
@@ -158,6 +163,7 @@ function recordTouchEnd(touch: Touch): void {
     console.error(
-      'Cannot record touch end without a touch start.\n' + 'Touch End: %s\n',
+      'Cannot record touch end without a touch start.\n' +
+      'Touch End: %s\n',
       'Touch Bank: %s',
       printTouch(touch),
-      printTouchBank(),
+      printTouchBank()
     );
@@ -208,4 +214,5 @@ const ResponderTouchHistoryStore = {
           warning(
-            activeRecord != null && activeRecord.touchActive,
-            'Cannot find single active touch.',
+            activeRecord != null &&
+            activeRecord.touchActive,
+            'Cannot find single active touch.'
           );
@@ -219,2 +226,3 @@ const ResponderTouchHistoryStore = {
 
+
 module.exports = ResponderTouchHistoryStore;
diff --git a/src/renderers/shared/stack/event/eventPlugins/TouchHistoryMath.js b/src/renderers/shared/stack/event/eventPlugins/TouchHistoryMath.js
index a841e00af..a2a725bd2 100644
--- a/src/renderers/shared/stack/event/eventPlugins/TouchHistoryMath.js
+++ b/src/renderers/shared/stack/event/eventPlugins/TouchHistoryMath.js
@@ -23,8 +23,3 @@ var TouchHistoryMath = {
    */
-  centroidDimension: function(
-    touchHistory,
-    touchesChangedAfter,
-    isXAxis,
-    ofCurrent,
-  ) {
+  centroidDimension: function(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
     var touchBank = touchHistory.touchBank;
@@ -33,18 +28,11 @@ var TouchHistoryMath = {
 
-    var oneTouchData = touchHistory.numberActiveTouches === 1
-      ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]
-      : null;
+    var oneTouchData = touchHistory.numberActiveTouches === 1 ?
+      touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;
 
     if (oneTouchData !== null) {
-      if (
-        oneTouchData.touchActive &&
-        oneTouchData.currentTimeStamp > touchesChangedAfter
-      ) {
-        total += ofCurrent && isXAxis
-          ? oneTouchData.currentPageX
-          : ofCurrent && !isXAxis
-            ? oneTouchData.currentPageY
-            : !ofCurrent && isXAxis
-              ? oneTouchData.previousPageX
-              : oneTouchData.previousPageY;
+      if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
+        total += ofCurrent && isXAxis ? oneTouchData.currentPageX :
+          ofCurrent && !isXAxis ? oneTouchData.currentPageY :
+          !ofCurrent && isXAxis ? oneTouchData.previousPageX :
+          oneTouchData.previousPageY;
         count = 1;
@@ -54,9 +42,7 @@ var TouchHistoryMath = {
         var touchTrack = touchBank[i];
-        if (
-          touchTrack !== null &&
-          touchTrack !== undefined &&
-          touchTrack.touchActive &&
-          touchTrack.currentTimeStamp >= touchesChangedAfter
-        ) {
-          var toAdd; // Yuck, program temporarily in invalid state.
+        if (touchTrack !== null &&
+            touchTrack !== undefined &&
+            touchTrack.touchActive &&
+            touchTrack.currentTimeStamp >= touchesChangedAfter) {
+          var toAdd;  // Yuck, program temporarily in invalid state.
           if (ofCurrent && isXAxis) {
@@ -78,6 +64,3 @@ var TouchHistoryMath = {
 
-  currentCentroidXOfTouchesChangedAfter: function(
-    touchHistory,
-    touchesChangedAfter,
-  ) {
+  currentCentroidXOfTouchesChangedAfter: function(touchHistory, touchesChangedAfter) {
     return TouchHistoryMath.centroidDimension(
@@ -85,4 +68,4 @@ var TouchHistoryMath = {
       touchesChangedAfter,
-      true, // isXAxis
-      true, // ofCurrent
+      true,  // isXAxis
+      true   // ofCurrent
     );
@@ -90,6 +73,3 @@ var TouchHistoryMath = {
 
-  currentCentroidYOfTouchesChangedAfter: function(
-    touchHistory,
-    touchesChangedAfter,
-  ) {
+  currentCentroidYOfTouchesChangedAfter: function(touchHistory, touchesChangedAfter) {
     return TouchHistoryMath.centroidDimension(
@@ -97,4 +77,4 @@ var TouchHistoryMath = {
       touchesChangedAfter,
-      false, // isXAxis
-      true, // ofCurrent
+      false,  // isXAxis
+      true    // ofCurrent
     );
@@ -102,6 +82,3 @@ var TouchHistoryMath = {
 
-  previousCentroidXOfTouchesChangedAfter: function(
-    touchHistory,
-    touchesChangedAfter,
-  ) {
+  previousCentroidXOfTouchesChangedAfter: function(touchHistory, touchesChangedAfter) {
     return TouchHistoryMath.centroidDimension(
@@ -109,4 +86,4 @@ var TouchHistoryMath = {
       touchesChangedAfter,
-      true, // isXAxis
-      false, // ofCurrent
+      true,  // isXAxis
+      false  // ofCurrent
     );
@@ -114,6 +91,3 @@ var TouchHistoryMath = {
 
-  previousCentroidYOfTouchesChangedAfter: function(
-    touchHistory,
-    touchesChangedAfter,
-  ) {
+  previousCentroidYOfTouchesChangedAfter: function(touchHistory, touchesChangedAfter) {
     return TouchHistoryMath.centroidDimension(
@@ -121,4 +95,4 @@ var TouchHistoryMath = {
       touchesChangedAfter,
-      false, // isXAxis
-      false, // ofCurrent
+      false,  // isXAxis
+      false   // ofCurrent
     );
@@ -129,5 +103,5 @@ var TouchHistoryMath = {
       touchHistory,
-      0, // touchesChangedAfter
-      true, // isXAxis
-      true, // ofCurrent
+      0,     // touchesChangedAfter
+      true,  // isXAxis
+      true   // ofCurrent
     );
@@ -138,5 +112,5 @@ var TouchHistoryMath = {
       touchHistory,
-      0, // touchesChangedAfter
-      false, // isXAxis
-      true, // ofCurrent
+      0,     // touchesChangedAfter
+      false,  // isXAxis
+      true    // ofCurrent
     );
diff --git a/src/renderers/shared/stack/event/eventPlugins/__tests__/ResponderEventPlugin-test.js b/src/renderers/shared/stack/event/eventPlugins/__tests__/ResponderEventPlugin-test.js
index e6689decd..174cf9bf0 100644
--- a/src/renderers/shared/stack/event/eventPlugins/__tests__/ResponderEventPlugin-test.js
+++ b/src/renderers/shared/stack/event/eventPlugins/__tests__/ResponderEventPlugin-test.js
@@ -64,3 +64,3 @@ var _touchConfig = function(
   changedIndices,
-  eventTarget,
+  eventTarget
 ) {
@@ -68,11 +68,8 @@ var _touchConfig = function(
   var changedTouchObjects = subsequence(allTouchObjects, changedIndices);
-  var activeTouchObjects = topType === 'topTouchStart'
-    ? allTouchObjects
-    : topType === 'topTouchMove'
-      ? allTouchObjects
-      : topType === 'topTouchEnd'
-        ? antiSubsequence(allTouchObjects, changedIndices)
-        : topType === 'topTouchCancel'
-          ? antiSubsequence(allTouchObjects, changedIndices)
-          : null;
+  var activeTouchObjects =
+    topType === 'topTouchStart' ? allTouchObjects :
+    topType === 'topTouchMove' ? allTouchObjects :
+    topType === 'topTouchEnd' ? antiSubsequence(allTouchObjects, changedIndices) :
+    topType === 'topTouchCancel' ? antiSubsequence(allTouchObjects, changedIndices) :
+    null;
 
@@ -82,3 +79,3 @@ var _touchConfig = function(
       activeTouchObjects,
-      changedTouchObjects,
+      changedTouchObjects
     ),
@@ -113,3 +110,3 @@ var startConfig = function(nodeHandle, allTouchHandles, changedIndices) {
     changedIndices,
-    nodeHandle,
+    nodeHandle
   );
@@ -126,3 +123,3 @@ var moveConfig = function(nodeHandle, allTouchHandles, changedIndices) {
     changedIndices,
-    nodeHandle,
+    nodeHandle
   );
@@ -139,3 +136,3 @@ var endConfig = function(nodeHandle, allTouchHandles, changedIndices) {
     changedIndices,
-    nodeHandle,
+    nodeHandle
   );
@@ -174,5 +171,5 @@ var oneEventLoopTestConfig = function(readableIDToID) {
     // Negotiation
-    scrollShouldSetResponder: {bubbled: {}, captured: {}},
-    startShouldSetResponder: {bubbled: {}, captured: {}},
-    moveShouldSetResponder: {bubbled: {}, captured: {}},
+    scrollShouldSetResponder: {bubbled:  {}, captured: {}},
+    startShouldSetResponder: {bubbled:  {}, captured: {}},
+    moveShouldSetResponder: {bubbled:  {}, captured: {}},
     responderTerminationRequest: {},
@@ -180,9 +177,9 @@ var oneEventLoopTestConfig = function(readableIDToID) {
     // Non-negotiation
-    responderReject: {}, // These do not bubble capture.
-    responderGrant: {},
-    responderStart: {},
-    responderMove: {},
+    responderReject:    {}, // These do not bubble capture.
+    responderGrant:     {},
+    responderStart:     {},
+    responderMove:      {},
     responderTerminate: {},
-    responderEnd: {},
-    responderRelease: {},
+    responderEnd:       {},
+    responderRelease:   {},
   };
@@ -192,18 +189,9 @@ var oneEventLoopTestConfig = function(readableIDToID) {
         // Two phase
-        ret[eventName].bubbled[readableNodeName] = {
-          order: NA,
-          assertEvent: null,
-          returnVal: undefined,
-        };
-        ret[eventName].captured[readableNodeName] = {
-          order: NA,
-          assertEvent: null,
-          returnVal: undefined,
-        };
+        ret[eventName].bubbled[readableNodeName] =
+          {order: NA, assertEvent: null, returnVal: undefined};
+        ret[eventName].captured[readableNodeName] =
+          {order: NA, assertEvent: null, returnVal: undefined};
       } else {
-        ret[eventName][readableNodeName] = {
-          order: NA,
-          assertEvent: null,
-          returnVal: undefined,
-        };
+        ret[eventName][readableNodeName] =
+          {order: NA, assertEvent: null, returnVal: undefined};
       }
@@ -223,9 +211,5 @@ var registerTestHandlers = function(eventTestConfig, readableIDToID) {
     expect('').toBe(
-      'Event type: ' +
-        registrationName +
-        '\nShould never occur on:' +
-        readableID +
-        '\nFor event test config:\n' +
-        JSON.stringify(eventTestConfig) +
-        '\n',
+      'Event type: ' + registrationName +
+      '\nShould never occur on:' + readableID +
+      '\nFor event test config:\n' + JSON.stringify(eventTestConfig) + '\n'
     );
@@ -237,15 +221,16 @@ var registerTestHandlers = function(eventTestConfig, readableIDToID) {
       var id = readableIDToID[readableID];
-      var handler = nodeConfig.order === NA
-        ? neverFire.bind(null, readableID, registrationName)
-        : // We partially apply readableID and nodeConfig, as they change in the
-          // parent closure across iterations.
-          function(rID, config, e) {
-            expect(
-              rID + '->' + registrationName + ' index:' + runs.dispatchCount++,
-            ).toBe(rID + '->' + registrationName + ' index:' + config.order);
-            if (config.assertEvent) {
-              config.assertEvent(e);
-            }
-            return config.returnVal;
-          }.bind(null, readableID, nodeConfig);
+      var handler = nodeConfig.order === NA ? neverFire.bind(null, readableID, registrationName) :
+        // We partially apply readableID and nodeConfig, as they change in the
+        // parent closure across iterations.
+        function(rID, config, e) {
+          expect(
+            rID + '->' + registrationName + ' index:' + runs.dispatchCount++
+          ).toBe(
+            rID + '->' + registrationName + ' index:' + config.order
+          );
+          if (config.assertEvent) {
+            config.assertEvent(e);
+          }
+          return config.returnVal;
+        }.bind(null, readableID, nodeConfig);
       EventPluginHub.putListener(idToInstance[id], registrationName, handler);
@@ -258,10 +243,8 @@ var registerTestHandlers = function(eventTestConfig, readableIDToID) {
       registerOneEventType(
-        ResponderEventPlugin.eventTypes[eventName].phasedRegistrationNames
-          .bubbled,
-        oneEventTypeTestConfig.bubbled,
+        ResponderEventPlugin.eventTypes[eventName].phasedRegistrationNames.bubbled,
+        oneEventTypeTestConfig.bubbled
       );
       registerOneEventType(
-        ResponderEventPlugin.eventTypes[eventName].phasedRegistrationNames
-          .captured,
-        oneEventTypeTestConfig.captured,
+        ResponderEventPlugin.eventTypes[eventName].phasedRegistrationNames.captured,
+        oneEventTypeTestConfig.captured
       );
@@ -270,3 +253,3 @@ var registerTestHandlers = function(eventTestConfig, readableIDToID) {
         ResponderEventPlugin.eventTypes[eventName].registrationName,
-        oneEventTypeTestConfig,
+        oneEventTypeTestConfig
       );
@@ -277,2 +260,5 @@ var registerTestHandlers = function(eventTestConfig, readableIDToID) {
 
+
+
+
 var run = function(config, hierarchyConfig, nativeEventConfig) {
@@ -303,3 +289,3 @@ var run = function(config, hierarchyConfig, nativeEventConfig) {
     nativeEventConfig.nativeEvent,
-    nativeEventConfig.target,
+    nativeEventConfig.target
   );
@@ -313,4 +299,6 @@ var run = function(config, hierarchyConfig, nativeEventConfig) {
   // Ensure that every event that declared an `order`, was actually dispatched.
-  expect('number of events dispatched:' + runData.dispatchCount).toBe(
-    'number of events dispatched:' + (max + 1),
+  expect(
+    'number of events dispatched:' + runData.dispatchCount
+  ).toBe(
+    'number of events dispatched:' + (max + 1)
   ); // +1 for extra ++
@@ -341,2 +329,3 @@ var siblings = {
 describe('ResponderEventPlugin', () => {
+
   // This test is written against React IDs such as 'root.a.b[10]' but we
@@ -399,6 +388,6 @@ describe('ResponderEventPlugin', () => {
     var traverse = traverseUp ? getParentID : getNextDescendantID;
-    for (var id = start /* until break */; ; id = traverse(id, stop)) {
+    for (var id = start; /* until break */; id = traverse(id, stop)) {
       var ret;
       if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
-        ret = cb(id, traverseUp ? 'bubbled' : 'captured', arg);
+        ret = cb(id, traverseUp ? 'bubbled': 'captured', arg);
       }
@@ -448,5 +437,8 @@ describe('ResponderEventPlugin', () => {
       traverseTwoPhase: function(target, fn, arg) {
-        traverseTwoPhase(target._rootNodeID, function(id, phase) {
-          fn(idToInstance[id], phase, arg);
-        });
+        traverseTwoPhase(
+          target._rootNodeID,
+          function(id, phase) {
+            fn(idToInstance[id], phase, arg);
+          }
+        );
       },
@@ -457,23 +449,8 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.child = {
-      order: 2,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: false};
-    config.startShouldSetResponder.bubbled.parent = {
-      order: 4,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.bubbled.grandParent = {
-      order: 5,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.bubbled.parent = {order: 4, returnVal: false};
+    config.startShouldSetResponder.bubbled.grandParent = {order: 5, returnVal: false};
     run(config, three, startConfig(three.child, [three.child], [0]));
@@ -487,2 +464,3 @@ describe('ResponderEventPlugin', () => {
 
+
   /**
@@ -492,8 +470,6 @@ describe('ResponderEventPlugin', () => {
 
+
   it('should grant responder grandParent while capturing', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: true,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: true};
     config.responderGrant.grandParent = {order: 1};
@@ -512,10 +488,4 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: true,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: true};
     config.responderGrant.parent = {order: 2};
@@ -534,10 +504,4 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
     config.startShouldSetResponder.captured.child = {order: 2, returnVal: true};
@@ -557,14 +521,5 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.child = {
-      order: 2,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: true};
@@ -584,14 +539,5 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.child = {
-      order: 2,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: false};
@@ -612,23 +558,8 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.child = {
-      order: 2,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: false};
-    config.startShouldSetResponder.bubbled.parent = {
-      order: 4,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.bubbled.grandParent = {
-      order: 5,
-      returnVal: true,
-    };
+    config.startShouldSetResponder.bubbled.parent = {order: 4, returnVal: false};
+    config.startShouldSetResponder.bubbled.grandParent = {order: 5, returnVal: true};
     config.responderGrant.grandParent = {order: 6};
@@ -645,2 +576,4 @@ describe('ResponderEventPlugin', () => {
 
+
+
   /**
@@ -662,6 +595,3 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: true,
-    };
+    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: true};
     config.responderGrant.grandParent = {order: 1};
@@ -690,6 +620,3 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
+    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
     config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: true};
@@ -719,10 +646,4 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.moveShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
+    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: false};
     config.moveShouldSetResponder.captured.child = {order: 2, returnVal: true};
@@ -752,10 +673,4 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.moveShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
+    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: false};
     config.moveShouldSetResponder.captured.child = {order: 2, returnVal: false};
@@ -786,10 +701,4 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.moveShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
+    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: false};
     config.moveShouldSetResponder.captured.child = {order: 2, returnVal: false};
@@ -821,10 +730,4 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.moveShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
+    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: false};
     config.moveShouldSetResponder.captured.child = {order: 2, returnVal: false};
@@ -832,6 +735,3 @@ describe('ResponderEventPlugin', () => {
     config.moveShouldSetResponder.bubbled.parent = {order: 4, returnVal: false};
-    config.moveShouldSetResponder.bubbled.grandParent = {
-      order: 5,
-      returnVal: true,
-    };
+    config.moveShouldSetResponder.bubbled.grandParent = {order: 5, returnVal: true};
     config.responderGrant.grandParent = {order: 6};
@@ -848,2 +748,3 @@ describe('ResponderEventPlugin', () => {
 
+
   /**
@@ -855,10 +756,4 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: true,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: true};
     config.responderGrant.parent = {order: 2};
@@ -871,11 +766,5 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-
-    config.startShouldSetResponder.bubbled.grandParent = {
-      order: 1,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+
+    config.startShouldSetResponder.bubbled.grandParent = {order: 1, returnVal: false};
     config.responderStart.parent = {order: 2};
@@ -893,10 +782,4 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: true,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: true};
     config.responderGrant.parent = {order: 2};
@@ -909,6 +792,3 @@ describe('ResponderEventPlugin', () => {
     // Parent is responder, and responder is transferred by a second touch start
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: true,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: true};
     config.responderGrant.grandParent = {order: 1};
@@ -917,7 +797,3 @@ describe('ResponderEventPlugin', () => {
     config.responderStart.grandParent = {order: 4};
-    run(
-      config,
-      three,
-      startConfig(three.child, [three.child, three.child], [1]),
-    );
+    run(config, three, startConfig(three.child, [three.child, three.child], [1]));
     expect(ResponderEventPlugin._getResponderID()).toBe(three.grandParent);
@@ -926,3 +802,3 @@ describe('ResponderEventPlugin', () => {
     config.responderEnd.grandParent = {order: 0};
-    // one remains\ /one ended \
+                                      // one remains\ /one ended \
     run(config, three, endConfig(three.child, [three.child, three.child], [1]));
@@ -944,18 +820,6 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.bubbled.parent = {
-      order: 2,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.bubbled.grandParent = {
-      order: 3,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.bubbled.parent = {order: 2, returnVal: false};
+    config.startShouldSetResponder.bubbled.grandParent = {order: 3, returnVal: false};
 
@@ -970,14 +834,5 @@ describe('ResponderEventPlugin', () => {
     // (Even if this is the second active touch).
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.child = {
-      order: 2,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: true};
@@ -986,9 +841,6 @@ describe('ResponderEventPlugin', () => {
     //                                     /  Two active touches  \  /one of them new\
-    run(
-      config,
-      three,
-      startConfig(three.child, [three.parent, three.child], [1]),
-    );
+    run(config, three, startConfig(three.child, [three.parent, three.child], [1]));
     expect(ResponderEventPlugin._getResponderID()).toBe(three.child);
 
+
     // Now we remove the original first touch, keeping the second touch that
@@ -999,7 +851,3 @@ describe('ResponderEventPlugin', () => {
     //                                      / one ended\  /one remains \
-    run(
-      config,
-      three,
-      endConfig(three.child, [three.parent, three.child], [0]),
-    );
+    run(config, three, endConfig(three.child, [three.parent, three.child], [0]));
     expect(ResponderEventPlugin._getResponderID()).toBe(three.child);
@@ -1011,18 +859,6 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.bubbled.parent = {
-      order: 2,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.bubbled.grandParent = {
-      order: 3,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.bubbled.parent = {order: 2, returnVal: false};
+    config.startShouldSetResponder.bubbled.grandParent = {order: 3, returnVal: false};
     // Interesting: child still gets moves even though touch target is parent!
@@ -1031,9 +867,6 @@ describe('ResponderEventPlugin', () => {
     //                                           /  Two active touches  \  /one of them new\
-    run(
-      config,
-      three,
-      startConfig(three.parent, [three.child, three.parent], [1]),
-    );
+    run(config, three, startConfig(three.parent, [three.child, three.parent], [1]));
     expect(ResponderEventPlugin._getResponderID()).toBe(three.child);
 
+
     // Now, move that new touch that had no effect, and did not start within
@@ -1041,15 +874,6 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.moveShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
+    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: false};
     config.moveShouldSetResponder.bubbled.parent = {order: 2, returnVal: false};
-    config.moveShouldSetResponder.bubbled.grandParent = {
-      order: 3,
-      returnVal: false,
-    };
+    config.moveShouldSetResponder.bubbled.grandParent = {order: 3, returnVal: false};
     // Interesting: child still gets moves even though touch target is parent!
@@ -1058,9 +882,6 @@ describe('ResponderEventPlugin', () => {
     //                                     /  Two active touches  \  /one of them moved\
-    run(
-      config,
-      three,
-      moveConfig(three.parent, [three.child, three.parent], [1]),
-    );
+    run(config, three, moveConfig(three.parent, [three.child, three.parent], [1]));
     expect(ResponderEventPlugin._getResponderID()).toBe(three.child);
 
+
     config = oneEventLoopTestConfig(three);
@@ -1069,7 +890,3 @@ describe('ResponderEventPlugin', () => {
     //                                        /child end \ /parent remain\
-    run(
-      config,
-      three,
-      endConfig(three.child, [three.child, three.parent], [0]),
-    );
+    run(config, three, endConfig(three.child, [three.child, three.parent], [0]));
     expect(ResponderEventPlugin._getResponderID()).toBe(null);
@@ -1077,2 +894,3 @@ describe('ResponderEventPlugin', () => {
 
+
   /**
@@ -1084,14 +902,5 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(siblings);
-    config.startShouldSetResponder.captured.parent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.childOne = {
-      order: 1,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.bubbled.childOne = {
-      order: 2,
-      returnVal: true,
-    };
+    config.startShouldSetResponder.captured.parent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.childOne = {order: 1, returnVal: false};
+    config.startShouldSetResponder.bubbled.childOne = {order: 2, returnVal: true};
     config.responderGrant.childOne = {order: 3};
@@ -1099,7 +908,3 @@ describe('ResponderEventPlugin', () => {
 
-    run(
-      config,
-      siblings,
-      startConfig(siblings.childOne, [siblings.childOne], [0]),
-    );
+    run(config, siblings, startConfig(siblings.childOne, [siblings.childOne], [0]));
     expect(ResponderEventPlugin._getResponderID()).toBe(siblings.childOne);
@@ -1110,17 +915,8 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(siblings);
-    config.startShouldSetResponder.captured.parent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.bubbled.parent = {
-      order: 1,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.parent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.bubbled.parent = {order: 1, returnVal: false};
     config.responderStart.childOne = {order: 2};
 
-    var touchConfig = startConfig(
-      siblings.childTwo,
-      [siblings.childOne, siblings.childTwo],
-      [1],
-    );
+    var touchConfig =
+      startConfig(siblings.childTwo, [siblings.childOne, siblings.childTwo], [1]);
     run(config, siblings, touchConfig);
@@ -1128,19 +924,9 @@ describe('ResponderEventPlugin', () => {
 
+
     // move childOne
     config = oneEventLoopTestConfig(siblings);
-    config.moveShouldSetResponder.captured.parent = {
-      order: 0,
-      returnVal: false,
-    };
+    config.moveShouldSetResponder.captured.parent = {order: 0, returnVal: false};
     config.moveShouldSetResponder.bubbled.parent = {order: 1, returnVal: false};
     config.responderMove.childOne = {order: 2};
-    run(
-      config,
-      siblings,
-      moveConfig(
-        siblings.childOne,
-        [siblings.childOne, siblings.childTwo],
-        [0],
-      ),
-    );
+    run(config, siblings, moveConfig(siblings.childOne, [siblings.childOne, siblings.childTwo], [0]));
     expect(ResponderEventPlugin._getResponderID()).toBe(siblings.childOne);
@@ -1149,20 +935,11 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(siblings);
-    config.moveShouldSetResponder.captured.parent = {
-      order: 0,
-      returnVal: false,
-    };
+    config.moveShouldSetResponder.captured.parent = {order: 0, returnVal: false};
     config.moveShouldSetResponder.bubbled.parent = {order: 1, returnVal: false};
     config.responderMove.childOne = {order: 2};
-    run(
-      config,
-      siblings,
-      moveConfig(
-        siblings.childTwo,
-        [siblings.childOne, siblings.childTwo],
-        [1],
-      ),
-    );
+    run(config, siblings, moveConfig(siblings.childTwo, [siblings.childOne, siblings.childTwo], [1]));
     expect(ResponderEventPlugin._getResponderID()).toBe(siblings.childOne);
+
   });
 
+
   it('should notify of being rejected. responderStart/Move happens on current responder', () => {
@@ -1170,14 +947,5 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.child = {
-      order: 2,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: true};
@@ -1191,10 +959,4 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.moveShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.moveShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
+    config.moveShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.moveShouldSetResponder.captured.parent = {order: 1, returnVal: false};
     config.moveShouldSetResponder.bubbled.parent = {order: 2, returnVal: true};
@@ -1206,3 +968,4 @@ describe('ResponderEventPlugin', () => {
 
-    var touchConfig = moveConfig(three.child, [three.child], [0]);
+    var touchConfig =
+      moveConfig(three.child, [three.child], [0]);
     run(config, three, touchConfig);
@@ -1211,10 +974,4 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
     config.startShouldSetResponder.bubbled.parent = {order: 2, returnVal: true};
@@ -1226,7 +983,10 @@ describe('ResponderEventPlugin', () => {
 
-    touchConfig = startConfig(three.child, [three.child, three.child], [1]);
+    touchConfig =
+      startConfig(three.child, [three.child, three.child], [1]);
     run(config, three, touchConfig);
     expect(ResponderEventPlugin._getResponderID()).toBe(three.child);
+
   });
 
+
   it('should negotiate scroll', () => {
@@ -1234,14 +994,5 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.child = {
-      order: 2,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: true};
@@ -1257,14 +1008,5 @@ describe('ResponderEventPlugin', () => {
     config = oneEventLoopTestConfig(three);
-    config.scrollShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.scrollShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
-    config.scrollShouldSetResponder.bubbled.parent = {
-      order: 2,
-      returnVal: true,
-    };
+    config.scrollShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.scrollShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.scrollShouldSetResponder.bubbled.parent = {order: 2, returnVal: true};
     config.responderGrant.parent = {order: 3};
@@ -1280,16 +1022,8 @@ describe('ResponderEventPlugin', () => {
 
+
     // Now lets let the scroll take control this time.
     config = oneEventLoopTestConfig(three);
-    config.scrollShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.scrollShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
-    config.scrollShouldSetResponder.bubbled.parent = {
-      order: 2,
-      returnVal: true,
-    };
+    config.scrollShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.scrollShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.scrollShouldSetResponder.bubbled.parent = {order: 2, returnVal: true};
     config.responderGrant.parent = {order: 3};
@@ -1304,2 +1038,4 @@ describe('ResponderEventPlugin', () => {
     expect(ResponderEventPlugin._getResponderID()).toBe(three.parent);
+
+
   });
@@ -1309,14 +1045,5 @@ describe('ResponderEventPlugin', () => {
     var config = oneEventLoopTestConfig(three);
-    config.startShouldSetResponder.captured.grandParent = {
-      order: 0,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.parent = {
-      order: 1,
-      returnVal: false,
-    };
-    config.startShouldSetResponder.captured.child = {
-      order: 2,
-      returnVal: false,
-    };
+    config.startShouldSetResponder.captured.grandParent = {order: 0, returnVal: false};
+    config.startShouldSetResponder.captured.parent = {order: 1, returnVal: false};
+    config.startShouldSetResponder.captured.child = {order: 2, returnVal: false};
     config.startShouldSetResponder.bubbled.child = {order: 3, returnVal: true};
@@ -1336,3 +1063,3 @@ describe('ResponderEventPlugin', () => {
       [three.child],
-      [0],
+      [0]
     );
diff --git a/src/renderers/shared/stack/reconciler/ReactChildReconciler.js b/src/renderers/shared/stack/reconciler/ReactChildReconciler.js
index 1a1aa9a61..d487e7099 100644
--- a/src/renderers/shared/stack/reconciler/ReactChildReconciler.js
+++ b/src/renderers/shared/stack/reconciler/ReactChildReconciler.js
@@ -38,3 +38,3 @@ function instantiateChild(childInstances, child, name, selfDebugID) {
   // We found a component instance.
-  var keyUnique = childInstances[name] === undefined;
+  var keyUnique = (childInstances[name] === undefined);
   if (__DEV__) {
@@ -47,6 +47,6 @@ function instantiateChild(childInstances, child, name, selfDebugID) {
         'flattenChildren(...): Encountered two children with the same key, ' +
-          '`%s`. Child keys must be unique; when two children share a key, only ' +
-          'the first child will be used.%s',
+        '`%s`. Child keys must be unique; when two children share a key, only ' +
+        'the first child will be used.%s',
         KeyEscapeUtils.unescape(name),
-        ReactComponentTreeHook.getStackAddendumByID(selfDebugID),
+        ReactComponentTreeHook.getStackAddendumByID(selfDebugID)
       );
@@ -77,3 +77,3 @@ var ReactChildReconciler = {
     context,
-    selfDebugID, // 0 in production and for roots
+    selfDebugID // 0 in production and for roots
   ) {
@@ -87,5 +87,9 @@ var ReactChildReconciler = {
         nestedChildNodes,
-        (childInsts, child, name) =>
-          instantiateChild(childInsts, child, name, selfDebugID),
-        childInstances,
+        (childInsts, child, name) => instantiateChild(
+          childInsts,
+          child,
+          name,
+          selfDebugID
+        ),
+        childInstances
       );
@@ -116,3 +120,3 @@ var ReactChildReconciler = {
     context,
-    selfDebugID, // 0 in production and for roots
+    selfDebugID // 0 in production and for roots
   ) {
@@ -135,11 +139,6 @@ var ReactChildReconciler = {
       var nextElement = nextChildren[name];
-      if (
-        prevChild != null &&
-        shouldUpdateReactComponent(prevElement, nextElement)
-      ) {
+      if (prevChild != null &&
+          shouldUpdateReactComponent(prevElement, nextElement)) {
         ReactReconciler.receiveComponent(
-          prevChild,
-          nextElement,
-          transaction,
-          context,
+          prevChild, nextElement, transaction, context
         );
@@ -162,3 +161,3 @@ var ReactChildReconciler = {
           context,
-          selfDebugID,
+          selfDebugID
         );
@@ -169,6 +168,4 @@ var ReactChildReconciler = {
     for (name in prevChildren) {
-      if (
-        prevChildren.hasOwnProperty(name) &&
-        !(nextChildren && nextChildren.hasOwnProperty(name))
-      ) {
+      if (prevChildren.hasOwnProperty(name) &&
+          !(nextChildren && nextChildren.hasOwnProperty(name))) {
         prevChild = prevChildren[name];
@@ -195,2 +192,3 @@ var ReactChildReconciler = {
   },
+
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactComponentEnvironment.js b/src/renderers/shared/stack/reconciler/ReactComponentEnvironment.js
index cbba0c55c..bb9835d5b 100644
--- a/src/renderers/shared/stack/reconciler/ReactComponentEnvironment.js
+++ b/src/renderers/shared/stack/reconciler/ReactComponentEnvironment.js
@@ -27,2 +27,3 @@ var injected = false;
 var ReactComponentEnvironment = {
+
   /**
@@ -43,3 +44,3 @@ var ReactComponentEnvironment = {
         !injected,
-        'ReactCompositeComponent: injectEnvironment() can only be called once.',
+        'ReactCompositeComponent: injectEnvironment() can only be called once.'
       );
@@ -52,2 +53,3 @@ var ReactComponentEnvironment = {
   },
+
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js b/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js
index ec90a2106..9105f76c3 100644
--- a/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js
+++ b/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js
@@ -32,3 +32,3 @@ var warning = require('warning');
 
-import type {ReactPropTypeLocations} from 'ReactPropTypeLocations';
+import type { ReactPropTypeLocations } from 'ReactPropTypeLocations';
 
@@ -40,3 +40,4 @@ var CompositeTypes = {
 
-function StatelessComponent(Component) {}
+function StatelessComponent(Component) {
+}
 StatelessComponent.prototype.render = function() {
@@ -53,4 +54,4 @@ function warnIfInvalidElement(Component, element) {
       '%s(...): A valid React element (or null) must be returned. You may have ' +
-        'returned undefined, an array or some other invalid object.',
-      Component.displayName || Component.name || 'Component',
+      'returned undefined, an array or some other invalid object.',
+      Component.displayName || Component.name || 'Component'
     );
@@ -59,3 +60,3 @@ function warnIfInvalidElement(Component, element) {
       '%s(...): childContextTypes cannot be defined on a functional component.',
-      Component.displayName || Component.name || 'Component',
+      Component.displayName || Component.name || 'Component'
     );
@@ -128,2 +129,3 @@ var nextMountID = 1;
 var ReactCompositeComponent = {
+
   /**
@@ -182,3 +184,3 @@ var ReactCompositeComponent = {
     hostContainerInfo,
-    context,
+    context
   ) {
@@ -202,3 +204,3 @@ var ReactCompositeComponent = {
       publicContext,
-      updateQueue,
+      updateQueue
     );
@@ -211,6 +213,8 @@ var ReactCompositeComponent = {
       invariant(
-        inst === null || inst === false || React.isValidElement(inst),
+        inst === null ||
+        inst === false ||
+        React.isValidElement(inst),
         '%s(...): A valid React element (or null) must be returned. You may have ' +
-          'returned undefined, an array or some other invalid object.',
-        Component.displayName || Component.name || 'Component',
+        'returned undefined, an array or some other invalid object.',
+        Component.displayName || Component.name || 'Component'
       );
@@ -233,4 +237,4 @@ var ReactCompositeComponent = {
           '%s(...): No `render` method found on the returned component ' +
-            'instance: you may have forgotten to define `render`.',
-          Component.displayName || Component.name || 'Component',
+          'instance: you may have forgotten to define `render`.',
+          Component.displayName || Component.name || 'Component'
         );
@@ -245,5 +249,4 @@ var ReactCompositeComponent = {
         '%s(...): When calling super() in `%s`, make sure to pass ' +
-          "up the same props that your component's constructor was passed.",
-        componentName,
-        componentName,
+        'up the same props that your component\'s constructor was passed.',
+        componentName, componentName
       );
@@ -269,15 +272,16 @@ var ReactCompositeComponent = {
         !inst.getInitialState ||
-          inst.getInitialState.isReactClassApproved ||
-          inst.state,
+        inst.getInitialState.isReactClassApproved ||
+        inst.state,
         'getInitialState was defined on %s, a plain JavaScript class. ' +
-          'This is only supported for classes created using React.createClass. ' +
-          'Did you mean to define a state property instead?',
-        this.getName() || 'a component',
+        'This is only supported for classes created using React.createClass. ' +
+        'Did you mean to define a state property instead?',
+        this.getName() || 'a component'
       );
       warning(
-        !inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved,
+        !inst.getDefaultProps ||
+        inst.getDefaultProps.isReactClassApproved,
         'getDefaultProps was defined on %s, a plain JavaScript class. ' +
-          'This is only supported for classes created using React.createClass. ' +
-          'Use a static property to define defaultProps instead.',
-        this.getName() || 'a component',
+        'This is only supported for classes created using React.createClass. ' +
+        'Use a static property to define defaultProps instead.',
+        this.getName() || 'a component'
       );
@@ -286,4 +290,4 @@ var ReactCompositeComponent = {
         'propTypes was defined as an instance property on %s. Use a static ' +
-          'property to define propTypes instead.',
-        this.getName() || 'a component',
+        'property to define propTypes instead.',
+        this.getName() || 'a component'
       );
@@ -292,4 +296,4 @@ var ReactCompositeComponent = {
         'contextTypes was defined as an instance property on %s. Use a ' +
-          'static property to define contextTypes instead.',
-        this.getName() || 'a component',
+        'static property to define contextTypes instead.',
+        this.getName() || 'a component'
       );
@@ -298,6 +302,6 @@ var ReactCompositeComponent = {
         '%s has a method called ' +
-          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
-          'The name is phrased as a question because the function is ' +
-          'expected to return a value.',
-        this.getName() || 'A component',
+        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
+        'The name is phrased as a question because the function is ' +
+        'expected to return a value.',
+        (this.getName() || 'A component')
       );
@@ -306,5 +310,5 @@ var ReactCompositeComponent = {
         '%s has a method called ' +
-          'componentDidUnmount(). But there is no such lifecycle method. ' +
-          'Did you mean componentWillUnmount()?',
-        this.getName() || 'A component',
+        'componentDidUnmount(). But there is no such lifecycle method. ' +
+        'Did you mean componentWillUnmount()?',
+        this.getName() || 'A component'
       );
@@ -313,4 +317,4 @@ var ReactCompositeComponent = {
         '%s has a method called ' +
-          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
-        this.getName() || 'A component',
+        'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
+        (this.getName() || 'A component')
       );
@@ -325,3 +329,3 @@ var ReactCompositeComponent = {
       '%s.state: must be set to an object or null',
-      this.getName() || 'ReactCompositeComponent',
+      this.getName() || 'ReactCompositeComponent'
     );
@@ -339,12 +343,6 @@ var ReactCompositeComponent = {
         transaction,
-        context,
+        context
       );
     } else {
-      markup = this.performInitialMount(
-        renderedElement,
-        hostParent,
-        hostContainerInfo,
-        transaction,
-        context,
-      );
+      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
     }
@@ -357,3 +355,3 @@ var ReactCompositeComponent = {
             this._debugID,
-            'componentDidMount',
+            'componentDidMount'
           );
@@ -372,3 +370,3 @@ var ReactCompositeComponent = {
     publicContext,
-    updateQueue,
+    updateQueue
   ) {
@@ -381,3 +379,3 @@ var ReactCompositeComponent = {
           publicContext,
-          updateQueue,
+          updateQueue
         );
@@ -391,3 +389,3 @@ var ReactCompositeComponent = {
         publicContext,
-        updateQueue,
+        updateQueue
       );
@@ -400,3 +398,3 @@ var ReactCompositeComponent = {
     publicContext,
-    updateQueue,
+    updateQueue
   ) {
@@ -409,3 +407,3 @@ var ReactCompositeComponent = {
           this._debugID,
-          'ctor',
+          'ctor'
         );
@@ -422,3 +420,3 @@ var ReactCompositeComponent = {
         this._debugID,
-        'render',
+        'render'
       );
@@ -434,3 +432,3 @@ var ReactCompositeComponent = {
     transaction,
-    context,
+    context
   ) {
@@ -439,9 +437,3 @@ var ReactCompositeComponent = {
     try {
-      markup = this.performInitialMount(
-        renderedElement,
-        hostParent,
-        hostContainerInfo,
-        transaction,
-        context,
-      );
+      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
     } catch (e) {
@@ -451,6 +443,3 @@ var ReactCompositeComponent = {
       if (this._pendingStateQueue) {
-        this._instance.state = this._processPendingState(
-          this._instance.props,
-          this._instance.context,
-        );
+        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
       }
@@ -463,9 +452,3 @@ var ReactCompositeComponent = {
       // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
-      markup = this.performInitialMount(
-        renderedElement,
-        hostParent,
-        hostContainerInfo,
-        transaction,
-        context,
-      );
+      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
     }
@@ -474,9 +457,3 @@ var ReactCompositeComponent = {
 
-  performInitialMount: function(
-    renderedElement,
-    hostParent,
-    hostContainerInfo,
-    transaction,
-    context,
-  ) {
+  performInitialMount: function(renderedElement, hostParent, hostContainerInfo, transaction, context) {
     var inst = this._instance;
@@ -493,3 +470,3 @@ var ReactCompositeComponent = {
           debugID,
-          'componentWillMount',
+          'componentWillMount'
         );
@@ -514,3 +491,3 @@ var ReactCompositeComponent = {
       renderedElement,
-      nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */,
+      nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
     );
@@ -524,3 +501,3 @@ var ReactCompositeComponent = {
       this._processChildContext(context),
-      debugID,
+      debugID
     );
@@ -559,6 +536,3 @@ var ReactCompositeComponent = {
         var name = this.getName() + '.componentWillUnmount()';
-        ReactErrorUtils.invokeGuardedCallback(
-          name,
-          inst.componentWillUnmount.bind(inst),
-        );
+        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
       } else {
@@ -568,3 +542,3 @@ var ReactCompositeComponent = {
             this._debugID,
-            'componentWillUnmount',
+            'componentWillUnmount'
           );
@@ -647,3 +621,3 @@ var ReactCompositeComponent = {
           maskedContext,
-          'context',
+          'context'
         );
@@ -681,4 +655,4 @@ var ReactCompositeComponent = {
         '%s.getChildContext(): childContextTypes must be defined in order to ' +
-          'use getChildContext().',
-        this.getName() || 'ReactCompositeComponent',
+        'use getChildContext().',
+        this.getName() || 'ReactCompositeComponent'
       );
@@ -688,3 +662,3 @@ var ReactCompositeComponent = {
           childContext,
-          'child context',
+          'child context'
         );
@@ -696,3 +670,3 @@ var ReactCompositeComponent = {
           this.getName() || 'ReactCompositeComponent',
-          name,
+          name
         );
@@ -724,3 +698,3 @@ var ReactCompositeComponent = {
         null,
-        this._debugID,
+        this._debugID
       );
@@ -740,3 +714,3 @@ var ReactCompositeComponent = {
       prevContext,
-      nextContext,
+      nextContext
     );
@@ -757,3 +731,3 @@ var ReactCompositeComponent = {
         transaction,
-        this._context,
+        this._context
       );
@@ -765,3 +739,3 @@ var ReactCompositeComponent = {
         this._context,
-        this._context,
+        this._context
       );
@@ -792,3 +766,3 @@ var ReactCompositeComponent = {
     prevUnmaskedContext,
-    nextUnmaskedContext,
+    nextUnmaskedContext
   ) {
@@ -798,4 +772,4 @@ var ReactCompositeComponent = {
       'Attempted to update component `%s` that has already been unmounted ' +
-        '(or failed to mount).',
-      this.getName() || 'ReactCompositeComponent',
+      '(or failed to mount).',
+      this.getName() || 'ReactCompositeComponent'
     );
@@ -845,10 +819,6 @@ var ReactCompositeComponent = {
             this._debugID,
-            'shouldComponentUpdate',
+            'shouldComponentUpdate'
           );
         } else {
-          shouldUpdate = inst.shouldComponentUpdate(
-            nextProps,
-            nextState,
-            nextContext,
-          );
+          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
         }
@@ -867,4 +837,4 @@ var ReactCompositeComponent = {
         '%s.shouldComponentUpdate(): Returned undefined instead of a ' +
-          'boolean value. Make sure to return true or false.',
-        this.getName() || 'ReactCompositeComponent',
+        'boolean value. Make sure to return true or false.',
+        this.getName() || 'ReactCompositeComponent'
       );
@@ -882,3 +852,3 @@ var ReactCompositeComponent = {
         transaction,
-        nextUnmaskedContext,
+        nextUnmaskedContext
       );
@@ -915,5 +885,5 @@ var ReactCompositeComponent = {
         nextState,
-        typeof partial === 'function'
-          ? partial.call(inst, nextState, props, context)
-          : partial,
+        typeof partial === 'function' ?
+          partial.call(inst, nextState, props, context) :
+          partial
       );
@@ -942,3 +912,3 @@ var ReactCompositeComponent = {
     transaction,
-    unmaskedContext,
+    unmaskedContext
   ) {
@@ -961,3 +931,3 @@ var ReactCompositeComponent = {
           this._debugID,
-          'componentWillUpdate',
+          'componentWillUpdate'
         );
@@ -980,10 +950,5 @@ var ReactCompositeComponent = {
           measureLifeCyclePerf(
-            inst.componentDidUpdate.bind(
-              inst,
-              prevProps,
-              prevState,
-              prevContext,
-            ),
+            inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),
             this._debugID,
-            'componentDidUpdate',
+            'componentDidUpdate'
           );
@@ -991,13 +956,6 @@ var ReactCompositeComponent = {
       } else {
-        transaction
-          .getReactMountReady()
-          .enqueue(
-            inst.componentDidUpdate.bind(
-              inst,
-              prevProps,
-              prevState,
-              prevContext,
-            ),
-            inst,
-          );
+        transaction.getReactMountReady().enqueue(
+          inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),
+          inst
+        );
       }
@@ -1027,3 +985,3 @@ var ReactCompositeComponent = {
         transaction,
-        this._processChildContext(context),
+        this._processChildContext(context)
       );
@@ -1037,3 +995,3 @@ var ReactCompositeComponent = {
         nextRenderedElement,
-        nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */,
+        nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
       );
@@ -1047,3 +1005,3 @@ var ReactCompositeComponent = {
         this._processChildContext(context),
-        debugID,
+        debugID
       );
@@ -1060,3 +1018,3 @@ var ReactCompositeComponent = {
         nextMarkup,
-        prevComponentInstance,
+        prevComponentInstance
       );
@@ -1074,3 +1032,3 @@ var ReactCompositeComponent = {
       nextMarkup,
-      prevInstance,
+      prevInstance
     );
@@ -1089,3 +1047,3 @@ var ReactCompositeComponent = {
         this._debugID,
-        'render',
+        'render'
       );
@@ -1097,3 +1055,4 @@ var ReactCompositeComponent = {
       // We allow auto-mocks to proceed as if they're returning null.
-      if (renderedElement === undefined && inst.render._isMockFunction) {
+      if (renderedElement === undefined &&
+          inst.render._isMockFunction) {
         // This is probably bad practice. Consider warning here and
@@ -1115,3 +1074,4 @@ var ReactCompositeComponent = {
       try {
-        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
+        renderedElement =
+          this._renderValidatedComponentWithoutOwnerOrContext();
       } finally {
@@ -1120,3 +1080,4 @@ var ReactCompositeComponent = {
     } else {
-      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
+      renderedElement =
+        this._renderValidatedComponentWithoutOwnerOrContext();
     }
@@ -1124,8 +1085,7 @@ var ReactCompositeComponent = {
       // TODO: An `isValidNode` function would probably be more appropriate
-      renderedElement === null ||
-        renderedElement === false ||
-        React.isValidElement(renderedElement),
+      renderedElement === null || renderedElement === false ||
+      React.isValidElement(renderedElement),
       '%s.render(): A valid React element (or null) must be returned. You may have ' +
         'returned undefined, an array or some other invalid object.',
-      this.getName() || 'ReactCompositeComponent',
+      this.getName() || 'ReactCompositeComponent'
     );
@@ -1148,14 +1108,13 @@ var ReactCompositeComponent = {
     if (__DEV__) {
-      var componentName = component && component.getName
-        ? component.getName()
-        : 'a component';
+      var componentName = component && component.getName ?
+        component.getName() : 'a component';
       warning(
         publicComponentInstance != null ||
-          component._compositeType !== CompositeTypes.StatelessFunctional,
+        component._compositeType !== CompositeTypes.StatelessFunctional,
         'Stateless function components cannot be given refs ' +
-          '(See ref "%s" in %s created by %s). ' +
-          'Attempts to access this ref will fail.',
+        '(See ref "%s" in %s created by %s). ' +
+        'Attempts to access this ref will fail.',
         ref,
         componentName,
-        this.getName(),
+        this.getName()
       );
@@ -1188,6 +1147,4 @@ var ReactCompositeComponent = {
     return (
-      type.displayName ||
-      (constructor && constructor.displayName) ||
-      type.name ||
-      (constructor && constructor.name) ||
+      type.displayName || (constructor && constructor.displayName) ||
+      type.name || (constructor && constructor.name) ||
       null
@@ -1214,2 +1171,3 @@ var ReactCompositeComponent = {
   _instantiateReactComponent: null,
+
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactDefaultBatchingStrategy.js b/src/renderers/shared/stack/reconciler/ReactDefaultBatchingStrategy.js
index b23847d72..b5db558d4 100644
--- a/src/renderers/shared/stack/reconciler/ReactDefaultBatchingStrategy.js
+++ b/src/renderers/shared/stack/reconciler/ReactDefaultBatchingStrategy.js
@@ -36,7 +36,11 @@ function ReactDefaultBatchingStrategyTransaction() {
 
-Object.assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
-  getTransactionWrappers: function() {
-    return TRANSACTION_WRAPPERS;
-  },
-});
+Object.assign(
+  ReactDefaultBatchingStrategyTransaction.prototype,
+  Transaction,
+  {
+    getTransactionWrappers: function() {
+      return TRANSACTION_WRAPPERS;
+    },
+  }
+);
 
diff --git a/src/renderers/shared/stack/reconciler/ReactEventEmitterMixin.js b/src/renderers/shared/stack/reconciler/ReactEventEmitterMixin.js
index 63134a57e..94461f880 100644
--- a/src/renderers/shared/stack/reconciler/ReactEventEmitterMixin.js
+++ b/src/renderers/shared/stack/reconciler/ReactEventEmitterMixin.js
@@ -21,2 +21,3 @@ function runEventQueueInBatch(events) {
 var ReactEventEmitterMixin = {
+
   /**
@@ -26,7 +27,6 @@ var ReactEventEmitterMixin = {
   handleTopLevel: function(
-    topLevelType,
-    targetInst,
-    nativeEvent,
-    nativeEventTarget,
-  ) {
+      topLevelType,
+      targetInst,
+      nativeEvent,
+      nativeEventTarget) {
     var events = EventPluginHub.extractEvents(
@@ -35,3 +35,3 @@ var ReactEventEmitterMixin = {
       nativeEvent,
-      nativeEventTarget,
+      nativeEventTarget
     );
diff --git a/src/renderers/shared/stack/reconciler/ReactHostComponent.js b/src/renderers/shared/stack/reconciler/ReactHostComponent.js
index c6c06b8b7..eebe5cba4 100644
--- a/src/renderers/shared/stack/reconciler/ReactHostComponent.js
+++ b/src/renderers/shared/stack/reconciler/ReactHostComponent.js
@@ -41,3 +41,3 @@ function createInternalComponent(element) {
     'There is no registered component for the tag %s',
-    element.type,
+    element.type
   );
diff --git a/src/renderers/shared/stack/reconciler/ReactMultiChild.js b/src/renderers/shared/stack/reconciler/ReactMultiChild.js
index d1821eade..a0d05a76e 100644
--- a/src/renderers/shared/stack/reconciler/ReactMultiChild.js
+++ b/src/renderers/shared/stack/reconciler/ReactMultiChild.js
@@ -135,3 +135,6 @@ function enqueue(queue, update) {
 function processQueue(inst, updateQueue) {
-  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
+  ReactComponentEnvironment.processChildrenUpdates(
+    inst,
+    updateQueue,
+  );
 }
@@ -157,5 +160,3 @@ if (__DEV__) {
         debugID,
-        children
-          ? Object.keys(children).map(key => children[key]._debugID)
-          : [],
+        children ? Object.keys(children).map(key => children[key]._debugID) : []
       );
@@ -172,2 +173,3 @@ if (__DEV__) {
 var ReactMultiChild = {
+
   /**
@@ -180,7 +182,4 @@ var ReactMultiChild = {
   Mixin: {
-    _reconcilerInstantiateChildren: function(
-      nestedChildren,
-      transaction,
-      context,
-    ) {
+
+    _reconcilerInstantiateChildren: function(nestedChildren, transaction, context) {
       if (__DEV__) {
@@ -191,6 +190,3 @@ var ReactMultiChild = {
             return ReactChildReconciler.instantiateChildren(
-              nestedChildren,
-              transaction,
-              context,
-              selfDebugID,
+              nestedChildren, transaction, context, selfDebugID
             );
@@ -202,5 +198,3 @@ var ReactMultiChild = {
       return ReactChildReconciler.instantiateChildren(
-        nestedChildren,
-        transaction,
-        context,
+        nestedChildren, transaction, context
       );
@@ -214,3 +208,3 @@ var ReactMultiChild = {
       transaction,
-      context,
+      context
     ) {
@@ -223,6 +217,3 @@ var ReactMultiChild = {
             ReactCurrentOwner.current = this._currentElement._owner;
-            nextChildren = flattenChildren(
-              nextNestedChildrenElements,
-              selfDebugID,
-            );
+            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
           } finally {
@@ -239,3 +230,3 @@ var ReactMultiChild = {
             context,
-            selfDebugID,
+            selfDebugID
           );
@@ -254,3 +245,3 @@ var ReactMultiChild = {
         context,
-        selfDebugID,
+        selfDebugID
       );
@@ -269,5 +260,3 @@ var ReactMultiChild = {
       var children = this._reconcilerInstantiateChildren(
-        nestedChildren,
-        transaction,
-        context,
+        nestedChildren, transaction, context
       );
@@ -290,3 +279,3 @@ var ReactMultiChild = {
             context,
-            selfDebugID,
+            selfDebugID
           );
@@ -361,7 +350,3 @@ var ReactMultiChild = {
      */
-    _updateChildren: function(
-      nextNestedChildrenElements,
-      transaction,
-      context,
-    ) {
+    _updateChildren: function(nextNestedChildrenElements, transaction, context) {
       var prevChildren = this._renderedChildren;
@@ -375,3 +360,3 @@ var ReactMultiChild = {
         transaction,
-        context,
+        context
       );
@@ -398,3 +383,3 @@ var ReactMultiChild = {
             updates,
-            this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex),
+            this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex)
           );
@@ -417,4 +402,4 @@ var ReactMultiChild = {
               transaction,
-              context,
-            ),
+              context
+            )
           );
@@ -430,3 +415,3 @@ var ReactMultiChild = {
             updates,
-            this._unmountChild(prevChildren[name], removedNodes[name]),
+            this._unmountChild(prevChildren[name], removedNodes[name])
           );
@@ -512,4 +497,3 @@ var ReactMultiChild = {
       transaction,
-      context,
-    ) {
+      context) {
       child._mountIndex = index;
@@ -531,3 +515,5 @@ var ReactMultiChild = {
     },
+
   },
+
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactMultiChildUpdateTypes.js b/src/renderers/shared/stack/reconciler/ReactMultiChildUpdateTypes.js
index 1319db50f..acccdc497 100644
--- a/src/renderers/shared/stack/reconciler/ReactMultiChildUpdateTypes.js
+++ b/src/renderers/shared/stack/reconciler/ReactMultiChildUpdateTypes.js
@@ -20,6 +20,6 @@
 export type ReactMultiChildUpdateTypes =
-  | 'INSERT_MARKUP'
-  | 'MOVE_EXISTING'
-  | 'REMOVE_NODE'
-  | 'SET_MARKUP'
-  | 'TEXT_CONTENT';
+  'INSERT_MARKUP' |
+  'MOVE_EXISTING' |
+  'REMOVE_NODE' |
+  'SET_MARKUP' |
+  'TEXT_CONTENT';
diff --git a/src/renderers/shared/stack/reconciler/ReactOwner.js b/src/renderers/shared/stack/reconciler/ReactOwner.js
index a25e987d8..c634dfb38 100644
--- a/src/renderers/shared/stack/reconciler/ReactOwner.js
+++ b/src/renderers/shared/stack/reconciler/ReactOwner.js
@@ -16,3 +16,3 @@ var invariant = require('invariant');
 
-import type {ReactInstance} from 'ReactInstanceType';
+import type { ReactInstance } from 'ReactInstanceType';
 
@@ -79,5 +79,5 @@ var ReactOwner = {
       'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' +
-        "be adding a ref to a component that was not created inside a component's " +
-        '`render` method, or you have multiple copies of React loaded ' +
-        '(details: https://fb.me/react-refs-must-have-owner).',
+      'be adding a ref to a component that was not created inside a component\'s ' +
+      '`render` method, or you have multiple copies of React loaded ' +
+      '(details: https://fb.me/react-refs-must-have-owner).'
     );
@@ -103,5 +103,5 @@ var ReactOwner = {
       'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' +
-        "be removing a ref to a component that was not created inside a component's " +
-        '`render` method, or you have multiple copies of React loaded ' +
-        '(details: https://fb.me/react-refs-must-have-owner).',
+      'be removing a ref to a component that was not created inside a component\'s ' +
+      '`render` method, or you have multiple copies of React loaded ' +
+      '(details: https://fb.me/react-refs-must-have-owner).'
     );
@@ -110,6 +110,3 @@ var ReactOwner = {
     // because we do not want to detach the ref if another component stole it.
-    if (
-      ownerPublicInstance &&
-      ownerPublicInstance.refs[ref] === component.getPublicInstance()
-    ) {
+    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
       owner.detachRef(ref);
@@ -117,2 +114,3 @@ var ReactOwner = {
   },
+
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactReconciler.js b/src/renderers/shared/stack/reconciler/ReactReconciler.js
index 12c1b60ef..c2d44391c 100644
--- a/src/renderers/shared/stack/reconciler/ReactReconciler.js
+++ b/src/renderers/shared/stack/reconciler/ReactReconciler.js
@@ -27,2 +27,3 @@ function attachRefs() {
 var ReactReconciler = {
+
   /**
@@ -44,3 +45,3 @@ var ReactReconciler = {
     context,
-    parentDebugID, // 0 in production and for roots
+    parentDebugID // 0 in production and for roots
   ) {
@@ -51,3 +52,3 @@ var ReactReconciler = {
           internalInstance._currentElement,
-          parentDebugID,
+          parentDebugID
         );
@@ -60,8 +61,6 @@ var ReactReconciler = {
       context,
-      parentDebugID,
+      parentDebugID
     );
-    if (
-      internalInstance._currentElement &&
-      internalInstance._currentElement.ref != null
-    ) {
+    if (internalInstance._currentElement &&
+        internalInstance._currentElement.ref != null) {
       transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
@@ -71,3 +70,3 @@ var ReactReconciler = {
         ReactInstrumentation.debugTool.onMountComponent(
-          internalInstance._debugID,
+          internalInstance._debugID
         );
@@ -96,3 +95,3 @@ var ReactReconciler = {
         ReactInstrumentation.debugTool.onBeforeUnmountComponent(
-          internalInstance._debugID,
+          internalInstance._debugID
         );
@@ -105,3 +104,3 @@ var ReactReconciler = {
         ReactInstrumentation.debugTool.onUnmountComponent(
-          internalInstance._debugID,
+          internalInstance._debugID
         );
@@ -121,6 +120,3 @@ var ReactReconciler = {
   receiveComponent: function(
-    internalInstance,
-    nextElement,
-    transaction,
-    context,
+    internalInstance, nextElement, transaction, context
   ) {
@@ -128,3 +124,5 @@ var ReactReconciler = {
 
-    if (nextElement === prevElement && context === internalInstance._context) {
+    if (nextElement === prevElement &&
+        context === internalInstance._context
+      ) {
       // Since elements are immutable after the owner is rendered,
@@ -146,3 +144,3 @@ var ReactReconciler = {
           internalInstance._debugID,
-          nextElement,
+          nextElement
         );
@@ -151,3 +149,6 @@ var ReactReconciler = {
 
-    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
+    var refsChanged = ReactRef.shouldUpdateRefs(
+      prevElement,
+      nextElement
+    );
 
@@ -159,7 +160,5 @@ var ReactReconciler = {
 
-    if (
-      refsChanged &&
-      internalInstance._currentElement &&
-      internalInstance._currentElement.ref != null
-    ) {
+    if (refsChanged &&
+        internalInstance._currentElement &&
+        internalInstance._currentElement.ref != null) {
       transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
@@ -170,3 +169,3 @@ var ReactReconciler = {
         ReactInstrumentation.debugTool.onUpdateComponent(
-          internalInstance._debugID,
+          internalInstance._debugID
         );
@@ -186,3 +185,3 @@ var ReactReconciler = {
     transaction,
-    updateBatchNumber,
+    updateBatchNumber
   ) {
@@ -193,7 +192,7 @@ var ReactReconciler = {
         internalInstance._updateBatchNumber == null ||
-          internalInstance._updateBatchNumber === updateBatchNumber + 1,
+        internalInstance._updateBatchNumber === updateBatchNumber + 1,
         'performUpdateIfNecessary: Unexpected batch number (current %s, ' +
-          'pending %s)',
+        'pending %s)',
         updateBatchNumber,
-        internalInstance._updateBatchNumber,
+        internalInstance._updateBatchNumber
       );
@@ -205,3 +204,3 @@ var ReactReconciler = {
           internalInstance._debugID,
-          internalInstance._currentElement,
+          internalInstance._currentElement
         );
@@ -213,3 +212,3 @@ var ReactReconciler = {
         ReactInstrumentation.debugTool.onUpdateComponent(
-          internalInstance._debugID,
+          internalInstance._debugID
         );
@@ -218,2 +217,3 @@ var ReactReconciler = {
   },
+
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactRef.js b/src/renderers/shared/stack/reconciler/ReactRef.js
index e5c497223..a7350cc6a 100644
--- a/src/renderers/shared/stack/reconciler/ReactRef.js
+++ b/src/renderers/shared/stack/reconciler/ReactRef.js
@@ -16,4 +16,4 @@ var ReactOwner = require('ReactOwner');
 
-import type {ReactInstance} from 'ReactInstanceType';
-import type {ReactElement} from 'ReactElementType';
+import type { ReactInstance } from 'ReactInstanceType';
+import type { ReactElement } from 'ReactElementType';
 
@@ -26,3 +26,7 @@ function attachRef(ref, component, owner) {
     // Legacy ref
-    ReactOwner.addComponentAsRefTo(component, ref, owner);
+    ReactOwner.addComponentAsRefTo(
+      component,
+      ref,
+      owner,
+    );
   }
diff --git a/src/renderers/shared/stack/reconciler/ReactSimpleEmptyComponent.js b/src/renderers/shared/stack/reconciler/ReactSimpleEmptyComponent.js
index fe009b0c4..a81793eab 100644
--- a/src/renderers/shared/stack/reconciler/ReactSimpleEmptyComponent.js
+++ b/src/renderers/shared/stack/reconciler/ReactSimpleEmptyComponent.js
@@ -15,2 +15,3 @@ var ReactReconciler = require('ReactReconciler');
 
+
 var ReactSimpleEmptyComponent = function(placeholderElement, instantiate) {
@@ -25,3 +26,3 @@ Object.assign(ReactSimpleEmptyComponent.prototype, {
     context,
-    parentDebugID, // 0 in production and for roots
+    parentDebugID // 0 in production and for roots
   ) {
@@ -33,6 +34,7 @@ Object.assign(ReactSimpleEmptyComponent.prototype, {
       context,
-      parentDebugID,
+      parentDebugID
     );
   },
-  receiveComponent: function() {},
+  receiveComponent: function() {
+  },
   getHostNode: function() {
diff --git a/src/renderers/shared/stack/reconciler/ReactUpdateQueue.js b/src/renderers/shared/stack/reconciler/ReactUpdateQueue.js
index c5474d67f..b72cb7095 100644
--- a/src/renderers/shared/stack/reconciler/ReactUpdateQueue.js
+++ b/src/renderers/shared/stack/reconciler/ReactUpdateQueue.js
@@ -30,3 +30,3 @@ function formatUnexpectedArgument(arg) {
   }
-  var displayName = (arg.constructor && arg.constructor.name) || type;
+  var displayName = arg.constructor && arg.constructor.name || type;
   var keys = Object.keys(arg);
@@ -49,7 +49,7 @@ function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
         '%s(...): Can only update a mounted or mounting component. ' +
-          'This usually means you called %s() on an unmounted component. ' +
-          'This is a no-op. Please check the code for the %s component.',
+        'This usually means you called %s() on an unmounted component. ' +
+        'This is a no-op. Please check the code for the %s component.',
         callerName,
         callerName,
-        (ctor && (ctor.displayName || ctor.name)) || 'ReactClass',
+        ctor && (ctor.displayName || ctor.name) || 'ReactClass'
       );
@@ -63,7 +63,7 @@ function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
       '%s(...): Cannot update during an existing state transition (such as ' +
-        "within `render` or another component's constructor). Render methods " +
-        'should be a pure function of props and state; constructor ' +
-        'side-effects are an anti-pattern, but can be moved to ' +
-        '`componentWillMount`.',
-      callerName,
+      'within `render` or another component\'s constructor). Render methods ' +
+      'should be a pure function of props and state; constructor ' +
+      'side-effects are an anti-pattern, but can be moved to ' +
+      '`componentWillMount`.',
+      callerName
     );
@@ -79,2 +79,3 @@ function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
 var ReactUpdateQueue = {
+
   /**
@@ -93,7 +94,7 @@ var ReactUpdateQueue = {
           '%s is accessing isMounted inside its render() function. ' +
-            'render() should be a pure function of props and state. It should ' +
-            'never access something that requires stale data from the previous ' +
-            'render, such as refs. Move this logic to componentDidMount and ' +
-            'componentDidUpdate instead.',
-          owner.getName() || 'A component',
+          'render() should be a pure function of props and state. It should ' +
+          'never access something that requires stale data from the previous ' +
+          'render, such as refs. Move this logic to componentDidMount and ' +
+          'componentDidUpdate instead.',
+          owner.getName() || 'A component'
         );
@@ -172,3 +173,3 @@ var ReactUpdateQueue = {
       publicInstance,
-      'forceUpdate',
+      'forceUpdate'
     );
@@ -198,3 +199,3 @@ var ReactUpdateQueue = {
       publicInstance,
-      'replaceState',
+      'replaceState'
     );
@@ -237,3 +238,3 @@ var ReactUpdateQueue = {
         'setState(...): You passed an undefined or null state object; ' +
-          'instead, use forceUpdate().',
+        'instead, use forceUpdate().'
       );
@@ -243,3 +244,3 @@ var ReactUpdateQueue = {
       publicInstance,
-      'setState',
+      'setState'
     );
@@ -269,7 +270,8 @@ var ReactUpdateQueue = {
       '%s(...): Expected the last optional `callback` argument to be a ' +
-        'function. Instead received: %s.',
+      'function. Instead received: %s.',
       callerName,
-      formatUnexpectedArgument(callback),
+      formatUnexpectedArgument(callback)
     );
   },
+
 };
diff --git a/src/renderers/shared/stack/reconciler/ReactUpdates.js b/src/renderers/shared/stack/reconciler/ReactUpdates.js
index 782af8a2a..d605c5881 100644
--- a/src/renderers/shared/stack/reconciler/ReactUpdates.js
+++ b/src/renderers/shared/stack/reconciler/ReactUpdates.js
@@ -32,3 +32,3 @@ function ensureInjected() {
     'ReactUpdates: must inject a reconcile transaction class and batching ' +
-      'strategy',
+    'strategy'
   );
@@ -71,3 +71,3 @@ function ReactUpdatesFlushTransaction() {
   this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
-    /* useCreateElement */ true,
+    /* useCreateElement */ true
   );
@@ -75,28 +75,32 @@ function ReactUpdatesFlushTransaction() {
 
-Object.assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
-  getTransactionWrappers: function() {
-    return TRANSACTION_WRAPPERS;
-  },
-
-  destructor: function() {
-    this.dirtyComponentsLength = null;
-    CallbackQueue.release(this.callbackQueue);
-    this.callbackQueue = null;
-    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
-    this.reconcileTransaction = null;
-  },
-
-  perform: function(method, scope, a) {
-    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
-    // with this transaction's wrappers around it.
-    return Transaction.perform.call(
-      this,
-      this.reconcileTransaction.perform,
-      this.reconcileTransaction,
-      method,
-      scope,
-      a,
-    );
-  },
-});
+Object.assign(
+  ReactUpdatesFlushTransaction.prototype,
+  Transaction,
+  {
+    getTransactionWrappers: function() {
+      return TRANSACTION_WRAPPERS;
+    },
+
+    destructor: function() {
+      this.dirtyComponentsLength = null;
+      CallbackQueue.release(this.callbackQueue);
+      this.callbackQueue = null;
+      ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
+      this.reconcileTransaction = null;
+    },
+
+    perform: function(method, scope, a) {
+      // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
+      // with this transaction's wrappers around it.
+      return Transaction.perform.call(
+        this,
+        this.reconcileTransaction.perform,
+        this.reconcileTransaction,
+        method,
+        scope,
+        a
+      );
+    },
+  }
+);
 
@@ -124,6 +128,6 @@ function runBatchedUpdates(transaction) {
     len === dirtyComponents.length,
-    "Expected flush transaction's stored dirty-components length (%s) to " +
-      'match dirty-components array length (%s).',
+    'Expected flush transaction\'s stored dirty-components length (%s) to ' +
+    'match dirty-components array length (%s).',
     len,
-    dirtyComponents.length,
+    dirtyComponents.length
   );
@@ -168,3 +172,3 @@ function runBatchedUpdates(transaction) {
       transaction.reconcileTransaction,
-      updateBatchNumber,
+      updateBatchNumber
     );
@@ -179,3 +183,3 @@ function runBatchedUpdates(transaction) {
           callbacks[j],
-          component.getPublicInstance(),
+          component.getPublicInstance()
         );
@@ -239,4 +243,4 @@ function asap(callback, context) {
     batchingStrategy.isBatchingUpdates,
-    "ReactUpdates.asap: Can't enqueue an asap callback in a context where" +
-      'updates are not being batched.',
+    'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' +
+    'updates are not being batched.'
   );
@@ -250,3 +254,3 @@ var ReactUpdatesInjection = {
       ReconcileTransaction,
-      'ReactUpdates: must provide a reconcile transaction class',
+      'ReactUpdates: must provide a reconcile transaction class'
     );
@@ -258,3 +262,3 @@ var ReactUpdatesInjection = {
       _batchingStrategy,
-      'ReactUpdates: must provide a batching strategy',
+      'ReactUpdates: must provide a batching strategy'
     );
@@ -262,3 +266,3 @@ var ReactUpdatesInjection = {
       typeof _batchingStrategy.batchedUpdates === 'function',
-      'ReactUpdates: must provide a batchedUpdates() function',
+      'ReactUpdates: must provide a batchedUpdates() function'
     );
@@ -266,3 +270,3 @@ var ReactUpdatesInjection = {
       typeof _batchingStrategy.isBatchingUpdates === 'boolean',
-      'ReactUpdates: must provide an isBatchingUpdates boolean attribute',
+      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
     );
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactChildReconciler-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactChildReconciler-test.js
index aa591f916..6cc5115a0 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactChildReconciler-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactChildReconciler-test.js
@@ -44,3 +44,3 @@ describe('ReactChildReconciler', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Child keys must be unique; when two children share a key, only the first child will be used.',
+      'Child keys must be unique; when two children share a key, only the first child will be used.'
     );
@@ -74,9 +74,9 @@ describe('ReactChildReconciler', () => {
       'Warning: flattenChildren(...): ' +
-        'Encountered two children with the same key, `1`. ' +
-        'Child keys must be unique; when two children share a key, ' +
-        'only the first child will be used.\n' +
-        '    in div (at **)\n' +
-        '    in Component (at **)\n' +
-        '    in Parent (at **)\n' +
-        '    in GrandParent (at **)',
+      'Encountered two children with the same key, `1`. ' +
+      'Child keys must be unique; when two children share a key, ' +
+      'only the first child will be used.\n' +
+      '    in div (at **)\n' +
+      '    in Component (at **)\n' +
+      '    in Parent (at **)\n' +
+      '    in GrandParent (at **)'
     );
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactComponent-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactComponent-test.js
index aebbc34b5..9b86c3e0a 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactComponent-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactComponent-test.js
@@ -30,3 +30,3 @@ describe('ReactComponent', () => {
     }).toThrowError(
-      '_registerComponent(...): Target container is not a DOM element.',
+      '_registerComponent(...): Target container is not a DOM element.'
     );
@@ -36,3 +36,3 @@ describe('ReactComponent', () => {
     }).toThrowError(
-      '_registerComponent(...): Target container is not a DOM element.',
+      '_registerComponent(...): Target container is not a DOM element.'
     );
@@ -56,6 +56,6 @@ describe('ReactComponent', () => {
         <Wrapper>
-          <span key={0} />
-          <span key={1} />
-          <span key={2} />
-        </Wrapper>,
+          <span key={0}/>
+          <span key={1}/>
+          <span key={2}/>
+        </Wrapper>
       );
@@ -81,6 +81,6 @@ describe('ReactComponent', () => {
         <Wrapper>
-          <span key={0} />
-          <span key={1} />
-          <span key={2} />
-        </Wrapper>,
+          <span key={0}/>
+          <span key={1}/>
+          <span key={2}/>
+        </Wrapper>
       );
@@ -159,7 +159,5 @@ describe('ReactComponent', () => {
       render() {
-        var inner = (
-          <Wrapper object={innerObj} ref={c => (this.innerRef = c)} />
-        );
+        var inner = <Wrapper object={innerObj} ref={(c) => this.innerRef = c} />;
         var outer = (
-          <Wrapper object={outerObj} ref={c => (this.outerRef = c)}>
+          <Wrapper object={outerObj} ref={(c) => this.outerRef = c}>
             {inner}
@@ -199,3 +197,3 @@ describe('ReactComponent', () => {
         // because Wrapper is the current owner when this function is called.)
-        return <div title="inner" ref={c => (this.innerRef = c)} />;
+        return <div title="inner" ref={(c) => this.innerRef = c} />;
       };
@@ -206,5 +204,5 @@ describe('ReactComponent', () => {
             title="wrapper"
-            ref={c => (this.wrapperRef = c)}
+            ref={(c) => this.wrapperRef = c}
             getContent={this.getInner}
-          />
+            />
         );
@@ -251,14 +249,8 @@ describe('ReactComponent', () => {
           <div>
-            <Inner
-              id={1}
-              ref={c => {
-                log.push(`ref 1 got ${c ? `instance ${c.props.id}` : 'null'}`);
-              }}
-            />
-            <Inner
-              id={2}
-              ref={c => {
-                log.push(`ref 2 got ${c ? `instance ${c.props.id}` : 'null'}`);
-              }}
-            />
+            <Inner id={1} ref={(c) => {
+              log.push(`ref 1 got ${c ? `instance ${c.props.id}` : 'null'}`);
+            }}/>
+            <Inner id={2} ref={(c) => {
+              log.push(`ref 2 got ${c ? `instance ${c.props.id}` : 'null'}`);
+            }}/>
           </div>
@@ -292,26 +284,26 @@ describe('ReactComponent', () => {
       'start mount',
-      'inner 1 render',
-      'inner 2 render',
-      'inner 1 componentDidMount',
-      'ref 1 got instance 1',
-      'inner 2 componentDidMount',
-      'ref 2 got instance 2',
-      'outer componentDidMount',
+        'inner 1 render',
+        'inner 2 render',
+        'inner 1 componentDidMount',
+        'ref 1 got instance 1',
+        'inner 2 componentDidMount',
+        'ref 2 got instance 2',
+        'outer componentDidMount',
       'start update',
-      // Previous (equivalent) refs get cleared
-      'ref 1 got null',
-      'inner 1 render',
-      'ref 2 got null',
-      'inner 2 render',
-      'inner 1 componentDidUpdate',
-      'ref 1 got instance 1',
-      'inner 2 componentDidUpdate',
-      'ref 2 got instance 2',
-      'outer componentDidUpdate',
+        // Previous (equivalent) refs get cleared
+        'ref 1 got null',
+        'inner 1 render',
+        'ref 2 got null',
+        'inner 2 render',
+        'inner 1 componentDidUpdate',
+        'ref 1 got instance 1',
+        'inner 2 componentDidUpdate',
+        'ref 2 got instance 2',
+        'outer componentDidUpdate',
       'start unmount',
-      'outer componentWillUnmount',
-      'ref 1 got null',
-      'inner 1 componentWillUnmount',
-      'ref 2 got null',
-      'inner 2 componentWillUnmount',
+        'outer componentWillUnmount',
+        'ref 1 got null',
+        'inner 1 componentWillUnmount',
+        'ref 2 got null',
+        'inner 2 componentWillUnmount',
     ]);
@@ -337,5 +329,5 @@ describe('ReactComponent', () => {
       'Element type is invalid: expected a string (for built-in components) ' +
-        'or a class/function (for composite components) but got: undefined. ' +
-        "You likely forgot to export your component from the file it's " +
-        'defined in.',
+      'or a class/function (for composite components) but got: undefined. ' +
+      'You likely forgot to export your component from the file it\'s ' +
+      'defined in.'
     );
@@ -345,3 +337,3 @@ describe('ReactComponent', () => {
       'Element type is invalid: expected a string (for built-in components) ' +
-        'or a class/function (for composite components) but got: null.',
+      'or a class/function (for composite components) but got: null.'
     );
@@ -362,5 +354,5 @@ describe('ReactComponent', () => {
       'Element type is invalid: expected a string (for built-in components) ' +
-        'or a class/function (for composite components) but got: undefined. ' +
-        "You likely forgot to export your component from the file it's " +
-        'defined in. Check the render method of `Foo`.',
+      'or a class/function (for composite components) but got: undefined. ' +
+      'You likely forgot to export your component from the file it\'s ' +
+      'defined in. Check the render method of `Foo`.'
     );
@@ -370,2 +362,3 @@ describe('ReactComponent', () => {
   });
+
 });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactComponentLifeCycle-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactComponentLifeCycle-test.js
index a4a696695..c1addcafd 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactComponentLifeCycle-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactComponentLifeCycle-test.js
@@ -22,2 +22,3 @@ var clone = function(o) {
 
+
 var GET_INIT_STATE_RETURN_VAL = {
@@ -72,6 +73,7 @@ type ComponentLifeCycle =
    */
-  | 'MOUNTED' /**
+  'MOUNTED' |
+  /**
    * Unmounted components are inactive and cannot receive new props.
    */
-  | 'UNMOUNTED';
+  'UNMOUNTED';
 
@@ -81,3 +83,5 @@ function getLifeCycleState(instance): ComponentLifeCycle {
   // gets unmounted, it loses that internal instance.
-  return internalInstance ? 'MOUNTED' : 'UNMOUNTED';
+  return internalInstance ?
+         'MOUNTED' :
+         'UNMOUNTED';
 }
@@ -107,3 +111,5 @@ describe('ReactComponentLifeCycle', () => {
       render() {
-        return <div />;
+        return (
+          <div />
+        );
       }
@@ -153,5 +159,7 @@ describe('ReactComponentLifeCycle', () => {
         return (
-          <div>
-            {this.state.showHasOnDOMReadyComponent ? <Child /> : <div />}
-          </div>
+          <div>{
+            this.state.showHasOnDOMReadyComponent ?
+            <Child /> :
+            <div />
+          }</div>
         );
@@ -178,3 +186,5 @@ describe('ReactComponentLifeCycle', () => {
       render() {
-        return <div />;
+        return (
+          <div />
+        );
       }
@@ -195,3 +205,5 @@ describe('ReactComponentLifeCycle', () => {
       render() {
-        return <div />;
+        return (
+          <div />
+        );
       }
@@ -217,3 +229,5 @@ describe('ReactComponentLifeCycle', () => {
       render() {
-        return <div />;
+        return (
+          <div />
+        );
       }
@@ -225,5 +239,5 @@ describe('ReactComponentLifeCycle', () => {
       'Warning: setState(...): Can only update a mounted or ' +
-        'mounting component. This usually means you called setState() on an ' +
-        'unmounted component. This is a no-op. Please check the code for the ' +
-        'StatefulComponent component.',
+      'mounting component. This usually means you called setState() on an ' +
+      'unmounted component. This is a no-op. Please check the code for the ' +
+      'StatefulComponent component.'
     );
@@ -247,3 +261,3 @@ describe('ReactComponentLifeCycle', () => {
         expect(this._isMounted()).toBeFalsy();
-        return <div />;
+        return <div/>;
       }
@@ -258,3 +272,3 @@ describe('ReactComponentLifeCycle', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Component is accessing isMounted inside its render()',
+      'Component is accessing isMounted inside its render()'
     );
@@ -289,3 +303,3 @@ describe('ReactComponentLifeCycle', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Component is accessing isMounted inside its render()',
+      'Component is accessing isMounted inside its render()'
     );
@@ -296,3 +310,3 @@ describe('ReactComponentLifeCycle', () => {
       render() {
-        return <div />;
+        return <div/>;
       }
@@ -323,3 +337,3 @@ describe('ReactComponentLifeCycle', () => {
         }
-        return <div />;
+        return <div/>;
       }
@@ -330,3 +344,3 @@ describe('ReactComponentLifeCycle', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Component is accessing findDOMNode inside its render()',
+      'Component is accessing findDOMNode inside its render()'
     );
@@ -346,5 +360,4 @@ describe('ReactComponentLifeCycle', () => {
         this._testJournal.returnedFromGetInitialState = clone(initState);
-        this._testJournal.lifeCycleAtStartOfGetInitialState = getLifeCycleState(
-          this,
-        );
+        this._testJournal.lifeCycleAtStartOfGetInitialState =
+          getLifeCycleState(this);
         this.state = initState;
@@ -354,3 +367,4 @@ describe('ReactComponentLifeCycle', () => {
         this._testJournal.stateAtStartOfWillMount = clone(this.state);
-        this._testJournal.lifeCycleAtStartOfWillMount = getLifeCycleState(this);
+        this._testJournal.lifeCycleAtStartOfWillMount =
+          getLifeCycleState(this);
         this.state.hasWillMountCompleted = true;
@@ -360,3 +374,4 @@ describe('ReactComponentLifeCycle', () => {
         this._testJournal.stateAtStartOfDidMount = clone(this.state);
-        this._testJournal.lifeCycleAtStartOfDidMount = getLifeCycleState(this);
+        this._testJournal.lifeCycleAtStartOfDidMount =
+          getLifeCycleState(this);
         this.setState({hasDidMountCompleted: true});
@@ -384,5 +399,4 @@ describe('ReactComponentLifeCycle', () => {
         this._testJournal.stateAtStartOfWillUnmount = clone(this.state);
-        this._testJournal.lifeCycleAtStartOfWillUnmount = getLifeCycleState(
-          this,
-        );
+        this._testJournal.lifeCycleAtStartOfWillUnmount =
+          getLifeCycleState(this);
         this.state.hasWillUnmountCompleted = true;
@@ -399,7 +413,6 @@ describe('ReactComponentLifeCycle', () => {
     expect(instance._testJournal.returnedFromGetInitialState).toEqual(
-      GET_INIT_STATE_RETURN_VAL,
-    );
-    expect(instance._testJournal.lifeCycleAtStartOfGetInitialState).toBe(
-      'UNMOUNTED',
+      GET_INIT_STATE_RETURN_VAL
     );
+    expect(instance._testJournal.lifeCycleAtStartOfGetInitialState)
+      .toBe('UNMOUNTED');
 
@@ -407,17 +420,20 @@ describe('ReactComponentLifeCycle', () => {
     expect(instance._testJournal.stateAtStartOfWillMount).toEqual(
-      instance._testJournal.returnedFromGetInitialState,
+      instance._testJournal.returnedFromGetInitialState
     );
-    expect(instance._testJournal.lifeCycleAtStartOfWillMount).toBe('MOUNTED');
+    expect(instance._testJournal.lifeCycleAtStartOfWillMount)
+      .toBe('MOUNTED');
 
     // componentDidMount
-    expect(instance._testJournal.stateAtStartOfDidMount).toEqual(
-      DID_MOUNT_STATE,
+    expect(instance._testJournal.stateAtStartOfDidMount)
+      .toEqual(DID_MOUNT_STATE);
+    expect(instance._testJournal.lifeCycleAtStartOfDidMount).toBe(
+      'MOUNTED'
     );
-    expect(instance._testJournal.lifeCycleAtStartOfDidMount).toBe('MOUNTED');
 
     // render
-    expect(instance._testJournal.stateInInitialRender).toEqual(
-      INIT_RENDER_STATE,
+    expect(instance._testJournal.stateInInitialRender)
+      .toEqual(INIT_RENDER_STATE);
+    expect(instance._testJournal.lifeCycleInInitialRender).toBe(
+      'MOUNTED'
     );
-    expect(instance._testJournal.lifeCycleInInitialRender).toBe('MOUNTED');
 
@@ -429,4 +445,7 @@ describe('ReactComponentLifeCycle', () => {
     // render 2nd time
-    expect(instance._testJournal.stateInLaterRender).toEqual(NEXT_RENDER_STATE);
-    expect(instance._testJournal.lifeCycleInLaterRender).toBe('MOUNTED');
+    expect(instance._testJournal.stateInLaterRender)
+      .toEqual(NEXT_RENDER_STATE);
+    expect(instance._testJournal.lifeCycleInLaterRender).toBe(
+      'MOUNTED'
+    );
 
@@ -436,7 +455,8 @@ describe('ReactComponentLifeCycle', () => {
 
-    expect(instance._testJournal.stateAtStartOfWillUnmount).toEqual(
-      WILL_UNMOUNT_STATE,
-    );
+    expect(instance._testJournal.stateAtStartOfWillUnmount)
+      .toEqual(WILL_UNMOUNT_STATE);
     // componentWillUnmount called right before unmount.
-    expect(instance._testJournal.lifeCycleAtStartOfWillUnmount).toBe('MOUNTED');
+    expect(instance._testJournal.lifeCycleAtStartOfWillUnmount).toBe(
+      'MOUNTED'
+    );
 
@@ -472,3 +492,5 @@ describe('ReactComponentLifeCycle', () => {
         return (
-          <Tooltip ref="tooltip" tooltip={<div>{this.props.tooltipText}</div>}>
+          <Tooltip
+              ref="tooltip"
+              tooltip={<div>{this.props.tooltipText}</div>}>
             {this.props.text}
@@ -480,3 +502,6 @@ describe('ReactComponentLifeCycle', () => {
     var container = document.createElement('div');
-    ReactDOM.render(<Component text="uno" tooltipText="one" />, container);
+    ReactDOM.render(
+      <Component text="uno" tooltipText="one" />,
+      container
+    );
 
@@ -484,3 +509,6 @@ describe('ReactComponentLifeCycle', () => {
     // makes Tooltip rerender the tooltip component, which shouldn't throw.
-    ReactDOM.render(<Component text="dos" tooltipText="two" />, container);
+    ReactDOM.render(
+      <Component text="dos" tooltipText="two" />,
+      container
+    );
   });
@@ -501,3 +529,3 @@ describe('ReactComponentLifeCycle', () => {
       render() {
-        return <div />;
+        return (<div />);
       }
@@ -505,3 +533,3 @@ describe('ReactComponentLifeCycle', () => {
 
-    var instance = (
+    var instance =
       <SetStateInComponentDidMount
@@ -509,4 +537,3 @@ describe('ReactComponentLifeCycle', () => {
         valueToUseInOnDOMReady="goodbye"
-      />
-    );
+      />;
     instance = ReactTestUtils.renderIntoDocument(instance);
@@ -550,2 +577,3 @@ describe('ReactComponentLifeCycle', () => {
 
+
     var container = document.createElement('div');
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponent-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponent-test.js
index 3a5077642..66323dc6e 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponent-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponent-test.js
@@ -26,2 +26,3 @@ var reactComponentExpect;
 describe('ReactCompositeComponent', () => {
+
   beforeEach(() => {
@@ -46,5 +47,5 @@ describe('ReactCompositeComponent', () => {
         var toggleActivatedState = this._toggleActivatedState;
-        return !this.state.activated
-          ? <a ref="x" onClick={toggleActivatedState} />
-          : <b ref="x" onClick={toggleActivatedState} />;
+        return !this.state.activated ?
+          <a ref="x" onClick={toggleActivatedState} /> :
+          <b ref="x" onClick={toggleActivatedState} />;
       }
@@ -63,5 +64,5 @@ describe('ReactCompositeComponent', () => {
         var className = this.props.anchorClassOn ? 'anchorClass' : '';
-        return this.props.renderAnchor
-          ? <a ref="anch" className={className} />
-          : <b />;
+        return this.props.renderAnchor ?
+          <a ref="anch" className={className} /> :
+          <b />;
       }
@@ -152,19 +153,16 @@ describe('ReactCompositeComponent', () => {
     var instance = ReactDOM.render(
-      <ChildUpdates renderAnchor={true} anchorClassOn={false} />,
-      container,
+      <ChildUpdates renderAnchor={true} anchorClassOn={false}/>,
+      container
     );
-    ReactDOM.render(
-      // Warm any cache
-      <ChildUpdates renderAnchor={true} anchorClassOn={true} />,
-      container,
+    ReactDOM.render(  // Warm any cache
+      <ChildUpdates renderAnchor={true} anchorClassOn={true}/>,
+      container
     );
-    ReactDOM.render(
-      // Clear out the anchor
-      <ChildUpdates renderAnchor={false} anchorClassOn={true} />,
-      container,
+    ReactDOM.render(  // Clear out the anchor
+      <ChildUpdates renderAnchor={false} anchorClassOn={true}/>,
+      container
     );
-    ReactDOM.render(
-      // rerender
-      <ChildUpdates renderAnchor={true} anchorClassOn={false} />,
-      container,
+    ReactDOM.render(  // rerender
+      <ChildUpdates renderAnchor={true} anchorClassOn={false}/>,
+      container
     );
@@ -240,5 +238,5 @@ describe('ReactCompositeComponent', () => {
       'Warning: forceUpdate(...): Can only update a mounted or ' +
-        'mounting component. This usually means you called forceUpdate() on an ' +
-        'unmounted component. This is a no-op. Please check the code for the ' +
-        'Component component.',
+      'mounting component. This usually means you called forceUpdate() on an ' +
+      'unmounted component. This is a no-op. Please check the code for the ' +
+      'Component component.'
     );
@@ -284,5 +282,5 @@ describe('ReactCompositeComponent', () => {
       'Warning: setState(...): Can only update a mounted or ' +
-        'mounting component. This usually means you called setState() on an ' +
-        'unmounted component. This is a no-op. Please check the code for the ' +
-        'Component component.',
+      'mounting component. This usually means you called setState() on an ' +
+      'unmounted component. This is a no-op. Please check the code for the ' +
+      'Component component.'
     );
@@ -318,2 +316,3 @@ describe('ReactCompositeComponent', () => {
 
+
   it('should warn about `setState` in render', () => {
@@ -333,3 +332,3 @@ describe('ReactCompositeComponent', () => {
         if (this.state.value === 0) {
-          this.setState({value: 1});
+          this.setState({ value: 1 });
         }
@@ -346,6 +345,6 @@ describe('ReactCompositeComponent', () => {
       'Warning: setState(...): Cannot update during an existing state ' +
-        "transition (such as within `render` or another component's " +
-        'constructor). Render methods should be a pure function of props and ' +
-        'state; constructor side-effects are an anti-pattern, but can be moved ' +
-        'to `componentWillMount`.',
+      'transition (such as within `render` or another component\'s ' +
+      'constructor). Render methods should be a pure function of props and ' +
+      'state; constructor side-effects are an anti-pattern, but can be moved ' +
+      'to `componentWillMount`.'
     );
@@ -378,3 +377,3 @@ describe('ReactCompositeComponent', () => {
         if (this.state.value === 0) {
-          this.setState({value: 1});
+          this.setState({ value: 1 });
         }
@@ -394,3 +393,3 @@ describe('ReactCompositeComponent', () => {
     expect(console.error.calls.argsFor(0)[0]).toBe(
-      'Warning: setState(...): Cannot call setState() inside getChildContext()',
+      'Warning: setState(...): Cannot call setState() inside getChildContext()'
     );
@@ -467,3 +466,3 @@ describe('ReactCompositeComponent', () => {
       'Warning: Component.shouldComponentUpdate(): Returned undefined instead of a ' +
-        'boolean value. Make sure to return true or false.',
+      'boolean value. Make sure to return true or false.'
     );
@@ -475,3 +474,4 @@ describe('ReactCompositeComponent', () => {
     class Component extends React.Component {
-      componentDidUnmount = () => {};
+      componentDidUnmount = () => {
+      };
 
@@ -487,4 +487,4 @@ describe('ReactCompositeComponent', () => {
       'Warning: Component has a method called ' +
-        'componentDidUnmount(). But there is no such lifecycle method. ' +
-        'Did you mean componentWillUnmount()?',
+      'componentDidUnmount(). But there is no such lifecycle method. ' +
+      'Did you mean componentWillUnmount()?'
     );
@@ -598,3 +598,3 @@ describe('ReactCompositeComponent', () => {
     parentInstance = ReactTestUtils.renderIntoDocument(
-      <Parent><Middle><Child /></Middle></Parent>,
+      <Parent><Middle><Child /></Middle></Parent>
     );
@@ -602,6 +602,3 @@ describe('ReactCompositeComponent', () => {
     expect(parentInstance.state.flag).toBe(false);
-    reactComponentExpect(childInstance).scalarContextEqual({
-      foo: 'bar',
-      flag: false,
-    });
+    reactComponentExpect(childInstance).scalarContextEqual({foo: 'bar', flag: false});
 
@@ -610,6 +607,3 @@ describe('ReactCompositeComponent', () => {
 
-    reactComponentExpect(childInstance).scalarContextEqual({
-      foo: 'bar',
-      flag: true,
-    });
+    reactComponentExpect(childInstance).scalarContextEqual({foo: 'bar', flag: true});
   });
@@ -657,3 +651,6 @@ describe('ReactCompositeComponent', () => {
 
-    var wrapper = ReactTestUtils.renderIntoDocument(<Wrapper />);
+
+    var wrapper = ReactTestUtils.renderIntoDocument(
+      <Wrapper />
+    );
 
@@ -726,10 +723,4 @@ describe('ReactCompositeComponent', () => {
     ReactTestUtils.renderIntoDocument(<Parent />);
-    reactComponentExpect(childInstance).scalarContextEqual({
-      foo: 'bar',
-      depth: 0,
-    });
-    reactComponentExpect(grandchildInstance).scalarContextEqual({
-      foo: 'bar',
-      depth: 1,
-    });
+    reactComponentExpect(childInstance).scalarContextEqual({foo: 'bar', depth: 0});
+    reactComponentExpect(grandchildInstance).scalarContextEqual({foo: 'bar', depth: 1});
   });
@@ -787,6 +778,3 @@ describe('ReactCompositeComponent', () => {
 
-    reactComponentExpect(childInstance).scalarContextEqual({
-      foo: 'bar',
-      depth: 0,
-    });
+    reactComponentExpect(childInstance).scalarContextEqual({foo: 'bar', depth: 0});
   });
@@ -952,7 +940,3 @@ describe('ReactCompositeComponent', () => {
       render() {
-        return (
-          <div className="parent" onClick={this.onClick}>
-            {this.props.children}
-          </div>
-        );
+        return <div className="parent" onClick={this.onClick}>{this.props.children}</div>;
       }
@@ -974,3 +958,3 @@ describe('ReactCompositeComponent', () => {
       </Parent>,
-      div,
+      div
     );
@@ -1003,5 +987,5 @@ describe('ReactCompositeComponent', () => {
       'Warning: _renderNewRootComponent(): Render methods should ' +
-        'be a pure function of props and state; triggering nested component ' +
-        'updates from render is not allowed. If necessary, trigger nested ' +
-        'updates in componentDidUpdate. Check the render method of Outer.',
+      'be a pure function of props and state; triggering nested component ' +
+      'updates from render is not allowed. If necessary, trigger nested ' +
+      'updates in componentDidUpdate. Check the render method of Outer.'
     );
@@ -1237,3 +1221,3 @@ describe('ReactCompositeComponent', () => {
       constructor(props) {
-        var _props = {idx: props.idx + '!'};
+        var _props = { idx: props.idx + '!' };
         super(_props);
@@ -1253,4 +1237,5 @@ describe('ReactCompositeComponent', () => {
       'Foo(...): When calling super() in `Foo`, make sure to pass ' +
-        "up the same props that your component's constructor was passed.",
+      'up the same props that your component\'s constructor was passed.'
     );
+
   });
@@ -1285,3 +1270,3 @@ describe('ReactCompositeComponent', () => {
 
-    var setRef = ref => {
+    var setRef = (ref) => {
       if (ref) {
@@ -1297,2 +1282,3 @@ describe('ReactCompositeComponent', () => {
   });
+
 });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentDOMMinimalism-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentDOMMinimalism-test.js
index ee226c93a..6e479e700 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentDOMMinimalism-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentDOMMinimalism-test.js
@@ -30,2 +30,3 @@ var expectSingleChildlessDiv;
 describe('ReactCompositeComponentDOMMinimalism', () => {
+
   beforeEach(() => {
@@ -59,5 +60,5 @@ describe('ReactCompositeComponentDOMMinimalism', () => {
         .toBeCompositeComponentWithType(LowerLevelComposite)
-        .expectRenderedChild()
-        .toBeDOMComponentWithTag('div')
-        .toBeDOMComponentWithNoChildren();
+          .expectRenderedChild()
+          .toBeDOMComponentWithTag('div')
+          .toBeDOMComponentWithNoChildren();
     };
@@ -97,9 +98,10 @@ describe('ReactCompositeComponentDOMMinimalism', () => {
       .toBeCompositeComponentWithType(LowerLevelComposite)
-      .expectRenderedChild()
-      .toBeDOMComponentWithTag('div')
-      .toBeDOMComponentWithChildCount(1)
-      .expectRenderedChildAt(0)
-      .toBeDOMComponentWithTag('ul')
-      .toBeDOMComponentWithNoChildren();
+        .expectRenderedChild()
+        .toBeDOMComponentWithTag('div')
+        .toBeDOMComponentWithChildCount(1)
+        .expectRenderedChildAt(0)
+          .toBeDOMComponentWithTag('ul')
+          .toBeDOMComponentWithNoChildren();
   });
+
 });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentNestedState-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentNestedState-test.js
index f8e7f4af2..b44bac313 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentNestedState-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentNestedState-test.js
@@ -18,2 +18,3 @@ var ReactTestUtils;
 describe('ReactCompositeComponentNestedState-state', () => {
+
   beforeEach(() => {
@@ -28,3 +29,3 @@ describe('ReactCompositeComponentNestedState-state', () => {
 
-      handleColor = color => {
+      handleColor = (color) => {
         this.props.logger('parent-handleColor', this.state.color);
@@ -57,20 +58,9 @@ describe('ReactCompositeComponentNestedState-state', () => {
         this.props.onSelectColor(color);
-        this.setState(
-          function(state, props) {
-            this.props.logger(
-              'setState-this',
-              this.state.hue,
-              this.props.color,
-            );
-            this.props.logger('setState-args', state.hue, props.color);
-            return {hue: shade + ' ' + props.color};
-          },
-          function() {
-            this.props.logger(
-              'after-setState',
-              this.state.hue,
-              this.props.color,
-            );
-          },
-        );
+        this.setState(function(state, props) {
+          this.props.logger('setState-this', this.state.hue, this.props.color);
+          this.props.logger('setState-args', state.hue, props.color);
+          return {hue: shade + ' ' + props.color};
+        }, function() {
+          this.props.logger('after-setState', this.state.hue, this.props.color);
+        });
       };
@@ -103,6 +93,11 @@ describe('ReactCompositeComponentNestedState-state', () => {
 
-    void ReactDOM.render(<ParentComponent logger={logger} />, container);
+    void ReactDOM.render(
+      <ParentComponent logger={logger} />,
+      container
+    );
 
     // click "light green"
-    ReactTestUtils.Simulate.click(container.childNodes[0].childNodes[3]);
+    ReactTestUtils.Simulate.click(
+      container.childNodes[0].childNodes[3]
+    );
 
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentState-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentState-test.js
index bd3d4120a..3385d7a4d 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentState-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactCompositeComponentState-test.js
@@ -19,2 +19,3 @@ var TestComponent;
 describe('ReactCompositeComponent-state', () => {
+
   beforeEach(() => {
@@ -33,3 +34,3 @@ describe('ReactCompositeComponent-state', () => {
         props.stateListener(from, state && state.color);
-      };
+      }
 
@@ -37,3 +38,3 @@ describe('ReactCompositeComponent-state', () => {
         return () => this.peekAtState(from);
-      };
+      }
 
@@ -42,3 +43,3 @@ describe('ReactCompositeComponent-state', () => {
           {color: nextColor},
-          this.peekAtCallback('setFavoriteColor'),
+          this.peekAtCallback('setFavoriteColor')
         );
@@ -58,3 +59,3 @@ describe('ReactCompositeComponent-state', () => {
           {color: 'sunrise'},
-          this.peekAtCallback('setState-sunrise'),
+          this.peekAtCallback('setState-sunrise')
         );
@@ -66,3 +67,3 @@ describe('ReactCompositeComponent-state', () => {
           {color: 'orange'},
-          this.peekAtCallback('setState-orange'),
+          this.peekAtCallback('setState-orange')
         );
@@ -78,3 +79,3 @@ describe('ReactCompositeComponent-state', () => {
           {color: 'yellow'},
-          this.peekAtCallback('setState-yellow'),
+          this.peekAtCallback('setState-yellow')
         );
@@ -93,6 +94,9 @@ describe('ReactCompositeComponent-state', () => {
           this.updater.enqueueReplaceState(this, {color: undefined});
-          this.setState(function(state) {
-            this.peekAtState('before-setState-again-receiveProps', state);
-            return {color: newProps.nextColor};
-          }, this.peekAtCallback('setState-receiveProps'));
+          this.setState(
+            function(state) {
+              this.peekAtState('before-setState-again-receiveProps', state);
+              return {color: newProps.nextColor};
+            },
+            this.peekAtCallback('setState-receiveProps')
+          );
           this.setState(function(state) {
@@ -136,3 +140,3 @@ describe('ReactCompositeComponent-state', () => {
         this.peekAtState('initial-callback');
-      },
+      }
     );
@@ -141,3 +145,3 @@ describe('ReactCompositeComponent-state', () => {
       container,
-      instance.peekAtCallback('setProps'),
+      instance.peekAtCallback('setProps')
     );
@@ -148,70 +152,68 @@ describe('ReactCompositeComponent-state', () => {
 
-    expect(stateListener.mock.calls.join('\n')).toEqual(
-      [
-        // there is no state when getInitialState() is called
-        ['getInitialState', null],
-        ['componentWillMount-start', 'red'],
-        // setState()'s only enqueue pending states.
-        ['componentWillMount-after-sunrise', 'red'],
-        ['componentWillMount-end', 'red'],
-        // pending state queue is processed
-        ['before-setState-sunrise', 'red'],
-        ['after-setState-sunrise', 'sunrise'],
-        ['after-setState-orange', 'orange'],
-        // pending state has been applied
-        ['render', 'orange'],
-        ['componentDidMount-start', 'orange'],
-        // setState-sunrise and setState-orange should be called here,
-        // after the bug in #1740
-        // componentDidMount() called setState({color:'yellow'}), which is async.
-        // The update doesn't happen until the next flush.
-        ['componentDidMount-end', 'orange'],
-        ['shouldComponentUpdate-currentState', 'orange'],
-        ['shouldComponentUpdate-nextState', 'yellow'],
-        ['componentWillUpdate-currentState', 'orange'],
-        ['componentWillUpdate-nextState', 'yellow'],
-        ['render', 'yellow'],
-        ['componentDidUpdate-currentState', 'yellow'],
-        ['componentDidUpdate-prevState', 'orange'],
-        ['setState-sunrise', 'yellow'],
-        ['setState-orange', 'yellow'],
-        ['setState-yellow', 'yellow'],
-        ['initial-callback', 'yellow'],
-        ['componentWillReceiveProps-start', 'yellow'],
-        // setState({color:'green'}) only enqueues a pending state.
-        ['componentWillReceiveProps-end', 'yellow'],
-        // pending state queue is processed
-        // before-setState-receiveProps never called, due to replaceState.
-        ['before-setState-again-receiveProps', undefined],
-        ['after-setState-receiveProps', 'green'],
-        ['shouldComponentUpdate-currentState', 'yellow'],
-        ['shouldComponentUpdate-nextState', 'green'],
-        ['componentWillUpdate-currentState', 'yellow'],
-        ['componentWillUpdate-nextState', 'green'],
-        ['render', 'green'],
-        ['componentDidUpdate-currentState', 'green'],
-        ['componentDidUpdate-prevState', 'yellow'],
-        ['setState-receiveProps', 'green'],
-        ['setProps', 'green'],
-        // setFavoriteColor('blue')
-        ['shouldComponentUpdate-currentState', 'green'],
-        ['shouldComponentUpdate-nextState', 'blue'],
-        ['componentWillUpdate-currentState', 'green'],
-        ['componentWillUpdate-nextState', 'blue'],
-        ['render', 'blue'],
-        ['componentDidUpdate-currentState', 'blue'],
-        ['componentDidUpdate-prevState', 'green'],
-        ['setFavoriteColor', 'blue'],
-        // forceUpdate()
-        ['componentWillUpdate-currentState', 'blue'],
-        ['componentWillUpdate-nextState', 'blue'],
-        ['render', 'blue'],
-        ['componentDidUpdate-currentState', 'blue'],
-        ['componentDidUpdate-prevState', 'blue'],
-        ['forceUpdate', 'blue'],
-        // unmountComponent()
-        // state is available within `componentWillUnmount()`
-        ['componentWillUnmount', 'blue'],
-      ].join('\n'),
-    );
+    expect(stateListener.mock.calls.join('\n')).toEqual([
+      // there is no state when getInitialState() is called
+      ['getInitialState', null],
+      ['componentWillMount-start', 'red'],
+      // setState()'s only enqueue pending states.
+      ['componentWillMount-after-sunrise', 'red'],
+      ['componentWillMount-end', 'red'],
+      // pending state queue is processed
+      ['before-setState-sunrise', 'red'],
+      ['after-setState-sunrise', 'sunrise'],
+      ['after-setState-orange', 'orange'],
+      // pending state has been applied
+      ['render', 'orange'],
+      ['componentDidMount-start', 'orange'],
+      // setState-sunrise and setState-orange should be called here,
+      // after the bug in #1740
+      // componentDidMount() called setState({color:'yellow'}), which is async.
+      // The update doesn't happen until the next flush.
+      ['componentDidMount-end', 'orange'],
+      ['shouldComponentUpdate-currentState', 'orange'],
+      ['shouldComponentUpdate-nextState', 'yellow'],
+      ['componentWillUpdate-currentState', 'orange'],
+      ['componentWillUpdate-nextState', 'yellow'],
+      ['render', 'yellow'],
+      ['componentDidUpdate-currentState', 'yellow'],
+      ['componentDidUpdate-prevState', 'orange'],
+      ['setState-sunrise', 'yellow'],
+      ['setState-orange', 'yellow'],
+      ['setState-yellow', 'yellow'],
+      ['initial-callback', 'yellow'],
+      ['componentWillReceiveProps-start', 'yellow'],
+      // setState({color:'green'}) only enqueues a pending state.
+      ['componentWillReceiveProps-end', 'yellow'],
+      // pending state queue is processed
+      // before-setState-receiveProps never called, due to replaceState.
+      ['before-setState-again-receiveProps', undefined],
+      ['after-setState-receiveProps', 'green'],
+      ['shouldComponentUpdate-currentState', 'yellow'],
+      ['shouldComponentUpdate-nextState', 'green'],
+      ['componentWillUpdate-currentState', 'yellow'],
+      ['componentWillUpdate-nextState', 'green'],
+      ['render', 'green'],
+      ['componentDidUpdate-currentState', 'green'],
+      ['componentDidUpdate-prevState', 'yellow'],
+      ['setState-receiveProps', 'green'],
+      ['setProps', 'green'],
+      // setFavoriteColor('blue')
+      ['shouldComponentUpdate-currentState', 'green'],
+      ['shouldComponentUpdate-nextState', 'blue'],
+      ['componentWillUpdate-currentState', 'green'],
+      ['componentWillUpdate-nextState', 'blue'],
+      ['render', 'blue'],
+      ['componentDidUpdate-currentState', 'blue'],
+      ['componentDidUpdate-prevState', 'green'],
+      ['setFavoriteColor', 'blue'],
+      // forceUpdate()
+      ['componentWillUpdate-currentState', 'blue'],
+      ['componentWillUpdate-nextState', 'blue'],
+      ['render', 'blue'],
+      ['componentDidUpdate-currentState', 'blue'],
+      ['componentDidUpdate-prevState', 'blue'],
+      ['forceUpdate', 'blue'],
+      // unmountComponent()
+      // state is available within `componentWillUnmount()`
+      ['componentWillUnmount', 'blue'],
+    ].join('\n'));
   });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactEmptyComponent-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactEmptyComponent-test.js
index a6b4cfaaf..a2e5076c0 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactEmptyComponent-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactEmptyComponent-test.js
@@ -68,4 +68,8 @@ describe('ReactEmptyComponent', () => {
     var instance2 = ReactTestUtils.renderIntoDocument(<Component2 />);
-    reactComponentExpect(instance1).expectRenderedChild().toBeEmptyComponent();
-    reactComponentExpect(instance2).expectRenderedChild().toBeEmptyComponent();
+    reactComponentExpect(instance1)
+      .expectRenderedChild()
+      .toBeEmptyComponent();
+    reactComponentExpect(instance2)
+      .expectRenderedChild()
+      .toBeEmptyComponent();
   });
@@ -81,3 +85,3 @@ describe('ReactEmptyComponent', () => {
       'Component.render(): A valid React element (or null) must be returned. You may ' +
-        'have returned undefined, an array or some other invalid object.',
+      'have returned undefined, an array or some other invalid object.'
     );
@@ -86,8 +90,12 @@ describe('ReactEmptyComponent', () => {
   it('should be able to switch between rendering null and a normal tag', () => {
-    var instance1 = (
-      <TogglingComponent firstComponent={null} secondComponent={'div'} />
-    );
-    var instance2 = (
-      <TogglingComponent firstComponent={'div'} secondComponent={null} />
-    );
+    var instance1 =
+      <TogglingComponent
+        firstComponent={null}
+        secondComponent={'div'}
+      />;
+    var instance2 =
+      <TogglingComponent
+        firstComponent={'div'}
+        secondComponent={null}
+      />;
 
@@ -104,5 +112,7 @@ describe('ReactEmptyComponent', () => {
   it('should be able to switch in a list of children', () => {
-    var instance1 = (
-      <TogglingComponent firstComponent={null} secondComponent={'div'} />
-    );
+    var instance1 =
+      <TogglingComponent
+        firstComponent={null}
+        secondComponent={'div'}
+      />;
 
@@ -113,3 +123,3 @@ describe('ReactEmptyComponent', () => {
         {instance1}
-      </div>,
+      </div>
     );
@@ -125,27 +135,32 @@ describe('ReactEmptyComponent', () => {
 
-  it('should distinguish between a script placeholder and an actual script tag', () => {
-    var instance1 = (
-      <TogglingComponent firstComponent={null} secondComponent={'script'} />
-    );
-    var instance2 = (
-      <TogglingComponent firstComponent={'script'} secondComponent={null} />
-    );
+  it('should distinguish between a script placeholder and an actual script tag',
+    () => {
+      var instance1 =
+        <TogglingComponent
+          firstComponent={null}
+          secondComponent={'script'}
+        />;
+      var instance2 =
+        <TogglingComponent
+          firstComponent={'script'}
+          secondComponent={null}
+        />;
 
-    expect(function() {
-      ReactTestUtils.renderIntoDocument(instance1);
-    }).not.toThrow();
-    expect(function() {
-      ReactTestUtils.renderIntoDocument(instance2);
-    }).not.toThrow();
+      expect(function() {
+        ReactTestUtils.renderIntoDocument(instance1);
+      }).not.toThrow();
+      expect(function() {
+        ReactTestUtils.renderIntoDocument(instance2);
+      }).not.toThrow();
 
-    expect(log.calls.count()).toBe(4);
-    expect(log.calls.argsFor(0)[0]).toBe(null);
-    expect(log.calls.argsFor(1)[0].tagName).toBe('SCRIPT');
-    expect(log.calls.argsFor(2)[0].tagName).toBe('SCRIPT');
-    expect(log.calls.argsFor(3)[0]).toBe(null);
-  });
+      expect(log.calls.count()).toBe(4);
+      expect(log.calls.argsFor(0)[0]).toBe(null);
+      expect(log.calls.argsFor(1)[0].tagName).toBe('SCRIPT');
+      expect(log.calls.argsFor(2)[0].tagName).toBe('SCRIPT');
+      expect(log.calls.argsFor(3)[0]).toBe(null);
+    }
+  );
 
-  it(
-    'should have findDOMNode return null when multiple layers of composite ' +
-      'components render to the same null placeholder',
+  it('should have findDOMNode return null when multiple layers of composite ' +
+    'components render to the same null placeholder',
     () => {
@@ -163,8 +178,12 @@ describe('ReactEmptyComponent', () => {
 
-      var instance1 = (
-        <TogglingComponent firstComponent={'div'} secondComponent={Child} />
-      );
-      var instance2 = (
-        <TogglingComponent firstComponent={Child} secondComponent={'div'} />
-      );
+      var instance1 =
+        <TogglingComponent
+          firstComponent={'div'}
+          secondComponent={Child}
+        />;
+      var instance2 =
+        <TogglingComponent
+          firstComponent={Child}
+          secondComponent={'div'}
+        />;
 
@@ -182,3 +201,3 @@ describe('ReactEmptyComponent', () => {
       expect(log.calls.argsFor(3)[0].tagName).toBe('DIV');
-    },
+    }
   );
@@ -237,3 +256,5 @@ describe('ReactEmptyComponent', () => {
       ReactDOM.render(null, div);
-    }).toThrowError('ReactDOM.render(): Invalid component element.');
+    }).toThrowError(
+      'ReactDOM.render(): Invalid component element.'
+    );
   });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactErrorBoundaries-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactErrorBoundaries-test.js
index b1f3f2f12..75c8654e9 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactErrorBoundaries-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactErrorBoundaries-test.js
@@ -17,2 +17,3 @@ var ReactDOM;
 describe('ReactErrorBoundaries', () => {
+
   beforeEach(() => {
@@ -154,3 +155,3 @@ describe('ReactErrorBoundaries', () => {
       </ErrorBoundary>,
-      container,
+      container
     );
@@ -186,3 +187,6 @@ describe('ReactErrorBoundaries', () => {
     ReactDOM.render(<Boundary />, container);
-    expect(log).toEqual(['Boundary render', 'Boundary componentDidMount']);
+    expect(log).toEqual([
+      'Boundary render',
+      'Boundary componentDidMount',
+    ]);
   });
@@ -219,3 +223,3 @@ describe('ReactErrorBoundaries', () => {
       <ErrorBoundary><Broken /><Composite /></ErrorBoundary>,
-      container,
+      container
     );
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactIdentity-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactIdentity-test.js
index 254fc50e6..809648b75 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactIdentity-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactIdentity-test.js
@@ -19,2 +19,3 @@ var ReactTestUtils;
 describe('ReactIdentity', () => {
+
   beforeEach(() => {
@@ -33,4 +34,4 @@ describe('ReactIdentity', () => {
     var node;
-    var Component = props =>
-      <div ref={c => (node = c)}>
+    var Component = (props) =>
+      <div ref={(c) => node = c}>
         <div key={props.swap ? 'banana' : 'apple'} />
@@ -59,8 +60,8 @@ describe('ReactIdentity', () => {
     ReactDOM.render(
-      <Wrapper key="wrap1"><span ref={c => (node1 = c)} /></Wrapper>,
-      container,
+      <Wrapper key="wrap1"><span ref={(c) => node1 = c} /></Wrapper>,
+      container
     );
     ReactDOM.render(
-      <Wrapper key="wrap2"><span ref={c => (node2 = c)} /></Wrapper>,
-      container,
+      <Wrapper key="wrap2"><span ref={(c) => node2 = c} /></Wrapper>,
+      container
     );
@@ -92,3 +93,6 @@ describe('ReactIdentity', () => {
     var detachedContainer = document.createElement('div');
-    renderAComponentWithKeyIntoContainer("<'WEIRD/&\\key'>", detachedContainer);
+    renderAComponentWithKeyIntoContainer(
+      "<'WEIRD/&\\key'>",
+      detachedContainer
+    );
   });
@@ -101,3 +105,6 @@ describe('ReactIdentity', () => {
 
-    renderAComponentWithKeyIntoContainer("<'WEIRD/&\\key'>", attachedContainer);
+    renderAComponentWithKeyIntoContainer(
+      "<'WEIRD/&\\key'>",
+      attachedContainer
+    );
 
@@ -145,3 +152,5 @@ describe('ReactIdentity', () => {
     expect(function() {
+
       ReactTestUtils.renderIntoDocument(<TestContainer />);
+
     }).not.toThrow();
@@ -177,3 +186,5 @@ describe('ReactIdentity', () => {
     expect(function() {
+
       ReactTestUtils.renderIntoDocument(<TestContainer />);
+
     }).not.toThrow();
@@ -200,3 +211,5 @@ describe('ReactIdentity', () => {
     expect(function() {
+
       ReactTestUtils.renderIntoDocument(<TestContainer />);
+
     }).not.toThrow();
@@ -247,3 +260,3 @@ describe('ReactIdentity', () => {
   it('should not allow implicit and explicit keys to collide', () => {
-    var component = (
+    var component =
       <div>
@@ -251,4 +264,3 @@ describe('ReactIdentity', () => {
         <span key="0" />
-      </div>
-    );
+      </div>;
 
@@ -258,2 +270,4 @@ describe('ReactIdentity', () => {
   });
+
+
 });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactMockedComponent-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactMockedComponent-test.js
index 185bd0762..78ba7b4c8 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactMockedComponent-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactMockedComponent-test.js
@@ -20,2 +20,3 @@ var MockedComponent;
 describe('ReactMockedComponent', () => {
+
   beforeEach(() => {
@@ -24,8 +25,4 @@ describe('ReactMockedComponent', () => {
 
-    AutoMockedComponent = jest.genMockFromModule(
-      'ReactMockedComponentTestComponent',
-    );
-    MockedComponent = jest.genMockFromModule(
-      'ReactMockedComponentTestComponent',
-    );
+    AutoMockedComponent = jest.genMockFromModule('ReactMockedComponentTestComponent');
+    MockedComponent = jest.genMockFromModule('ReactMockedComponentTestComponent');
 
@@ -57,3 +54,3 @@ describe('ReactMockedComponent', () => {
       instance,
-      AutoMockedComponent,
+      AutoMockedComponent
     );
@@ -90,3 +87,3 @@ describe('ReactMockedComponent', () => {
       instance,
-      MockedComponent,
+      MockedComponent
     );
@@ -101,2 +98,3 @@ describe('ReactMockedComponent', () => {
   });
+
 });
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChild-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChild-test.js
index e11c3ba00..4d9bffc42 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChild-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChild-test.js
@@ -119,3 +119,3 @@ describe('ReactMultiChild', () => {
         <WrapperComponent><MockComponent /></WrapperComponent>,
-        container,
+        container
       );
@@ -177,7 +177,10 @@ describe('ReactMultiChild', () => {
 
-      ReactDOM.render(<Parent>{[<div key="1" />]}</Parent>, container);
+      ReactDOM.render(
+        <Parent>{[<div key="1"/>]}</Parent>,
+        container
+      );
 
       ReactDOM.render(
-        <Parent>{[<div key="1" />, <div key="1" />]}</Parent>,
-        container,
+        <Parent>{[<div key="1"/>, <div key="1"/>]}</Parent>,
+        container
       );
@@ -187,9 +190,9 @@ describe('ReactMultiChild', () => {
         'Warning: flattenChildren(...): ' +
-          'Encountered two children with the same key, `1`. ' +
-          'Child keys must be unique; when two children share a key, ' +
-          'only the first child will be used.\n' +
-          '    in div (at **)\n' +
-          '    in WrapperComponent (at **)\n' +
-          '    in div (at **)\n' +
-          '    in Parent (at **)',
+        'Encountered two children with the same key, `1`. ' +
+        'Child keys must be unique; when two children share a key, ' +
+        'only the first child will be used.\n' +
+        '    in div (at **)\n' +
+        '    in WrapperComponent (at **)\n' +
+        '    in div (at **)\n' +
+        '    in Parent (at **)'
       );
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildReconcile-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildReconcile-test.js
index 644e614a1..d655536ae 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildReconcile-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildReconcile-test.js
@@ -88,3 +88,5 @@ class FriendsStatusDisplay extends React.Component {
     // implementation details.
-    var statusDisplays = ReactInstanceMap.get(this)._renderedComponent
+    var statusDisplays =
+      ReactInstanceMap.get(this)
+      ._renderedComponent
       ._renderedChildren;
@@ -123,3 +125,3 @@ class FriendsStatusDisplay extends React.Component {
    */
-  verifyPreviousRefsResolved = flushedKey => {
+  verifyPreviousRefsResolved = (flushedKey) => {
     var i;
@@ -142,10 +144,9 @@ class FriendsStatusDisplay extends React.Component {
       children.push(
-        !status
-          ? null
-          : <StatusDisplay
-              key={key}
-              ref={key}
-              onFlush={this.verifyPreviousRefsResolved.bind(this, key)}
-              status={status}
-            />,
+        !status ? null :
+        <StatusDisplay
+          key={key}
+          ref={key}
+          onFlush={this.verifyPreviousRefsResolved.bind(this, key)}
+          status={status}
+        />
       );
@@ -160,2 +161,3 @@ class FriendsStatusDisplay extends React.Component {
 
+
 function getInternalStateByUserName(statusDisplays) {
@@ -176,5 +178,4 @@ function verifyStatuses(statusDisplays, props) {
   var username;
-  expect(Object.keys(nonEmptyStatusDisplays).length).toEqual(
-    Object.keys(nonEmptyStatusProps).length,
-  );
+  expect(Object.keys(nonEmptyStatusDisplays).length)
+    .toEqual(Object.keys(nonEmptyStatusProps).length);
   for (username in nonEmptyStatusDisplays) {
@@ -183,5 +184,4 @@ function verifyStatuses(statusDisplays, props) {
     }
-    expect(nonEmptyStatusDisplays[username].getStatus()).toEqual(
-      nonEmptyStatusProps[username],
-    );
+    expect(nonEmptyStatusDisplays[username].getStatus())
+      .toEqual(nonEmptyStatusProps[username]);
   }
@@ -193,10 +193,8 @@ function verifyStatuses(statusDisplays, props) {
     }
-    expect(nonEmptyStatusDisplays[username].getStatus()).toEqual(
-      nonEmptyStatusProps[username],
-    );
+    expect(nonEmptyStatusDisplays[username].getStatus())
+      .toEqual(nonEmptyStatusProps[username]);
   }
 
-  expect(Object.keys(nonEmptyStatusDisplays)).toEqual(
-    Object.keys(nonEmptyStatusProps),
-  );
+  expect(Object.keys(nonEmptyStatusDisplays))
+      .toEqual(Object.keys(nonEmptyStatusProps));
 }
@@ -216,5 +214,4 @@ function verifyStatesPreserved(lastInternalStates, statusDisplays) {
     if (lastInternalStates[key]) {
-      expect(lastInternalStates[key]).toEqual(
-        statusDisplays[key].getInternalState(),
-      );
+      expect(lastInternalStates[key])
+        .toEqual(statusDisplays[key].getInternalState());
     }
@@ -223,2 +220,3 @@ function verifyStatesPreserved(lastInternalStates, statusDisplays) {
 
+
 /**
@@ -245,3 +243,3 @@ function verifyDomOrderingAccurate(parentInstance, statusDisplays) {
     orderedLogicalIDs.push(
-      ReactInstanceMap.get(statusDisplay)._renderedComponent._rootNodeID,
+      ReactInstanceMap.get(statusDisplay)._renderedComponent._rootNodeID
     );
@@ -259,3 +257,3 @@ function testPropsSequence(sequence) {
     <FriendsStatusDisplay {...sequence[0]} />,
-    container,
+    container
   );
@@ -266,3 +264,6 @@ function testPropsSequence(sequence) {
   for (i = 1; i < sequence.length; i++) {
-    ReactDOM.render(<FriendsStatusDisplay {...sequence[i]} />, container);
+    ReactDOM.render(
+      <FriendsStatusDisplay {...sequence[i]} />,
+      container
+    );
     statusDisplays = parentInstance.getStatusDisplays();
@@ -292,3 +293,3 @@ describe('ReactMultiChildReconcile', () => {
       <FriendsStatusDisplay {...props} />,
-      container,
+      container
     );
@@ -298,3 +299,6 @@ describe('ReactMultiChildReconcile', () => {
     // Now remove the child.
-    ReactDOM.render(<FriendsStatusDisplay />, container);
+    ReactDOM.render(
+      <FriendsStatusDisplay />,
+      container
+    );
     statusDisplays = parentInstance.getStatusDisplays();
@@ -303,8 +307,10 @@ describe('ReactMultiChildReconcile', () => {
     // Now reset the props that cause there to be a child
-    ReactDOM.render(<FriendsStatusDisplay {...props} />, container);
+    ReactDOM.render(
+      <FriendsStatusDisplay {...props} />,
+      container
+    );
     statusDisplays = parentInstance.getStatusDisplays();
     expect(statusDisplays.jcw).toBeTruthy();
-    expect(statusDisplays.jcw.getInternalState()).not.toBe(
-      startingInternalState,
-    );
+    expect(statusDisplays.jcw.getInternalState())
+        .not.toBe(startingInternalState);
   });
@@ -342,3 +348,3 @@ describe('ReactMultiChildReconcile', () => {
     var PROPS_SEQUENCE = [
-      {usernameToStatus: {}},
+      {usernameToStatus: {} },
       {
@@ -359,3 +365,3 @@ describe('ReactMultiChildReconcile', () => {
       },
-      {usernameToStatus: {}},
+      {usernameToStatus: {} },
     ];
@@ -404,2 +410,4 @@ describe('ReactMultiChildReconcile', () => {
 
+
+
   /**
@@ -517,4 +525,3 @@ describe('ReactMultiChildReconcile', () => {
       {
-        usernameToStatus: {
-          // Full circle!
+        usernameToStatus: {               // Full circle!
           userOne: 'userOneStatus',
@@ -564,4 +571,3 @@ describe('ReactMultiChildReconcile', () => {
       {
-        usernameToStatus: {
-          // Full circle!
+        usernameToStatus: {               // Full circle!
           userOne: 'userOneStatus',
@@ -576,2 +582,3 @@ describe('ReactMultiChildReconcile', () => {
 
+
   it('should remove nulled out children and ignore new null children', () => {
@@ -601,3 +608,3 @@ describe('ReactMultiChildReconcile', () => {
           jordanjcw: 'jordanjcwStatus',
-          john: 'johnStatus', // john will go away
+          john: 'johnStatus',  // john will go away
           joe: 'joeStatus',
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildText-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildText-test.js
index 549b0d259..3db920e6b 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildText-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactMultiChildText-test.js
@@ -90,2 +90,3 @@ var expectChildren = function(d, children) {
 
+
 /**
@@ -100,151 +101,85 @@ describe('ReactMultiChildText', () => {
       // basic values
-      undefined,
-      [],
-      null,
-      [],
-      false,
-      [],
-      true,
-      [],
-      0,
-      '0',
-      1.2,
-      '1.2',
-      '',
-      '',
-      'foo',
-      'foo',
-
-      [],
-      [],
-      [undefined],
-      [],
-      [null],
-      [],
-      [false],
-      [],
-      [true],
-      [],
-      [0],
-      ['0'],
-      [1.2],
-      ['1.2'],
-      [''],
-      [''],
-      ['foo'],
-      ['foo'],
-      [<div />],
-      [<div />],
+      undefined, [],
+      null, [],
+      false, [],
+      true, [],
+      0, '0',
+      1.2, '1.2',
+      '', '',
+      'foo', 'foo',
+
+      [], [],
+      [undefined], [],
+      [null], [],
+      [false], [],
+      [true], [],
+      [0], ['0'],
+      [1.2], ['1.2'],
+      [''], [''],
+      ['foo'], ['foo'],
+      [<div />], [<div />],
 
       // two adjacent values
-      [true, 0],
-      ['0'],
-      [0, 0],
-      ['0', '0'],
-      [1.2, 0],
-      ['1.2', '0'],
-      [0, ''],
-      ['0', ''],
-      ['foo', 0],
-      ['foo', '0'],
-      [0, <div />],
-      ['0', <div />],
-
-      [true, 1.2],
-      ['1.2'],
-      [1.2, 0],
-      ['1.2', '0'],
-      [1.2, 1.2],
-      ['1.2', '1.2'],
-      [1.2, ''],
-      ['1.2', ''],
-      ['foo', 1.2],
-      ['foo', '1.2'],
-      [1.2, <div />],
-      ['1.2', <div />],
-
-      [true, ''],
-      [''],
-      ['', 0],
-      ['', '0'],
-      [1.2, ''],
-      ['1.2', ''],
-      ['', ''],
-      ['', ''],
-      ['foo', ''],
-      ['foo', ''],
-      ['', <div />],
-      ['', <div />],
-
-      [true, 'foo'],
-      ['foo'],
-      ['foo', 0],
-      ['foo', '0'],
-      [1.2, 'foo'],
-      ['1.2', 'foo'],
-      ['foo', ''],
-      ['foo', ''],
-      ['foo', 'foo'],
-      ['foo', 'foo'],
-      ['foo', <div />],
-      ['foo', <div />],
+      [true, 0], ['0'],
+      [0, 0], ['0', '0'],
+      [1.2, 0], ['1.2', '0'],
+      [0, ''], ['0', ''],
+      ['foo', 0], ['foo', '0'],
+      [0, <div />], ['0', <div />],
+
+      [true, 1.2], ['1.2'],
+      [1.2, 0], ['1.2', '0'],
+      [1.2, 1.2], ['1.2', '1.2'],
+      [1.2, ''], ['1.2', ''],
+      ['foo', 1.2], ['foo', '1.2'],
+      [1.2, <div />], ['1.2', <div />],
+
+      [true, ''], [''],
+      ['', 0], ['', '0'],
+      [1.2, ''], ['1.2', ''],
+      ['', ''], ['', ''],
+      ['foo', ''], ['foo', ''],
+      ['', <div />], ['', <div />],
+
+      [true, 'foo'], ['foo'],
+      ['foo', 0], ['foo', '0'],
+      [1.2, 'foo'], ['1.2', 'foo'],
+      ['foo', ''], ['foo', ''],
+      ['foo', 'foo'], ['foo', 'foo'],
+      ['foo', <div />], ['foo', <div />],
 
       // values separated by an element
-      [true, <div />, true],
-      [<div />],
-      [1.2, <div />, 1.2],
-      ['1.2', <div />, '1.2'],
-      ['', <div />, ''],
-      ['', <div />, ''],
-      ['foo', <div />, 'foo'],
-      ['foo', <div />, 'foo'],
-
-      [true, 1.2, <div />, '', 'foo'],
-      ['1.2', <div />, '', 'foo'],
-      [1.2, '', <div />, 'foo', true],
-      ['1.2', '', <div />, 'foo'],
-      ['', 'foo', <div />, true, 1.2],
-      ['', 'foo', <div />, '1.2'],
-
-      [true, 1.2, '', <div />, 'foo', true, 1.2],
-      ['1.2', '', <div />, 'foo', '1.2'],
-      ['', 'foo', true, <div />, 1.2, '', 'foo'],
-      ['', 'foo', <div />, '1.2', '', 'foo'],
+      [true, <div />, true], [<div />],
+      [1.2, <div />, 1.2], ['1.2', <div />, '1.2'],
+      ['', <div />, ''], ['', <div />, ''],
+      ['foo', <div />, 'foo'], ['foo', <div />, 'foo'],
+
+      [true, 1.2, <div />, '', 'foo'], ['1.2', <div />, '', 'foo'],
+      [1.2, '', <div />, 'foo', true], ['1.2', '', <div />, 'foo'],
+      ['', 'foo', <div />, true, 1.2], ['', 'foo', <div />, '1.2'],
+
+      [true, 1.2, '', <div />, 'foo', true, 1.2], ['1.2', '', <div />, 'foo', '1.2'],
+      ['', 'foo', true, <div />, 1.2, '', 'foo'], ['', 'foo', <div />, '1.2', '', 'foo'],
 
       // values inside arrays
-      [[true], [true]],
-      [],
-      [[1.2], [1.2]],
-      ['1.2', '1.2'],
-      [[''], ['']],
-      ['', ''],
-      [['foo'], ['foo']],
-      ['foo', 'foo'],
-      [[<div />], [<div />]],
-      [<div />, <div />],
-
-      [[true, 1.2, <div />], '', 'foo'],
-      ['1.2', <div />, '', 'foo'],
-      [1.2, '', [<div />, 'foo', true]],
-      ['1.2', '', <div />, 'foo'],
-      ['', ['foo', <div />, true], 1.2],
-      ['', 'foo', <div />, '1.2'],
-
-      [true, [1.2, '', <div />, 'foo'], true, 1.2],
-      ['1.2', '', <div />, 'foo', '1.2'],
-      ['', 'foo', [true, <div />, 1.2, ''], 'foo'],
-      ['', 'foo', <div />, '1.2', '', 'foo'],
+      [[true], [true]], [],
+      [[1.2], [1.2]], ['1.2', '1.2'],
+      [[''], ['']], ['', ''],
+      [['foo'], ['foo']], ['foo', 'foo'],
+      [[<div />], [<div />]], [<div />, <div />],
+
+      [[true, 1.2, <div />], '', 'foo'], ['1.2', <div />, '', 'foo'],
+      [1.2, '', [<div />, 'foo', true]], ['1.2', '', <div />, 'foo'],
+      ['', ['foo', <div />, true], 1.2], ['', 'foo', <div />, '1.2'],
+
+      [true, [1.2, '', <div />, 'foo'], true, 1.2], ['1.2', '', <div />, 'foo', '1.2'],
+      ['', 'foo', [true, <div />, 1.2, ''], 'foo'], ['', 'foo', <div />, '1.2', '', 'foo'],
 
       // values inside elements
-      [<div>{true}{1.2}{<div />}</div>, '', 'foo'],
-      [<div />, '', 'foo'],
-      [1.2, '', <div>{<div />}{'foo'}{true}</div>],
-      ['1.2', '', <div />],
-      ['', <div>{'foo'}{<div />}{true}</div>, 1.2],
-      ['', <div />, '1.2'],
-
-      [true, <div>{1.2}{''}{<div />}{'foo'}</div>, true, 1.2],
-      [<div />, '1.2'],
-      ['', 'foo', <div>{true}{<div />}{1.2}{''}</div>, 'foo'],
-      ['', 'foo', <div />, 'foo'],
+      [<div>{true}{1.2}{<div />}</div>, '', 'foo'], [<div />, '', 'foo'],
+      [1.2, '', <div>{<div />}{'foo'}{true}</div>], ['1.2', '', <div />],
+      ['', <div>{'foo'}{<div />}{true}</div>, 1.2], ['', <div />, '1.2'],
+
+      [true, <div>{1.2}{''}{<div />}{'foo'}</div>, true, 1.2], [<div />, '1.2'],
+      ['', 'foo', <div>{true}{<div />}{1.2}{''}</div>, 'foo'], ['', 'foo', <div />, 'foo'],
     ]);
@@ -252,3 +187,3 @@ describe('ReactMultiChildText', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Warning: Each child in an array or iterator should have a unique "key" prop.',
+      'Warning: Each child in an array or iterator should have a unique "key" prop.'
     );
@@ -259,3 +194,3 @@ describe('ReactMultiChildText', () => {
       ReactTestUtils.renderIntoDocument(
-        <div dangerouslySetInnerHTML={{__html: 'abcdef'}}>ghjkl</div>,
+        <div dangerouslySetInnerHTML={{__html: 'abcdef'}}>ghjkl</div>
       );
@@ -286,3 +221,3 @@ describe('ReactMultiChildText', () => {
       <div>{new Map([['a', 'alpha'], ['b', 'beta']])}</div>,
-      container,
+      container
     );
@@ -299,3 +234,3 @@ describe('ReactMultiChildText', () => {
       <div>{new Map([['b', 'beta'], ['a', 'alpha']])}</div>,
-      container,
+      container
     );
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactStatelessComponent-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactStatelessComponent-test.js
index e55850bed..39a131d96 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactStatelessComponent-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactStatelessComponent-test.js
@@ -13,3 +13,2 @@
 
-var PropTypes;
 var React;
@@ -23,2 +22,3 @@ function StatelessComponent(props) {
 describe('ReactStatelessComponent', () => {
+
   beforeEach(() => {
@@ -27,3 +27,2 @@ describe('ReactStatelessComponent', () => {
     ReactTestUtils = require('ReactTestUtils');
-    PropTypes = require('prop-types');
   });
@@ -65,3 +64,3 @@ describe('ReactStatelessComponent', () => {
       static contextTypes = {
-        test: PropTypes.string.isRequired,
+        test: React.PropTypes.string.isRequired,
       };
@@ -79,3 +78,3 @@ describe('ReactStatelessComponent', () => {
       static childContextTypes = {
-        test: PropTypes.string.isRequired,
+        test: React.PropTypes.string.isRequired,
       };
@@ -108,3 +107,3 @@ describe('ReactStatelessComponent', () => {
     StatelessComponentWithChildContext.childContextTypes = {
-      foo: PropTypes.string,
+      foo: React.PropTypes.string,
     };
@@ -118,3 +117,3 @@ describe('ReactStatelessComponent', () => {
       'StatelessComponentWithChildContext(...): childContextTypes cannot ' +
-        'be defined on a functional component.',
+      'be defined on a functional component.'
     );
@@ -133,3 +132,3 @@ describe('ReactStatelessComponent', () => {
       'NotAComponent(...): A valid React element (or null) must be returned. ' +
-        'You may have returned undefined, an array or some other invalid object.',
+      'You may have returned undefined, an array or some other invalid object.'
     );
@@ -144,3 +143,5 @@ describe('ReactStatelessComponent', () => {
       ReactTestUtils.renderIntoDocument(<Child test="test" />);
-    }).toThrowError('Stateless function components cannot have refs.');
+    }).toThrowError(
+      'Stateless function components cannot have refs.'
+    );
   });
@@ -154,3 +155,3 @@ describe('ReactStatelessComponent', () => {
       render() {
-        return <StatelessComponent name="A" ref="stateless" />;
+        return <StatelessComponent name="A" ref="stateless"/>;
       }
@@ -158,3 +159,3 @@ describe('ReactStatelessComponent', () => {
 
-    ReactTestUtils.renderIntoDocument(<Parent />);
+    ReactTestUtils.renderIntoDocument(<Parent/>);
 
@@ -163,4 +164,4 @@ describe('ReactStatelessComponent', () => {
       'Stateless function components cannot be given refs ' +
-        '(See ref "stateless" in StatelessComponent created by Parent). ' +
-        'Attempts to access this ref will fail.',
+      '(See ref "stateless" in StatelessComponent created by Parent). ' +
+      'Attempts to access this ref will fail.'
     );
@@ -194,3 +195,3 @@ describe('ReactStatelessComponent', () => {
     Child.defaultProps = {test: 2};
-    Child.propTypes = {test: PropTypes.string};
+    Child.propTypes = {test: React.PropTypes.string};
 
@@ -200,7 +201,7 @@ describe('ReactStatelessComponent', () => {
     expect(
-      console.error.calls.argsFor(0)[0].replace(/\(at .+?:\d+\)/g, '(at **)'),
+      console.error.calls.argsFor(0)[0].replace(/\(at .+?:\d+\)/g, '(at **)')
     ).toBe(
       'Warning: Failed prop type: Invalid prop `test` of type `number` ' +
-        'supplied to `Child`, expected `string`.\n' +
-        '    in Child (at **)',
+      'supplied to `Child`, expected `string`.\n' +
+      '    in Child (at **)'
     );
@@ -211,3 +212,3 @@ describe('ReactStatelessComponent', () => {
       static childContextTypes = {
-        lang: PropTypes.string,
+        lang: React.PropTypes.string,
       };
@@ -226,3 +227,3 @@ describe('ReactStatelessComponent', () => {
     }
-    Child.contextTypes = {lang: PropTypes.string};
+    Child.contextTypes = {lang: React.PropTypes.string};
 
@@ -265,3 +266,3 @@ describe('ReactStatelessComponent', () => {
       ReactTestUtils.renderIntoDocument(<div><NotAComponent /></div>);
-    }).toThrow(); // has no method 'render'
+    }).toThrow();  // has no method 'render'
     expect(console.error.calls.count()).toBe(1);
@@ -269,3 +270,3 @@ describe('ReactStatelessComponent', () => {
       'NotAComponent(...): A valid React element (or null) must be returned. You may ' +
-        'have returned undefined, an array or some other invalid object.',
+      'have returned undefined, an array or some other invalid object.'
     );
diff --git a/src/renderers/shared/stack/reconciler/__tests__/ReactUpdates-test.js b/src/renderers/shared/stack/reconciler/__tests__/ReactUpdates-test.js
index e676e87a2..026a938eb 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/ReactUpdates-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/ReactUpdates-test.js
@@ -482,3 +482,3 @@ describe('ReactUpdates', () => {
       ['Switcher', 'Box'],
-      ['Box', 'Switcher'],
+      ['Box', 'Switcher']
     );
@@ -489,3 +489,3 @@ describe('ReactUpdates', () => {
       ['Box', 'Child'],
-      ['Box', 'Child'],
+      ['Box', 'Child']
     );
@@ -496,3 +496,3 @@ describe('ReactUpdates', () => {
       ['Switcher', 'Box', 'Child'],
-      ['Box', 'Switcher', 'Child'],
+      ['Box', 'Switcher', 'Child']
     );
@@ -619,13 +619,13 @@ describe('ReactUpdates', () => {
       'Outer-render-0',
-      'Inner-render-0-0',
+        'Inner-render-0-0',
 
       'Outer-setState-1',
-      'Outer-render-1',
-      'Inner-render-1-0',
-      'Inner-didUpdate-1-0',
-      'Outer-didUpdate-1',
-      'Inner-setState-1',
-      'Inner-render-1-1',
-      'Inner-didUpdate-1-1',
-      'Inner-callback-1',
+        'Outer-render-1',
+          'Inner-render-1-0',
+          'Inner-didUpdate-1-0',
+        'Outer-didUpdate-1',
+          'Inner-setState-1',
+            'Inner-render-1-1',
+            'Inner-didUpdate-1-1',
+          'Inner-callback-1',
       'Outer-callback-1',
@@ -633,10 +633,10 @@ describe('ReactUpdates', () => {
       'Outer-setState-2',
-      'Outer-render-2',
-      'Inner-render-2-1',
-      'Inner-didUpdate-2-1',
-      'Outer-didUpdate-2',
-      'Inner-setState-2',
-      'Inner-render-2-2',
-      'Inner-didUpdate-2-2',
-      'Inner-callback-2',
+        'Outer-render-2',
+          'Inner-render-2-1',
+          'Inner-didUpdate-2-1',
+        'Outer-didUpdate-2',
+          'Inner-setState-2',
+            'Inner-render-2-2',
+            'Inner-didUpdate-2-2',
+          'Inner-callback-2',
       'Outer-callback-2',
@@ -664,3 +664,3 @@ describe('ReactUpdates', () => {
             />,
-            ReactDOM.findDOMNode(this),
+            ReactDOM.findDOMNode(this)
           );
@@ -771,3 +771,3 @@ describe('ReactUpdates', () => {
           <B />
-        </div>,
+        </div>
       );
@@ -971,3 +971,3 @@ describe('ReactUpdates', () => {
       'setState(...): Expected the last optional `callback` argument ' +
-        'to be a function. Instead received: string.',
+      'to be a function. Instead received: string.'
     );
@@ -975,3 +975,3 @@ describe('ReactUpdates', () => {
       'setState(...): Expected the last optional `callback` argument ' +
-        'to be a function. Instead received: Object.',
+      'to be a function. Instead received: Object.'
     );
@@ -979,3 +979,3 @@ describe('ReactUpdates', () => {
       'setState(...): Expected the last optional `callback` argument ' +
-        'to be a function. Instead received: Foo (keys: a, b).',
+      'to be a function. Instead received: Foo (keys: a, b).'
     );
@@ -1001,3 +1001,3 @@ describe('ReactUpdates', () => {
       'forceUpdate(...): Expected the last optional `callback` argument ' +
-        'to be a function. Instead received: string.',
+      'to be a function. Instead received: string.'
     );
@@ -1005,3 +1005,3 @@ describe('ReactUpdates', () => {
       'forceUpdate(...): Expected the last optional `callback` argument ' +
-        'to be a function. Instead received: Object.',
+      'to be a function. Instead received: Object.'
     );
@@ -1009,3 +1009,3 @@ describe('ReactUpdates', () => {
       'forceUpdate(...): Expected the last optional `callback` argument ' +
-        'to be a function. Instead received: Foo (keys: a, b).',
+      'to be a function. Instead received: Foo (keys: a, b).'
     );
@@ -1072,6 +1072,6 @@ describe('ReactUpdates', () => {
         super(props);
-        this.state = {showChild: true};
+        this.state = { showChild: true };
       }
       componentDidMount() {
-        this.setState({showChild: false});
+        this.setState({ showChild: false });
       }
@@ -1103,3 +1103,3 @@ describe('ReactUpdates', () => {
       componentWillUnmount() {
-        callbacks = callbacks.filter(c => c !== this.onChange);
+        callbacks = callbacks.filter((c) => c !== this.onChange);
       }
diff --git a/src/renderers/shared/stack/reconciler/__tests__/refs-destruction-test.js b/src/renderers/shared/stack/reconciler/__tests__/refs-destruction-test.js
index 44df2d61b..1fdc948a2 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/refs-destruction-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/refs-destruction-test.js
@@ -31,7 +31,7 @@ describe('refs-destruction', () => {
           <div>
-            {this.props.destroy
-              ? null
-              : <div ref="theInnerDiv">
-                  Lets try to destroy this.
-                </div>}
+            {this.props.destroy ? null :
+              <div ref="theInnerDiv">
+                Lets try to destroy this.
+              </div>
+            }
           </div>
@@ -45,5 +45,4 @@ describe('refs-destruction', () => {
     var testInstance = ReactDOM.render(<TestComponent />, container);
-    expect(ReactTestUtils.isDOMComponent(testInstance.refs.theInnerDiv)).toBe(
-      true,
-    );
+    expect(ReactTestUtils.isDOMComponent(testInstance.refs.theInnerDiv))
+      .toBe(true);
     expect(Object.keys(testInstance.refs || {}).length).toEqual(1);
@@ -56,5 +55,4 @@ describe('refs-destruction', () => {
     var testInstance = ReactDOM.render(<TestComponent />, container);
-    expect(ReactTestUtils.isDOMComponent(testInstance.refs.theInnerDiv)).toBe(
-      true,
-    );
+    expect(ReactTestUtils.isDOMComponent(testInstance.refs.theInnerDiv))
+      .toBe(true);
     expect(Object.keys(testInstance.refs || {}).length).toEqual(1);
@@ -94,7 +92,5 @@ describe('refs-destruction', () => {
       render() {
-        return (
-          <Modal>
-            <a ref="ref" />
-          </Modal>
-        );
+        return (<Modal>
+          <a ref="ref"/>
+        </Modal>);
       }
@@ -104,3 +100,3 @@ describe('refs-destruction', () => {
       render() {
-        return this.props.hidden ? null : <AppModal onClose={this.close} />;
+        return this.props.hidden ? null : <AppModal onClose={this.close}/>;
       }
@@ -110,3 +106,3 @@ describe('refs-destruction', () => {
     ReactDOM.render(<App />, container);
-    ReactDOM.render(<App hidden={true} />, container);
+    ReactDOM.render(<App hidden={true}/>, container);
     jest.runAllTimers();
diff --git a/src/renderers/shared/stack/reconciler/__tests__/refs-test.js b/src/renderers/shared/stack/reconciler/__tests__/refs-test.js
index b7b835bfc..d33a4aeac 100644
--- a/src/renderers/shared/stack/reconciler/__tests__/refs-test.js
+++ b/src/renderers/shared/stack/reconciler/__tests__/refs-test.js
@@ -18,2 +18,3 @@ var reactComponentExpect = require('reactComponentExpect');
 
+
 /**
@@ -42,3 +43,3 @@ class ClickCounter extends React.Component {
           ref={'clickLog' + i}
-        />,
+        />
       );
@@ -80,3 +81,3 @@ class TestRefsComponent extends React.Component {
         <GeneralContainerComponent ref="myContainer">
-          <ClickCounter ref="myCounter" initialCount={1} />
+          <ClickCounter ref="myCounter" initialCount={1}/>
         </GeneralContainerComponent>
@@ -91,9 +92,7 @@ class TestRefsComponent extends React.Component {
 var renderTestRefsComponent = function() {
-  var testRefsComponent = ReactTestUtils.renderIntoDocument(
-    <TestRefsComponent />,
-  );
+  var testRefsComponent =
+      ReactTestUtils.renderIntoDocument(<TestRefsComponent />);
 
-  reactComponentExpect(testRefsComponent).toBeCompositeComponentWithType(
-    TestRefsComponent,
-  );
+  reactComponentExpect(testRefsComponent)
+      .toBeCompositeComponentWithType(TestRefsComponent);
 
@@ -102,6 +101,6 @@ var renderTestRefsComponent = function() {
 
-  reactComponentExpect(generalContainer).toBeCompositeComponentWithType(
-    GeneralContainerComponent,
-  );
-  reactComponentExpect(counter).toBeCompositeComponentWithType(ClickCounter);
+  reactComponentExpect(generalContainer)
+      .toBeCompositeComponentWithType(GeneralContainerComponent);
+  reactComponentExpect(counter)
+      .toBeCompositeComponentWithType(ClickCounter);
 
@@ -110,7 +109,6 @@ var renderTestRefsComponent = function() {
 
+
 var expectClickLogsLengthToBe = function(instance, length) {
-  var clickLogs = ReactTestUtils.scryRenderedDOMComponentsWithClass(
-    instance,
-    'clickLogDiv',
-  );
+  var clickLogs =
+    ReactTestUtils.scryRenderedDOMComponentsWithClass(instance, 'clickLogDiv');
   expect(clickLogs.length).toBe(length);
@@ -130,6 +128,7 @@ describe('reactiverefs', () => {
     var testRefsComponent = renderTestRefsComponent();
-    var clickIncrementer = ReactTestUtils.findRenderedDOMComponentWithClass(
-      testRefsComponent,
-      'clickIncrementer',
-    );
+    var clickIncrementer =
+      ReactTestUtils.findRenderedDOMComponentWithClass(
+        testRefsComponent,
+        'clickIncrementer'
+      );
 
@@ -151,5 +150,9 @@ describe('reactiverefs', () => {
     expectClickLogsLengthToBe(testRefsComponent, 1);
+
   });
+
 });
 
+
+
 /**
@@ -199,14 +202,8 @@ describe('ref swapping', () => {
 
-    var firstDiv = ReactTestUtils.findRenderedDOMComponentWithClass(
-      refHopsAround,
-      'first',
-    );
-    var secondDiv = ReactTestUtils.findRenderedDOMComponentWithClass(
-      refHopsAround,
-      'second',
-    );
-    var thirdDiv = ReactTestUtils.findRenderedDOMComponentWithClass(
-      refHopsAround,
-      'third',
-    );
+    var firstDiv =
+      ReactTestUtils.findRenderedDOMComponentWithClass(refHopsAround, 'first');
+    var secondDiv =
+      ReactTestUtils.findRenderedDOMComponentWithClass(refHopsAround, 'second');
+    var thirdDiv =
+      ReactTestUtils.findRenderedDOMComponentWithClass(refHopsAround, 'third');
 
@@ -236,2 +233,3 @@ describe('ref swapping', () => {
 
+
   it('always has a value for this.refs', () => {
diff --git a/src/renderers/shared/stack/reconciler/instantiateReactComponent.js b/src/renderers/shared/stack/reconciler/instantiateReactComponent.js
index 08484b27c..bc5b1eeec 100644
--- a/src/renderers/shared/stack/reconciler/instantiateReactComponent.js
+++ b/src/renderers/shared/stack/reconciler/instantiateReactComponent.js
@@ -68,3 +68,6 @@ function instantiateReactComponent(node, shouldHaveDebugID) {
     var type = element.type;
-    if (typeof type !== 'function' && typeof type !== 'string') {
+    if (
+      typeof type !== 'function' &&
+      typeof type !== 'string'
+    ) {
       var info = '';
@@ -73,5 +76,5 @@ function instantiateReactComponent(node, shouldHaveDebugID) {
           type === undefined ||
-          (typeof type === 'object' &&
-            type !== null &&
-            Object.keys(type).length === 0)
+          typeof type === 'object' &&
+          type !== null &&
+          Object.keys(type).length === 0
         ) {
@@ -79,3 +82,3 @@ function instantiateReactComponent(node, shouldHaveDebugID) {
             ' You likely forgot to export your component from the file ' +
-            "it's defined in.";
+            'it\'s defined in.';
         }
@@ -86,3 +89,3 @@ function instantiateReactComponent(node, shouldHaveDebugID) {
         'Element type is invalid: expected a string (for built-in components) ' +
-          'or a class/function (for composite components) but got: %s.%s',
+        'or a class/function (for composite components) but got: %s.%s',
         type == null ? type : typeof type,
@@ -111,3 +114,7 @@ function instantiateReactComponent(node, shouldHaveDebugID) {
   } else {
-    invariant(false, 'Encountered invalid React node of type %s', typeof node);
+    invariant(
+      false,
+      'Encountered invalid React node of type %s',
+      typeof node
+    );
   }
@@ -117,6 +124,6 @@ function instantiateReactComponent(node, shouldHaveDebugID) {
       typeof instance.mountComponent === 'function' &&
-        typeof instance.receiveComponent === 'function' &&
-        typeof instance.getHostNode === 'function' &&
-        typeof instance.unmountComponent === 'function',
-      'Only React Components can be mounted.',
+      typeof instance.receiveComponent === 'function' &&
+      typeof instance.getHostNode === 'function' &&
+      typeof instance.unmountComponent === 'function',
+      'Only React Components can be mounted.'
     );
@@ -150,3 +157,3 @@ Object.assign(
     _instantiateReactComponent: instantiateReactComponent,
-  },
+  }
 );
diff --git a/src/renderers/shared/utils/CallbackQueue.js b/src/renderers/shared/utils/CallbackQueue.js
index 00284508b..4a24366e7 100644
--- a/src/renderers/shared/utils/CallbackQueue.js
+++ b/src/renderers/shared/utils/CallbackQueue.js
@@ -67,3 +67,3 @@ class CallbackQueue<T> {
         callbacks.length === contexts.length,
-        'Mismatched list of contexts in callback queue',
+        'Mismatched list of contexts in callback queue'
       );
diff --git a/src/renderers/shared/utils/ReactErrorUtils.js b/src/renderers/shared/utils/ReactErrorUtils.js
index d9b1c067e..1295908b8 100644
--- a/src/renderers/shared/utils/ReactErrorUtils.js
+++ b/src/renderers/shared/utils/ReactErrorUtils.js
@@ -65,8 +65,6 @@ if (__DEV__) {
    */
-  if (
-    typeof window !== 'undefined' &&
-    typeof window.dispatchEvent === 'function' &&
-    typeof document !== 'undefined' &&
-    typeof document.createEvent === 'function'
-  ) {
+  if (typeof window !== 'undefined' &&
+      typeof window.dispatchEvent === 'function' &&
+      typeof document !== 'undefined' &&
+      typeof document.createEvent === 'function') {
     var fakeNode = document.createElement('react');
diff --git a/src/renderers/shared/utils/Transaction.js b/src/renderers/shared/utils/Transaction.js
index 4fbe9d88e..afa8bc9b3 100644
--- a/src/renderers/shared/utils/Transaction.js
+++ b/src/renderers/shared/utils/Transaction.js
@@ -109,4 +109,2 @@ var TransactionImpl = {
 
-  /* eslint-disable space-before-function-paren */
-
   /**
@@ -129,12 +127,8 @@ var TransactionImpl = {
   perform: function<
-    A,
-    B,
-    C,
-    D,
-    E,
-    F,
-    G,
-    T: (a: A, b: B, c: C, d: D, e: E, f: F) => G,
-  >(method: T, scope: any, a: A, b: B, c: C, d: D, e: E, f: F): G {
-    /* eslint-enable space-before-function-paren */
+    A, B, C, D, E, F, G,
+    T: (a: A, b: B, c: C, d: D, e: E, f: F) => G // eslint-disable-line space-before-function-paren
+  >(
+    method: T, scope: any,
+    a: A, b: B, c: C, d: D, e: E, f: F,
+  ): G {
     invariant(
@@ -142,3 +136,3 @@ var TransactionImpl = {
       'Transaction.perform(...): Cannot initialize a transaction when there ' +
-        'is already an outstanding transaction.',
+      'is already an outstanding transaction.'
     );
@@ -163,3 +157,4 @@ var TransactionImpl = {
             this.closeAll(0);
-          } catch (err) {}
+          } catch (err) {
+          }
         } else {
@@ -186,5 +181,5 @@ var TransactionImpl = {
         this.wrapperInitData[i] = OBSERVED_ERROR;
-        this.wrapperInitData[i] = wrapper.initialize
-          ? wrapper.initialize.call(this)
-          : null;
+        this.wrapperInitData[i] = wrapper.initialize ?
+          wrapper.initialize.call(this) :
+          null;
       } finally {
@@ -196,3 +191,4 @@ var TransactionImpl = {
             this.initializeAll(i + 1);
-          } catch (err) {}
+          } catch (err) {
+          }
         }
@@ -211,3 +207,3 @@ var TransactionImpl = {
       this.isInTransaction(),
-      'Transaction.closeAll(): Cannot close transaction when none are open.',
+      'Transaction.closeAll(): Cannot close transaction when none are open.'
     );
@@ -235,3 +231,4 @@ var TransactionImpl = {
             this.closeAll(i + 1);
-          } catch (e) {}
+          } catch (e) {
+          }
         }
diff --git a/src/renderers/shared/utils/__tests__/Transaction-test.js b/src/renderers/shared/utils/__tests__/Transaction-test.js
index 768815626..e087ae0b4 100644
--- a/src/renderers/shared/utils/__tests__/Transaction-test.js
+++ b/src/renderers/shared/utils/__tests__/Transaction-test.js
@@ -13,5 +13,6 @@
 
+
 var Transaction;
 
-var INIT_ERRORED = 'initErrored'; // Just a dummy value to check for.
+var INIT_ERRORED = 'initErrored';     // Just a dummy value to check for.
 describe('Transaction', () => {
@@ -42,5 +43,5 @@ describe('Transaction', () => {
       this.reinitializeTransaction();
-      this.firstCloseParam = INIT_ERRORED; // WON'T be set to something else
-      this.secondCloseParam = INIT_ERRORED; // WILL be set to something else
-      this.lastCloseParam = INIT_ERRORED; // WON'T be set to something else
+      this.firstCloseParam = INIT_ERRORED;   // WON'T be set to something else
+      this.secondCloseParam = INIT_ERRORED;  // WILL be set to something else
+      this.lastCloseParam = INIT_ERRORED;    // WON'T be set to something else
     };
@@ -86,2 +87,3 @@ describe('Transaction', () => {
   it('should invoke closers and wrapped method when inits success', () => {
+
     var performSideEffect;
@@ -92,5 +94,5 @@ describe('Transaction', () => {
       this.reinitializeTransaction();
-      this.firstCloseParam = INIT_ERRORED; // WILL be set to something else
-      this.secondCloseParam = INIT_ERRORED; // WILL be set to something else
-      this.lastCloseParam = INIT_ERRORED; // WILL be set to something else
+      this.firstCloseParam = INIT_ERRORED;   // WILL be set to something else
+      this.secondCloseParam = INIT_ERRORED;  // WILL be set to something else
+      this.lastCloseParam = INIT_ERRORED;    // WILL be set to something else
     };
@@ -146,2 +148,3 @@ describe('Transaction', () => {
   it('should throw when wrapped operation throws', () => {
+
     var performSideEffect;
@@ -152,5 +155,5 @@ describe('Transaction', () => {
       this.reinitializeTransaction();
-      this.firstCloseParam = INIT_ERRORED; // WILL be set to something else
-      this.secondCloseParam = INIT_ERRORED; // WILL be set to something else
-      this.lastCloseParam = INIT_ERRORED; // WILL be set to something else
+      this.firstCloseParam = INIT_ERRORED;   // WILL be set to something else
+      this.secondCloseParam = INIT_ERRORED;  // WILL be set to something else
+      this.lastCloseParam = INIT_ERRORED;    // WILL be set to something else
     };
@@ -197,15 +200,13 @@ describe('Transaction', () => {
 
-    expect(
-      (function() {
-        var isTypeError = false;
-        try {
-          transaction.perform(function() {
-            throw new TypeError('Thrown in main wrapped operation');
-          });
-        } catch (err) {
-          isTypeError = err instanceof TypeError;
-        }
-        return isTypeError;
-      })(),
-    ).toBe(true);
+    expect(function() {
+      var isTypeError = false;
+      try {
+        transaction.perform(function() {
+          throw new TypeError('Thrown in main wrapped operation');
+        });
+      } catch (err) {
+        isTypeError = (err instanceof TypeError);
+      }
+      return isTypeError;
+    }()).toBe(true);
 
diff --git a/src/renderers/shared/utils/__tests__/accumulateInto-test.js b/src/renderers/shared/utils/__tests__/accumulateInto-test.js
index ab6ebbee5..d400eb9a0 100644
--- a/src/renderers/shared/utils/__tests__/accumulateInto-test.js
+++ b/src/renderers/shared/utils/__tests__/accumulateInto-test.js
@@ -16,2 +16,3 @@ var accumulateInto;
 describe('accumulateInto', () => {
+
   beforeEach(() => {
@@ -24,3 +25,3 @@ describe('accumulateInto', () => {
     }).toThrowError(
-      'accumulateInto(...): Accumulated items must not be null or undefined.',
+      'accumulateInto(...): Accumulated items must not be null or undefined.'
     );
diff --git a/src/renderers/shared/utils/__tests__/adler32-test.js b/src/renderers/shared/utils/__tests__/adler32-test.js
index ab6c7a028..16be434f6 100644
--- a/src/renderers/shared/utils/__tests__/adler32-test.js
+++ b/src/renderers/shared/utils/__tests__/adler32-test.js
@@ -28,3 +28,3 @@ describe('adler32', () => {
 
-  it("doesn't barf on large inputs", () => {
+  it('doesn\'t barf on large inputs', () => {
     var str = '';
@@ -36,3 +36,3 @@ describe('adler32', () => {
 
-  it("doesn't barf on international inputs", () => {
+  it('doesn\'t barf on international inputs', () => {
     var str = 'Linux 是一個真棒操作系統!';
diff --git a/src/renderers/shared/utils/accumulate.js b/src/renderers/shared/utils/accumulate.js
index ee6261261..4c84da6f9 100644
--- a/src/renderers/shared/utils/accumulate.js
+++ b/src/renderers/shared/utils/accumulate.js
@@ -23,9 +23,6 @@ var invariant = require('invariant');
  */
-function accumulate<T>(
-  current: ?(T | Array<T>),
-  next: T | Array<T>,
-): T | Array<T> {
+function accumulate<T>(current: ?(T | Array<T>), next: T | Array<T>): T | Array<T> {
   invariant(
     next != null,
-    'accumulate(...): Accumulated items must be not be null or undefined.',
+    'accumulate(...): Accumulated items must be not be null or undefined.'
   );
diff --git a/src/renderers/shared/utils/accumulateInto.js b/src/renderers/shared/utils/accumulateInto.js
index 803dbd466..3e212ce13 100644
--- a/src/renderers/shared/utils/accumulateInto.js
+++ b/src/renderers/shared/utils/accumulateInto.js
@@ -29,9 +29,6 @@ var invariant = require('invariant');
 
-function accumulateInto<T>(
-  current: ?(T | Array<T>),
-  next: T | Array<T>,
-): T | Array<T> {
+function accumulateInto<T>(current: ?(T | Array<T>), next: T | Array<T>): T | Array<T> {
   invariant(
     next != null,
-    'accumulateInto(...): Accumulated items must not be null or undefined.',
+    'accumulateInto(...): Accumulated items must not be null or undefined.'
   );
diff --git a/src/renderers/shared/utils/adler32.js b/src/renderers/shared/utils/adler32.js
index 4013f2b26..45d7c005b 100644
--- a/src/renderers/shared/utils/adler32.js
+++ b/src/renderers/shared/utils/adler32.js
@@ -30,3 +30,3 @@ function adler32(data: string): number {
     for (; i < n; i += 4) {
-      b +=
+      b += (
         (a += data.charCodeAt(i)) +
@@ -34,3 +34,4 @@ function adler32(data: string): number {
         (a += data.charCodeAt(i + 2)) +
-        (a += data.charCodeAt(i + 3));
+        (a += data.charCodeAt(i + 3))
+      );
     }
@@ -40,3 +41,3 @@ function adler32(data: string): number {
   for (; i < l; i++) {
-    b += a += data.charCodeAt(i);
+    b += (a += data.charCodeAt(i));
   }
diff --git a/src/renderers/shared/utils/forEachAccumulated.js b/src/renderers/shared/utils/forEachAccumulated.js
index 4ee784d5e..bdab3ca86 100644
--- a/src/renderers/shared/utils/forEachAccumulated.js
+++ b/src/renderers/shared/utils/forEachAccumulated.js
@@ -23,3 +23,3 @@ function forEachAccumulated<T>(
   arr: ?(T | Array<T>),
-  cb: (elem: T) => void,
+  cb: ((elem: T) => void),
   scope: ?any,
diff --git a/src/renderers/shared/utils/isTextInputElement.js b/src/renderers/shared/utils/isTextInputElement.js
index 633c19ce3..e464daae3 100644
--- a/src/renderers/shared/utils/isTextInputElement.js
+++ b/src/renderers/shared/utils/isTextInputElement.js
@@ -18,17 +18,17 @@
 var supportedInputTypes: {[key: string]: true | void} = {
-  color: true,
-  date: true,
-  datetime: true,
+  'color': true,
+  'date': true,
+  'datetime': true,
   'datetime-local': true,
-  email: true,
-  month: true,
-  number: true,
-  password: true,
-  range: true,
-  search: true,
-  tel: true,
-  text: true,
-  time: true,
-  url: true,
-  week: true,
+  'email': true,
+  'month': true,
+  'number': true,
+  'password': true,
+  'range': true,
+  'search': true,
+  'tel': true,
+  'text': true,
+  'time': true,
+  'url': true,
+  'week': true,
 };
diff --git a/src/renderers/testing/ReactShallowRenderer.js b/src/renderers/testing/ReactShallowRenderer.js
index 17fe612f7..b6b565f82 100644
--- a/src/renderers/testing/ReactShallowRenderer.js
+++ b/src/renderers/testing/ReactShallowRenderer.js
@@ -25,4 +25,8 @@ var invariant = require('invariant');
 function injectDefaults() {
-  ReactUpdates.injection.injectReconcileTransaction(ReactReconcileTransaction);
-  ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
+  ReactUpdates.injection.injectReconcileTransaction(
+    ReactReconcileTransaction
+  );
+  ReactUpdates.injection.injectBatchingStrategy(
+    ReactDefaultBatchingStrategy
+  );
 }
@@ -60,11 +64,16 @@ var ShallowComponentWrapper = function(element) {
 };
-Object.assign(ShallowComponentWrapper.prototype, ReactCompositeComponent, {
-  _constructComponent: ReactCompositeComponent._constructComponentWithoutOwner,
-  _instantiateReactComponent: function(element) {
-    return new NoopInternalComponent(element);
-  },
-  _replaceNodeWithMarkup: function() {},
-  _renderValidatedComponent:
-    ReactCompositeComponent._renderValidatedComponentWithoutOwnerOrContext,
-});
+Object.assign(
+  ShallowComponentWrapper.prototype,
+  ReactCompositeComponent, {
+    _constructComponent:
+      ReactCompositeComponent._constructComponentWithoutOwner,
+    _instantiateReactComponent: function(element) {
+      return new NoopInternalComponent(element);
+    },
+    _replaceNodeWithMarkup: function() {},
+    _renderValidatedComponent:
+      ReactCompositeComponent
+        ._renderValidatedComponentWithoutOwnerOrContext,
+  }
+);
 
@@ -90,6 +99,6 @@ class ReactShallowRenderer {
       'ReactShallowRenderer render(): Invalid component element.%s',
-      typeof element === 'function'
-        ? ' Instead of passing a component class, make sure to instantiate ' +
-            'it by passing it to React.createElement.'
-        : '',
+      typeof element === 'function' ?
+        ' Instead of passing a component class, make sure to instantiate ' +
+        'it by passing it to React.createElement.' :
+        ''
     );
@@ -98,5 +107,5 @@ class ReactShallowRenderer {
       'ReactShallowRenderer render(): Shallow rendering works only with custom ' +
-        'components, not primitives (%s). Instead of calling `.render(el)` and ' +
-        'inspecting the rendered output, look at `el.props` directly instead.',
-      element.type,
+      'components, not primitives (%s). Instead of calling `.render(el)` and ' +
+      'inspecting the rendered output, look at `el.props` directly instead.',
+      element.type
     );
@@ -112,6 +121,5 @@ class ReactShallowRenderer {
     return (
-      (this._instance &&
-        this._instance._renderedComponent &&
-        this._instance._renderedComponent._renderedOutput) ||
-      null
+      (this._instance && this._instance._renderedComponent &&
+      this._instance._renderedComponent._renderedOutput)
+      || null
     );
@@ -123,7 +131,2 @@ class ReactShallowRenderer {
   }
-  unstable_batchedUpdates(callback, bookkeeping) {
-    // This is used by Enzyme for fake-simulating events in shallow mode.
-    injectDefaults();
-    return ReactUpdates.batchedUpdates(callback, bookkeeping);
-  }
   _render(element, transaction, context) {
@@ -134,3 +137,3 @@ class ReactShallowRenderer {
         transaction,
-        context,
+        context
       );
@@ -138,10 +141,3 @@ class ReactShallowRenderer {
       var instance = new ShallowComponentWrapper(element);
-      ReactReconciler.mountComponent(
-        instance,
-        transaction,
-        null,
-        null,
-        context,
-        0,
-      );
+      ReactReconciler.mountComponent(instance, transaction, null, null, context, 0);
       this._instance = instance;
diff --git a/src/renderers/testing/ReactTestMount.js b/src/renderers/testing/ReactTestMount.js
index ce4f2162f..132c80135 100644
--- a/src/renderers/testing/ReactTestMount.js
+++ b/src/renderers/testing/ReactTestMount.js
@@ -56,7 +56,7 @@ TopLevelWrapper.isReactTopLevelWrapper = true;
 function mountComponentIntoNode(
-  componentInstance,
-  transaction,
-  hostParent,
-  hostContainerInfo,
-) {
+    componentInstance,
+    transaction,
+    hostParent,
+    hostContainerInfo
+  ) {
   var image = ReactReconciler.mountComponent(
@@ -66,3 +66,3 @@ function mountComponentIntoNode(
     hostContainerInfo,
-    emptyObject,
+    emptyObject
   );
@@ -79,3 +79,6 @@ function mountComponentIntoNode(
  */
-function batchedMountComponentIntoNode(componentInstance, options) {
+function batchedMountComponentIntoNode(
+    componentInstance,
+    options,
+  ) {
   var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(true);
@@ -87,3 +90,3 @@ function batchedMountComponentIntoNode(componentInstance, options) {
     null,
-    options,
+    options
   );
@@ -102,7 +105,8 @@ ReactTestInstance.prototype.update = function(nextElement) {
     this._component,
-    "ReactTestRenderer: .update() can't be called after unmount.",
+    "ReactTestRenderer: .update() can't be called after unmount."
+  );
+  var nextWrappedElement = React.createElement(
+    TopLevelWrapper,
+    { child: nextElement }
   );
-  var nextWrappedElement = React.createElement(TopLevelWrapper, {
-    child: nextElement,
-  });
   var component = this._component;
@@ -115,3 +119,3 @@ ReactTestInstance.prototype.update = function(nextElement) {
         transaction,
-        emptyObject,
+        emptyObject
       );
@@ -126,3 +130,6 @@ ReactTestInstance.prototype.unmount = function(nextElement) {
     transaction.perform(function() {
-      ReactReconciler.unmountComponent(component, false);
+      ReactReconciler.unmountComponent(
+        component,
+        false
+      );
     });
@@ -145,2 +152,3 @@ ReactTestInstance.prototype.toJSON = function() {
 var ReactTestMount = {
+
   render: function(
@@ -149,5 +157,6 @@ var ReactTestMount = {
   ): ReactTestInstance {
-    var nextWrappedElement = React.createElement(TopLevelWrapper, {
-      child: nextElement,
-    });
+    var nextWrappedElement = React.createElement(
+      TopLevelWrapper,
+      {child: nextElement},
+    );
 
@@ -165,2 +174,3 @@ var ReactTestMount = {
   },
+
 };
diff --git a/src/renderers/testing/ReactTestReconcileTransaction.js b/src/renderers/testing/ReactTestReconcileTransaction.js
index 379be398e..50585e08b 100644
--- a/src/renderers/testing/ReactTestReconcileTransaction.js
+++ b/src/renderers/testing/ReactTestReconcileTransaction.js
@@ -18,3 +18,3 @@ var ReactUpdateQueue = require('ReactUpdateQueue');
 
-import type {TestRendererOptions} from 'ReactTestMount';
+import type { TestRendererOptions } from 'ReactTestMount';
 
@@ -128,3 +128,3 @@ Object.assign(
   ReactTestReconcileTransaction,
-  Mixin,
+  Mixin
 );
diff --git a/src/renderers/testing/ReactTestRenderer.js b/src/renderers/testing/ReactTestRenderer.js
index ea63638ba..dc808f3cd 100644
--- a/src/renderers/testing/ReactTestRenderer.js
+++ b/src/renderers/testing/ReactTestRenderer.js
@@ -26,4 +26,4 @@ var invariant = require('invariant');
 
-import type {ReactElement} from 'ReactElementType';
-import type {ReactInstance} from 'ReactInstanceType';
+import type { ReactElement } from 'ReactElementType';
+import type { ReactInstance } from 'ReactInstanceType';
 
@@ -31,6 +31,6 @@ type ReactTestRendererJSON = {
   type: string,
-  props: {[propName: string]: string},
+  props: { [propName: string]: string },
   children: null | Array<string | ReactTestRendererJSON>,
-  $$typeof?: any,
-};
+  $$typeof?: any
+}
 
@@ -92,3 +92,3 @@ class ReactTestComponent {
       'hostContainerInfo should be populated before ' +
-        'getPublicInstance is called.',
+      'getPublicInstance is called.'
     );
@@ -133,3 +133,3 @@ Object.assign(ReactTestComponent.prototype, ReactMultiChild.Mixin);
 ReactUpdates.injection.injectReconcileTransaction(
-  ReactTestReconcileTransaction,
+  ReactTestReconcileTransaction
 );
diff --git a/src/renderers/testing/ReactTestTextComponent.js b/src/renderers/testing/ReactTestTextComponent.js
index deb2c674e..7c6c4de90 100644
--- a/src/renderers/testing/ReactTestTextComponent.js
+++ b/src/renderers/testing/ReactTestTextComponent.js
@@ -14,3 +14,3 @@
 
-import type {ReactText} from 'ReactTypes';
+import type { ReactText } from 'ReactTypes';
 
diff --git a/src/renderers/testing/__tests__/ReactTestRenderer-test.js b/src/renderers/testing/__tests__/ReactTestRenderer-test.js
index bc793202a..5eac2c1c1 100644
--- a/src/renderers/testing/__tests__/ReactTestRenderer-test.js
+++ b/src/renderers/testing/__tests__/ReactTestRenderer-test.js
@@ -17,2 +17,3 @@ var ReactTestRenderer = require('ReactTestRenderer');
 describe('ReactTestRenderer', () => {
+
   it('renders a simple component', () => {
@@ -24,3 +25,3 @@ describe('ReactTestRenderer', () => {
       type: 'a',
-      props: {role: 'link'},
+      props: { role: 'link' },
       children: null,
@@ -88,4 +89,7 @@ describe('ReactTestRenderer', () => {
       type: 'div',
-      props: {className: 'purple'},
-      children: [7, {type: 'moo', props: {}, children: null}],
+      props: { className: 'purple' },
+      children: [
+        7,
+        { type: 'moo', props: {}, children: null },
+      ],
     });
@@ -146,3 +150,3 @@ describe('ReactTestRenderer', () => {
         <span key="c">C</span>
-      </div>,
+      </div>
     );
@@ -163,3 +167,3 @@ describe('ReactTestRenderer', () => {
         <span key="b">B</span>
-      </div>,
+      </div>
     );
@@ -207,3 +211,3 @@ describe('ReactTestRenderer', () => {
     var log = [];
-    ReactTestRenderer.create(<div ref={r => log.push(r)} />);
+    ReactTestRenderer.create(<div ref={(r) => log.push(r)} />);
     expect(log).toEqual([null]);
@@ -231,4 +235,4 @@ describe('ReactTestRenderer', () => {
       'Stateless function components cannot be given refs ' +
-        '(See ref "foo" in Bar created by Foo). ' +
-        'Attempts to access this ref will fail.',
+      '(See ref "foo" in Bar created by Foo). ' +
+      'Attempts to access this ref will fail.'
     );
@@ -237,6 +241,6 @@ describe('ReactTestRenderer', () => {
   it('allows an optional createNodeMock function', () => {
-    var mockDivInstance = {appendChild: () => {}};
-    var mockInputInstance = {focus: () => {}};
-    var mockListItemInstance = {click: () => {}};
-    var mockAnchorInstance = {hover: () => {}};
+    var mockDivInstance = { appendChild: () => {} };
+    var mockInputInstance = { focus: () => {} };
+    var mockListItemInstance = { click: () => {} };
+    var mockAnchorInstance = { hover: () => {} };
     var log = [];
@@ -247,3 +251,5 @@ describe('ReactTestRenderer', () => {
       render() {
-        return <a ref="bar">Hello, world</a>;
+        return (
+          <a ref="bar">Hello, world</a>
+        );
       }
@@ -264,6 +270,10 @@ describe('ReactTestRenderer', () => {
     }
-    ReactTestRenderer.create(<div ref={r => log.push(r)} />, {createNodeMock});
-    ReactTestRenderer.create(<input ref={r => log.push(r)} />, {
-      createNodeMock,
-    });
+    ReactTestRenderer.create(
+      <div ref={(r) => log.push(r)} />,
+      {createNodeMock}
+    );
+    ReactTestRenderer.create(
+      <input ref={(r) => log.push(r)} />,
+      {createNodeMock},
+    );
     ReactTestRenderer.create(
@@ -272,7 +282,7 @@ describe('ReactTestRenderer', () => {
           <ul>
-            <li ref={r => log.push(r)} />
+            <li ref={(r) => log.push(r)} />
           </ul>
           <ul>
-            <li ref={r => log.push(r)} />
-            <li ref={r => log.push(r)} />
+            <li ref={(r) => log.push(r)} />
+            <li ref={(r) => log.push(r)} />
           </ul>
@@ -282,5 +292,13 @@ describe('ReactTestRenderer', () => {
     );
-    ReactTestRenderer.create(<Foo />, {createNodeMock});
-    ReactTestRenderer.create(<div ref={r => log.push(r)} />);
-    ReactTestRenderer.create(<div ref={r => log.push(r)} />, {});
+    ReactTestRenderer.create(
+      <Foo />,
+      {createNodeMock},
+    );
+    ReactTestRenderer.create(
+      <div ref={(r) => log.push(r)} />,
+    );
+    ReactTestRenderer.create(
+      <div ref={(r) => log.push(r)} />,
+      {}
+    );
     expect(log).toEqual([
@@ -303,5 +321,6 @@ describe('ReactTestRenderer', () => {
     }
-    const inst = ReactTestRenderer.create(<Foo />, {
-      createNodeMock: () => 'foo',
-    });
+    const inst = ReactTestRenderer.create(
+      <Foo />,
+      {createNodeMock: () => 'foo'}
+    );
     expect(() => inst.unmount()).not.toThrow();
@@ -319,5 +338,6 @@ describe('ReactTestRenderer', () => {
     }
-    const inst = ReactTestRenderer.create(<div><Foo /></div>, {
-      createNodeMock: () => 'foo',
-    });
+    const inst = ReactTestRenderer.create(
+      <div><Foo /></div>,
+      {createNodeMock: () => 'foo'}
+    );
     expect(() => inst.unmount()).not.toThrow();
@@ -334,8 +354,11 @@ describe('ReactTestRenderer', () => {
       render() {
-        return this.props.useDiv ? <div ref="foo" /> : <span ref="foo" />;
+        return this.props.useDiv
+          ? <div ref="foo" />
+          : <span ref="foo" />;
       }
     }
-    const inst = ReactTestRenderer.create(<Foo useDiv={true} />, {
-      createNodeMock,
-    });
+    const inst = ReactTestRenderer.create(
+      <Foo useDiv={true} />,
+      {createNodeMock}
+    );
     inst.update(<Foo useDiv={false} />);
@@ -402,2 +425,3 @@ describe('ReactTestRenderer', () => {
   });
+
 });
diff --git a/src/shared/types/ReactPropTypeLocationNames.js b/src/shared/types/ReactPropTypeLocationNames.js
index f416a1344..1b36b04cc 100644
--- a/src/shared/types/ReactPropTypeLocationNames.js
+++ b/src/shared/types/ReactPropTypeLocationNames.js
@@ -14,3 +14,3 @@
 
-import type {ReactPropTypeLocations} from 'ReactPropTypeLocations';
+import type { ReactPropTypeLocations } from 'ReactPropTypeLocations';
 
diff --git a/src/shared/types/ReactPropTypeLocations.js b/src/shared/types/ReactPropTypeLocations.js
index 9b0752a75..a2cb905e1 100644
--- a/src/shared/types/ReactPropTypeLocations.js
+++ b/src/shared/types/ReactPropTypeLocations.js
@@ -14,2 +14,5 @@
 
-export type ReactPropTypeLocations = 'prop' | 'context' | 'childContext';
+export type ReactPropTypeLocations =
+  'prop' |
+  'context' |
+  'childContext';
diff --git a/src/shared/types/checkReactTypeSpec.js b/src/shared/types/checkReactTypeSpec.js
index 44f45786b..06c2904a7 100644
--- a/src/shared/types/checkReactTypeSpec.js
+++ b/src/shared/types/checkReactTypeSpec.js
@@ -19,3 +19,3 @@ var warning = require('warning');
 
-import type {ReactPropTypeLocations} from 'ReactPropTypeLocations';
+import type { ReactPropTypeLocations } from 'ReactPropTypeLocations';
 
@@ -70,15 +70,8 @@ function checkReactTypeSpec(
           '%s: %s type `%s` is invalid; it must be a function, usually from ' +
-            'React.PropTypes.',
+          'React.PropTypes.',
           componentName || 'React class',
           ReactPropTypeLocationNames[location],
-          typeSpecName,
-        );
-        error = typeSpecs[typeSpecName](
-          values,
-          typeSpecName,
-          componentName,
-          location,
-          null,
-          ReactPropTypesSecret,
+          typeSpecName
         );
+        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
       } catch (ex) {
@@ -89,6 +82,6 @@ function checkReactTypeSpec(
         '%s: type specification of %s `%s` is invalid; the type checker ' +
-          'function must return `null` or an `Error` but returned a %s. ' +
-          'You may have forgotten to pass an argument to the type checker ' +
-          'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
-          'shape all require an argument).',
+        'function must return `null` or an `Error` but returned a %s. ' +
+        'You may have forgotten to pass an argument to the type checker ' +
+        'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
+        'shape all require an argument).',
         componentName || 'React class',
@@ -96,3 +89,3 @@ function checkReactTypeSpec(
         typeSpecName,
-        typeof error,
+        typeof error
       );
@@ -110,9 +103,5 @@ function checkReactTypeSpec(
           if (debugID !== null) {
-            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(
-              debugID,
-            );
+            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
           } else if (element !== null) {
-            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(
-              element,
-            );
+            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
           }
@@ -125,3 +114,3 @@ function checkReactTypeSpec(
           error.message,
-          componentStackInfo,
+          componentStackInfo
         );
diff --git a/src/shared/utils/KeyEscapeUtils.js b/src/shared/utils/KeyEscapeUtils.js
index b7ed7a00b..223b2c6b6 100644
--- a/src/shared/utils/KeyEscapeUtils.js
+++ b/src/shared/utils/KeyEscapeUtils.js
@@ -26,5 +26,8 @@ function escape(key: string): string {
   };
-  var escapedString = ('' + key).replace(escapeRegex, function(match) {
-    return escaperLookup[match];
-  });
+  var escapedString = ('' + key).replace(
+    escapeRegex,
+    function(match) {
+      return escaperLookup[match];
+    }
+  );
 
@@ -45,9 +48,11 @@ function unescape(key: string): string {
   };
-  var keySubstring = key[0] === '.' && key[1] === '$'
-    ? key.substring(2)
-    : key.substring(1);
+  var keySubstring = (key[0] === '.' && key[1] === '$')
+    ? key.substring(2) : key.substring(1);
 
-  return ('' + keySubstring).replace(unescapeRegex, function(match) {
-    return unescaperLookup[match];
-  });
+  return ('' + keySubstring).replace(
+    unescapeRegex,
+    function(match) {
+      return unescaperLookup[match];
+    }
+  );
 }
diff --git a/src/shared/utils/PooledClass.js b/src/shared/utils/PooledClass.js
index 10674b8d9..406a3f1ef 100644
--- a/src/shared/utils/PooledClass.js
+++ b/src/shared/utils/PooledClass.js
@@ -71,3 +71,3 @@ var standardReleaser = function(instance) {
     instance instanceof Klass,
-    'Trying to release an instance into a pool of a different type.',
+    'Trying to release an instance into a pool of a different type.'
   );
@@ -97,3 +97,3 @@ var addPoolingTo = function<T>(
 ): Class<T> & {
-  getPooled(): /* arguments of the constructor */ T,
+  getPooled(/* arguments of the constructor */): T,
   release(): void,
diff --git a/src/shared/utils/__tests__/PooledClass-test.js b/src/shared/utils/__tests__/PooledClass-test.js
index 3c206b74a..43ead312d 100644
--- a/src/shared/utils/__tests__/PooledClass-test.js
+++ b/src/shared/utils/__tests__/PooledClass-test.js
@@ -33,8 +33,10 @@ describe('Pooled class', () => {
 
-  it('should return the instance back into the pool when it gets released', () => {
-    var instance = PoolableClass.getPooled();
-    PoolableClass.release(instance);
-    expect(PoolableClass.instancePool.length).toBe(1);
-    expect(PoolableClass.instancePool[0]).toBe(instance);
-  });
+  it('should return the instance back into the pool when it gets released',
+    () => {
+      var instance = PoolableClass.getPooled();
+      PoolableClass.release(instance);
+      expect(PoolableClass.instancePool.length).toBe(1);
+      expect(PoolableClass.instancePool[0]).toBe(instance);
+    }
+  );
 
@@ -67,3 +69,3 @@ describe('Pooled class', () => {
       PoolableClassWithMultiArguments,
-      PooledClass.twoArgumentPooler,
+      PooledClass.twoArgumentPooler
     );
@@ -79,3 +81,5 @@ describe('Pooled class', () => {
     PoolableClassWithOneArgument.prototype.destructor = function() {};
-    PooledClass.addPoolingTo(PoolableClassWithOneArgument);
+    PooledClass.addPoolingTo(
+      PoolableClassWithOneArgument
+    );
     PoolableClassWithOneArgument.getPooled('new');
@@ -90,3 +94,5 @@ describe('Pooled class', () => {
     PoolableClassWithOneArgument.prototype.destructor = function() {};
-    PooledClass.addPoolingTo(PoolableClassWithOneArgument);
+    PooledClass.addPoolingTo(
+      PoolableClassWithOneArgument
+    );
     var instance = PoolableClassWithOneArgument.getPooled('new');
@@ -97,14 +103,16 @@ describe('Pooled class', () => {
 
-  it('should throw when the class releases an instance of a different type', () => {
-    var RandomClass = function() {};
-    RandomClass.prototype.destructor = function() {};
-    PooledClass.addPoolingTo(RandomClass);
-    var randomInstance = RandomClass.getPooled();
-    PoolableClass.getPooled();
-    expect(function() {
-      PoolableClass.release(randomInstance);
-    }).toThrowError(
-      'Trying to release an instance into a pool of a different type.',
-    );
-  });
+  it('should throw when the class releases an instance of a different type',
+    () => {
+      var RandomClass = function() {};
+      RandomClass.prototype.destructor = function() {};
+      PooledClass.addPoolingTo(RandomClass);
+      var randomInstance = RandomClass.getPooled();
+      PoolableClass.getPooled();
+      expect(function() {
+        PoolableClass.release(randomInstance);
+      }).toThrowError(
+        'Trying to release an instance into a pool of a different type.'
+      );
+    }
+  );
 
diff --git a/src/shared/utils/__tests__/reactProdInvariant-test.js b/src/shared/utils/__tests__/reactProdInvariant-test.js
index d4348818d..37f8e6b6d 100644
--- a/src/shared/utils/__tests__/reactProdInvariant-test.js
+++ b/src/shared/utils/__tests__/reactProdInvariant-test.js
@@ -25,5 +25,5 @@ describe('reactProdInvariant', () => {
       'Minified React error #124; visit ' +
-        'http://facebook.github.io/react/docs/error-decoder.html?invariant=124&args[]=foo&args[]=bar' +
-        ' for the full message or use the non-minified dev environment' +
-        ' for full errors and additional helpful warnings.',
+      'http://facebook.github.io/react/docs/error-decoder.html?invariant=124&args[]=foo&args[]=bar' +
+      ' for the full message or use the non-minified dev environment' +
+      ' for full errors and additional helpful warnings.'
     );
@@ -34,5 +34,5 @@ describe('reactProdInvariant', () => {
       'Minified React error #20; visit ' +
-        'http://facebook.github.io/react/docs/error-decoder.html?invariant=20' +
-        ' for the full message or use the non-minified dev environment' +
-        ' for full errors and additional helpful warnings.',
+      'http://facebook.github.io/react/docs/error-decoder.html?invariant=20' +
+      ' for the full message or use the non-minified dev environment' +
+      ' for full errors and additional helpful warnings.'
     );
@@ -43,5 +43,5 @@ describe('reactProdInvariant', () => {
       'Minified React error #77; visit ' +
-        'http://facebook.github.io/react/docs/error-decoder.html?invariant=77&args[]=%3Cdiv%3E&args[]=%26%3Fbar' +
-        ' for the full message or use the non-minified dev environment' +
-        ' for full errors and additional helpful warnings.',
+      'http://facebook.github.io/react/docs/error-decoder.html?invariant=77&args[]=%3Cdiv%3E&args[]=%26%3Fbar' +
+      ' for the full message or use the non-minified dev environment' +
+      ' for full errors and additional helpful warnings.'
     );
diff --git a/src/shared/utils/__tests__/traverseAllChildren-test.js b/src/shared/utils/__tests__/traverseAllChildren-test.js
index b339f6419..0514bf0d5 100644
--- a/src/shared/utils/__tests__/traverseAllChildren-test.js
+++ b/src/shared/utils/__tests__/traverseAllChildren-test.js
@@ -33,5 +33,4 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn = jasmine
-      .createSpy()
-      .and.callFake(function(context, kid, key, index) {
+    var traverseFn =
+      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -47,3 +46,3 @@ describe('traverseAllChildren', () => {
       simpleKid,
-      '.$simple',
+      '.$simple'
     );
@@ -54,5 +53,4 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn = jasmine
-      .createSpy()
-      .and.callFake(function(context, kid, key, index) {
+    var traverseFn =
+      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -63,3 +61,7 @@ describe('traverseAllChildren', () => {
     traverseAllChildren(instance.props.children, traverseFn, traverseContext);
-    expect(traverseFn).toHaveBeenCalledWith(traverseContext, simpleKid, '.0');
+    expect(traverseFn).toHaveBeenCalledWith(
+      traverseContext,
+      simpleKid,
+      '.0'
+    );
     expect(traverseContext.length).toEqual(1);
@@ -70,5 +72,4 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn = jasmine
-      .createSpy()
-      .and.callFake(function(context, kid, key, index) {
+    var traverseFn =
+      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -79,3 +80,7 @@ describe('traverseAllChildren', () => {
     traverseAllChildren(instance.props.children, traverseFn, traverseContext);
-    expect(traverseFn).toHaveBeenCalledWith(traverseContext, simpleKid, '.0');
+    expect(traverseFn).toHaveBeenCalledWith(
+      traverseContext,
+      simpleKid,
+      '.0'
+    );
     expect(traverseContext.length).toEqual(1);
@@ -83,3 +88,3 @@ describe('traverseAllChildren', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Warning: Each child in an array or iterator should have a unique "key" prop.',
+      'Warning: Each child in an array or iterator should have a unique "key" prop.'
     );
@@ -95,5 +100,4 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn = jasmine
-      .createSpy()
-      .and.callFake(function(context, kid, key, index) {
+    var traverseFn =
+      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -112,7 +116,19 @@ describe('traverseAllChildren', () => {
     traverseAllChildren(instance.props.children, traverseFn, traverseContext);
-    expect(traverseFn).toHaveBeenCalledWith(traverseContext, zero, '.$keyZero');
+    expect(traverseFn).toHaveBeenCalledWith(
+      traverseContext,
+      zero,
+      '.$keyZero'
+    );
     expect(traverseFn).toHaveBeenCalledWith(traverseContext, one, '.1');
-    expect(traverseFn).toHaveBeenCalledWith(traverseContext, two, '.$keyTwo');
+    expect(traverseFn).toHaveBeenCalledWith(
+      traverseContext,
+      two,
+      '.$keyTwo'
+    );
     expect(traverseFn).toHaveBeenCalledWith(traverseContext, three, '.3');
-    expect(traverseFn).toHaveBeenCalledWith(traverseContext, four, '.$keyFour');
+    expect(traverseFn).toHaveBeenCalledWith(
+      traverseContext,
+      four,
+      '.$keyFour'
+    );
   });
@@ -125,5 +141,4 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn = jasmine
-      .createSpy()
-      .and.callFake(function(context, kid, key, index) {
+    var traverseFn =
+      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -150,19 +165,29 @@ describe('traverseAllChildren', () => {
 
-    expect(traverseFn).toHaveBeenCalledWith(traverseContext, div, '.$divNode');
     expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext,
-      <span key="span/.$spanNode" />,
-      '.1:0:$span/.$spanNode',
+      traverseContext, div, '.$divNode'
     );
     expect(traverseFn).toHaveBeenCalledWith(
-      traverseContext,
-      <a key="a/.$aNode" />,
-      '.2:$a/.$aNode',
-    );
-    expect(traverseFn).toHaveBeenCalledWith(traverseContext, 'string', '.3');
-    expect(traverseFn).toHaveBeenCalledWith(traverseContext, 1234, '.4');
-    expect(traverseFn).toHaveBeenCalledWith(traverseContext, null, '.5');
-    expect(traverseFn).toHaveBeenCalledWith(traverseContext, null, '.6');
-    expect(traverseFn).toHaveBeenCalledWith(traverseContext, null, '.7');
-    expect(traverseFn).toHaveBeenCalledWith(traverseContext, null, '.8');
+      traverseContext, <span key="span/.$spanNode" />, '.1:0:$span/.$spanNode'
+    );
+    expect(traverseFn).toHaveBeenCalledWith(
+      traverseContext, <a key="a/.$aNode" />, '.2:$a/.$aNode'
+    );
+    expect(traverseFn).toHaveBeenCalledWith(
+      traverseContext, 'string', '.3'
+    );
+    expect(traverseFn).toHaveBeenCalledWith(
+      traverseContext, 1234, '.4'
+    );
+    expect(traverseFn).toHaveBeenCalledWith(
+      traverseContext, null, '.5'
+    );
+    expect(traverseFn).toHaveBeenCalledWith(
+      traverseContext, null, '.6'
+    );
+    expect(traverseFn).toHaveBeenCalledWith(
+      traverseContext, null, '.7'
+    );
+    expect(traverseFn).toHaveBeenCalledWith(
+      traverseContext, null, '.8'
+    );
   });
@@ -182,6 +207,6 @@ describe('traverseAllChildren', () => {
 
+
     var traverseContext = [];
-    var traverseFn = jasmine
-      .createSpy()
-      .and.callFake(function(context, kid, key, index) {
+    var traverseFn =
+      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -190,11 +215,9 @@ describe('traverseAllChildren', () => {
     var instance = (
-      <div>
-        {[
-          frag({
-            firstHalfKey: [zero, one, two],
-            secondHalfKey: [three, four],
-            keyFive: five,
-          }),
-        ]}
-      </div>
+      <div>{[
+        frag({
+          firstHalfKey: [zero, one, two],
+          secondHalfKey: [three, four],
+          keyFive: five,
+        }),
+      ]}</div>
     );
@@ -207,3 +230,3 @@ describe('traverseAllChildren', () => {
       <div key="firstHalfKey/.$keyZero" />,
-      '.0:$firstHalfKey/.$keyZero',
+      '.0:$firstHalfKey/.$keyZero'
     );
@@ -213,3 +236,3 @@ describe('traverseAllChildren', () => {
       <div key="firstHalfKey/.$keyTwo" />,
-      '.0:$firstHalfKey/.$keyTwo',
+      '.0:$firstHalfKey/.$keyTwo'
     );
@@ -219,3 +242,3 @@ describe('traverseAllChildren', () => {
       <div key="secondHalfKey/.$keyFour" />,
-      '.0:$secondHalfKey/.$keyFour',
+      '.0:$secondHalfKey/.$keyFour'
     );
@@ -225,3 +248,3 @@ describe('traverseAllChildren', () => {
       <div key="keyFive/.$keyFiveInner" />,
-      '.0:$keyFive/.$keyFiveInner',
+      '.0:$keyFive/.$keyFiveInner'
     );
@@ -233,5 +256,4 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn = jasmine
-      .createSpy()
-      .and.callFake(function(context, kid, key, index) {
+    var traverseFn =
+      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
         context.push(true);
@@ -251,3 +273,3 @@ describe('traverseAllChildren', () => {
       zeroForceKey,
-      '.$keyZero',
+      '.$keyZero'
     );
@@ -256,3 +278,3 @@ describe('traverseAllChildren', () => {
       oneForceKey,
-      '.$keyOne',
+      '.$keyOne'
     );
@@ -278,5 +300,4 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn = jasmine
-      .createSpy()
-      .and.callFake(function(context, kid, key, index) {
+    var traverseFn =
+      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
         context.push(kid);
@@ -296,3 +317,3 @@ describe('traverseAllChildren', () => {
       traverseContext[0],
-      '.0',
+      '.0'
     );
@@ -301,3 +322,3 @@ describe('traverseAllChildren', () => {
       traverseContext[1],
-      '.1',
+      '.1'
     );
@@ -306,3 +327,3 @@ describe('traverseAllChildren', () => {
       traverseContext[2],
-      '.2',
+      '.2'
     );
@@ -311,3 +332,3 @@ describe('traverseAllChildren', () => {
     expect(console.error.calls.argsFor(0)[0]).toContain(
-      'Warning: Each child in an array or iterator should have a unique "key" prop.',
+      'Warning: Each child in an array or iterator should have a unique "key" prop.'
     );
@@ -332,5 +353,4 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn = jasmine
-      .createSpy()
-      .and.callFake(function(context, kid, key, index) {
+    var traverseFn =
+      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
         context.push(kid);
@@ -350,3 +370,3 @@ describe('traverseAllChildren', () => {
       traverseContext[0],
-      '.$#1',
+      '.$#1'
     );
@@ -355,3 +375,3 @@ describe('traverseAllChildren', () => {
       traverseContext[1],
-      '.$#2',
+      '.$#2'
     );
@@ -360,3 +380,3 @@ describe('traverseAllChildren', () => {
       traverseContext[2],
-      '.$#3',
+      '.$#3'
     );
@@ -384,5 +404,4 @@ describe('traverseAllChildren', () => {
     var traverseContext = [];
-    var traverseFn = jasmine
-      .createSpy()
-      .and.callFake(function(context, kid, key, index) {
+    var traverseFn =
+      jasmine.createSpy().and.callFake(function(context, kid, key, index) {
         context.push(kid);
@@ -402,3 +421,3 @@ describe('traverseAllChildren', () => {
       traverseContext[0],
-      '.$#1:0',
+      '.$#1:0'
     );
@@ -407,3 +426,3 @@ describe('traverseAllChildren', () => {
       traverseContext[1],
-      '.$#2:0',
+      '.$#2:0'
     );
@@ -412,3 +431,3 @@ describe('traverseAllChildren', () => {
       traverseContext[2],
-      '.$#3:0',
+      '.$#3:0'
     );
@@ -418,4 +437,4 @@ describe('traverseAllChildren', () => {
       'Warning: Using Maps as children is not yet fully supported. It is an ' +
-        'experimental feature that might be removed. Convert it to a sequence ' +
-        '/ iterable of keyed ReactElements instead.',
+      'experimental feature that might be removed. Convert it to a sequence ' +
+      '/ iterable of keyed ReactElements instead.'
     );
@@ -444,5 +463,17 @@ describe('traverseAllChildren', () => {
 
-      expect(traverseFn).toHaveBeenCalledWith(null, 5, '.0');
-      expect(traverseFn).toHaveBeenCalledWith(null, 12, '.1');
-      expect(traverseFn).toHaveBeenCalledWith(null, 13, '.2');
+      expect(traverseFn).toHaveBeenCalledWith(
+        null,
+        5,
+        '.0'
+      );
+      expect(traverseFn).toHaveBeenCalledWith(
+        null,
+        12,
+        '.1'
+      );
+      expect(traverseFn).toHaveBeenCalledWith(
+        null,
+        13,
+        '.2'
+      );
     } finally {
@@ -470,4 +501,12 @@ describe('traverseAllChildren', () => {
 
-    expect(traverseFn).toHaveBeenCalledWith(null, 'a', '.0');
-    expect(traverseFn).toHaveBeenCalledWith(null, 13, '.1');
+    expect(traverseFn).toHaveBeenCalledWith(
+      null,
+      'a',
+      '.0'
+    );
+    expect(traverseFn).toHaveBeenCalledWith(
+      null,
+      13,
+      '.1'
+    );
 
@@ -482,5 +521,5 @@ describe('traverseAllChildren', () => {
       'Objects are not valid as a React child (found: object with keys ' +
-        '{a, b}). If you meant to render a collection of children, use an ' +
-        'array instead or wrap the object using createFragment(object) from ' +
-        'the React add-ons.',
+      '{a, b}). If you meant to render a collection of children, use an ' +
+      'array instead or wrap the object using createFragment(object) from ' +
+      'the React add-ons.'
     );
@@ -495,4 +534,4 @@ describe('traverseAllChildren', () => {
       'Objects are not valid as a React child (found: /abc/). If you meant ' +
-        'to render a collection of children, use an array instead or wrap the ' +
-        'object using createFragment(object) from the React add-ons.',
+      'to render a collection of children, use an array instead or wrap the ' +
+      'object using createFragment(object) from the React add-ons.'
     );
@@ -505,3 +544,5 @@ describe('traverseAllChildren', () => {
       render() {
-        return <div>{new Map([['foo', 0], ['bar', 1]])}</div>;
+        return (
+          <div>{new Map([['foo', 0], ['bar', 1]])}</div>
+        );
       }
@@ -514,4 +555,4 @@ describe('traverseAllChildren', () => {
       'Warning: Using Maps as children is not yet fully supported. It is an ' +
-        'experimental feature that might be removed. Convert it to a sequence ' +
-        '/ iterable of keyed ReactElements instead. Check the render method of `Parent`.',
+      'experimental feature that might be removed. Convert it to a sequence ' +
+      '/ iterable of keyed ReactElements instead. Check the render method of `Parent`.'
     );
diff --git a/src/shared/utils/deprecated.js b/src/shared/utils/deprecated.js
index 81e24cfd9..e8cc2e153 100644
--- a/src/shared/utils/deprecated.js
+++ b/src/shared/utils/deprecated.js
@@ -14,3 +14,3 @@
 
-var lowPriorityWarning = require('lowPriorityWarning');
+var warning = require('warning');
 
@@ -37,3 +37,3 @@ function deprecated<T: Function>(
     var newFn = function() {
-      lowPriorityWarning(
+      warning(
         warned,
@@ -43,5 +43,4 @@ function deprecated<T: Function>(
         // Otherwise the build tools will attempt to build a '%s' module.
-        'React.%s is deprecated. Please use %s.%s from require' +
-          "('%s') " +
-          'instead.',
+        'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' +
+        'instead.',
         fnName,
@@ -49,3 +48,3 @@ function deprecated<T: Function>(
         fnName,
-        newPackage,
+        newPackage
       );
diff --git a/src/shared/utils/flattenChildren.js b/src/shared/utils/flattenChildren.js
index 7274bb6dd..d3625bc4b 100644
--- a/src/shared/utils/flattenChildren.js
+++ b/src/shared/utils/flattenChildren.js
@@ -48,3 +48,3 @@ function flattenSingleChildIntoContext(
     const result = traverseContext;
-    const keyUnique = result[name] === undefined;
+    const keyUnique = (result[name] === undefined);
     if (__DEV__) {
@@ -57,6 +57,6 @@ function flattenSingleChildIntoContext(
           'flattenChildren(...): Encountered two children with the same key, ' +
-            '`%s`. Child keys must be unique; when two children share a key, only ' +
-            'the first child will be used.%s',
+          '`%s`. Child keys must be unique; when two children share a key, only ' +
+          'the first child will be used.%s',
           KeyEscapeUtils.unescape(name),
-          ReactComponentTreeHook.getStackAddendumByID(selfDebugID),
+          ReactComponentTreeHook.getStackAddendumByID(selfDebugID)
         );
@@ -78,3 +78,3 @@ function flattenChildren(
   selfDebugID?: number,
-): ?{[name: string]: ReactElement<any>} {
+): ?{ [name: string]: ReactElement<any> } {
   if (children == null) {
@@ -87,10 +87,9 @@ function flattenChildren(
       children,
-      (traverseContext, child, name) =>
-        flattenSingleChildIntoContext(
-          traverseContext,
-          child,
-          name,
-          selfDebugID,
-        ),
-      result,
+      (traverseContext, child, name) => flattenSingleChildIntoContext(
+        traverseContext,
+        child,
+        name,
+        selfDebugID
+      ),
+      result
     );
diff --git a/src/shared/utils/getIteratorFn.js b/src/shared/utils/getIteratorFn.js
index 017e5537b..4ed780aa2 100644
--- a/src/shared/utils/getIteratorFn.js
+++ b/src/shared/utils/getIteratorFn.js
@@ -33,6 +33,6 @@ var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
 function getIteratorFn(maybeIterable: ?any): ?(p: ReactElement<any>) => void {
-  var iteratorFn =
-    maybeIterable &&
-    ((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
-      maybeIterable[FAUX_ITERATOR_SYMBOL]);
+  var iteratorFn = maybeIterable && (
+    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
+    maybeIterable[FAUX_ITERATOR_SYMBOL]
+  );
   if (typeof iteratorFn === 'function') {
diff --git a/src/shared/utils/lowPriorityWarning.js b/src/shared/utils/lowPriorityWarning.js
deleted file mode 100644
index 6de5fee71..000000000
--- a/src/shared/utils/lowPriorityWarning.js
+++ /dev/null
@@ -1,58 +0,0 @@
-/**
- * Copyright 2014-2015, Facebook, Inc.
- * All rights reserved.
- *
- * This source code is licensed under the BSD-style license found in the
- * LICENSE file in the root directory of this source tree. An additional grant
- * of patent rights can be found in the PATENTS file in the same directory.
- *
- * @providesModule lowPriorityWarning
- */
-
-'use strict';
-
-/**
- * Forked from fbjs/warning:
- * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
- *
- * Only change is we use console.warn instead of console.error,
- * and do nothing when 'console' is not supported.
- * This really simplifies the code.
- * ---
- * Similar to invariant but only logs a warning if the condition is not met.
- * This can be used to log issues in development environments in critical
- * paths. Removing the logging code for production environments will keep the
- * same logic and follow the same code paths.
- */
-
-var lowPriorityWarning = function() {};
-
-if (__DEV__) {
-  const printWarning = function(format, ...args) {
-    var argIndex = 0;
-    var message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);
-    if (typeof console !== 'undefined') {
-      console.warn(message);
-    }
-    try {
-      // --- Welcome to debugging React ---
-      // This error was thrown as a convenience so that you can use this stack
-      // to find the callsite that caused this warning to fire.
-      throw new Error(message);
-    } catch (x) {}
-  };
-
-  lowPriorityWarning = function(condition, format, ...args) {
-    if (format === undefined) {
-      throw new Error(
-        '`warning(condition, format, ...args)` requires a warning ' +
-          'message argument',
-      );
-    }
-    if (!condition) {
-      printWarning(format, ...args);
-    }
-  };
-}
-
-module.exports = lowPriorityWarning;
diff --git a/src/shared/utils/reactProdInvariant.js b/src/shared/utils/reactProdInvariant.js
index 9390b9eaa..ed61b5958 100644
--- a/src/shared/utils/reactProdInvariant.js
+++ b/src/shared/utils/reactProdInvariant.js
@@ -22,8 +22,6 @@ function reactProdInvariant(code: string): void {
 
-  var message =
-    'Minified React error #' +
-    code +
-    '; visit ' +
-    'http://facebook.github.io/react/docs/error-decoder.html?invariant=' +
-    code;
+  var message = (
+    'Minified React error #' + code + '; visit ' +
+    'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code
+  );
 
@@ -33,7 +31,8 @@ function reactProdInvariant(code: string): void {
 
-  message +=
+  message += (
     ' for the full message or use the non-minified dev environment' +
-    ' for full errors and additional helpful warnings.';
+    ' for full errors and additional helpful warnings.'
+  );
 
-  var error: Error & {framesToPop?: number} = new Error(message);
+  var error: Error & { framesToPop?: number } = new Error(message);
   error.name = 'Invariant Violation';
diff --git a/src/shared/utils/traverseAllChildren.js b/src/shared/utils/traverseAllChildren.js
index 8bad6e6a9..60b5f147a 100644
--- a/src/shared/utils/traverseAllChildren.js
+++ b/src/shared/utils/traverseAllChildren.js
@@ -67,3 +67,3 @@ function traverseAllChildrenImpl(
   callback,
-  traverseContext,
+  traverseContext
 ) {
@@ -76,10 +76,8 @@ function traverseAllChildrenImpl(
 
-  if (
-    children === null ||
-    type === 'string' ||
-    type === 'number' ||
-    // The following is inlined from ReactElement. This means we can optimize
-    // some checks. React Fiber also inlines this logic for similar purposes.
-    (type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE)
-  ) {
+  if (children === null ||
+      type === 'string' ||
+      type === 'number' ||
+      // The following is inlined from ReactElement. This means we can optimize
+      // some checks. React Fiber also inlines this logic for similar purposes.
+      (type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE)) {
     callback(
@@ -89,3 +87,3 @@ function traverseAllChildrenImpl(
       // so that it's consistent if the number of children grows.
-      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,
+      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar
     );
@@ -107,3 +105,3 @@ function traverseAllChildrenImpl(
         callback,
-        traverseContext,
+        traverseContext
       );
@@ -124,3 +122,3 @@ function traverseAllChildrenImpl(
             callback,
-            traverseContext,
+            traverseContext
           );
@@ -133,6 +131,3 @@ function traverseAllChildrenImpl(
             if (mapsAsChildrenOwnerName) {
-              mapsAsChildrenAddendum =
-                ' Check the render method of `' +
-                mapsAsChildrenOwnerName +
-                '`.';
+              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
             }
@@ -142,5 +137,5 @@ function traverseAllChildrenImpl(
             'Using Maps as children is not yet fully supported. It is an ' +
-              'experimental feature that might be removed. Convert it to a ' +
-              'sequence / iterable of keyed ReactElements instead.%s',
-            mapsAsChildrenAddendum,
+            'experimental feature that might be removed. Convert it to a ' +
+            'sequence / iterable of keyed ReactElements instead.%s',
+            mapsAsChildrenAddendum
           );
@@ -153,7 +148,7 @@ function traverseAllChildrenImpl(
             child = entry[1];
-            nextName =
+            nextName = (
               nextNamePrefix +
-              KeyEscapeUtils.escape(entry[0]) +
-              SUBSEPARATOR +
-              getComponentKey(child, 0);
+              KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR +
+              getComponentKey(child, 0)
+            );
             subtreeCount += traverseAllChildrenImpl(
@@ -162,3 +157,3 @@ function traverseAllChildrenImpl(
               callback,
-              traverseContext,
+              traverseContext
             );
@@ -176,3 +171,3 @@ function traverseAllChildrenImpl(
           addendum =
-            " It looks like you're using an element created by a different " +
+            ' It looks like you\'re using an element created by a different ' +
             'version of React. Make sure to use only one copy of React.';
@@ -190,6 +185,6 @@ function traverseAllChildrenImpl(
         'Objects are not valid as a React child (found: %s).%s',
-        childrenString === '[object Object]'
-          ? 'object with keys {' + Object.keys(children).join(', ') + '}'
-          : childrenString,
-        addendum,
+        childrenString === '[object Object]' ?
+          'object with keys {' + Object.keys(children).join(', ') + '}' :
+          childrenString,
+        addendum
       );
diff --git a/src/test/ReactComponentTreeTestUtils.js b/src/test/ReactComponentTreeTestUtils.js
index 889e72b11..fd7ed9b1a 100644
--- a/src/test/ReactComponentTreeTestUtils.js
+++ b/src/test/ReactComponentTreeTestUtils.js
@@ -16,5 +16,4 @@ var ReactComponentTreeHook = require('ReactComponentTreeHook');
 function getRootDisplayNames() {
-  return ReactComponentTreeHook.getRootIDs().map(
-    ReactComponentTreeHook.getDisplayName,
-  );
+  return ReactComponentTreeHook.getRootIDs()
+    .map(ReactComponentTreeHook.getDisplayName);
 }
@@ -22,5 +21,4 @@ function getRootDisplayNames() {
 function getRegisteredDisplayNames() {
-  return ReactComponentTreeHook.getRegisteredIDs().map(
-    ReactComponentTreeHook.getDisplayName,
-  );
+  return ReactComponentTreeHook.getRegisteredIDs()
+    .map(ReactComponentTreeHook.getDisplayName);
 }
@@ -52,3 +50,3 @@ function expectTree(rootID, expectedTree, parentPath) {
       expectedTree.parentDisplayName,
-      'parentDisplayName',
+      'parentDisplayName'
     );
@@ -59,3 +57,3 @@ function expectTree(rootID, expectedTree, parentPath) {
       expectedTree.ownerDisplayName,
-      'ownerDisplayName',
+      'ownerDisplayName'
     );
@@ -77,3 +75,3 @@ function expectTree(rootID, expectedTree, parentPath) {
       expectedTree.element && expectedTree.element.type,
-      'element.type',
+      'element.type'
     );
@@ -86,3 +84,3 @@ function expectTree(rootID, expectedTree, parentPath) {
       expectedTree.children.length,
-      'children.length',
+      'children.length'
     );
@@ -92,3 +90,3 @@ function expectTree(rootID, expectedTree, parentPath) {
         {parentID: rootID, ...expectedTree.children[i]},
-        path,
+        path
       );
diff --git a/src/test/ReactTestUtils.js b/src/test/ReactTestUtils.js
index 13e1b2770..40d6cecc8 100644
--- a/src/test/ReactTestUtils.js
+++ b/src/test/ReactTestUtils.js
@@ -42,3 +42,3 @@ function createRendererWithWarning() {
     'Shallow renderer has been moved to react-test-renderer/shallow. ' +
-      'Update references to remove this warning.',
+    'Update references to remove this warning.'
   );
@@ -68,3 +68,6 @@ function findAllInRenderedTreeInternal(inst, test) {
       ret = ret.concat(
-        findAllInRenderedTreeInternal(renderedChildren[key], test),
+        findAllInRenderedTreeInternal(
+          renderedChildren[key],
+          test
+        )
       );
@@ -76,3 +79,3 @@ function findAllInRenderedTreeInternal(inst, test) {
     ret = ret.concat(
-      findAllInRenderedTreeInternal(inst._renderedComponent, test),
+      findAllInRenderedTreeInternal(inst._renderedComponent, test)
     );
@@ -107,3 +110,6 @@ var ReactTestUtils = {
   isElementOfType: function(inst, convenienceConstructor) {
-    return React.isValidElement(inst) && inst.type === convenienceConstructor;
+    return (
+      React.isValidElement(inst) &&
+      inst.type === convenienceConstructor
+    );
   },
@@ -115,3 +121,5 @@ var ReactTestUtils = {
   isDOMComponentElement: function(inst) {
-    return !!(inst && React.isValidElement(inst) && !!inst.tagName);
+    return !!(inst &&
+              React.isValidElement(inst) &&
+              !!inst.tagName);
   },
@@ -124,7 +132,5 @@ var ReactTestUtils = {
     }
-    return (
-      inst != null &&
-      typeof inst.render === 'function' &&
-      typeof inst.setState === 'function'
-    );
+    return inst != null &&
+           typeof inst.render === 'function' &&
+           typeof inst.setState === 'function';
   },
@@ -136,5 +142,7 @@ var ReactTestUtils = {
     var internalInstance = ReactInstanceMap.get(inst);
-    var constructor = internalInstance._currentElement.type;
+    var constructor = internalInstance
+      ._currentElement
+      .type;
 
-    return constructor === type;
+    return (constructor === type);
   },
@@ -156,7 +164,8 @@ var ReactTestUtils = {
     var internalInstance = ReactInstanceMap.get(inst);
-    var constructor = internalInstance._currentElement.type;
+    var constructor = internalInstance
+      ._currentElement
+      .type;
 
-    return !!(
-      ReactTestUtils.isCompositeComponentElement(inst) && constructor === type
-    );
+    return !!(ReactTestUtils.isCompositeComponentElement(inst) &&
+             (constructor === type));
   },
@@ -177,3 +186,3 @@ var ReactTestUtils = {
       ReactTestUtils.isCompositeComponent(inst),
-      'findAllInRenderedTree(...): instance must be a composite component',
+      'findAllInRenderedTree(...): instance must be a composite component'
     );
@@ -201,3 +210,3 @@ var ReactTestUtils = {
             'TestUtils.scryRenderedDOMComponentsWithClass expects a ' +
-              'className as a second argument.',
+            'className as a second argument.'
           );
@@ -220,13 +229,8 @@ var ReactTestUtils = {
   findRenderedDOMComponentWithClass: function(root, className) {
-    var all = ReactTestUtils.scryRenderedDOMComponentsWithClass(
-      root,
-      className,
-    );
+    var all =
+      ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);
     if (all.length !== 1) {
       throw new Error(
-        'Did not find exactly one match (found: ' +
-          all.length +
-          ') ' +
-          'for class:' +
-          className,
+        'Did not find exactly one match (found: ' + all.length + ') ' +
+        'for class:' + className
       );
@@ -236,2 +240,3 @@ var ReactTestUtils = {
 
+
   /**
@@ -243,6 +248,4 @@ var ReactTestUtils = {
     return ReactTestUtils.findAllInRenderedTree(root, function(inst) {
-      return (
-        ReactTestUtils.isDOMComponent(inst) &&
-        inst.tagName.toUpperCase() === tagName.toUpperCase()
-      );
+      return ReactTestUtils.isDOMComponent(inst) &&
+            inst.tagName.toUpperCase() === tagName.toUpperCase();
     });
@@ -260,7 +263,4 @@ var ReactTestUtils = {
       throw new Error(
-        'Did not find exactly one match (found: ' +
-          all.length +
-          ') ' +
-          'for tag:' +
-          tagName,
+        'Did not find exactly one match (found: ' + all.length + ') ' +
+        'for tag:' + tagName
       );
@@ -270,2 +270,3 @@ var ReactTestUtils = {
 
+
   /**
@@ -276,3 +277,6 @@ var ReactTestUtils = {
     return ReactTestUtils.findAllInRenderedTree(root, function(inst) {
-      return ReactTestUtils.isCompositeComponentWithType(inst, componentType);
+      return ReactTestUtils.isCompositeComponentWithType(
+        inst,
+        componentType
+      );
     });
@@ -289,3 +293,3 @@ var ReactTestUtils = {
       root,
-      componentType,
+      componentType
     );
@@ -293,7 +297,4 @@ var ReactTestUtils = {
       throw new Error(
-        'Did not find exactly one match (found: ' +
-          all.length +
-          ') ' +
-          'for componentType:' +
-          componentType,
+        'Did not find exactly one match (found: ' + all.length + ') ' +
+        'for componentType:' + componentType
       );
@@ -320,3 +321,7 @@ var ReactTestUtils = {
     module.prototype.render.mockImplementation(function() {
-      return React.createElement(mockTagName, null, this.props.children);
+      return React.createElement(
+        mockTagName,
+        null,
+        this.props.children
+      );
     });
@@ -335,6 +340,5 @@ var ReactTestUtils = {
     fakeNativeEvent.target = node;
-    fakeNativeEvent.simulated = true;
     ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
       topLevelType,
-      fakeNativeEvent,
+      fakeNativeEvent
     );
@@ -350,6 +354,5 @@ var ReactTestUtils = {
   simulateNativeEventOnDOMComponent: function(
-    topLevelType,
-    comp,
-    fakeNativeEvent,
-  ) {
+      topLevelType,
+      comp,
+      fakeNativeEvent) {
     ReactTestUtils.simulateNativeEventOnNode(
@@ -357,3 +360,3 @@ var ReactTestUtils = {
       findDOMNode(comp),
-      fakeNativeEvent,
+      fakeNativeEvent
     );
@@ -363,3 +366,5 @@ var ReactTestUtils = {
     return {
-      touches: [{pageX: x, pageY: y}],
+      touches: [
+        {pageX: x, pageY: y},
+      ],
     };
@@ -387,3 +392,3 @@ function makeSimulator(eventType) {
       'TestUtils.Simulate expects a component instance and not a ReactElement.' +
-        'TestUtils.Simulate will not work if you are using shallow rendering.',
+      'TestUtils.Simulate will not work if you are using shallow rendering.'
     );
@@ -408,3 +413,3 @@ function makeSimulator(eventType) {
       fakeNativeEvent,
-      node,
+      node
     );
@@ -479,3 +484,3 @@ function makeNativeSimulator(eventType) {
         domComponentOrNode,
-        fakeNativeEvent,
+        fakeNativeEvent
       );
@@ -486,3 +491,3 @@ function makeNativeSimulator(eventType) {
         domComponentOrNode,
-        fakeNativeEvent,
+        fakeNativeEvent
       );
@@ -494,5 +499,4 @@ Object.keys(topLevelTypes).forEach(function(eventType) {
   // Event type is stored as 'topClick' - we transform that to 'click'
-  var convenienceName = eventType.indexOf('top') === 0
-    ? eventType.charAt(3).toLowerCase() + eventType.substr(4)
-    : eventType;
+  var convenienceName = eventType.indexOf('top') === 0 ?
+    eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;
   /**
@@ -501,5 +505,4 @@ Object.keys(topLevelTypes).forEach(function(eventType) {
    */
-  ReactTestUtils.SimulateNative[convenienceName] = makeNativeSimulator(
-    eventType,
-  );
+  ReactTestUtils.SimulateNative[convenienceName] =
+    makeNativeSimulator(eventType);
 });
diff --git a/src/test/__tests__/ReactTestUtils-test.js b/src/test/__tests__/ReactTestUtils-test.js
index d53db7121..f63200f6f 100644
--- a/src/test/__tests__/ReactTestUtils-test.js
+++ b/src/test/__tests__/ReactTestUtils-test.js
@@ -17,6 +17,5 @@ var ReactDOMServer;
 var ReactTestUtils;
-var ReactShallowRenderer;
-var PropTypes;
 
 describe('ReactTestUtils', () => {
+
   beforeEach(() => {
@@ -26,4 +25,2 @@ describe('ReactTestUtils', () => {
     ReactTestUtils = require('ReactTestUtils');
-    ReactShallowRenderer = require('ReactShallowRenderer');
-    PropTypes = require('prop-types');
   });
@@ -42,3 +39,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     var result = shallowRenderer.render(<SomeComponent />);
@@ -62,3 +59,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     var result = shallowRenderer.render(<SomeComponent />);
@@ -79,7 +76,7 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     expect(() => shallowRenderer.render(SomeComponent)).toThrowError(
       'ReactShallowRenderer render(): Invalid component element. Instead of ' +
-        'passing a component class, make sure to instantiate it by passing it ' +
-        'to React.createElement.',
+      'passing a component class, make sure to instantiate it by passing it ' +
+      'to React.createElement.'
     );
@@ -87,5 +84,5 @@ describe('ReactTestUtils', () => {
       'ReactShallowRenderer render(): Shallow rendering works only with ' +
-        'custom components, not primitives (div). Instead of calling ' +
-        '`.render(el)` and inspecting the rendered output, look at `el.props` ' +
-        'directly instead.',
+      'custom components, not primitives (div). Instead of calling ' +
+      '`.render(el)` and inspecting the rendered output, look at `el.props` ' +
+      'directly instead.'
     );
@@ -103,3 +100,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     shallowRenderer.render(<SomeComponent />);
@@ -117,3 +114,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     var result = shallowRenderer.render(<SomeComponent />);
@@ -130,3 +127,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     // Shouldn't crash.
@@ -148,3 +145,6 @@ describe('ReactTestUtils', () => {
           return (
-            <a href="#" onClick={this.onClick} className={className}>
+            <a
+              href="#"
+              onClick={this.onClick}
+              className={className}>
               Test link
@@ -163,3 +163,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     var result = shallowRenderer.render(<SomeComponent />);
@@ -193,3 +193,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     shallowRenderer.render(<SimpleComponent n={5} />);
@@ -201,3 +201,3 @@ describe('ReactTestUtils', () => {
       static contextTypes = {
-        name: PropTypes.string,
+        name: React.PropTypes.string,
       };
@@ -209,3 +209,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     var result = shallowRenderer.render(<SimpleComponent />);
@@ -219,3 +219,3 @@ describe('ReactTestUtils', () => {
       handleUserClick = () => {
-        this.setState({clicked: true});
+        this.setState({ clicked: true });
       };
@@ -233,3 +233,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     shallowRenderer.render(<SimpleComponent />);
@@ -256,3 +256,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     var result = shallowRenderer.render(<SimpleComponent />);
@@ -264,3 +264,3 @@ describe('ReactTestUtils', () => {
       static contextTypes = {
-        name: PropTypes.string,
+        name: React.PropTypes.string,
       };
@@ -272,3 +272,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     var result = shallowRenderer.render(<SimpleComponent />, {
@@ -284,3 +284,3 @@ describe('ReactTestUtils', () => {
       static contextTypes = {
-        name: PropTypes.string.isRequired,
+        name: React.PropTypes.string.isRequired,
       };
@@ -292,3 +292,3 @@ describe('ReactTestUtils', () => {
 
-    var shallowRenderer = new ReactShallowRenderer();
+    var shallowRenderer = ReactTestUtils.createRenderer();
     shallowRenderer.render(<SimpleComponent />);
@@ -296,7 +296,7 @@ describe('ReactTestUtils', () => {
     expect(
-      console.error.calls.argsFor(0)[0].replace(/\(at .+?:\d+\)/g, '(at **)'),
+      console.error.calls.argsFor(0)[0].replace(/\(at .+?:\d+\)/g, '(at **)')
     ).toBe(
       'Warning: Failed context type: The context `name` is marked as ' +
-        'required in `SimpleComponent`, but its value is `undefined`.\n' +
-        '    in SimpleComponent (at **)',
+      'required in `SimpleComponent`, but its value is `undefined`.\n' +
+      '    in SimpleComponent (at **)'
     );
@@ -314,3 +314,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      'NonExistentClass',
+      'NonExistentClass'
     );
@@ -329,3 +329,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      'x',
+      'x'
     );
@@ -344,3 +344,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      'x y',
+      'x y'
     );
@@ -350,3 +350,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      'x z',
+      'x z'
     );
@@ -356,3 +356,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      ['x', 'y'],
+      ['x', 'y']
     );
@@ -365,3 +365,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      ['x', 'a'],
+      ['x', 'a']
     );
@@ -371,3 +371,3 @@ describe('ReactTestUtils', () => {
       renderedComponent,
-      ['x a'],
+      ['x a']
     );
@@ -389,3 +389,3 @@ describe('ReactTestUtils', () => {
       </Wrapper>,
-      container,
+      container
     );
@@ -396,3 +396,3 @@ describe('ReactTestUtils', () => {
       </Wrapper>,
-      container,
+      container
     );
@@ -426,3 +426,3 @@ describe('ReactTestUtils', () => {
       var testComponent = ReactTestUtils.renderIntoDocument(
-        React.createElement(type),
+        React.createElement(type)
       );
@@ -469,6 +469,3 @@ describe('ReactTestUtils', () => {
     var container = document.createElement('div');
-    var instance = ReactDOM.render(
-      <input type="text" onChange={obj.handler} />,
-      container,
-    );
+    var instance = ReactDOM.render(<input type="text" onChange={obj.handler} />, container);
 
@@ -478,5 +475,3 @@ describe('ReactTestUtils', () => {
 
-    expect(obj.handler).toHaveBeenCalledWith(
-      jasmine.objectContaining({target: node}),
-    );
+    expect(obj.handler).toHaveBeenCalledWith(jasmine.objectContaining({target: node}));
   });
@@ -501,6 +496,3 @@ describe('ReactTestUtils', () => {
     var container = document.createElement('div');
-    var instance = ReactDOM.render(
-      <SomeComponent handleChange={obj.handler} />,
-      container,
-    );
+    var instance = ReactDOM.render(<SomeComponent handleChange={obj.handler} />, container);
 
@@ -510,5 +502,3 @@ describe('ReactTestUtils', () => {
 
-    expect(obj.handler).toHaveBeenCalledWith(
-      jasmine.objectContaining({target: node}),
-    );
+    expect(obj.handler).toHaveBeenCalledWith(jasmine.objectContaining({target: node}));
   });
@@ -527,6 +517,4 @@ describe('ReactTestUtils', () => {
     var handler = jasmine.createSpy('spy');
-    var shallowRenderer = new ReactShallowRenderer();
-    var result = shallowRenderer.render(
-      <SomeComponent handleClick={handler} />,
-    );
+    var shallowRenderer = ReactTestUtils.createRenderer();
+    var result = shallowRenderer.render(<SomeComponent handleClick={handler} />);
 
@@ -534,3 +522,3 @@ describe('ReactTestUtils', () => {
       'TestUtils.Simulate expects a component instance and not a ReactElement.' +
-        'TestUtils.Simulate will not work if you are using shallow rendering.',
+      'TestUtils.Simulate will not work if you are using shallow rendering.'
     );
@@ -545,3 +533,3 @@ describe('ReactTestUtils', () => {
     class Component extends React.Component {
-      handleClick = e => {
+      handleClick = (e) => {
         expect(e.clientX).toBe(CLIENT_X);
@@ -556,5 +544,6 @@ describe('ReactTestUtils', () => {
     var instance = ReactDOM.render(<Component />, element);
-    ReactTestUtils.Simulate.click(ReactDOM.findDOMNode(instance), {
-      clientX: CLIENT_X,
-    });
+    ReactTestUtils.Simulate.click(
+      ReactDOM.findDOMNode(instance),
+      {clientX: CLIENT_X}
+    );
     expect(console.error.calls.count()).toBe(0);
@@ -584,3 +573,3 @@ describe('ReactTestUtils', () => {
       let event;
-      const stub = jest.genMockFn().mockImplementation(e => {
+      const stub = jest.genMockFn().mockImplementation((e) => {
         e.persist();
@@ -599,2 +588,3 @@ describe('ReactTestUtils', () => {
   });
+
 });
diff --git a/src/test/__tests__/reactComponentExpect-test.js b/src/test/__tests__/reactComponentExpect-test.js
index a522d43aa..c9646f9ab 100644
--- a/src/test/__tests__/reactComponentExpect-test.js
+++ b/src/test/__tests__/reactComponentExpect-test.js
@@ -18,2 +18,3 @@ var reactComponentExpect;
 describe('reactComponentExpect', () => {
+
   beforeEach(() => {
diff --git a/src/test/getTestDocument.js b/src/test/getTestDocument.js
index bd0c0e9cb..8f681cd42 100644
--- a/src/test/getTestDocument.js
+++ b/src/test/getTestDocument.js
@@ -16,4 +16,3 @@ function getTestDocument(markup) {
   document.write(
-    markup ||
-      '<!doctype html><html><meta charset=utf-8><title>test doc</title>',
+    markup || '<!doctype html><html><meta charset=utf-8><title>test doc</title>'
   );
diff --git a/src/test/reactComponentExpect.js b/src/test/reactComponentExpect.js
index 7ba2ab1d8..d31b0d08a 100644
--- a/src/test/reactComponentExpect.js
+++ b/src/test/reactComponentExpect.js
@@ -32,3 +32,3 @@ function reactComponentExpect(instance) {
     ReactTestUtils.isCompositeComponent(instance),
-    'reactComponentExpect(...): instance must be a composite component',
+    'reactComponentExpect(...): instance must be a composite component'
   );
@@ -85,3 +85,4 @@ Object.assign(reactComponentExpectInternal.prototype, {
     this.toBeDOMComponent();
-    var renderedChildren = this._instance._renderedChildren || {};
+    var renderedChildren =
+      this._instance._renderedChildren || {};
     for (var name in renderedChildren) {
@@ -116,3 +117,5 @@ Object.assign(reactComponentExpectInternal.prototype, {
   toBeComponentOfType: function(constructor) {
-    expect(this._instance._currentElement.type === constructor).toBe(true);
+    expect(
+      this._instance._currentElement.type === constructor
+    ).toBe(true);
     return this;
@@ -127,3 +130,3 @@ Object.assign(reactComponentExpectInternal.prototype, {
       typeof this.instance() === 'object' &&
-        typeof this.instance().render === 'function',
+      typeof this.instance().render === 'function'
     ).toBe(true);
@@ -134,3 +137,5 @@ Object.assign(reactComponentExpectInternal.prototype, {
     this.toBeCompositeComponent();
-    expect(this._instance._currentElement.type === constructor).toBe(true);
+    expect(
+      this._instance._currentElement.type === constructor
+    ).toBe(true);
     return this;
@@ -183,5 +188,4 @@ Object.assign(reactComponentExpectInternal.prototype, {
       }
-      expect(this.instance().state[stateName]).toEqual(
-        stateNameToExpectedValue[stateName],
-      );
+      expect(this.instance().state[stateName])
+        .toEqual(stateNameToExpectedValue[stateName]);
     }
@@ -200,5 +204,4 @@ Object.assign(reactComponentExpectInternal.prototype, {
       }
-      expect(this.instance().props[propName]).toEqual(
-        propNameToExpectedValue[propName],
-      );
+      expect(this.instance().props[propName])
+        .toEqual(propNameToExpectedValue[propName]);
     }
@@ -217,5 +220,4 @@ Object.assign(reactComponentExpectInternal.prototype, {
       }
-      expect(this.instance().context[contextName]).toEqual(
-        contextNameToExpectedValue[contextName],
-      );
+      expect(this.instance().context[contextName])
+        .toEqual(contextNameToExpectedValue[contextName]);
     }
diff --git a/src/umd/ReactUMDEntry.js b/src/umd/ReactUMDEntry.js
index 0a31c66f3..88487a281 100644
--- a/src/umd/ReactUMDEntry.js
+++ b/src/umd/ReactUMDEntry.js
@@ -16,3 +16,3 @@ var React = require('React');
 // `version` will be added here by the React module.
-var ReactUMDEntry = Object.assign(React, {
+var ReactUMDEntry = Object.assign({
   __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
@@ -20,3 +20,3 @@ var ReactUMDEntry = Object.assign(React, {
   },
-});
+}, React);
 
@@ -29,3 +29,3 @@ if (__DEV__) {
       getNextDebugID: require('getNextDebugID'),
-    },
+    }
   );
diff --git a/src/umd/ReactWithAddonsUMDEntry.js b/src/umd/ReactWithAddonsUMDEntry.js
index 102b3e68e..bc350782f 100644
--- a/src/umd/ReactWithAddonsUMDEntry.js
+++ b/src/umd/ReactWithAddonsUMDEntry.js
@@ -30,3 +30,3 @@ if (__DEV__) {
       getNextDebugID: require('getNextDebugID'),
-    },
+    }
   );
diff --git a/src/umd/shims/ReactAddonsDOMDependenciesUMDShim.js b/src/umd/shims/ReactAddonsDOMDependenciesUMDShim.js
index a72615f75..f4c06de04 100644
--- a/src/umd/shims/ReactAddonsDOMDependenciesUMDShim.js
+++ b/src/umd/shims/ReactAddonsDOMDependenciesUMDShim.js
@@ -20,4 +20,3 @@ function getReactDOM() {
     // This is injected by the ReactDOM UMD build:
-    ReactDOM =
-      ReactWithAddonsUMDEntry.__SECRET_INJECTED_REACT_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
+    ReactDOM = ReactWithAddonsUMDEntry.__SECRET_INJECTED_REACT_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
   }
@@ -30,4 +29,3 @@ if (__DEV__) {
   exports.getReactPerf = function() {
-    return getReactDOM().__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
-      .ReactPerf;
+    return getReactDOM().__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactPerf;
   };
@@ -35,4 +33,3 @@ if (__DEV__) {
   exports.getReactTestUtils = function() {
-    return getReactDOM().__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
-      .ReactTestUtils;
+    return getReactDOM().__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactTestUtils;
   };
diff --git a/src/umd/shims/getNextDebugIDUMDShim.js b/src/umd/shims/getNextDebugIDUMDShim.js
index 2fb7ac255..3c8855d20 100644
--- a/src/umd/shims/getNextDebugIDUMDShim.js
+++ b/src/umd/shims/getNextDebugIDUMDShim.js
@@ -18 +18,2 @@ var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
 module.exports = ReactInternals.getNextDebugID;
+
